ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f1xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.RCC_Delay,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	RCC_Delay:
  24              	.LFB139:
  25              		.file 1 "Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @version V1.1.1
   6:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @date    12-May-2017
   7:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *       
  13:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim                
  14:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  17:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  18:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  33:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 2


  34:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  35:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  37:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  38:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  41:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  44:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  45:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  46:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  49:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  50:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  51:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  52:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  53:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  55:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  65:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  66:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  77:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  78:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** */
  79:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  80:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  82:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  83:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  84:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  88:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  89:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  90:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 3


  91:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  94:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  98:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  99:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay);
 125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim    
 136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 4


 148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128. 
 181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 5


 205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE and PLL OFF
 211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
 223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON, CSSON, & PLLON bits */
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON);
 226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (0x10U << RCC_CR_HSITRIM_Pos));
 235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_SUPPORT)
 237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_SUPPORT */
 241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 6


 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 7


 319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                 
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 8


 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       RCC_Delay(1);
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 9


 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 10


 490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 11


 547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 12


 604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           
 633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifndef AT32F403Rx_HD
 639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 13


 661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 14


 718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 15


 775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }      
 814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 16


 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim   
 862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================  
 865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 17


 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
 914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
 915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCODiv);
 916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
 929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 18


 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
 960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
 968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
 972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                  
 973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
 975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
 983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
 988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
 989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
 993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = {1, 2};
 995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0U, pll2mul = 0U;
1002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 19


1003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
1008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
1017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
1018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1
1021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_
1023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> RCC_CFGR2_PREDIV2_Pos) + 1;
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> RCC_CFGR2_PLL2MUL_Pos) + 2;
1032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((((HSE_VALUE / prediv2) * pll2mul) / prediv) * pllmul);
1033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
1040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> RCC_CFGR_PLLMULL_Pos])
1043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
1055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
1057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 20


1060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
1067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * 
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
1093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
1094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1099:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]
1105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 21


1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
1145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
1154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
1157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
1171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 22


1174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
1182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
1190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
1191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
1225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 23


1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
1238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
1257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
1264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  mdelay: specifies the delay time length, in milliseconds.
1265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay)
1268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  26              		.loc 1 1268 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
1269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
  35              		.loc 1 1269 0
  36 0002 084B     		ldr	r3, .L4
  37 0004 1B68     		ldr	r3, [r3]
  38 0006 084A     		ldr	r2, .L4+4
  39 0008 A2FB0323 		umull	r2, r3, r2, r3
  40 000c 5B0A     		lsrs	r3, r3, #9
  41 000e 00FB03F0 		mul	r0, r0, r3
  42              	.LVL1:
  43 0012 0190     		str	r0, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 24


  44              	.L2:
  45              	.LBB4:
  46              	.LBB5:
  47              		.file 2 "Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h"
   1:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
   9:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  34:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  35:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  38:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  46:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  47:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  53:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 25


  54:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  60:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  62:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  63:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  64:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  71:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  73:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  74:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  75:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  82:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  84:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  87:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  88:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  89:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
  96:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
  98:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
  99:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 100:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 107:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 109:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 26


 111:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 112:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 113:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 114:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 121:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 123:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 126:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 127:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 128:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 132:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 136:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 138:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 141:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 142:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 143:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 150:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 152:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 155:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 156:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 157:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 164:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 166:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 167:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 27


 168:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 175:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 177:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 180:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 181:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 182:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 186:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 190:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 192:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 193:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 194:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 201:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 203:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 206:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 207:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 208:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 215:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 217:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 218:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 219:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 221:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 28


 225:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 228:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 230:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 231:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 232:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 239:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 241:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 242:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 243:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 250:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 252:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 255:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 256:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 257:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 264:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 266:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 267:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 268:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 276:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 278:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 279:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 280:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 29


 282:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 287:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 289:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 292:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 293:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 294:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 301:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 303:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 304:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 306:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 307:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 309:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 316:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 319:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 328:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 329:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 330:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 337:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 30


 339:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** }
 344:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 345:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 347:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 348:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 349:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 351:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 352:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** */
 357:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 358:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** 
 369:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h **** {
 375:Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h ****   __ASM volatile ("nop");
  48              		.loc 2 375 0 discriminator 1
  49              		.syntax unified
  50              	@ 375 "Drivers/CMSIS/CM4/CoreSupport/cmsis_gcc.h" 1
  51 0014 00BF     		nop
  52              	@ 0 "" 2
  53              		.thumb
  54              		.syntax unified
  55              	.LBE5:
  56              	.LBE4:
1270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   do 
1271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __NOP();
1273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   } 
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (Delay --);
  57              		.loc 1 1274 0 discriminator 1
  58 0016 019B     		ldr	r3, [sp, #4]
  59 0018 5A1E     		subs	r2, r3, #1
  60 001a 0192     		str	r2, [sp, #4]
  61 001c 002B     		cmp	r3, #0
  62 001e F9D1     		bne	.L2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 31


1275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
  63              		.loc 1 1275 0
  64 0020 02B0     		add	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 0022 7047     		bx	lr
  69              	.L5:
  70              		.align	2
  71              	.L4:
  72 0024 00000000 		.word	SystemCoreClock
  73 0028 D34D6210 		.word	274877907
  74              		.cfi_endproc
  75              	.LFE139:
  77              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_RCC_DeInit
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	HAL_RCC_DeInit:
  86              	.LFB126:
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
  87              		.loc 1 220 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92              		.loc 1 222 0
  93 0000 0E4B     		ldr	r3, .L7
  94 0002 5A68     		ldr	r2, [r3, #4]
  95 0004 22F00302 		bic	r2, r2, #3
  96 0008 5A60     		str	r2, [r3, #4]
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  97              		.loc 1 225 0
  98 000a 1A68     		ldr	r2, [r3]
  99 000c 22F08472 		bic	r2, r2, #17301504
 100 0010 22F48032 		bic	r2, r2, #65536
 101 0014 1A60     		str	r2, [r3]
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 102              		.loc 1 228 0
 103 0016 1A68     		ldr	r2, [r3]
 104 0018 22F48022 		bic	r2, r2, #262144
 105 001c 1A60     		str	r2, [r3]
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 106              		.loc 1 231 0
 107 001e 0021     		movs	r1, #0
 108 0020 5960     		str	r1, [r3, #4]
 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 109              		.loc 1 234 0
 110 0022 1A68     		ldr	r2, [r3]
 111 0024 22F47F42 		bic	r2, r2, #65280
 112 0028 22F08002 		bic	r2, r2, #128
 113 002c 42F08002 		orr	r2, r2, #128
 114 0030 1A60     		str	r2, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 32


 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115              		.loc 1 242 0
 116 0032 9960     		str	r1, [r3, #8]
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 117              		.loc 1 245 0
 118 0034 024B     		ldr	r3, .L7+4
 119 0036 034A     		ldr	r2, .L7+8
 120 0038 1A60     		str	r2, [r3]
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 121              		.loc 1 246 0
 122 003a 7047     		bx	lr
 123              	.L8:
 124              		.align	2
 125              	.L7:
 126 003c 00100240 		.word	1073876992
 127 0040 00000000 		.word	SystemCoreClock
 128 0044 00127A00 		.word	8000000
 129              		.cfi_endproc
 130              	.LFE126:
 132              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 133              		.align	1
 134              		.global	HAL_RCC_OscConfig
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	HAL_RCC_OscConfig:
 141              	.LFB127:
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 142              		.loc 1 264 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              	.LVL2:
 147 0000 70B5     		push	{r4, r5, r6, lr}
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 4, -16
 151              		.cfi_offset 5, -12
 152              		.cfi_offset 6, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 24
 157 0004 0446     		mov	r4, r0
 158              	.LVL3:
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 159              		.loc 1 272 0
 160 0006 0368     		ldr	r3, [r0]
 161 0008 13F0010F 		tst	r3, #1
 162 000c 2CD0     		beq	.L10
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 163              		.loc 1 278 0
 164 000e AC4B     		ldr	r3, .L93
 165 0010 5B68     		ldr	r3, [r3, #4]
 166 0012 03F00C03 		and	r3, r3, #12
 167 0016 042B     		cmp	r3, #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 33


 168 0018 1DD0     		beq	.L11
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 169              		.loc 1 279 0
 170 001a A94B     		ldr	r3, .L93
 171 001c 5B68     		ldr	r3, [r3, #4]
 172 001e 03F00C03 		and	r3, r3, #12
 173 0022 082B     		cmp	r3, #8
 174 0024 12D0     		beq	.L78
 175              	.L12:
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 176              		.loc 1 289 0
 177 0026 6368     		ldr	r3, [r4, #4]
 178 0028 B3F5803F 		cmp	r3, #65536
 179 002c 41D0     		beq	.L79
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 180              		.loc 1 289 0 is_stmt 0 discriminator 2
 181 002e 002B     		cmp	r3, #0
 182 0030 56D1     		bne	.L16
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 183              		.loc 1 289 0 discriminator 3
 184 0032 03F18043 		add	r3, r3, #1073741824
 185 0036 03F50433 		add	r3, r3, #135168
 186 003a 1A68     		ldr	r2, [r3]
 187 003c 22F48032 		bic	r2, r2, #65536
 188 0040 1A60     		str	r2, [r3]
 189 0042 1A68     		ldr	r2, [r3]
 190 0044 22F48022 		bic	r2, r2, #262144
 191 0048 1A60     		str	r2, [r3]
 192 004a 37E0     		b	.L15
 193              	.L78:
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 194              		.loc 1 279 0 is_stmt 1 discriminator 1
 195 004c 9C4B     		ldr	r3, .L93
 196 004e 5B68     		ldr	r3, [r3, #4]
 197 0050 13F4803F 		tst	r3, #65536
 198 0054 E7D0     		beq	.L12
 199              	.L11:
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 200              		.loc 1 281 0
 201 0056 9A4B     		ldr	r3, .L93
 202 0058 1B68     		ldr	r3, [r3]
 203 005a 13F4003F 		tst	r3, #131072
 204 005e 03D0     		beq	.L10
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 205              		.loc 1 281 0 is_stmt 0 discriminator 1
 206 0060 6368     		ldr	r3, [r4, #4]
 207 0062 002B     		cmp	r3, #0
 208 0064 00F0A681 		beq	.L80
 209              	.LVL4:
 210              	.L10:
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 211              		.loc 1 324 0 is_stmt 1
 212 0068 2368     		ldr	r3, [r4]
 213 006a 13F0020F 		tst	r3, #2
 214 006e 78D0     		beq	.L23
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 215              		.loc 1 331 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 34


 216 0070 934B     		ldr	r3, .L93
 217 0072 5B68     		ldr	r3, [r3, #4]
 218 0074 13F00C0F 		tst	r3, #12
 219 0078 61D0     		beq	.L24
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 220              		.loc 1 332 0
 221 007a 914B     		ldr	r3, .L93
 222 007c 5B68     		ldr	r3, [r3, #4]
 223 007e 03F00C03 		and	r3, r3, #12
 224 0082 082B     		cmp	r3, #8
 225 0084 56D0     		beq	.L81
 226              	.L25:
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 227              		.loc 1 349 0
 228 0086 2369     		ldr	r3, [r4, #16]
 229 0088 002B     		cmp	r3, #0
 230 008a 00F08C80 		beq	.L27
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 231              		.loc 1 352 0
 232 008e 8D4B     		ldr	r3, .L93+4
 233 0090 0122     		movs	r2, #1
 234 0092 1A60     		str	r2, [r3]
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 235              		.loc 1 355 0
 236 0094 FFF7FEFF 		bl	HAL_GetTick
 237              	.LVL5:
 238 0098 0546     		mov	r5, r0
 239              	.LVL6:
 240              	.L28:
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 241              		.loc 1 358 0
 242 009a 894B     		ldr	r3, .L93
 243 009c 1B68     		ldr	r3, [r3]
 244 009e 13F0020F 		tst	r3, #2
 245 00a2 77D1     		bne	.L82
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 246              		.loc 1 360 0
 247 00a4 FFF7FEFF 		bl	HAL_GetTick
 248              	.LVL7:
 249 00a8 401B     		subs	r0, r0, r5
 250 00aa 0228     		cmp	r0, #2
 251 00ac F5D9     		bls	.L28
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 252              		.loc 1 362 0
 253 00ae 0320     		movs	r0, #3
 254 00b0 83E1     		b	.L13
 255              	.LVL8:
 256              	.L79:
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 257              		.loc 1 289 0 discriminator 1
 258 00b2 834A     		ldr	r2, .L93
 259 00b4 1368     		ldr	r3, [r2]
 260 00b6 43F48033 		orr	r3, r3, #65536
 261 00ba 1360     		str	r3, [r2]
 262              	.L15:
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 263              		.loc 1 293 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 35


 264 00bc 6368     		ldr	r3, [r4, #4]
 265 00be 4BB3     		cbz	r3, .L18
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 266              		.loc 1 296 0
 267 00c0 FFF7FEFF 		bl	HAL_GetTick
 268              	.LVL9:
 269 00c4 0546     		mov	r5, r0
 270              	.LVL10:
 271              	.L19:
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 272              		.loc 1 299 0
 273 00c6 7E4B     		ldr	r3, .L93
 274 00c8 1B68     		ldr	r3, [r3]
 275 00ca 13F4003F 		tst	r3, #131072
 276 00ce CBD1     		bne	.L10
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 277              		.loc 1 301 0
 278 00d0 FFF7FEFF 		bl	HAL_GetTick
 279              	.LVL11:
 280 00d4 401B     		subs	r0, r0, r5
 281 00d6 B0F5A06F 		cmp	r0, #1280
 282 00da F4D9     		bls	.L19
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 283              		.loc 1 303 0
 284 00dc 0320     		movs	r0, #3
 285 00de 6CE1     		b	.L13
 286              	.LVL12:
 287              	.L16:
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 288              		.loc 1 289 0 discriminator 4
 289 00e0 B3F5A02F 		cmp	r3, #327680
 290 00e4 09D0     		beq	.L83
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 291              		.loc 1 289 0 is_stmt 0 discriminator 6
 292 00e6 764B     		ldr	r3, .L93
 293 00e8 1A68     		ldr	r2, [r3]
 294 00ea 22F48032 		bic	r2, r2, #65536
 295 00ee 1A60     		str	r2, [r3]
 296 00f0 1A68     		ldr	r2, [r3]
 297 00f2 22F48022 		bic	r2, r2, #262144
 298 00f6 1A60     		str	r2, [r3]
 299 00f8 E0E7     		b	.L15
 300              	.L83:
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 301              		.loc 1 289 0 discriminator 5
 302 00fa 03F18043 		add	r3, r3, #1073741824
 303 00fe A3F53C33 		sub	r3, r3, #192512
 304 0102 1A68     		ldr	r2, [r3]
 305 0104 42F48022 		orr	r2, r2, #262144
 306 0108 1A60     		str	r2, [r3]
 307 010a 1A68     		ldr	r2, [r3]
 308 010c 42F48032 		orr	r2, r2, #65536
 309 0110 1A60     		str	r2, [r3]
 310 0112 D3E7     		b	.L15
 311              	.L18:
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 312              		.loc 1 310 0 is_stmt 1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 36


 313 0114 FFF7FEFF 		bl	HAL_GetTick
 314              	.LVL13:
 315 0118 0546     		mov	r5, r0
 316              	.LVL14:
 317              	.L21:
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 318              		.loc 1 313 0
 319 011a 694B     		ldr	r3, .L93
 320 011c 1B68     		ldr	r3, [r3]
 321 011e 13F4003F 		tst	r3, #131072
 322 0122 A1D0     		beq	.L10
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 323              		.loc 1 315 0
 324 0124 FFF7FEFF 		bl	HAL_GetTick
 325              	.LVL15:
 326 0128 401B     		subs	r0, r0, r5
 327 012a B0F5A06F 		cmp	r0, #1280
 328 012e F4D9     		bls	.L21
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 329              		.loc 1 317 0
 330 0130 0320     		movs	r0, #3
 331 0132 42E1     		b	.L13
 332              	.LVL16:
 333              	.L81:
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 334              		.loc 1 332 0 discriminator 1
 335 0134 624B     		ldr	r3, .L93
 336 0136 5B68     		ldr	r3, [r3, #4]
 337 0138 13F4803F 		tst	r3, #65536
 338 013c A3D1     		bne	.L25
 339              	.L24:
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 340              		.loc 1 335 0
 341 013e 604B     		ldr	r3, .L93
 342 0140 1B68     		ldr	r3, [r3]
 343 0142 13F0020F 		tst	r3, #2
 344 0146 04D0     		beq	.L26
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 345              		.loc 1 335 0 is_stmt 0 discriminator 1
 346 0148 2369     		ldr	r3, [r4, #16]
 347 014a 012B     		cmp	r3, #1
 348 014c 01D0     		beq	.L26
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 349              		.loc 1 337 0 is_stmt 1
 350 014e 0120     		movs	r0, #1
 351 0150 33E1     		b	.L13
 352              	.L26:
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 353              		.loc 1 343 0
 354 0152 5B4A     		ldr	r2, .L93
 355 0154 1368     		ldr	r3, [r2]
 356 0156 23F47F43 		bic	r3, r3, #65280
 357 015a 6169     		ldr	r1, [r4, #20]
 358 015c 43EAC103 		orr	r3, r3, r1, lsl #3
 359 0160 1360     		str	r3, [r2]
 360              	.L23:
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 37


 361              		.loc 1 389 0
 362 0162 2368     		ldr	r3, [r4]
 363 0164 13F0080F 		tst	r3, #8
 364 0168 32D0     		beq	.L32
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 365              		.loc 1 395 0
 366 016a A369     		ldr	r3, [r4, #24]
 367 016c 002B     		cmp	r3, #0
 368 016e 5BD0     		beq	.L33
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 369              		.loc 1 398 0
 370 0170 554B     		ldr	r3, .L93+8
 371 0172 0122     		movs	r2, #1
 372 0174 1A60     		str	r2, [r3]
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 373              		.loc 1 401 0
 374 0176 FFF7FEFF 		bl	HAL_GetTick
 375              	.LVL17:
 376 017a 0546     		mov	r5, r0
 377              	.LVL18:
 378              	.L34:
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 379              		.loc 1 404 0
 380 017c 504B     		ldr	r3, .L93
 381 017e 5B6A     		ldr	r3, [r3, #36]
 382 0180 13F0020F 		tst	r3, #2
 383 0184 21D1     		bne	.L84
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 384              		.loc 1 406 0
 385 0186 FFF7FEFF 		bl	HAL_GetTick
 386              	.LVL19:
 387 018a 401B     		subs	r0, r0, r5
 388 018c 0228     		cmp	r0, #2
 389 018e F5D9     		bls	.L34
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 390              		.loc 1 408 0
 391 0190 0320     		movs	r0, #3
 392 0192 12E1     		b	.L13
 393              	.L82:
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 394              		.loc 1 367 0
 395 0194 4A4A     		ldr	r2, .L93
 396 0196 1368     		ldr	r3, [r2]
 397 0198 23F47F43 		bic	r3, r3, #65280
 398 019c 6169     		ldr	r1, [r4, #20]
 399 019e 43EAC103 		orr	r3, r3, r1, lsl #3
 400 01a2 1360     		str	r3, [r2]
 401 01a4 DDE7     		b	.L23
 402              	.LVL20:
 403              	.L27:
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 404              		.loc 1 372 0
 405 01a6 474B     		ldr	r3, .L93+4
 406 01a8 0022     		movs	r2, #0
 407 01aa 1A60     		str	r2, [r3]
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 408              		.loc 1 375 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 38


 409 01ac FFF7FEFF 		bl	HAL_GetTick
 410              	.LVL21:
 411 01b0 0546     		mov	r5, r0
 412              	.LVL22:
 413              	.L30:
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 414              		.loc 1 378 0
 415 01b2 434B     		ldr	r3, .L93
 416 01b4 1B68     		ldr	r3, [r3]
 417 01b6 13F0020F 		tst	r3, #2
 418 01ba D2D0     		beq	.L23
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 419              		.loc 1 380 0
 420 01bc FFF7FEFF 		bl	HAL_GetTick
 421              	.LVL23:
 422 01c0 401B     		subs	r0, r0, r5
 423 01c2 0228     		cmp	r0, #2
 424 01c4 F5D9     		bls	.L30
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 425              		.loc 1 382 0
 426 01c6 0320     		movs	r0, #3
 427 01c8 F7E0     		b	.L13
 428              	.L84:
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 429              		.loc 1 413 0
 430 01ca 0120     		movs	r0, #1
 431 01cc FFF7FEFF 		bl	RCC_Delay
 432              	.LVL24:
 433              	.L32:
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 434              		.loc 1 434 0
 435 01d0 2368     		ldr	r3, [r4]
 436 01d2 13F0040F 		tst	r3, #4
 437 01d6 00F09780 		beq	.L38
 438              	.LVL25:
 439              	.LBB6:
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 440              		.loc 1 443 0
 441 01da 394B     		ldr	r3, .L93
 442 01dc DB69     		ldr	r3, [r3, #28]
 443 01de 13F0805F 		tst	r3, #268435456
 444 01e2 33D1     		bne	.L68
 445              	.LBB7:
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 446              		.loc 1 445 0
 447 01e4 364B     		ldr	r3, .L93
 448 01e6 DA69     		ldr	r2, [r3, #28]
 449 01e8 42F08052 		orr	r2, r2, #268435456
 450 01ec DA61     		str	r2, [r3, #28]
 451 01ee DB69     		ldr	r3, [r3, #28]
 452 01f0 03F08053 		and	r3, r3, #268435456
 453 01f4 0193     		str	r3, [sp, #4]
 454 01f6 019B     		ldr	r3, [sp, #4]
 455              	.LVL26:
 456              	.LBE7:
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 457              		.loc 1 446 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 39


 458 01f8 0125     		movs	r5, #1
 459              	.LVL27:
 460              	.L39:
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 461              		.loc 1 449 0
 462 01fa 344B     		ldr	r3, .L93+12
 463 01fc 1B68     		ldr	r3, [r3]
 464 01fe 13F4807F 		tst	r3, #256
 465 0202 25D0     		beq	.L85
 466              	.L40:
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 467              		.loc 1 467 0
 468 0204 E368     		ldr	r3, [r4, #12]
 469 0206 012B     		cmp	r3, #1
 470 0208 36D0     		beq	.L86
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 471              		.loc 1 467 0 is_stmt 0 discriminator 2
 472 020a 002B     		cmp	r3, #0
 473 020c 4CD1     		bne	.L45
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 474              		.loc 1 467 0 discriminator 3
 475 020e 03F18043 		add	r3, r3, #1073741824
 476 0212 03F50433 		add	r3, r3, #135168
 477 0216 1A6A     		ldr	r2, [r3, #32]
 478 0218 22F00102 		bic	r2, r2, #1
 479 021c 1A62     		str	r2, [r3, #32]
 480 021e 1A6A     		ldr	r2, [r3, #32]
 481 0220 22F00402 		bic	r2, r2, #4
 482 0224 1A62     		str	r2, [r3, #32]
 483 0226 2CE0     		b	.L44
 484              	.LVL28:
 485              	.L33:
 486              	.LBE6:
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 487              		.loc 1 418 0 is_stmt 1
 488 0228 274B     		ldr	r3, .L93+8
 489 022a 0022     		movs	r2, #0
 490 022c 1A60     		str	r2, [r3]
 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 491              		.loc 1 421 0
 492 022e FFF7FEFF 		bl	HAL_GetTick
 493              	.LVL29:
 494 0232 0546     		mov	r5, r0
 495              	.LVL30:
 496              	.L36:
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 497              		.loc 1 424 0
 498 0234 224B     		ldr	r3, .L93
 499 0236 5B6A     		ldr	r3, [r3, #36]
 500 0238 13F0020F 		tst	r3, #2
 501 023c C8D0     		beq	.L32
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 502              		.loc 1 426 0
 503 023e FFF7FEFF 		bl	HAL_GetTick
 504              	.LVL31:
 505 0242 401B     		subs	r0, r0, r5
 506 0244 0228     		cmp	r0, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 40


 507 0246 F5D9     		bls	.L36
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 508              		.loc 1 428 0
 509 0248 0320     		movs	r0, #3
 510 024a B6E0     		b	.L13
 511              	.LVL32:
 512              	.L68:
 513              	.LBB8:
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 514              		.loc 1 436 0
 515 024c 0025     		movs	r5, #0
 516 024e D4E7     		b	.L39
 517              	.LVL33:
 518              	.L85:
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 519              		.loc 1 452 0
 520 0250 1E4A     		ldr	r2, .L93+12
 521 0252 1368     		ldr	r3, [r2]
 522 0254 43F48073 		orr	r3, r3, #256
 523 0258 1360     		str	r3, [r2]
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 524              		.loc 1 455 0
 525 025a FFF7FEFF 		bl	HAL_GetTick
 526              	.LVL34:
 527 025e 0646     		mov	r6, r0
 528              	.LVL35:
 529              	.L41:
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 530              		.loc 1 457 0
 531 0260 1A4B     		ldr	r3, .L93+12
 532 0262 1B68     		ldr	r3, [r3]
 533 0264 13F4807F 		tst	r3, #256
 534 0268 CCD1     		bne	.L40
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 535              		.loc 1 459 0
 536 026a FFF7FEFF 		bl	HAL_GetTick
 537              	.LVL36:
 538 026e 801B     		subs	r0, r0, r6
 539 0270 6428     		cmp	r0, #100
 540 0272 F5D9     		bls	.L41
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 541              		.loc 1 461 0
 542 0274 0320     		movs	r0, #3
 543 0276 A0E0     		b	.L13
 544              	.LVL37:
 545              	.L86:
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 546              		.loc 1 467 0 discriminator 1
 547 0278 114A     		ldr	r2, .L93
 548 027a 136A     		ldr	r3, [r2, #32]
 549 027c 43F00103 		orr	r3, r3, #1
 550 0280 1362     		str	r3, [r2, #32]
 551              	.L44:
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 552              		.loc 1 469 0
 553 0282 E368     		ldr	r3, [r4, #12]
 554 0284 73B3     		cbz	r3, .L47
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 41


 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 555              		.loc 1 472 0
 556 0286 FFF7FEFF 		bl	HAL_GetTick
 557              	.LVL38:
 558 028a 0646     		mov	r6, r0
 559              	.LVL39:
 560              	.L48:
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 561              		.loc 1 475 0
 562 028c 0C4B     		ldr	r3, .L93
 563 028e 1B6A     		ldr	r3, [r3, #32]
 564 0290 13F0020F 		tst	r3, #2
 565 0294 37D1     		bne	.L50
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 566              		.loc 1 477 0
 567 0296 FFF7FEFF 		bl	HAL_GetTick
 568              	.LVL40:
 569 029a 801B     		subs	r0, r0, r6
 570 029c 41F28833 		movw	r3, #5000
 571 02a0 9842     		cmp	r0, r3
 572 02a2 F3D9     		bls	.L48
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 573              		.loc 1 479 0
 574 02a4 0320     		movs	r0, #3
 575 02a6 88E0     		b	.L13
 576              	.LVL41:
 577              	.L45:
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 578              		.loc 1 467 0 discriminator 4
 579 02a8 052B     		cmp	r3, #5
 580 02aa 11D0     		beq	.L87
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 581              		.loc 1 467 0 is_stmt 0 discriminator 6
 582 02ac 044B     		ldr	r3, .L93
 583 02ae 1A6A     		ldr	r2, [r3, #32]
 584 02b0 22F00102 		bic	r2, r2, #1
 585 02b4 1A62     		str	r2, [r3, #32]
 586 02b6 1A6A     		ldr	r2, [r3, #32]
 587 02b8 22F00402 		bic	r2, r2, #4
 588 02bc 1A62     		str	r2, [r3, #32]
 589 02be E0E7     		b	.L44
 590              	.L94:
 591              		.align	2
 592              	.L93:
 593 02c0 00100240 		.word	1073876992
 594 02c4 00004242 		.word	1111621632
 595 02c8 80044242 		.word	1111622784
 596 02cc 00700040 		.word	1073770496
 597              	.L87:
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 598              		.loc 1 467 0 discriminator 5
 599 02d0 3C4B     		ldr	r3, .L95
 600 02d2 1A6A     		ldr	r2, [r3, #32]
 601 02d4 42F00402 		orr	r2, r2, #4
 602 02d8 1A62     		str	r2, [r3, #32]
 603 02da 1A6A     		ldr	r2, [r3, #32]
 604 02dc 42F00102 		orr	r2, r2, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 42


 605 02e0 1A62     		str	r2, [r3, #32]
 606 02e2 CEE7     		b	.L44
 607              	.L47:
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 608              		.loc 1 486 0 is_stmt 1
 609 02e4 FFF7FEFF 		bl	HAL_GetTick
 610              	.LVL42:
 611 02e8 0646     		mov	r6, r0
 612              	.LVL43:
 613              	.L51:
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 614              		.loc 1 489 0
 615 02ea 364B     		ldr	r3, .L95
 616 02ec 1B6A     		ldr	r3, [r3, #32]
 617 02ee 13F0020F 		tst	r3, #2
 618 02f2 08D0     		beq	.L50
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 619              		.loc 1 491 0
 620 02f4 FFF7FEFF 		bl	HAL_GetTick
 621              	.LVL44:
 622 02f8 801B     		subs	r0, r0, r6
 623 02fa 41F28833 		movw	r3, #5000
 624 02fe 9842     		cmp	r0, r3
 625 0300 F3D9     		bls	.L51
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 626              		.loc 1 493 0
 627 0302 0320     		movs	r0, #3
 628 0304 59E0     		b	.L13
 629              	.L50:
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 630              		.loc 1 499 0
 631 0306 E5B9     		cbnz	r5, .L88
 632              	.LVL45:
 633              	.L38:
 634              	.LBE8:
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 635              		.loc 1 598 0
 636 0308 E369     		ldr	r3, [r4, #28]
 637 030a 002B     		cmp	r3, #0
 638 030c 54D0     		beq	.L72
 601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 639              		.loc 1 601 0
 640 030e 2D4A     		ldr	r2, .L95
 641 0310 5268     		ldr	r2, [r2, #4]
 642 0312 02F00C02 		and	r2, r2, #12
 643 0316 082A     		cmp	r2, #8
 644 0318 51D0     		beq	.L73
 603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 645              		.loc 1 603 0
 646 031a 022B     		cmp	r3, #2
 647 031c 17D0     		beq	.L89
 664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 648              		.loc 1 664 0
 649 031e 2A4B     		ldr	r3, .L95+4
 650 0320 0022     		movs	r2, #0
 651 0322 1A60     		str	r2, [r3]
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 43


 652              		.loc 1 667 0
 653 0324 FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL46:
 655 0328 0446     		mov	r4, r0
 656              	.LVL47:
 657              	.L58:
 670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 658              		.loc 1 670 0
 659 032a 264B     		ldr	r3, .L95
 660 032c 1B68     		ldr	r3, [r3]
 661 032e 13F0007F 		tst	r3, #33554432
 662 0332 3DD0     		beq	.L90
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 663              		.loc 1 672 0
 664 0334 FFF7FEFF 		bl	HAL_GetTick
 665              	.LVL48:
 666 0338 001B     		subs	r0, r0, r4
 667 033a 0228     		cmp	r0, #2
 668 033c F5D9     		bls	.L58
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 669              		.loc 1 674 0
 670 033e 0320     		movs	r0, #3
 671 0340 3BE0     		b	.L13
 672              	.LVL49:
 673              	.L88:
 674              	.LBB9:
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 675              		.loc 1 501 0
 676 0342 204A     		ldr	r2, .L95
 677 0344 D369     		ldr	r3, [r2, #28]
 678 0346 23F08053 		bic	r3, r3, #268435456
 679 034a D361     		str	r3, [r2, #28]
 680 034c DCE7     		b	.L38
 681              	.LVL50:
 682              	.L89:
 683              	.LBE9:
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 684              		.loc 1 610 0
 685 034e 1E4B     		ldr	r3, .L95+4
 686 0350 0022     		movs	r2, #0
 687 0352 1A60     		str	r2, [r3]
 613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 688              		.loc 1 613 0
 689 0354 FFF7FEFF 		bl	HAL_GetTick
 690              	.LVL51:
 691 0358 0546     		mov	r5, r0
 692              	.LVL52:
 693              	.L54:
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 694              		.loc 1 616 0
 695 035a 1A4B     		ldr	r3, .L95
 696 035c 1B68     		ldr	r3, [r3]
 697 035e 13F0007F 		tst	r3, #33554432
 698 0362 06D0     		beq	.L91
 618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 699              		.loc 1 618 0
 700 0364 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 44


 701              	.LVL53:
 702 0368 401B     		subs	r0, r0, r5
 703 036a 0228     		cmp	r0, #2
 704 036c F5D9     		bls	.L54
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 705              		.loc 1 620 0
 706 036e 0320     		movs	r0, #3
 707 0370 23E0     		b	.L13
 708              	.L91:
 626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 709              		.loc 1 626 0
 710 0372 226A     		ldr	r2, [r4, #32]
 644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 711              		.loc 1 644 0
 712 0374 1349     		ldr	r1, .L95
 713 0376 4B68     		ldr	r3, [r1, #4]
 714 0378 23F0C043 		bic	r3, r3, #1610612736
 715 037c 23F47413 		bic	r3, r3, #3997696
 716 0380 606A     		ldr	r0, [r4, #36]
 717 0382 0243     		orrs	r2, r2, r0
 718 0384 1343     		orrs	r3, r3, r2
 719 0386 4B60     		str	r3, [r1, #4]
 647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 720              		.loc 1 647 0
 721 0388 0F4B     		ldr	r3, .L95+4
 722 038a 0122     		movs	r2, #1
 723 038c 1A60     		str	r2, [r3]
 650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 724              		.loc 1 650 0
 725 038e FFF7FEFF 		bl	HAL_GetTick
 726              	.LVL54:
 727 0392 0446     		mov	r4, r0
 728              	.LVL55:
 729              	.L56:
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 730              		.loc 1 653 0
 731 0394 0B4B     		ldr	r3, .L95
 732 0396 1B68     		ldr	r3, [r3]
 733 0398 13F0007F 		tst	r3, #33554432
 734 039c 06D1     		bne	.L92
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 735              		.loc 1 655 0
 736 039e FFF7FEFF 		bl	HAL_GetTick
 737              	.LVL56:
 738 03a2 001B     		subs	r0, r0, r4
 739 03a4 0228     		cmp	r0, #2
 740 03a6 F5D9     		bls	.L56
 657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 741              		.loc 1 657 0
 742 03a8 0320     		movs	r0, #3
 743 03aa 06E0     		b	.L13
 744              	.L92:
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 745              		.loc 1 685 0
 746 03ac 0020     		movs	r0, #0
 747 03ae 04E0     		b	.L13
 748              	.L90:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 45


 749 03b0 0020     		movs	r0, #0
 750 03b2 02E0     		b	.L13
 751              	.LVL57:
 752              	.L80:
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 753              		.loc 1 283 0
 754 03b4 0120     		movs	r0, #1
 755              	.LVL58:
 756 03b6 00E0     		b	.L13
 757              	.LVL59:
 758              	.L72:
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 759              		.loc 1 685 0
 760 03b8 0020     		movs	r0, #0
 761              	.LVL60:
 762              	.L13:
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 763              		.loc 1 686 0
 764 03ba 02B0     		add	sp, sp, #8
 765              	.LCFI4:
 766              		.cfi_remember_state
 767              		.cfi_def_cfa_offset 16
 768              		@ sp needed
 769 03bc 70BD     		pop	{r4, r5, r6, pc}
 770              	.LVL61:
 771              	.L73:
 772              	.LCFI5:
 773              		.cfi_restore_state
 681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 774              		.loc 1 681 0
 775 03be 0120     		movs	r0, #1
 776 03c0 FBE7     		b	.L13
 777              	.L96:
 778 03c2 00BF     		.align	2
 779              	.L95:
 780 03c4 00100240 		.word	1073876992
 781 03c8 60004242 		.word	1111621728
 782              		.cfi_endproc
 783              	.LFE127:
 785              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 786              		.align	1
 787              		.global	HAL_RCC_MCOConfig
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 793              	HAL_RCC_MCOConfig:
 794              	.LFB129:
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 795              		.loc 1 905 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 24
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              	.LVL62:
 800 0000 30B5     		push	{r4, r5, lr}
 801              	.LCFI6:
 802              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 46


 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 806 0002 87B0     		sub	sp, sp, #28
 807              	.LCFI7:
 808              		.cfi_def_cfa_offset 40
 809 0004 0D46     		mov	r5, r1
 906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 810              		.loc 1 906 0
 811 0006 0023     		movs	r3, #0
 812 0008 0493     		str	r3, [sp, #16]
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 813              		.loc 1 918 0
 814 000a 0223     		movs	r3, #2
 815 000c 0393     		str	r3, [sp, #12]
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 816              		.loc 1 919 0
 817 000e 0323     		movs	r3, #3
 818 0010 0593     		str	r3, [sp, #20]
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 819              		.loc 1 921 0
 820 0012 4FF48073 		mov	r3, #256
 821 0016 0293     		str	r3, [sp, #8]
 822              	.LBB10:
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 823              		.loc 1 924 0
 824 0018 0A4C     		ldr	r4, .L99
 825 001a A369     		ldr	r3, [r4, #24]
 826 001c 43F00403 		orr	r3, r3, #4
 827 0020 A361     		str	r3, [r4, #24]
 828 0022 A369     		ldr	r3, [r4, #24]
 829 0024 03F00403 		and	r3, r3, #4
 830 0028 0193     		str	r3, [sp, #4]
 831 002a 019B     		ldr	r3, [sp, #4]
 832              	.LBE10:
 926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 833              		.loc 1 926 0
 834 002c 02A9     		add	r1, sp, #8
 835              	.LVL63:
 836 002e 0648     		ldr	r0, .L99+4
 837              	.LVL64:
 838 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 839              	.LVL65:
 929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 840              		.loc 1 929 0
 841 0034 6168     		ldr	r1, [r4, #4]
 842 0036 21F0E061 		bic	r1, r1, #117440512
 843 003a 2943     		orrs	r1, r1, r5
 844 003c 6160     		str	r1, [r4, #4]
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 845              		.loc 1 930 0
 846 003e 07B0     		add	sp, sp, #28
 847              	.LCFI8:
 848              		.cfi_def_cfa_offset 12
 849              		@ sp needed
 850 0040 30BD     		pop	{r4, r5, pc}
 851              	.LVL66:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 47


 852              	.L100:
 853 0042 00BF     		.align	2
 854              	.L99:
 855 0044 00100240 		.word	1073876992
 856 0048 00080140 		.word	1073809408
 857              		.cfi_endproc
 858              	.LFE129:
 860              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 861              		.align	1
 862              		.global	HAL_RCC_EnableCSS
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv4-sp-d16
 868              	HAL_RCC_EnableCSS:
 869              	.LFB130:
 942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 870              		.loc 1 942 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 875              		.loc 1 943 0
 876 0000 014B     		ldr	r3, .L102
 877 0002 0122     		movs	r2, #1
 878 0004 1A60     		str	r2, [r3]
 944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 879              		.loc 1 944 0
 880 0006 7047     		bx	lr
 881              	.L103:
 882              		.align	2
 883              	.L102:
 884 0008 4C004242 		.word	1111621708
 885              		.cfi_endproc
 886              	.LFE130:
 888              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 889              		.align	1
 890              		.global	HAL_RCC_DisableCSS
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 894              		.fpu fpv4-sp-d16
 896              	HAL_RCC_DisableCSS:
 897              	.LFB131:
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 898              		.loc 1 951 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 903              		.loc 1 952 0
 904 0000 014B     		ldr	r3, .L105
 905 0002 0022     		movs	r2, #0
 906 0004 1A60     		str	r2, [r3]
 953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 48


 907              		.loc 1 953 0
 908 0006 7047     		bx	lr
 909              	.L106:
 910              		.align	2
 911              	.L105:
 912 0008 4C004242 		.word	1111621708
 913              		.cfi_endproc
 914              	.LFE131:
 916              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 917              		.align	1
 918              		.global	HAL_RCC_GetSysClockFreq
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu fpv4-sp-d16
 924              	HAL_RCC_GetSysClockFreq:
 925              	.LFB132:
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 926              		.loc 1 985 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 24
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 10B4     		push	{r4}
 932              	.LCFI9:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 4, -4
 935 0002 87B0     		sub	sp, sp, #28
 936              	.LCFI10:
 937              		.cfi_def_cfa_offset 32
 990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 938              		.loc 1 990 0
 939 0004 174C     		ldr	r4, .L115
 940 0006 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 941 000a 0DF1180C 		add	ip, sp, #24
 942 000e 0CE90F00 		stmdb	ip, {r0, r1, r2, r3}
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 943              		.loc 1 994 0
 944 0012 238A     		ldrh	r3, [r4, #16]
 945 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 946              	.LVL67:
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 947              		.loc 1 1004 0
 948 0018 134B     		ldr	r3, .L115+4
 949 001a 5A68     		ldr	r2, [r3, #4]
 950              	.LVL68:
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 951              		.loc 1 1007 0
 952 001c 02F00C03 		and	r3, r2, #12
 953 0020 082B     		cmp	r3, #8
 954 0022 1DD1     		bne	.L112
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 955              		.loc 1 1016 0
 956 0024 41F60F03 		movw	r3, #6159
 957 0028 03EA9243 		and	r3, r3, r2, lsr #18
 958 002c 6344     		add	r3, r3, ip
 959 002e 13F8100C 		ldrb	r0, [r3, #-16]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 49


 960              	.LVL69:
1017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 961              		.loc 1 1017 0
 962 0032 12F4803F 		tst	r2, #65536
 963 0036 06D1     		bne	.L114
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 964              		.loc 1 1054 0
 965 0038 0C4B     		ldr	r3, .L115+8
 966 003a 03FB00F0 		mul	r0, r3, r0
 967              	.LVL70:
 968              	.L107:
1067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 969              		.loc 1 1067 0
 970 003e 07B0     		add	sp, sp, #28
 971              	.LCFI11:
 972              		.cfi_remember_state
 973              		.cfi_def_cfa_offset 4
 974              		@ sp needed
 975 0040 5DF8044B 		ldr	r4, [sp], #4
 976              	.LCFI12:
 977              		.cfi_restore 4
 978              		.cfi_def_cfa_offset 0
 979 0044 7047     		bx	lr
 980              	.LVL71:
 981              	.L114:
 982              	.LCFI13:
 983              		.cfi_restore_state
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 984              		.loc 1 1022 0
 985 0046 084B     		ldr	r3, .L115+4
 986 0048 5B68     		ldr	r3, [r3, #4]
 987 004a C3F34043 		ubfx	r3, r3, #17, #1
 988 004e 6344     		add	r3, r3, ip
 989 0050 13F8142C 		ldrb	r2, [r3, #-20]	@ zero_extendqisi2
 990              	.LVL72:
1048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 991              		.loc 1 1048 0
 992 0054 064B     		ldr	r3, .L115+12
 993 0056 B3FBF2F3 		udiv	r3, r3, r2
 994 005a 00FB03F0 		mul	r0, r0, r3
 995              	.LVL73:
 996 005e EEE7     		b	.L107
 997              	.LVL74:
 998              	.L112:
1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 999              		.loc 1 1011 0
 1000 0060 0348     		ldr	r0, .L115+12
 1001              	.LVL75:
1066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1002              		.loc 1 1066 0
 1003 0062 ECE7     		b	.L107
 1004              	.L116:
 1005              		.align	2
 1006              	.L115:
 1007 0064 00000000 		.word	.LANCHOR0
 1008 0068 00100240 		.word	1073876992
 1009 006c 00093D00 		.word	4000000
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 50


 1010 0070 00127A00 		.word	8000000
 1011              		.cfi_endproc
 1012              	.LFE132:
 1014              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1015              		.align	1
 1016              		.global	HAL_RCC_ClockConfig
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv4-sp-d16
 1022              	HAL_RCC_ClockConfig:
 1023              	.LFB128:
 712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1024              		.loc 1 712 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL76:
 1029 0000 38B5     		push	{r3, r4, r5, lr}
 1030              	.LCFI14:
 1031              		.cfi_def_cfa_offset 16
 1032              		.cfi_offset 3, -16
 1033              		.cfi_offset 4, -12
 1034              		.cfi_offset 5, -8
 1035              		.cfi_offset 14, -4
 1036 0002 0446     		mov	r4, r0
 1037              	.LVL77:
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1038              		.loc 1 741 0
 1039 0004 0368     		ldr	r3, [r0]
 1040 0006 13F0020F 		tst	r3, #2
 1041 000a 06D0     		beq	.L118
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1042              		.loc 1 744 0
 1043 000c 434A     		ldr	r2, .L143
 1044 000e 5368     		ldr	r3, [r2, #4]
 1045 0010 23F0F003 		bic	r3, r3, #240
 1046 0014 8168     		ldr	r1, [r0, #8]
 1047              	.LVL78:
 1048 0016 0B43     		orrs	r3, r3, r1
 1049 0018 5360     		str	r3, [r2, #4]
 1050              	.L118:
 748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1051              		.loc 1 748 0
 1052 001a 2368     		ldr	r3, [r4]
 1053 001c 13F0010F 		tst	r3, #1
 1054 0020 51D0     		beq	.L119
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1055              		.loc 1 753 0
 1056 0022 6368     		ldr	r3, [r4, #4]
 1057 0024 012B     		cmp	r3, #1
 1058 0026 22D0     		beq	.L141
 762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1059              		.loc 1 762 0
 1060 0028 022B     		cmp	r3, #2
 1061 002a 27D0     		beq	.L142
 774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 51


 1062              		.loc 1 774 0
 1063 002c 3B4A     		ldr	r2, .L143
 1064 002e 1268     		ldr	r2, [r2]
 1065 0030 12F0020F 		tst	r2, #2
 1066 0034 6FD0     		beq	.L135
 1067              	.L122:
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1068              		.loc 1 779 0
 1069 0036 3949     		ldr	r1, .L143
 1070 0038 4A68     		ldr	r2, [r1, #4]
 1071 003a 22F00302 		bic	r2, r2, #3
 1072 003e 1343     		orrs	r3, r3, r2
 1073 0040 4B60     		str	r3, [r1, #4]
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1074              		.loc 1 782 0
 1075 0042 FFF7FEFF 		bl	HAL_GetTick
 1076              	.LVL79:
 1077 0046 0546     		mov	r5, r0
 1078              	.LVL80:
 784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1079              		.loc 1 784 0
 1080 0048 6368     		ldr	r3, [r4, #4]
 1081 004a 012B     		cmp	r3, #1
 1082 004c 1DD0     		beq	.L124
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1083              		.loc 1 794 0
 1084 004e 022B     		cmp	r3, #2
 1085 0050 2AD0     		beq	.L127
 1086              	.LVL81:
 1087              	.L128:
 806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1088              		.loc 1 806 0
 1089 0052 324B     		ldr	r3, .L143
 1090 0054 5B68     		ldr	r3, [r3, #4]
 1091 0056 13F00C0F 		tst	r3, #12
 1092 005a 34D0     		beq	.L119
 808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1093              		.loc 1 808 0
 1094 005c FFF7FEFF 		bl	HAL_GetTick
 1095              	.LVL82:
 1096 0060 401B     		subs	r0, r0, r5
 1097 0062 41F28833 		movw	r3, #5000
 1098 0066 9842     		cmp	r0, r3
 1099 0068 F3D9     		bls	.L128
 810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1100              		.loc 1 810 0
 1101 006a 0320     		movs	r0, #3
 1102 006c 52E0     		b	.L121
 1103              	.LVL83:
 1104              	.L141:
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1105              		.loc 1 756 0
 1106 006e 2B4A     		ldr	r2, .L143
 1107 0070 1268     		ldr	r2, [r2]
 1108 0072 12F4003F 		tst	r2, #131072
 1109 0076 DED1     		bne	.L122
 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 52


 1110              		.loc 1 758 0
 1111 0078 0120     		movs	r0, #1
 1112              	.LVL84:
 1113 007a 4BE0     		b	.L121
 1114              	.LVL85:
 1115              	.L142:
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1116              		.loc 1 765 0
 1117 007c 274A     		ldr	r2, .L143
 1118 007e 1268     		ldr	r2, [r2]
 1119 0080 12F0007F 		tst	r2, #33554432
 1120 0084 D7D1     		bne	.L122
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1121              		.loc 1 767 0
 1122 0086 0120     		movs	r0, #1
 1123              	.LVL86:
 1124 0088 44E0     		b	.L121
 1125              	.LVL87:
 1126              	.L124:
 786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1127              		.loc 1 786 0
 1128 008a 244B     		ldr	r3, .L143
 1129 008c 5B68     		ldr	r3, [r3, #4]
 1130 008e 03F00C03 		and	r3, r3, #12
 1131 0092 042B     		cmp	r3, #4
 1132 0094 17D0     		beq	.L119
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1133              		.loc 1 788 0
 1134 0096 FFF7FEFF 		bl	HAL_GetTick
 1135              	.LVL88:
 1136 009a 401B     		subs	r0, r0, r5
 1137 009c 41F28833 		movw	r3, #5000
 1138 00a0 9842     		cmp	r0, r3
 1139 00a2 F2D9     		bls	.L124
 790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1140              		.loc 1 790 0
 1141 00a4 0320     		movs	r0, #3
 1142 00a6 35E0     		b	.L121
 1143              	.L127:
 796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1144              		.loc 1 796 0
 1145 00a8 1C4B     		ldr	r3, .L143
 1146 00aa 5B68     		ldr	r3, [r3, #4]
 1147 00ac 03F00C03 		and	r3, r3, #12
 1148 00b0 082B     		cmp	r3, #8
 1149 00b2 08D0     		beq	.L119
 798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1150              		.loc 1 798 0
 1151 00b4 FFF7FEFF 		bl	HAL_GetTick
 1152              	.LVL89:
 1153 00b8 401B     		subs	r0, r0, r5
 1154 00ba 41F28833 		movw	r3, #5000
 1155 00be 9842     		cmp	r0, r3
 1156 00c0 F2D9     		bls	.L127
 800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1157              		.loc 1 800 0
 1158 00c2 0320     		movs	r0, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 53


 1159 00c4 26E0     		b	.L121
 1160              	.LVL90:
 1161              	.L119:
 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1162              		.loc 1 832 0
 1163 00c6 2368     		ldr	r3, [r4]
 1164 00c8 13F0040F 		tst	r3, #4
 1165 00cc 06D0     		beq	.L131
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1166              		.loc 1 835 0
 1167 00ce 134A     		ldr	r2, .L143
 1168 00d0 5368     		ldr	r3, [r2, #4]
 1169 00d2 23F4E063 		bic	r3, r3, #1792
 1170 00d6 E168     		ldr	r1, [r4, #12]
 1171 00d8 0B43     		orrs	r3, r3, r1
 1172 00da 5360     		str	r3, [r2, #4]
 1173              	.L131:
 839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1174              		.loc 1 839 0
 1175 00dc 2368     		ldr	r3, [r4]
 1176 00de 13F0080F 		tst	r3, #8
 1177 00e2 07D0     		beq	.L132
 842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1178              		.loc 1 842 0
 1179 00e4 0D4A     		ldr	r2, .L143
 1180 00e6 5368     		ldr	r3, [r2, #4]
 1181 00e8 23F46053 		bic	r3, r3, #14336
 1182 00ec 2169     		ldr	r1, [r4, #16]
 1183 00ee 43EAC103 		orr	r3, r3, r1, lsl #3
 1184 00f2 5360     		str	r3, [r2, #4]
 1185              	.L132:
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1186              		.loc 1 846 0
 1187 00f4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1188              	.LVL91:
 1189 00f8 084B     		ldr	r3, .L143
 1190 00fa 5B68     		ldr	r3, [r3, #4]
 1191 00fc C3F30313 		ubfx	r3, r3, #4, #4
 1192 0100 074A     		ldr	r2, .L143+4
 1193 0102 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1194 0104 DBB2     		uxtb	r3, r3
 1195 0106 D840     		lsrs	r0, r0, r3
 1196 0108 064B     		ldr	r3, .L143+8
 1197 010a 1860     		str	r0, [r3]
 849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1198              		.loc 1 849 0
 1199 010c 0020     		movs	r0, #0
 1200 010e FFF7FEFF 		bl	HAL_InitTick
 1201              	.LVL92:
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1202              		.loc 1 851 0
 1203 0112 0020     		movs	r0, #0
 1204              	.L121:
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1205              		.loc 1 852 0
 1206 0114 38BD     		pop	{r3, r4, r5, pc}
 1207              	.LVL93:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 54


 1208              	.L135:
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1209              		.loc 1 776 0
 1210 0116 0120     		movs	r0, #1
 1211              	.LVL94:
 1212 0118 FCE7     		b	.L121
 1213              	.L144:
 1214 011a 00BF     		.align	2
 1215              	.L143:
 1216 011c 00100240 		.word	1073876992
 1217 0120 00000000 		.word	AHBPrescTable
 1218 0124 00000000 		.word	SystemCoreClock
 1219              		.cfi_endproc
 1220              	.LFE128:
 1222              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1223              		.align	1
 1224              		.global	HAL_RCC_GetHCLKFreq
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	HAL_RCC_GetHCLKFreq:
 1231              	.LFB133:
1079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 1232              		.loc 1 1079 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1237              		.loc 1 1081 0
 1238 0000 014B     		ldr	r3, .L146
 1239 0002 1868     		ldr	r0, [r3]
 1240 0004 7047     		bx	lr
 1241              	.L147:
 1242 0006 00BF     		.align	2
 1243              	.L146:
 1244 0008 00000000 		.word	SystemCoreClock
 1245              		.cfi_endproc
 1246              	.LFE133:
 1248              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1249              		.align	1
 1250              		.global	HAL_RCC_GetPCLK1Freq
 1251              		.syntax unified
 1252              		.thumb
 1253              		.thumb_func
 1254              		.fpu fpv4-sp-d16
 1256              	HAL_RCC_GetPCLK1Freq:
 1257              	.LFB134:
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 1258              		.loc 1 1090 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262 0000 08B5     		push	{r3, lr}
 1263              	.LCFI15:
 1264              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 55


 1265              		.cfi_offset 3, -8
 1266              		.cfi_offset 14, -4
1092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
 1267              		.loc 1 1092 0
 1268 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1269              	.LVL95:
 1270 0006 044B     		ldr	r3, .L150
 1271 0008 5B68     		ldr	r3, [r3, #4]
 1272 000a C3F30223 		ubfx	r3, r3, #8, #3
 1273 000e 034A     		ldr	r2, .L150+4
 1274 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1275 0012 DBB2     		uxtb	r3, r3
1093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1276              		.loc 1 1093 0
 1277 0014 D840     		lsrs	r0, r0, r3
 1278 0016 08BD     		pop	{r3, pc}
 1279              	.L151:
 1280              		.align	2
 1281              	.L150:
 1282 0018 00100240 		.word	1073876992
 1283 001c 00000000 		.word	APBPrescTable
 1284              		.cfi_endproc
 1285              	.LFE134:
 1287              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1288              		.align	1
 1289              		.global	HAL_RCC_GetPCLK2Freq
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1293              		.fpu fpv4-sp-d16
 1295              	HAL_RCC_GetPCLK2Freq:
 1296              	.LFB135:
1102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 1297              		.loc 1 1102 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301 0000 08B5     		push	{r3, lr}
 1302              	.LCFI16:
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 3, -8
 1305              		.cfi_offset 14, -4
1104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
 1306              		.loc 1 1104 0
 1307 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1308              	.LVL96:
 1309 0006 044B     		ldr	r3, .L154
 1310 0008 5B68     		ldr	r3, [r3, #4]
 1311 000a C3F3C223 		ubfx	r3, r3, #11, #3
 1312 000e 034A     		ldr	r2, .L154+4
 1313 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1314 0012 DBB2     		uxtb	r3, r3
1105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1315              		.loc 1 1105 0
 1316 0014 D840     		lsrs	r0, r0, r3
 1317 0016 08BD     		pop	{r3, pc}
 1318              	.L155:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 56


 1319              		.align	2
 1320              	.L154:
 1321 0018 00100240 		.word	1073876992
 1322 001c 00000000 		.word	APBPrescTable
 1323              		.cfi_endproc
 1324              	.LFE135:
 1326              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1327              		.align	1
 1328              		.global	HAL_RCC_GetOscConfig
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv4-sp-d16
 1334              	HAL_RCC_GetOscConfig:
 1335              	.LFB136:
1115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1336              		.loc 1 1115 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341              	.LVL97:
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
 1342              		.loc 1 1120 0
 1343 0000 0F23     		movs	r3, #15
 1344 0002 0360     		str	r3, [r0]
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1345              		.loc 1 1129 0
 1346 0004 2D4B     		ldr	r3, .L170
 1347 0006 1B68     		ldr	r3, [r3]
 1348 0008 13F4802F 		tst	r3, #262144
 1349 000c 35D0     		beq	.L157
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1350              		.loc 1 1131 0
 1351 000e 4FF4A023 		mov	r3, #327680
 1352 0012 4360     		str	r3, [r0, #4]
 1353              	.L158:
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1354              		.loc 1 1141 0
 1355 0014 294A     		ldr	r2, .L170
 1356 0016 5368     		ldr	r3, [r2, #4]
 1357 0018 03F40033 		and	r3, r3, #131072
 1358 001c 8360     		str	r3, [r0, #8]
1144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1359              		.loc 1 1144 0
 1360 001e 1368     		ldr	r3, [r2]
 1361 0020 13F0010F 		tst	r3, #1
 1362 0024 35D0     		beq	.L160
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1363              		.loc 1 1146 0
 1364 0026 0123     		movs	r3, #1
 1365 0028 0361     		str	r3, [r0, #16]
 1366              	.L161:
1153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1367              		.loc 1 1153 0
 1368 002a 244A     		ldr	r2, .L170
 1369 002c 1368     		ldr	r3, [r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 57


 1370 002e DB08     		lsrs	r3, r3, #3
 1371 0030 03F4FF53 		and	r3, r3, #8160
 1372 0034 4361     		str	r3, [r0, #20]
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1373              		.loc 1 1156 0
 1374 0036 136A     		ldr	r3, [r2, #32]
 1375 0038 13F0040F 		tst	r3, #4
 1376 003c 2CD0     		beq	.L162
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1377              		.loc 1 1158 0
 1378 003e 0523     		movs	r3, #5
 1379 0040 C360     		str	r3, [r0, #12]
 1380              	.L163:
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1381              		.loc 1 1170 0
 1382 0042 1E4B     		ldr	r3, .L170
 1383 0044 5B6A     		ldr	r3, [r3, #36]
 1384 0046 13F0010F 		tst	r3, #1
 1385 004a 30D0     		beq	.L165
1172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1386              		.loc 1 1172 0
 1387 004c 0123     		movs	r3, #1
 1388 004e 8361     		str	r3, [r0, #24]
 1389              	.L166:
1181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1390              		.loc 1 1181 0
 1391 0050 1A4B     		ldr	r3, .L170
 1392 0052 1B68     		ldr	r3, [r3]
 1393 0054 13F0807F 		tst	r3, #16777216
 1394 0058 2CD1     		bne	.L169
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1395              		.loc 1 1187 0
 1396 005a 0123     		movs	r3, #1
 1397 005c C361     		str	r3, [r0, #28]
 1398              	.L168:
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 1399              		.loc 1 1189 0
 1400 005e 174A     		ldr	r2, .L170
 1401 0060 5368     		ldr	r3, [r2, #4]
 1402 0062 03F48033 		and	r3, r3, #65536
 1403 0066 0362     		str	r3, [r0, #32]
1190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 1404              		.loc 1 1190 0
 1405 0068 5368     		ldr	r3, [r2, #4]
 1406 006a 23F01F43 		bic	r3, r3, #-1627389952
 1407 006e 23F44003 		bic	r3, r3, #12582912
 1408 0072 9B0C     		lsrs	r3, r3, #18
 1409 0074 9B04     		lsls	r3, r3, #18
 1410 0076 4362     		str	r3, [r0, #36]
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1411              		.loc 1 1204 0
 1412 0078 7047     		bx	lr
 1413              	.L157:
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1414              		.loc 1 1133 0
 1415 007a 104B     		ldr	r3, .L170
 1416 007c 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 58


 1417 007e 13F4803F 		tst	r3, #65536
 1418 0082 03D0     		beq	.L159
1135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1419              		.loc 1 1135 0
 1420 0084 4FF48033 		mov	r3, #65536
 1421 0088 4360     		str	r3, [r0, #4]
 1422 008a C3E7     		b	.L158
 1423              	.L159:
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1424              		.loc 1 1139 0
 1425 008c 0023     		movs	r3, #0
 1426 008e 4360     		str	r3, [r0, #4]
 1427 0090 C0E7     		b	.L158
 1428              	.L160:
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1429              		.loc 1 1150 0
 1430 0092 0023     		movs	r3, #0
 1431 0094 0361     		str	r3, [r0, #16]
 1432 0096 C8E7     		b	.L161
 1433              	.L162:
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1434              		.loc 1 1160 0
 1435 0098 084B     		ldr	r3, .L170
 1436 009a 1B6A     		ldr	r3, [r3, #32]
 1437 009c 13F0010F 		tst	r3, #1
 1438 00a0 02D0     		beq	.L164
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1439              		.loc 1 1162 0
 1440 00a2 0123     		movs	r3, #1
 1441 00a4 C360     		str	r3, [r0, #12]
 1442 00a6 CCE7     		b	.L163
 1443              	.L164:
1166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1444              		.loc 1 1166 0
 1445 00a8 0023     		movs	r3, #0
 1446 00aa C360     		str	r3, [r0, #12]
 1447 00ac C9E7     		b	.L163
 1448              	.L165:
1176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1449              		.loc 1 1176 0
 1450 00ae 0023     		movs	r3, #0
 1451 00b0 8361     		str	r3, [r0, #24]
 1452 00b2 CDE7     		b	.L166
 1453              	.L169:
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1454              		.loc 1 1183 0
 1455 00b4 0223     		movs	r3, #2
 1456 00b6 C361     		str	r3, [r0, #28]
 1457 00b8 D1E7     		b	.L168
 1458              	.L171:
 1459 00ba 00BF     		.align	2
 1460              	.L170:
 1461 00bc 00100240 		.word	1073876992
 1462              		.cfi_endproc
 1463              	.LFE136:
 1465              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1466              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 59


 1467              		.global	HAL_RCC_GetClockConfig
 1468              		.syntax unified
 1469              		.thumb
 1470              		.thumb_func
 1471              		.fpu fpv4-sp-d16
 1473              	HAL_RCC_GetClockConfig:
 1474              	.LFB137:
1215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1475              		.loc 1 1215 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 0, uses_anonymous_args = 0
 1479              		@ link register save eliminated.
 1480              	.LVL98:
1221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1481              		.loc 1 1221 0
 1482 0000 0F23     		movs	r3, #15
 1483 0002 0360     		str	r3, [r0]
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1484              		.loc 1 1224 0
 1485 0004 0A4B     		ldr	r3, .L173
 1486 0006 5A68     		ldr	r2, [r3, #4]
 1487 0008 02F00302 		and	r2, r2, #3
 1488 000c 4260     		str	r2, [r0, #4]
1227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1489              		.loc 1 1227 0
 1490 000e 5A68     		ldr	r2, [r3, #4]
 1491 0010 02F0F002 		and	r2, r2, #240
 1492 0014 8260     		str	r2, [r0, #8]
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1493              		.loc 1 1230 0
 1494 0016 5A68     		ldr	r2, [r3, #4]
 1495 0018 02F4E062 		and	r2, r2, #1792
 1496 001c C260     		str	r2, [r0, #12]
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1497              		.loc 1 1233 0
 1498 001e 5B68     		ldr	r3, [r3, #4]
 1499 0020 DB08     		lsrs	r3, r3, #3
 1500 0022 03F4E063 		and	r3, r3, #1792
 1501 0026 0361     		str	r3, [r0, #16]
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 1502              		.loc 1 1240 0
 1503 0028 0023     		movs	r3, #0
 1504 002a 0B60     		str	r3, [r1]
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1505              		.loc 1 1242 0
 1506 002c 7047     		bx	lr
 1507              	.L174:
 1508 002e 00BF     		.align	2
 1509              	.L173:
 1510 0030 00100240 		.word	1073876992
 1511              		.cfi_endproc
 1512              	.LFE137:
 1514              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1515              		.align	1
 1516              		.weak	HAL_RCC_CSSCallback
 1517              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 60


 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
 1522              	HAL_RCC_CSSCallback:
 1523              	.LFB140:
1276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1524              		.loc 1 1282 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              		@ link register save eliminated.
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     */ 
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1529              		.loc 1 1286 0
 1530 0000 7047     		bx	lr
 1531              		.cfi_endproc
 1532              	.LFE140:
 1534              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1535              		.align	1
 1536              		.global	HAL_RCC_NMI_IRQHandler
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu fpv4-sp-d16
 1542              	HAL_RCC_NMI_IRQHandler:
 1543              	.LFB138:
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1544              		.loc 1 1250 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548 0000 08B5     		push	{r3, lr}
 1549              	.LCFI17:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 3, -8
 1552              		.cfi_offset 14, -4
1252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1553              		.loc 1 1252 0
 1554 0002 064B     		ldr	r3, .L180
 1555 0004 9B68     		ldr	r3, [r3, #8]
 1556 0006 13F0800F 		tst	r3, #128
 1557 000a 00D1     		bne	.L179
 1558              	.L176:
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1559              		.loc 1 1260 0
 1560 000c 08BD     		pop	{r3, pc}
 1561              	.L179:
1255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1562              		.loc 1 1255 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 61


 1563 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1564              	.LVL99:
1258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1565              		.loc 1 1258 0
 1566 0012 034B     		ldr	r3, .L180+4
 1567 0014 8022     		movs	r2, #128
 1568 0016 1A70     		strb	r2, [r3]
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1569              		.loc 1 1260 0
 1570 0018 F8E7     		b	.L176
 1571              	.L181:
 1572 001a 00BF     		.align	2
 1573              	.L180:
 1574 001c 00100240 		.word	1073876992
 1575 0020 0A100240 		.word	1073877002
 1576              		.cfi_endproc
 1577              	.LFE138:
 1579              		.section	.rodata
 1580              		.align	2
 1581              		.set	.LANCHOR0,. + 0
 1582              	.LC0:
 1583 0000 02       		.byte	2
 1584 0001 03       		.byte	3
 1585 0002 04       		.byte	4
 1586 0003 05       		.byte	5
 1587 0004 06       		.byte	6
 1588 0005 07       		.byte	7
 1589 0006 08       		.byte	8
 1590 0007 09       		.byte	9
 1591 0008 0A       		.byte	10
 1592 0009 0B       		.byte	11
 1593 000a 0C       		.byte	12
 1594 000b 0D       		.byte	13
 1595 000c 0E       		.byte	14
 1596 000d 0F       		.byte	15
 1597 000e 10       		.byte	16
 1598 000f 10       		.byte	16
 1599              	.LC1:
 1600 0010 01       		.byte	1
 1601 0011 02       		.byte	2
 1602              		.text
 1603              	.Letext0:
 1604              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1605              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1606              		.file 5 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 1607              		.file 6 "Inc/system_at32f4xx.h"
 1608              		.file 7 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1609              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1610              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1611              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1612              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1613              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1614              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1615              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1616              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1617              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:17     .text.RCC_Delay:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:23     .text.RCC_Delay:0000000000000000 RCC_Delay
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:72     .text.RCC_Delay:0000000000000024 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:78     .text.HAL_RCC_DeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:85     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:126    .text.HAL_RCC_DeInit:000000000000003c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:133    .text.HAL_RCC_OscConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:140    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:593    .text.HAL_RCC_OscConfig:00000000000002c0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:599    .text.HAL_RCC_OscConfig:00000000000002d0 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:780    .text.HAL_RCC_OscConfig:00000000000003c4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:786    .text.HAL_RCC_MCOConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:793    .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:855    .text.HAL_RCC_MCOConfig:0000000000000044 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:861    .text.HAL_RCC_EnableCSS:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:868    .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:884    .text.HAL_RCC_EnableCSS:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:889    .text.HAL_RCC_DisableCSS:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:896    .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:912    .text.HAL_RCC_DisableCSS:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:917    .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:924    .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1007   .text.HAL_RCC_GetSysClockFreq:0000000000000064 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1015   .text.HAL_RCC_ClockConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1022   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1216   .text.HAL_RCC_ClockConfig:000000000000011c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1223   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1230   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1244   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1249   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1256   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1282   .text.HAL_RCC_GetPCLK1Freq:0000000000000018 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1288   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1295   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1321   .text.HAL_RCC_GetPCLK2Freq:0000000000000018 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1327   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1334   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1461   .text.HAL_RCC_GetOscConfig:00000000000000bc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1466   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1473   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1510   .text.HAL_RCC_GetClockConfig:0000000000000030 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1515   .text.HAL_RCC_CSSCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1522   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1535   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1542   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1574   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s:1580   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccsljT11.s 			page 63


