ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f1xx_hal_adc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_ADCEx_Calibration_Start
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	HAL_ADCEx_Calibration_Start:
  25              	.LFB126:
  26              		.file 1 "Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c"
   1:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
   2:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @file    stm32f1xx_hal_adc_ex.c
   4:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @version V1.1.1
   6:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @date    12-May-2017
   7:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          peripheral:
  10:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *           + Operation functions
  11:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  12:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  13:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Multimode feature (available on devices with 2 ADCs or more)
  14:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Calibration (ADC automatic self-calibration)
  15:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *           + Control functions
  16:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  17:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  18:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          "stm32f1xx_hal_adc.c".
  19:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  20:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @verbatim
  21:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..] 
  22:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  23:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       available in file of generic functions "stm32f1xx_hal_adc.c".
  24:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..]
  25:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @endverbatim
  26:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
  27:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @attention
  28:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  29:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  30:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  31:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  32:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 2


  33:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  34:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  35:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  36:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  37:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  38:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  39:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  40:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *      without specific prior written permission.
  41:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  42:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  43:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  44:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  45:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  46:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  47:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  48:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  49:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  50:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  51:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  52:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  53:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************  
  54:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  55:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  56:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #include "stm32f1xx_hal.h"
  58:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  59:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @addtogroup STM32F1xx_HAL_Driver
  60:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  61:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  62:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  63:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  64:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief ADC Extension HAL module driver
  65:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  66:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  67:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  68:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  69:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  70:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  71:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  72:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  73:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  74:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  75:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  76:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
  77:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
  78:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
  79:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
  80:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       2U
  81:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  82:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
  83:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
  84:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
  85:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
  86:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
  87:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  88:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT          10U
  89:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 3


  90:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
  91:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
  92:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
  93:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
  94:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  95:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
  96:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
  97:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  98:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  99:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private functions ---------------------------------------------------------*/
 103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
 105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Extended IO operation functions
 109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *  @brief    Extended Extended Input and Output operation functions
 110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *
 111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim    
 112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       ##### IO operation functions #####
 114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
 117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
 118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
 119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
 120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
 121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
 122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
 124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
 128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
 140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the completion of this function.
 141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
 145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
  27              		.loc 1 145 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 4


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42              	.LVL1:
 146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
  43              		.loc 1 148 0
  44 0004 0023     		movs	r3, #0
  45 0006 0193     		str	r3, [sp, #4]
 149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  46              		.loc 1 154 0
  47 0008 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
  48 000c 012B     		cmp	r3, #1
  49 000e 68D0     		beq	.L10
  50 0010 0446     		mov	r4, r0
  51              		.loc 1 154 0 is_stmt 0 discriminator 2
  52 0012 0123     		movs	r3, #1
  53 0014 80F82430 		strb	r3, [r0, #36]
 155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* 1. Calibration prerequisite:                                             */
 157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    - ADC must be disabled for at least two ADC clock cycles in disable   */
 158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*      mode before ADC enable                                              */
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups       */
 160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
  54              		.loc 1 161 0 is_stmt 1 discriminator 2
  55 0018 FFF7FEFF 		bl	ADC_ConversionStop_Disable
  56              	.LVL2:
 162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  57              		.loc 1 164 0 discriminator 2
  58 001c 0546     		mov	r5, r0
  59 001e 28B1     		cbz	r0, .L12
  60              	.LVL3:
  61              	.L3:
 165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 5


 169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Hardware prerequisite: delay before starting the calibration.          */
 172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles.  */
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay */
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     wait_loop_index = ((SystemCoreClock
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        * ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES        );
 177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(wait_loop_index != 0U)
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       wait_loop_index--;
 181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 2. Enable the ADC peripheral */
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_Enable(hadc);
 185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
 188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
 193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Process unlocked */
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         return HAL_ERROR;
 205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
 211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
 216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Process unlocked */
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 6


 226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         return HAL_ERROR;
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
  62              		.loc 1 238 0
  63 0020 0023     		movs	r3, #0
  64 0022 84F82430 		strb	r3, [r4, #36]
  65              	.LVL4:
  66              	.L2:
 239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
  67              		.loc 1 242 0
  68 0026 2846     		mov	r0, r5
  69 0028 02B0     		add	sp, sp, #8
  70              	.LCFI2:
  71              		.cfi_remember_state
  72              		.cfi_def_cfa_offset 16
  73              		@ sp needed
  74 002a 70BD     		pop	{r4, r5, r6, pc}
  75              	.LVL5:
  76              	.L12:
  77              	.LCFI3:
  78              		.cfi_restore_state
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
  79              		.loc 1 167 0
  80 002c A36A     		ldr	r3, [r4, #40]
  81 002e 23F48853 		bic	r3, r3, #4352
  82 0032 23F00203 		bic	r3, r3, #2
  83 0036 43F00203 		orr	r3, r3, #2
  84 003a A362     		str	r3, [r4, #40]
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        * ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES        );
  85              		.loc 1 175 0
  86 003c 2A4B     		ldr	r3, .L15
  87 003e 1E68     		ldr	r6, [r3]
  88 0040 0220     		movs	r0, #2
  89              	.LVL6:
  90 0042 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
  91              	.LVL7:
  92 0046 B6FBF0F0 		udiv	r0, r6, r0
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  93              		.loc 1 176 0
  94 004a 4000     		lsls	r0, r0, #1
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
  95              		.loc 1 174 0
  96 004c 0190     		str	r0, [sp, #4]
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 7


  97              		.loc 1 178 0
  98 004e 02E0     		b	.L4
  99              	.L5:
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 100              		.loc 1 180 0
 101 0050 019B     		ldr	r3, [sp, #4]
 102 0052 013B     		subs	r3, r3, #1
 103 0054 0193     		str	r3, [sp, #4]
 104              	.L4:
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 105              		.loc 1 178 0
 106 0056 019B     		ldr	r3, [sp, #4]
 107 0058 002B     		cmp	r3, #0
 108 005a F9D1     		bne	.L5
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 109              		.loc 1 184 0
 110 005c 2046     		mov	r0, r4
 111 005e FFF7FEFF 		bl	ADC_Enable
 112              	.LVL8:
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 113              		.loc 1 187 0
 114 0062 2268     		ldr	r2, [r4]
 115 0064 9368     		ldr	r3, [r2, #8]
 116 0066 43F00803 		orr	r3, r3, #8
 117 006a 9360     		str	r3, [r2, #8]
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 118              		.loc 1 189 0
 119 006c FFF7FEFF 		bl	HAL_GetTick
 120              	.LVL9:
 121 0070 0646     		mov	r6, r0
 122              	.LVL10:
 123              	.L6:
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 124              		.loc 1 192 0
 125 0072 2368     		ldr	r3, [r4]
 126 0074 9A68     		ldr	r2, [r3, #8]
 127 0076 12F0080F 		tst	r2, #8
 128 007a 0FD0     		beq	.L13
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 129              		.loc 1 194 0
 130 007c FFF7FEFF 		bl	HAL_GetTick
 131              	.LVL11:
 132 0080 801B     		subs	r0, r0, r6
 133 0082 0A28     		cmp	r0, #10
 134 0084 F5D9     		bls	.L6
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 135              		.loc 1 197 0
 136 0086 A36A     		ldr	r3, [r4, #40]
 137 0088 23F01203 		bic	r3, r3, #18
 138 008c 43F01003 		orr	r3, r3, #16
 139 0090 A362     		str	r3, [r4, #40]
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 140              		.loc 1 202 0
 141 0092 0023     		movs	r3, #0
 142 0094 84F82430 		strb	r3, [r4, #36]
 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 143              		.loc 1 204 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 8


 144 0098 0125     		movs	r5, #1
 145 009a C4E7     		b	.L2
 146              	.L13:
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 147              		.loc 1 210 0
 148 009c 9A68     		ldr	r2, [r3, #8]
 149 009e 42F00402 		orr	r2, r2, #4
 150 00a2 9A60     		str	r2, [r3, #8]
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 151              		.loc 1 212 0
 152 00a4 FFF7FEFF 		bl	HAL_GetTick
 153              	.LVL12:
 154 00a8 0646     		mov	r6, r0
 155              	.LVL13:
 156              	.L8:
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 157              		.loc 1 215 0
 158 00aa 2368     		ldr	r3, [r4]
 159 00ac 9B68     		ldr	r3, [r3, #8]
 160 00ae 13F0040F 		tst	r3, #4
 161 00b2 0FD0     		beq	.L14
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 162              		.loc 1 217 0
 163 00b4 FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL14:
 165 00b8 801B     		subs	r0, r0, r6
 166 00ba 0A28     		cmp	r0, #10
 167 00bc F5D9     		bls	.L8
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 168              		.loc 1 220 0
 169 00be A36A     		ldr	r3, [r4, #40]
 170 00c0 23F01203 		bic	r3, r3, #18
 171 00c4 43F01003 		orr	r3, r3, #16
 172 00c8 A362     		str	r3, [r4, #40]
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 173              		.loc 1 225 0
 174 00ca 0023     		movs	r3, #0
 175 00cc 84F82430 		strb	r3, [r4, #36]
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 176              		.loc 1 227 0
 177 00d0 0125     		movs	r5, #1
 178 00d2 A8E7     		b	.L2
 179              	.L14:
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 180              		.loc 1 232 0
 181 00d4 A36A     		ldr	r3, [r4, #40]
 182 00d6 23F00303 		bic	r3, r3, #3
 183 00da 43F00103 		orr	r3, r3, #1
 184 00de A362     		str	r3, [r4, #40]
 185 00e0 9EE7     		b	.L3
 186              	.LVL15:
 187              	.L10:
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 188              		.loc 1 154 0
 189 00e2 0225     		movs	r5, #2
 190 00e4 9FE7     		b	.L2
 191              	.L16:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 9


 192 00e6 00BF     		.align	2
 193              	.L15:
 194 00e8 00000000 		.word	SystemCoreClock
 195              		.cfi_endproc
 196              	.LFE126:
 198              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_ADCEx_InjectedStart
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	HAL_ADCEx_InjectedStart:
 207              	.LFB127:
 243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
 247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 208              		.loc 1 251 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL16:
 252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 213              		.loc 1 258 0
 214 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 215 0004 012B     		cmp	r3, #1
 216 0006 54D0     		beq	.L26
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 217              		.loc 1 251 0 discriminator 2
 218 0008 10B5     		push	{r4, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 000a 0446     		mov	r4, r0
 224              		.loc 1 258 0 discriminator 2
 225 000c 0123     		movs	r3, #1
 226 000e 80F82430 		strb	r3, [r0, #36]
 259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 227              		.loc 1 261 0 discriminator 2
 228 0012 FFF7FEFF 		bl	ADC_Enable
 229              	.LVL17:
 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 10


 263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 230              		.loc 1 264 0 discriminator 2
 231 0016 0246     		mov	r2, r0
 232 0018 0028     		cmp	r0, #0
 233 001a 45D1     		bne	.L19
 265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 234              		.loc 1 269 0
 235 001c A36A     		ldr	r3, [r4, #40]
 236 001e 23F44053 		bic	r3, r3, #12288
 237 0022 23F00103 		bic	r3, r3, #1
 238 0026 43F48053 		orr	r3, r3, #4096
 239 002a A362     		str	r3, [r4, #40]
 270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
 274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 240              		.loc 1 275 0
 241 002c 2168     		ldr	r1, [r4]
 242 002e 224B     		ldr	r3, .L34
 243 0030 9942     		cmp	r1, r3
 244 0032 1FD0     		beq	.L31
 245              	.L20:
 276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 246              		.loc 1 277 0
 247 0034 A36A     		ldr	r3, [r4, #40]
 248 0036 23F48013 		bic	r3, r3, #1048576
 249 003a A362     		str	r3, [r4, #40]
 250              	.L22:
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 251              		.loc 1 288 0
 252 003c A36A     		ldr	r3, [r4, #40]
 253 003e 13F4807F 		tst	r3, #256
 254 0042 01D1     		bne	.L23
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 255              		.loc 1 291 0
 256 0044 0023     		movs	r3, #0
 257 0046 E362     		str	r3, [r4, #44]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 11


 258              	.L23:
 292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 259              		.loc 1 297 0
 260 0048 0023     		movs	r3, #0
 261 004a 84F82430 		strb	r3, [r4, #36]
 298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 262              		.loc 1 301 0
 263 004e 6FF00403 		mvn	r3, #4
 264 0052 0B60     		str	r3, [r1]
 302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
 304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of multimode enabled (for devices with several ADCs): if ADC is   */
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* slave, ADC is enabled only (conversion is not started). If ADC is      */
 311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* master, ADC is enabled and conversion is started.                      */
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 265              		.loc 1 312 0
 266 0054 2368     		ldr	r3, [r4]
 267 0056 5968     		ldr	r1, [r3, #4]
 268 0058 11F4806F 		tst	r1, #1024
 269 005c 27D1     		bne	.L18
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 270              		.loc 1 314 0
 271 005e 9968     		ldr	r1, [r3, #8]
 272 0060 01F4E041 		and	r1, r1, #28672
 273 0064 B1F5E04F 		cmp	r1, #28672
 274 0068 0FD0     		beq	.L32
 275              	.L24:
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 276              		.loc 1 323 0
 277 006a 9968     		ldr	r1, [r3, #8]
 278 006c 41F40041 		orr	r1, r1, #32768
 279 0070 9960     		str	r1, [r3, #8]
 280 0072 1CE0     		b	.L18
 281              	.L31:
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 12


 282              		.loc 1 275 0 discriminator 1
 283 0074 A3F58063 		sub	r3, r3, #1024
 284 0078 5B68     		ldr	r3, [r3, #4]
 285 007a 13F4702F 		tst	r3, #983040
 286 007e D9D0     		beq	.L20
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 287              		.loc 1 281 0
 288 0080 A36A     		ldr	r3, [r4, #40]
 289 0082 43F48013 		orr	r3, r3, #1048576
 290 0086 A362     		str	r3, [r4, #40]
 291 0088 D8E7     		b	.L22
 292              	.L32:
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 293              		.loc 1 314 0 discriminator 1
 294 008a 0B49     		ldr	r1, .L34
 295 008c 8B42     		cmp	r3, r1
 296 008e 04D0     		beq	.L33
 297              	.L25:
 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 298              		.loc 1 318 0
 299 0090 9968     		ldr	r1, [r3, #8]
 300 0092 41F40211 		orr	r1, r1, #2129920
 301 0096 9960     		str	r1, [r3, #8]
 302 0098 09E0     		b	.L18
 303              	.L33:
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 304              		.loc 1 315 0 discriminator 2
 305 009a A1F58061 		sub	r1, r1, #1024
 306 009e 4968     		ldr	r1, [r1, #4]
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 307              		.loc 1 314 0 discriminator 2
 308 00a0 11F4702F 		tst	r1, #983040
 309 00a4 E1D1     		bne	.L24
 310 00a6 F3E7     		b	.L25
 311              	.L19:
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 312              		.loc 1 330 0
 313 00a8 0023     		movs	r3, #0
 314 00aa 84F82430 		strb	r3, [r4, #36]
 315              	.L18:
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 316              		.loc 1 335 0
 317 00ae 1046     		mov	r0, r2
 318              	.LVL18:
 319 00b0 10BD     		pop	{r4, pc}
 320              	.LVL19:
 321              	.L26:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 13


 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 0
 324              		.cfi_restore 4
 325              		.cfi_restore 14
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 326              		.loc 1 258 0
 327 00b2 0222     		movs	r2, #2
 328              		.loc 1 335 0
 329 00b4 1046     		mov	r0, r2
 330              	.LVL20:
 331 00b6 7047     		bx	lr
 332              	.L35:
 333              		.align	2
 334              	.L34:
 335 00b8 00280140 		.word	1073817600
 336              		.cfi_endproc
 337              	.LFE127:
 339              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_ADCEx_InjectedStop
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	HAL_ADCEx_InjectedStop:
 348              	.LFB128:
 336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
 346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 349              		.loc 1 350 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL21:
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 354              		.loc 1 357 0
 355 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 356 0004 012B     		cmp	r3, #1
 357 0006 25D0     		beq	.L40
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 14


 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 358              		.loc 1 350 0 discriminator 2
 359 0008 10B5     		push	{r4, lr}
 360              	.LCFI6:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364 000a 0446     		mov	r4, r0
 365              		.loc 1 357 0 discriminator 2
 366 000c 0123     		movs	r3, #1
 367 000e 80F82430 		strb	r3, [r0, #36]
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 368              		.loc 1 365 0 discriminator 2
 369 0012 836A     		ldr	r3, [r0, #40]
 370 0014 13F4807F 		tst	r3, #256
 371 0018 04D1     		bne	.L38
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 372              		.loc 1 366 0 discriminator 1
 373 001a 0368     		ldr	r3, [r0]
 374 001c 5B68     		ldr	r3, [r3, #4]
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 375              		.loc 1 365 0 discriminator 1
 376 001e 13F4806F 		tst	r3, #1024
 377 0022 09D0     		beq	.L45
 378              	.L38:
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 379              		.loc 1 384 0
 380 0024 A36A     		ldr	r3, [r4, #40]
 381 0026 43F02003 		orr	r3, r3, #32
 382 002a A362     		str	r3, [r4, #40]
 383              	.LVL22:
 385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 15


 384              		.loc 1 386 0
 385 002c 0123     		movs	r3, #1
 386              	.LVL23:
 387              	.L39:
 387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 388              		.loc 1 390 0
 389 002e 0022     		movs	r2, #0
 390 0030 84F82420 		strb	r2, [r4, #36]
 391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 391              		.loc 1 394 0
 392 0034 1846     		mov	r0, r3
 393 0036 10BD     		pop	{r4, pc}
 394              	.LVL24:
 395              	.L45:
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 396              		.loc 1 370 0
 397 0038 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 398              	.LVL25:
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 399              		.loc 1 373 0
 400 003c 0346     		mov	r3, r0
 401 003e 0028     		cmp	r0, #0
 402 0040 F5D1     		bne	.L39
 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 403              		.loc 1 376 0
 404 0042 A26A     		ldr	r2, [r4, #40]
 405 0044 22F48852 		bic	r2, r2, #4352
 406 0048 22F00102 		bic	r2, r2, #1
 407 004c 42F00102 		orr	r2, r2, #1
 408 0050 A262     		str	r2, [r4, #40]
 409 0052 ECE7     		b	.L39
 410              	.LVL26:
 411              	.L40:
 412              	.LCFI7:
 413              		.cfi_def_cfa_offset 0
 414              		.cfi_restore 4
 415              		.cfi_restore 14
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 416              		.loc 1 357 0
 417 0054 0223     		movs	r3, #2
 418              		.loc 1 394 0
 419 0056 1846     		mov	r0, r3
 420              	.LVL27:
 421 0058 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE128:
 425              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 426              		.align	1
 427              		.global	HAL_ADCEx_InjectedPollForConversion
 428              		.syntax unified
 429              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 16


 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	HAL_ADCEx_InjectedPollForConversion:
 434              	.LFB129:
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
 400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 435              		.loc 1 403 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL28:
 440 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 441              	.LCFI8:
 442              		.cfi_def_cfa_offset 20
 443              		.cfi_offset 4, -20
 444              		.cfi_offset 5, -16
 445              		.cfi_offset 6, -12
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 83B0     		sub	sp, sp, #12
 449              	.LCFI9:
 450              		.cfi_def_cfa_offset 32
 451 0004 0546     		mov	r5, r0
 452 0006 0C46     		mov	r4, r1
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
 453              		.loc 1 408 0
 454 0008 0023     		movs	r3, #0
 455 000a 0193     		str	r3, [sp, #4]
 456              	.LVL29:
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get timeout */
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 457              		.loc 1 415 0
 458 000c FFF7FEFF 		bl	HAL_GetTick
 459              	.LVL30:
 460 0010 0646     		mov	r6, r0
 461              	.LVL31:
 416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 17


 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
 422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1), flag JEOC is used to determine the      */
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
 425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2), flag JEOC is set only at the end of the */
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    sequence.                                                             */
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
 432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    be set.                                                               */
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
 462              		.loc 1 433 0
 463 0012 2B68     		ldr	r3, [r5]
 464 0014 9B6B     		ldr	r3, [r3, #56]
 465 0016 13F4401F 		tst	r3, #3145728
 466 001a 16D1     		bne	.L73
 467              	.LVL32:
 468              	.L49:
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 469              		.loc 1 436 0
 470 001c 2B68     		ldr	r3, [r5]
 471 001e 1B68     		ldr	r3, [r3]
 472 0020 13F0040F 		tst	r3, #4
 473 0024 63D1     		bne	.L53
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 474              		.loc 1 439 0
 475 0026 B4F1FF3F 		cmp	r4, #-1
 476 002a F7D0     		beq	.L49
 440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 477              		.loc 1 441 0
 478 002c 24B1     		cbz	r4, .L50
 479              		.loc 1 441 0 is_stmt 0 discriminator 1
 480 002e FFF7FEFF 		bl	HAL_GetTick
 481              	.LVL33:
 482 0032 801B     		subs	r0, r0, r6
 483 0034 A042     		cmp	r0, r4
 484 0036 F1D9     		bls	.L49
 485              	.L50:
 442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 486              		.loc 1 444 0 is_stmt 1
 487 0038 AB6A     		ldr	r3, [r5, #40]
 488 003a 43F00403 		orr	r3, r3, #4
 489 003e AB62     		str	r3, [r5, #40]
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 490              		.loc 1 447 0
 491 0040 0023     		movs	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 18


 492 0042 85F82430 		strb	r3, [r5, #36]
 448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 493              		.loc 1 449 0
 494 0046 0320     		movs	r0, #3
 495 0048 7DE0     		b	.L51
 496              	.LVL34:
 497              	.L73:
 450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 498              		.loc 1 461 0
 499 004a 424B     		ldr	r3, .L75
 500 004c 1F68     		ldr	r7, [r3]
 501 004e 0220     		movs	r0, #2
 502              	.LVL35:
 503 0050 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 504              	.LVL36:
 505 0054 B7FBF0F0 		udiv	r0, r7, r0
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 506              		.loc 1 462 0
 507 0058 2B68     		ldr	r3, [r5]
 508 005a 1969     		ldr	r1, [r3, #16]
 509 005c 3E4A     		ldr	r2, .L75+4
 510 005e 1142     		tst	r1, r2
 511 0060 0ED1     		bne	.L54
 512              		.loc 1 462 0 is_stmt 0 discriminator 1
 513 0062 D968     		ldr	r1, [r3, #12]
 514 0064 02F15C42 		add	r2, r2, #-603979776
 515 0068 1142     		tst	r1, r2
 516 006a 09D1     		bne	.L54
 517              		.loc 1 462 0 discriminator 3
 518 006c 1969     		ldr	r1, [r3, #16]
 519 006e 3B4A     		ldr	r2, .L75+8
 520 0070 1142     		tst	r1, r2
 521 0072 18D1     		bne	.L62
 522              		.loc 1 462 0 discriminator 5
 523 0074 DA68     		ldr	r2, [r3, #12]
 524 0076 3A4B     		ldr	r3, .L75+12
 525 0078 1A42     		tst	r2, r3
 526 007a 16D0     		beq	.L63
 527              		.loc 1 462 0
 528 007c 2927     		movs	r7, #41
 529 007e 19E0     		b	.L55
 530              	.L54:
 531              		.loc 1 462 0 discriminator 4
 532 0080 1969     		ldr	r1, [r3, #16]
 533 0082 364A     		ldr	r2, .L75+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 19


 534 0084 1142     		tst	r1, r2
 535 0086 04D1     		bne	.L56
 536              		.loc 1 462 0 discriminator 11
 537 0088 D968     		ldr	r1, [r3, #12]
 538 008a 02F16E42 		add	r2, r2, #-301989888
 539 008e 1142     		tst	r1, r2
 540 0090 0DD0     		beq	.L64
 541              	.L56:
 542              		.loc 1 462 0 discriminator 14
 543 0092 1969     		ldr	r1, [r3, #16]
 544 0094 334A     		ldr	r2, .L75+16
 545 0096 0A40     		ands	r2, r2, r1
 546 0098 5AB9     		cbnz	r2, .L65
 547              		.loc 1 462 0 discriminator 15
 548 009a DA68     		ldr	r2, [r3, #12]
 549 009c 314B     		ldr	r3, .L75+16
 550 009e 1340     		ands	r3, r3, r2
 551 00a0 5BB1     		cbz	r3, .L66
 552              		.loc 1 462 0
 553 00a2 FC27     		movs	r7, #252
 554 00a4 06E0     		b	.L55
 555              	.L62:
 556 00a6 2927     		movs	r7, #41
 557 00a8 04E0     		b	.L55
 558              	.L63:
 559 00aa 1427     		movs	r7, #20
 560 00ac 02E0     		b	.L55
 561              	.L64:
 562 00ae 5427     		movs	r7, #84
 563 00b0 00E0     		b	.L55
 564              	.L65:
 565 00b2 FC27     		movs	r7, #252
 566              	.L55:
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 567              		.loc 1 460 0 is_stmt 1
 568 00b4 07FB00F7 		mul	r7, r7, r0
 569              	.LVL37:
 463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 570              		.loc 1 464 0
 571 00b8 04E0     		b	.L57
 572              	.LVL38:
 573              	.L66:
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 574              		.loc 1 462 0
 575 00ba 5427     		movs	r7, #84
 576 00bc FAE7     		b	.L55
 577              	.LVL39:
 578              	.L58:
 465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 20


 473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
 579              		.loc 1 480 0
 580 00be 019B     		ldr	r3, [sp, #4]
 581 00c0 0133     		adds	r3, r3, #1
 582 00c2 0193     		str	r3, [sp, #4]
 583              	.L57:
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 584              		.loc 1 464 0
 585 00c4 019B     		ldr	r3, [sp, #4]
 586 00c6 BB42     		cmp	r3, r7
 587 00c8 11D2     		bcs	.L53
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 588              		.loc 1 467 0
 589 00ca B4F1FF3F 		cmp	r4, #-1
 590 00ce F6D0     		beq	.L58
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 591              		.loc 1 469 0
 592 00d0 24B1     		cbz	r4, .L59
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 593              		.loc 1 469 0 is_stmt 0 discriminator 1
 594 00d2 FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL40:
 596 00d6 801B     		subs	r0, r0, r6
 597 00d8 A042     		cmp	r0, r4
 598 00da F0D9     		bls	.L58
 599              	.L59:
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 600              		.loc 1 472 0 is_stmt 1
 601 00dc AB6A     		ldr	r3, [r5, #40]
 602 00de 43F00403 		orr	r3, r3, #4
 603 00e2 AB62     		str	r3, [r5, #40]
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           
 604              		.loc 1 475 0
 605 00e4 0023     		movs	r3, #0
 606 00e6 85F82430 		strb	r3, [r5, #36]
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 607              		.loc 1 477 0
 608 00ea 0320     		movs	r0, #3
 609 00ec 2BE0     		b	.L51
 610              	.LVL41:
 611              	.L53:
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Clear injected group conversion flag */
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: On STM32F1 ADC, clear regular conversion flag raised               */
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* simultaneously.                                                          */
 487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
 612              		.loc 1 487 0
 613 00ee 2B68     		ldr	r3, [r5]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 21


 614 00f0 6FF00E02 		mvn	r2, #14
 615 00f4 1A60     		str	r2, [r3]
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Update ADC state machine */
 490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 616              		.loc 1 490 0
 617 00f6 AB6A     		ldr	r3, [r5, #40]
 618 00f8 43F40053 		orr	r3, r3, #8192
 619 00fc AB62     		str	r3, [r5, #40]
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
 620              		.loc 1 495 0
 621 00fe 2A68     		ldr	r2, [r5]
 622 0100 9368     		ldr	r3, [r2, #8]
 623 0102 03F4E043 		and	r3, r3, #28672
 624 0106 B3F5E04F 		cmp	r3, #28672
 625 010a 0DD0     		beq	.L61
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 626              		.loc 1 496 0 discriminator 1
 627 010c 5368     		ldr	r3, [r2, #4]
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 628              		.loc 1 495 0 discriminator 1
 629 010e 13F4806F 		tst	r3, #1024
 630 0112 17D1     		bne	.L67
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 631              		.loc 1 497 0
 632 0114 9368     		ldr	r3, [r2, #8]
 633 0116 03F46023 		and	r3, r3, #917504
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 634              		.loc 1 496 0
 635 011a B3F5602F 		cmp	r3, #917504
 636 011e 01D0     		beq	.L74
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC state */
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return HAL_OK;
 637              		.loc 1 510 0
 638 0120 0020     		movs	r0, #0
 639 0122 10E0     		b	.L51
 640              	.L74:
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 641              		.loc 1 498 0
 642 0124 EB68     		ldr	r3, [r5, #12]
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 643              		.loc 1 497 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 22


 644 0126 83B9     		cbnz	r3, .L69
 645              	.L61:
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 646              		.loc 1 501 0
 647 0128 AB6A     		ldr	r3, [r5, #40]
 648 012a 23F48053 		bic	r3, r3, #4096
 649 012e AB62     		str	r3, [r5, #40]
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 650              		.loc 1 503 0
 651 0130 AB6A     		ldr	r3, [r5, #40]
 652 0132 13F4807F 		tst	r3, #256
 653 0136 0AD1     		bne	.L70
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 654              		.loc 1 505 0
 655 0138 AB6A     		ldr	r3, [r5, #40]
 656 013a 43F00103 		orr	r3, r3, #1
 657 013e AB62     		str	r3, [r5, #40]
 658              		.loc 1 510 0
 659 0140 0020     		movs	r0, #0
 660 0142 00E0     		b	.L51
 661              	.L67:
 662 0144 0020     		movs	r0, #0
 663              	.L51:
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 664              		.loc 1 511 0
 665 0146 03B0     		add	sp, sp, #12
 666              	.LCFI10:
 667              		.cfi_remember_state
 668              		.cfi_def_cfa_offset 20
 669              		@ sp needed
 670 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 671              	.LVL42:
 672              	.L69:
 673              	.LCFI11:
 674              		.cfi_restore_state
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 675              		.loc 1 510 0
 676 014a 0020     		movs	r0, #0
 677 014c FBE7     		b	.L51
 678              	.L70:
 679 014e 0020     		movs	r0, #0
 680 0150 F9E7     		b	.L51
 681              	.L76:
 682 0152 00BF     		.align	2
 683              	.L75:
 684 0154 00000000 		.word	SystemCoreClock
 685 0158 24499224 		.word	613566756
 686 015c 92244912 		.word	306783378
 687 0160 92244900 		.word	4793490
 688 0164 49922400 		.word	2396745
 689              		.cfi_endproc
 690              	.LFE129:
 692              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 693              		.align	1
 694              		.global	HAL_ADCEx_InjectedStart_IT
 695              		.syntax unified
 696              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 23


 697              		.thumb_func
 698              		.fpu fpv4-sp-d16
 700              	HAL_ADCEx_InjectedStart_IT:
 701              	.LFB130:
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
 515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
 516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status.
 519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 702              		.loc 1 521 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              	.LVL43:
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 707              		.loc 1 528 0
 708 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 709 0004 012B     		cmp	r3, #1
 710 0006 59D0     		beq	.L86
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 711              		.loc 1 521 0 discriminator 2
 712 0008 10B5     		push	{r4, lr}
 713              	.LCFI12:
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 4, -8
 716              		.cfi_offset 14, -4
 717 000a 0446     		mov	r4, r0
 718              		.loc 1 528 0 discriminator 2
 719 000c 0123     		movs	r3, #1
 720 000e 80F82430 		strb	r3, [r0, #36]
 529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 721              		.loc 1 531 0 discriminator 2
 722 0012 FFF7FEFF 		bl	ADC_Enable
 723              	.LVL44:
 532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 724              		.loc 1 534 0 discriminator 2
 725 0016 0246     		mov	r2, r0
 726 0018 0028     		cmp	r0, #0
 727 001a 4AD1     		bne	.L79
 535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 24


 538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 728              		.loc 1 539 0
 729 001c A36A     		ldr	r3, [r4, #40]
 730 001e 23F44053 		bic	r3, r3, #12288
 731 0022 23F00103 		bic	r3, r3, #1
 732 0026 43F48053 		orr	r3, r3, #4096
 733 002a A362     		str	r3, [r4, #40]
 540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
 544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 734              		.loc 1 545 0
 735 002c 2168     		ldr	r1, [r4]
 736 002e 254B     		ldr	r3, .L94
 737 0030 9942     		cmp	r1, r3
 738 0032 24D0     		beq	.L91
 739              	.L80:
 546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 740              		.loc 1 547 0
 741 0034 A36A     		ldr	r3, [r4, #40]
 742 0036 23F48013 		bic	r3, r3, #1048576
 743 003a A362     		str	r3, [r4, #40]
 744              	.L82:
 548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 745              		.loc 1 558 0
 746 003c A36A     		ldr	r3, [r4, #40]
 747 003e 13F4807F 		tst	r3, #256
 748 0042 01D1     		bne	.L83
 559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 749              		.loc 1 561 0
 750 0044 0023     		movs	r3, #0
 751 0046 E362     		str	r3, [r4, #44]
 752              	.L83:
 562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 753              		.loc 1 567 0
 754 0048 0023     		movs	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 25


 755 004a 84F82430 		strb	r3, [r4, #36]
 568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 756              		.loc 1 571 0
 757 004e 6FF00403 		mvn	r3, #4
 758 0052 0B60     		str	r3, [r1]
 572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
 574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 759              		.loc 1 574 0
 760 0054 2168     		ldr	r1, [r4]
 761 0056 4B68     		ldr	r3, [r1, #4]
 762 0058 43F08003 		orr	r3, r3, #128
 763 005c 4B60     		str	r3, [r1, #4]
 575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of injected group if software start has been selected */
 577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* and if automatic injected conversion is disabled.                      */
 578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 764              		.loc 1 582 0
 765 005e 2368     		ldr	r3, [r4]
 766 0060 5968     		ldr	r1, [r3, #4]
 767 0062 11F4806F 		tst	r1, #1024
 768 0066 27D1     		bne	.L78
 583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 769              		.loc 1 584 0
 770 0068 9968     		ldr	r1, [r3, #8]
 771 006a 01F4E041 		and	r1, r1, #28672
 772 006e B1F5E04F 		cmp	r1, #28672
 773 0072 0FD0     		beq	.L92
 774              	.L84:
 585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 775              		.loc 1 593 0
 776 0074 9968     		ldr	r1, [r3, #8]
 777 0076 41F40041 		orr	r1, r1, #32768
 778 007a 9960     		str	r1, [r3, #8]
 779 007c 1CE0     		b	.L78
 780              	.L91:
 545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 781              		.loc 1 545 0 discriminator 1
 782 007e A3F58063 		sub	r3, r3, #1024
 783 0082 5B68     		ldr	r3, [r3, #4]
 784 0084 13F4702F 		tst	r3, #983040
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 26


 785 0088 D4D0     		beq	.L80
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 786              		.loc 1 551 0
 787 008a A36A     		ldr	r3, [r4, #40]
 788 008c 43F48013 		orr	r3, r3, #1048576
 789 0090 A362     		str	r3, [r4, #40]
 790 0092 D3E7     		b	.L82
 791              	.L92:
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 792              		.loc 1 584 0 discriminator 1
 793 0094 0B49     		ldr	r1, .L94
 794 0096 8B42     		cmp	r3, r1
 795 0098 04D0     		beq	.L93
 796              	.L85:
 588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 797              		.loc 1 588 0
 798 009a 9968     		ldr	r1, [r3, #8]
 799 009c 41F40211 		orr	r1, r1, #2129920
 800 00a0 9960     		str	r1, [r3, #8]
 801 00a2 09E0     		b	.L78
 802              	.L93:
 585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 803              		.loc 1 585 0 discriminator 2
 804 00a4 A1F58061 		sub	r1, r1, #1024
 805 00a8 4968     		ldr	r1, [r1, #4]
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 806              		.loc 1 584 0 discriminator 2
 807 00aa 11F4702F 		tst	r1, #983040
 808 00ae E1D1     		bne	.L84
 809 00b0 F3E7     		b	.L85
 810              	.L79:
 594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 811              		.loc 1 600 0
 812 00b2 0023     		movs	r3, #0
 813 00b4 84F82430 		strb	r3, [r4, #36]
 814              	.L78:
 601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 815              		.loc 1 605 0
 816 00b8 1046     		mov	r0, r2
 817              	.LVL45:
 818 00ba 10BD     		pop	{r4, pc}
 819              	.LVL46:
 820              	.L86:
 821              	.LCFI13:
 822              		.cfi_def_cfa_offset 0
 823              		.cfi_restore 4
 824              		.cfi_restore 14
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 27


 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 825              		.loc 1 528 0
 826 00bc 0222     		movs	r2, #2
 827              		.loc 1 605 0
 828 00be 1046     		mov	r0, r2
 829              	.LVL47:
 830 00c0 7047     		bx	lr
 831              	.L95:
 832 00c2 00BF     		.align	2
 833              	.L94:
 834 00c4 00280140 		.word	1073817600
 835              		.cfi_endproc
 836              	.LFE130:
 838              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_ADCEx_InjectedStop_IT
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu fpv4-sp-d16
 846              	HAL_ADCEx_InjectedStop_IT:
 847              	.LFB131:
 606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
 609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         is on going.
 611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 848              		.loc 1 620 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              	.LVL48:
 621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 853              		.loc 1 627 0
 854 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 855 0004 012B     		cmp	r3, #1
 856 0006 2AD0     		beq	.L100
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 857              		.loc 1 620 0 discriminator 2
 858 0008 10B5     		push	{r4, lr}
 859              	.LCFI14:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 28


 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 863 000a 0446     		mov	r4, r0
 864              		.loc 1 627 0 discriminator 2
 865 000c 0123     		movs	r3, #1
 866 000e 80F82430 		strb	r3, [r0, #36]
 628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
 635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 867              		.loc 1 635 0 discriminator 2
 868 0012 836A     		ldr	r3, [r0, #40]
 869 0014 13F4807F 		tst	r3, #256
 870 0018 04D1     		bne	.L98
 636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 871              		.loc 1 636 0 discriminator 1
 872 001a 0368     		ldr	r3, [r0]
 873 001c 5B68     		ldr	r3, [r3, #4]
 635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 874              		.loc 1 635 0 discriminator 1
 875 001e 13F4806F 		tst	r3, #1024
 876 0022 09D0     		beq	.L105
 877              	.L98:
 637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 878              		.loc 1 657 0
 879 0024 A36A     		ldr	r3, [r4, #40]
 880 0026 43F02003 		orr	r3, r3, #32
 881 002a A362     		str	r3, [r4, #40]
 882              	.LVL49:
 658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 883              		.loc 1 659 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 29


 884 002c 0123     		movs	r3, #1
 885              	.LVL50:
 886              	.L99:
 660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 887              		.loc 1 663 0
 888 002e 0022     		movs	r2, #0
 889 0030 84F82420 		strb	r2, [r4, #36]
 664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 890              		.loc 1 667 0
 891 0034 1846     		mov	r0, r3
 892 0036 10BD     		pop	{r4, pc}
 893              	.LVL51:
 894              	.L105:
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 895              		.loc 1 640 0
 896 0038 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 897              	.LVL52:
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 898              		.loc 1 643 0
 899 003c 0346     		mov	r3, r0
 900 003e 0028     		cmp	r0, #0
 901 0040 F5D1     		bne	.L99
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 902              		.loc 1 646 0
 903 0042 2168     		ldr	r1, [r4]
 904 0044 4A68     		ldr	r2, [r1, #4]
 905 0046 22F08002 		bic	r2, r2, #128
 906 004a 4A60     		str	r2, [r1, #4]
 649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 907              		.loc 1 649 0
 908 004c A26A     		ldr	r2, [r4, #40]
 909 004e 22F48852 		bic	r2, r2, #4352
 910 0052 22F00102 		bic	r2, r2, #1
 911 0056 42F00102 		orr	r2, r2, #1
 912 005a A262     		str	r2, [r4, #40]
 913 005c E7E7     		b	.L99
 914              	.LVL53:
 915              	.L100:
 916              	.LCFI15:
 917              		.cfi_def_cfa_offset 0
 918              		.cfi_restore 4
 919              		.cfi_restore 14
 627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 920              		.loc 1 627 0
 921 005e 0223     		movs	r3, #2
 922              		.loc 1 667 0
 923 0060 1846     		mov	r0, r3
 924              	.LVL54:
 925 0062 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE131:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 30


 929              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 930              		.align	1
 931              		.global	HAL_ADCEx_MultiModeStart_DMA
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv4-sp-d16
 937              	HAL_ADCEx_MultiModeStart_DMA:
 938              	.LFB132:
 668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (AT32F403Rx_HD) || defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105
 670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         through DMA.
 673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA transfer complete
 677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA half transfer
 678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  On STM32F1 devices, ADC slave regular group must be configured 
 680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         with conversion trigger ADC_SOFTWARE_START.
 681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  ADC slave can be enabled preliminarily using single-mode  
 682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
 683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
 689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 939              		.loc 1 689 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 48
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL55:
 944 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 945              	.LCFI16:
 946              		.cfi_def_cfa_offset 20
 947              		.cfi_offset 4, -20
 948              		.cfi_offset 5, -16
 949              		.cfi_offset 6, -12
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 8DB0     		sub	sp, sp, #52
 953              	.LCFI17:
 954              		.cfi_def_cfa_offset 72
 955              	.LVL56:
 690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 31


 956              		.loc 1 698 0
 957 0004 90F82440 		ldrb	r4, [r0, #36]	@ zero_extendqisi2
 958 0008 012C     		cmp	r4, #1
 959 000a 67D0     		beq	.L113
 960              		.loc 1 698 0 is_stmt 0 discriminator 2
 961 000c 0124     		movs	r4, #1
 962 000e 80F82440 		strb	r4, [r0, #36]
 699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
 701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 963              		.loc 1 701 0 is_stmt 1 discriminator 2
 964 0012 334C     		ldr	r4, .L117
 965 0014 0094     		str	r4, [sp]
 702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC slave regular group must be configured with      */
 704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion trigger ADC_SOFTWARE_START.                                   */
 705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: External trigger of ADC slave must be enabled, it is already done  */
 706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       into function "HAL_ADC_Init()".                                    */
 707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(!ADC_IS_SOFTWARE_START_REGULAR(&tmphadcSlave))  
 966              		.loc 1 707 0 discriminator 2
 967 0016 A468     		ldr	r4, [r4, #8]
 968 0018 04F46024 		and	r4, r4, #917504
 969 001c B4F5602F 		cmp	r4, #917504
 970 0020 0AD0     		beq	.L108
 708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 971              		.loc 1 710 0
 972 0022 836A     		ldr	r3, [r0, #40]
 973 0024 43F02003 		orr	r3, r3, #32
 974 0028 8362     		str	r3, [r0, #40]
 711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 975              		.loc 1 713 0
 976 002a 0023     		movs	r3, #0
 977 002c 80F82430 		strb	r3, [r0, #36]
 714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     return HAL_ERROR;
 978              		.loc 1 715 0
 979 0030 0124     		movs	r4, #1
 980              	.LVL57:
 981              	.L107:
 716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripherals: master and slave (in case if not already     */
 719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* enabled previously)                                                      */
 720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(&tmphadcSlave);
 724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if all ADCs of multimode are effectively enabled */
 727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state (ADC master)                                             */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 32


 730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
 731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
 732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_MULTIMODE_SLAVE,
 734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
 737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
 738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****        
 755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA error callback */
 759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
 764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
 766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable ADC DMA mode of ADC master */
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start the DMA channel */
 773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of regular group if software start has been selected. */
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
 780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
 781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 33


 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 982              		.loc 1 799 0
 983 0032 2046     		mov	r0, r4
 984 0034 0DB0     		add	sp, sp, #52
 985              	.LCFI18:
 986              		.cfi_remember_state
 987              		.cfi_def_cfa_offset 20
 988              		@ sp needed
 989 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 990              	.LVL58:
 991              	.L108:
 992              	.LCFI19:
 993              		.cfi_restore_state
 994 0038 1746     		mov	r7, r2
 995 003a 0E46     		mov	r6, r1
 996 003c 0546     		mov	r5, r0
 720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 997              		.loc 1 720 0
 998 003e FFF7FEFF 		bl	ADC_Enable
 999              	.LVL59:
 721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 1000              		.loc 1 721 0
 1001 0042 0446     		mov	r4, r0
 1002 0044 0028     		cmp	r0, #0
 1003 0046 3BD0     		beq	.L115
 1004              	.LVL60:
 1005              	.L109:
 727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 1006              		.loc 1 727 0
 1007 0048 002C     		cmp	r4, #0
 1008 004a 43D1     		bne	.L110
 732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_MULTIMODE_SLAVE,
 1009              		.loc 1 732 0
 1010 004c AA6A     		ldr	r2, [r5, #40]
 1011 004e 254B     		ldr	r3, .L117+4
 1012 0050 1340     		ands	r3, r3, r2
 1013 0052 43F48073 		orr	r3, r3, #256
 1014 0056 AB62     		str	r3, [r5, #40]
 738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1015              		.loc 1 738 0
 1016 0058 2B68     		ldr	r3, [r5]
 1017 005a 5B68     		ldr	r3, [r3, #4]
 1018 005c 13F4806F 		tst	r3, #1024
 1019 0060 05D0     		beq	.L111
 740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 34


 1020              		.loc 1 740 0
 1021 0062 AB6A     		ldr	r3, [r5, #40]
 1022 0064 23F44053 		bic	r3, r3, #12288
 1023 0068 43F48053 		orr	r3, r3, #4096
 1024 006c AB62     		str	r3, [r5, #40]
 1025              	.L111:
 746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1026              		.loc 1 746 0
 1027 006e 0023     		movs	r3, #0
 1028 0070 85F82430 		strb	r3, [r5, #36]
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1029              		.loc 1 749 0
 1030 0074 EB62     		str	r3, [r5, #44]
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****        
 1031              		.loc 1 753 0
 1032 0076 2B6A     		ldr	r3, [r5, #32]
 1033 0078 1B4A     		ldr	r2, .L117+8
 1034 007a 9A62     		str	r2, [r3, #40]
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1035              		.loc 1 756 0
 1036 007c 2B6A     		ldr	r3, [r5, #32]
 1037 007e 1B4A     		ldr	r2, .L117+12
 1038 0080 DA62     		str	r2, [r3, #44]
 759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1039              		.loc 1 759 0
 1040 0082 2B6A     		ldr	r3, [r5, #32]
 1041 0084 1A4A     		ldr	r2, .L117+16
 1042 0086 1A63     		str	r2, [r3, #48]
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1043              		.loc 1 767 0
 1044 0088 2B68     		ldr	r3, [r5]
 1045 008a 6FF00202 		mvn	r2, #2
 1046 008e 1A60     		str	r2, [r3]
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1047              		.loc 1 770 0
 1048 0090 2A68     		ldr	r2, [r5]
 1049 0092 9368     		ldr	r3, [r2, #8]
 1050 0094 43F48073 		orr	r3, r3, #256
 1051 0098 9360     		str	r3, [r2, #8]
 773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1052              		.loc 1 773 0
 1053 009a 2968     		ldr	r1, [r5]
 1054 009c 3B46     		mov	r3, r7
 1055 009e 3246     		mov	r2, r6
 1056 00a0 4C31     		adds	r1, r1, #76
 1057 00a2 286A     		ldr	r0, [r5, #32]
 1058 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1059              	.LVL61:
 780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1060              		.loc 1 780 0
 1061 00a8 2A68     		ldr	r2, [r5]
 1062 00aa 9368     		ldr	r3, [r2, #8]
 1063 00ac 03F46023 		and	r3, r3, #917504
 1064 00b0 B3F5602F 		cmp	r3, #917504
 1065 00b4 09D0     		beq	.L116
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 1066              		.loc 1 788 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 35


 1067 00b6 9368     		ldr	r3, [r2, #8]
 1068 00b8 43F48013 		orr	r3, r3, #1048576
 1069 00bc 9360     		str	r3, [r2, #8]
 1070 00be B8E7     		b	.L107
 1071              	.LVL62:
 1072              	.L115:
 723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 1073              		.loc 1 723 0
 1074 00c0 6846     		mov	r0, sp
 1075              	.LVL63:
 1076 00c2 FFF7FEFF 		bl	ADC_Enable
 1077              	.LVL64:
 1078 00c6 0446     		mov	r4, r0
 1079              	.LVL65:
 1080 00c8 BEE7     		b	.L109
 1081              	.L116:
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 1082              		.loc 1 783 0
 1083 00ca 9368     		ldr	r3, [r2, #8]
 1084 00cc 43F4A003 		orr	r3, r3, #5242880
 1085 00d0 9360     		str	r3, [r2, #8]
 1086 00d2 AEE7     		b	.L107
 1087              	.L110:
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 1088              		.loc 1 794 0
 1089 00d4 0023     		movs	r3, #0
 1090 00d6 85F82430 		strb	r3, [r5, #36]
 1091 00da AAE7     		b	.L107
 1092              	.LVL66:
 1093              	.L113:
 698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1094              		.loc 1 698 0
 1095 00dc 0224     		movs	r4, #2
 1096 00de A8E7     		b	.L107
 1097              	.L118:
 1098              		.align	2
 1099              	.L117:
 1100 00e0 00280140 		.word	1073817600
 1101 00e4 FEFCEFFF 		.word	-1049346
 1102 00e8 00000000 		.word	ADC_DMAConvCplt
 1103 00ec 00000000 		.word	ADC_DMAHalfConvCplt
 1104 00f0 00000000 		.word	ADC_DMAError
 1105              		.cfi_endproc
 1106              	.LFE132:
 1108              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1109              		.align	1
 1110              		.global	HAL_ADCEx_MultiModeStop_DMA
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv4-sp-d16
 1116              	HAL_ADCEx_MultiModeStop_DMA:
 1117              	.LFB133:
 800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 36


 804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC peripheral.
 805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode 
 806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel(), ADC must be 
 807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
 808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
 809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
 810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1118              		.loc 1 815 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 48
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              	.LVL67:
 816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1123              		.loc 1 823 0
 1124 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1125 0004 012B     		cmp	r3, #1
 1126 0006 36D0     		beq	.L123
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1127              		.loc 1 815 0 discriminator 2
 1128 0008 10B5     		push	{r4, lr}
 1129              	.LCFI20:
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133 000a 8CB0     		sub	sp, sp, #48
 1134              	.LCFI21:
 1135              		.cfi_def_cfa_offset 56
 1136 000c 0446     		mov	r4, r0
 1137              		.loc 1 823 0 discriminator 2
 1138 000e 0123     		movs	r3, #1
 1139 0010 80F82430 		strb	r3, [r0, #36]
 824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  
 826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Disable ADC master peripheral */
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 1140              		.loc 1 828 0 discriminator 2
 1141 0014 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1142              	.LVL68:
 829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(tmp_hal_status == HAL_OK)
 1143              		.loc 1 831 0 discriminator 2
 1144 0018 0346     		mov	r3, r0
 1145 001a 28B1     		cbz	r0, .L128
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 37


 1146              	.LVL69:
 1147              	.L121:
 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC slave peripheral */
 837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(&tmphadcSlave);
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if(tmp_hal_status != HAL_OK)
 841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Process unlocked */
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       return HAL_ERROR;
 849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Reset configuration of ADC DMA continuous request for dual mode */
 855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, ADC_CR1_DUALMOD);
 856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
 858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Change ADC state (ADC master) */
 862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1148              		.loc 1 868 0
 1149 001c 0022     		movs	r2, #0
 1150 001e 84F82420 		strb	r2, [r4, #36]
 1151              	.LVL70:
 1152              	.L120:
 869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1153              		.loc 1 872 0
 1154 0022 1846     		mov	r0, r3
 1155 0024 0CB0     		add	sp, sp, #48
 1156              	.LCFI22:
 1157              		.cfi_remember_state
 1158              		.cfi_def_cfa_offset 8
 1159              		@ sp needed
 1160 0026 10BD     		pop	{r4, pc}
 1161              	.LVL71:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 38


 1162              	.L128:
 1163              	.LCFI23:
 1164              		.cfi_restore_state
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1165              		.loc 1 834 0
 1166 0028 0CA8     		add	r0, sp, #48
 1167              	.LVL72:
 1168 002a 144B     		ldr	r3, .L129
 1169 002c 40F8303D 		str	r3, [r0, #-48]!
 837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1170              		.loc 1 837 0
 1171 0030 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1172              	.LVL73:
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1173              		.loc 1 840 0
 1174 0034 40B1     		cbz	r0, .L122
 843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1175              		.loc 1 843 0
 1176 0036 A36A     		ldr	r3, [r4, #40]
 1177 0038 43F01003 		orr	r3, r3, #16
 1178 003c A362     		str	r3, [r4, #40]
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1179              		.loc 1 846 0
 1180 003e 0023     		movs	r3, #0
 1181 0040 84F82430 		strb	r3, [r4, #36]
 848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 1182              		.loc 1 848 0
 1183 0044 0123     		movs	r3, #1
 1184 0046 ECE7     		b	.L120
 1185              	.L122:
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 1186              		.loc 1 852 0
 1187 0048 2268     		ldr	r2, [r4]
 1188 004a 9368     		ldr	r3, [r2, #8]
 1189 004c 23F48073 		bic	r3, r3, #256
 1190 0050 9360     		str	r3, [r2, #8]
 855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 1191              		.loc 1 855 0
 1192 0052 2268     		ldr	r2, [r4]
 1193 0054 5368     		ldr	r3, [r2, #4]
 1194 0056 23F47023 		bic	r3, r3, #983040
 1195 005a 5360     		str	r3, [r2, #4]
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 1196              		.loc 1 859 0
 1197 005c 206A     		ldr	r0, [r4, #32]
 1198              	.LVL74:
 1199 005e FFF7FEFF 		bl	HAL_DMA_Abort
 1200              	.LVL75:
 1201 0062 0346     		mov	r3, r0
 1202              	.LVL76:
 862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1203              		.loc 1 862 0
 1204 0064 A26A     		ldr	r2, [r4, #40]
 1205 0066 22F48852 		bic	r2, r2, #4352
 1206 006a 22F00102 		bic	r2, r2, #1
 1207 006e 42F00102 		orr	r2, r2, #1
 1208 0072 A262     		str	r2, [r4, #40]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 39


 1209 0074 D2E7     		b	.L121
 1210              	.LVL77:
 1211              	.L123:
 1212              	.LCFI24:
 1213              		.cfi_def_cfa_offset 0
 1214              		.cfi_restore 4
 1215              		.cfi_restore 14
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 1216              		.loc 1 823 0
 1217 0076 0223     		movs	r3, #2
 1218              		.loc 1 872 0
 1219 0078 1846     		mov	r0, r3
 1220              	.LVL78:
 1221 007a 7047     		bx	lr
 1222              	.L130:
 1223              		.align	2
 1224              	.L129:
 1225 007c 00280140 		.word	1073817600
 1226              		.cfi_endproc
 1227              	.LFE133:
 1229              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1230              		.align	1
 1231              		.global	HAL_ADCEx_InjectedGetValue
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu fpv4-sp-d16
 1237              	HAL_ADCEx_InjectedGetValue:
 1238              	.LFB134:
 873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined AT32F403Rx_HD || STM32F103x6 || defined STM32F103xB || defined STM32F105xC || def
 874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
 877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
 878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
 879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
 880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
 881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
 883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            to flag JEOC.
 884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
 885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
 886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
 887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
 888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
 890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
 891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
 892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
 893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
 894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
 896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
 898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
 899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
 900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 40


 901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
 902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
 904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1239              		.loc 1 904 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244              	.LVL79:
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
 912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(InjectedRank)
 1245              		.loc 1 912 0
 1246 0000 0329     		cmp	r1, #3
 1247 0002 09D0     		beq	.L133
 1248 0004 0429     		cmp	r1, #4
 1249 0006 04D0     		beq	.L134
 1250 0008 0229     		cmp	r1, #2
 1251 000a 08D0     		beq	.L138
 913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {  
 914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
 915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
 925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1252              		.loc 1 925 0
 1253 000c 0368     		ldr	r3, [r0]
 1254 000e D86B     		ldr	r0, [r3, #60]
 1255              	.LVL80:
 926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_jdr;
 931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1256              		.loc 1 931 0
 1257 0010 7047     		bx	lr
 1258              	.LVL81:
 1259              	.L134:
 915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1260              		.loc 1 915 0
 1261 0012 0368     		ldr	r3, [r0]
 1262 0014 986C     		ldr	r0, [r3, #72]
 1263              	.LVL82:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 41


 916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 1264              		.loc 1 916 0
 1265 0016 7047     		bx	lr
 1266              	.LVL83:
 1267              	.L133:
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1268              		.loc 1 918 0
 1269 0018 0368     		ldr	r3, [r0]
 1270 001a 586C     		ldr	r0, [r3, #68]
 1271              	.LVL84:
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 1272              		.loc 1 919 0
 1273 001c 7047     		bx	lr
 1274              	.LVL85:
 1275              	.L138:
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1276              		.loc 1 921 0
 1277 001e 0368     		ldr	r3, [r0]
 1278 0020 186C     		ldr	r0, [r3, #64]
 1279              	.LVL86:
 922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 1280              		.loc 1 922 0
 1281 0022 7047     		bx	lr
 1282              		.cfi_endproc
 1283              	.LFE134:
 1285              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 1286              		.align	1
 1287              		.global	HAL_ADCEx_MultiModeGetValue
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1291              		.fpu fpv4-sp-d16
 1293              	HAL_ADCEx_MultiModeGetValue:
 1294              	.LFB135:
 932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (AT32F403Rx_HD) || defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105
 934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
 936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in the selected multi mode.
 937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval The converted data value.
 939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
 941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1295              		.loc 1 941 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300              	.LVL87:
 942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmpDR = 0U;
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 42


 949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC1 data register DR contains ADC2 conversions      */
 954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* only if ADC1 DMA mode is enabled.                                        */
 955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmpDR = hadc->Instance->DR;
 1301              		.loc 1 955 0
 1302 0000 0368     		ldr	r3, [r0]
 1303 0002 D86C     		ldr	r0, [r3, #76]
 1304              	.LVL88:
 956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(ADC1->CR2, ADC_CR2_DMA))
 1305              		.loc 1 957 0
 1306 0004 044B     		ldr	r3, .L141
 1307 0006 9B68     		ldr	r3, [r3, #8]
 1308 0008 13F4807F 		tst	r3, #256
 1309 000c 03D1     		bne	.L139
 958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmpDR |= (ADC2->DR << 16U);
 1310              		.loc 1 959 0
 1311 000e 034B     		ldr	r3, .L141+4
 1312 0010 DB6C     		ldr	r3, [r3, #76]
 1313 0012 40EA0340 		orr	r0, r0, r3, lsl #16
 1314              	.LVL89:
 1315              	.L139:
 960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmpDR;
 964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1316              		.loc 1 964 0
 1317 0016 7047     		bx	lr
 1318              	.L142:
 1319              		.align	2
 1320              	.L141:
 1321 0018 00240140 		.word	1073816576
 1322 001c 00280140 		.word	1073817600
 1323              		.cfi_endproc
 1324              	.LFE135:
 1326              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1327              		.align	1
 1328              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv4-sp-d16
 1334              	HAL_ADCEx_InjectedConvCpltCallback:
 1335              	.LFB136:
 965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined AT32F403Rx_HD || STM32F103x6 || defined STM32F103xB || defined STM32F105xC || def
 966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
 969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 43


 973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1336              		.loc 1 973 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341              	.LVL90:
 974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   UNUSED(hadc);
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
 978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1342              		.loc 1 979 0
 1343 0000 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE136:
 1347              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1348              		.align	1
 1349              		.global	HAL_ADCEx_InjectedConfigChannel
 1350              		.syntax unified
 1351              		.thumb
 1352              		.thumb_func
 1353              		.fpu fpv4-sp-d16
 1355              	HAL_ADCEx_InjectedConfigChannel:
 1356              	.LFB137:
 980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
 983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 Extended Peripheral Control functions
 986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief    Extended Peripheral Control functions
 987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
 988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim   
 989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
 991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================  
 992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure channels on injected group
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure multimode
 995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
1001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
1002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         linked to the injected group.
1003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
1008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
1009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 44


1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected group.
1012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
1015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1357              		.loc 1 1015 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 8
 1360              		@ frame_needed = 0, uses_anonymous_args = 0
 1361              		@ link register save eliminated.
 1362              	.LVL91:
 1363 0000 F0B4     		push	{r4, r5, r6, r7}
 1364              	.LCFI25:
 1365              		.cfi_def_cfa_offset 16
 1366              		.cfi_offset 4, -16
 1367              		.cfi_offset 5, -12
 1368              		.cfi_offset 6, -8
 1369              		.cfi_offset 7, -4
 1370 0002 82B0     		sub	sp, sp, #8
 1371              	.LCFI26:
 1372              		.cfi_def_cfa_offset 24
 1373 0004 0346     		mov	r3, r0
 1374              	.LVL92:
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1375              		.loc 1 1017 0
 1376 0006 0022     		movs	r2, #0
 1377 0008 0192     		str	r2, [sp, #4]
1018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
1020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
1023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
1024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
1025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
1026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 1378              		.loc 1 1027 0
 1379 000a 8068     		ldr	r0, [r0, #8]
 1380              	.LVL93:
1028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
1030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
1032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1381              		.loc 1 1035 0
 1382 000c 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 1383 0010 012A     		cmp	r2, #1
 1384 0012 00F00681 		beq	.L169
 1385              		.loc 1 1035 0 is_stmt 0 discriminator 2
 1386 0016 0122     		movs	r2, #1
 1387 0018 83F82420 		strb	r2, [r3, #36]
1036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 45


1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
1039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1)                  */
1040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
1042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
1043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
1045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
1046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 1388              		.loc 1 1046 0 is_stmt 1 discriminator 2
 1389 001c 0028     		cmp	r0, #0
 1390 001e 4FD1     		bne	.L146
1047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 1391              		.loc 1 1048 0
 1392 0020 4A68     		ldr	r2, [r1, #4]
 1393 0022 012A     		cmp	r2, #1
 1394 0024 42D0     		beq	.L172
1049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                             ,
1052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
1053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
1055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
1056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                    ,
1057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
1058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   ADC_INJECTED_RANK_1,
1059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   0x01U));
1060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
1062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
1063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1395              		.loc 1 1066 0
 1396 0026 9A6A     		ldr	r2, [r3, #40]
 1397 0028 42F02002 		orr	r2, r2, #32
 1398 002c 9A62     		str	r2, [r3, #40]
 1399              	.LVL94:
1067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 1400              		.loc 1 1068 0
 1401 002e 0120     		movs	r0, #1
 1402              	.LVL95:
 1403              	.L148:
1069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
1075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
1077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 46


1078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
1080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)   ,
1086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
1088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
1089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)    );
1091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                       ,
1096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1099:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion) ,
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  0x00000000U);
1103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   } 
1105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
1110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
1111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
1114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
1115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 1404              		.loc 1 1115 0
 1405 0030 1C68     		ldr	r4, [r3]
 1406 0032 A268     		ldr	r2, [r4, #8]
 1407 0034 12F0010F 		tst	r2, #1
 1408 0038 0AD1     		bne	.L150
1116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {    
1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                                           ,
 1409              		.loc 1 1117 0
 1410 003a A268     		ldr	r2, [r4, #8]
 1411 003c 22F4E042 		bic	r2, r2, #28672
 1412 0040 22F00102 		bic	r2, r2, #1
 1413 0044 784D     		ldr	r5, .L181
 1414 0046 AC42     		cmp	r4, r5
 1415 0048 64D0     		beq	.L173
 1416              		.loc 1 1117 0 is_stmt 0 discriminator 2
 1417 004a CD69     		ldr	r5, [r1, #28]
 1418              	.L152:
 1419              		.loc 1 1117 0 discriminator 8
 1420 004c 2A43     		orrs	r2, r2, r5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 47


 1421 004e A260     		str	r2, [r4, #8]
 1422              	.L150:
1118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_ADON                                                  ,
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CFGR_JEXTSEL(hadc, sConfigInjected->ExternalTrigInjecConv) );
1121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
1130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
 1423              		.loc 1 1130 0 is_stmt 1
 1424 0050 8A69     		ldr	r2, [r1, #24]
 1425 0052 012A     		cmp	r2, #1
 1426 0054 65D0     		beq	.L174
 1427              	.LVL96:
 1428              	.L153:
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
1135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* disabled.                                                              */  
1147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 1429              		.loc 1 1147 0
 1430 0056 4A69     		ldr	r2, [r1, #20]
 1431 0058 012A     		cmp	r2, #1
 1432 005a 72D0     		beq	.L175
 1433              	.LVL97:
 1434              	.L155:
1148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
1152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       } 
1153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 48


1161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
1164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For channels 10 to 17 */
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
 1435              		.loc 1 1165 0
 1436 005c 0A68     		ldr	r2, [r1]
 1437 005e 092A     		cmp	r2, #9
 1438 0060 7DD9     		bls	.L157
1166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                                                             ,
 1439              		.loc 1 1167 0
 1440 0062 1E68     		ldr	r6, [r3]
 1441 0064 F468     		ldr	r4, [r6, #12]
 1442 0066 02EB4202 		add	r2, r2, r2, lsl #1
 1443 006a 1E3A     		subs	r2, r2, #30
 1444 006c 0725     		movs	r5, #7
 1445 006e 9540     		lsls	r5, r5, r2
 1446 0070 24EA0504 		bic	r4, r4, r5
 1447 0074 8D68     		ldr	r5, [r1, #8]
 1448 0076 05FA02F2 		lsl	r2, r5, r2
 1449 007a 2243     		orrs	r2, r2, r4
 1450 007c F260     		str	r2, [r6, #12]
 1451              	.L158:
1168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel)                      ,
1169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else /* For channels 0 to 9 */
1172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                                                             ,
1174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel)                       ,
1175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 InjectedChannel_16 or InjectedChannel_17 is selected, enable Temperature sensor  */
1179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 1452              		.loc 1 1180 0
 1453 007e 0A68     		ldr	r2, [r1]
 1454 0080 103A     		subs	r2, r2, #16
 1455 0082 012A     		cmp	r2, #1
 1456 0084 79D9     		bls	.L176
 1457              	.L159:
1181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
1182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
1184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
1188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
 1458              		.loc 1 1188 0
 1459 0086 4A68     		ldr	r2, [r1, #4]
 1460 0088 022A     		cmp	r2, #2
 1461 008a 00F08F80 		beq	.L161
 1462 008e 032A     		cmp	r2, #3
 1463 0090 00F09680 		beq	.L162
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 49


 1464 0094 012A     		cmp	r2, #1
 1465 0096 76D0     		beq	.L177
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 1:
1191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
1192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
1193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
1194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
1196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 2:
1197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
1198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
1199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
1200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
1202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 3:
1203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
1205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
1206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
1208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 4:
1209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
1210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
 1466              		.loc 1 1210 0
 1467 0098 1C68     		ldr	r4, [r3]
 1468 009a 226A     		ldr	r2, [r4, #32]
 1469 009c 22F47F62 		bic	r2, r2, #4080
 1470 00a0 22F00F02 		bic	r2, r2, #15
 1471 00a4 CD68     		ldr	r5, [r1, #12]
 1472 00a6 2A43     		orrs	r2, r2, r5
 1473 00a8 2262     		str	r2, [r4, #32]
1211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
1212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1474              		.loc 1 1213 0
 1475 00aa 75E0     		b	.L164
 1476              	.LVL98:
 1477              	.L172:
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
 1478              		.loc 1 1051 0
 1479 00ac 1868     		ldr	r0, [r3]
 1480 00ae 826B     		ldr	r2, [r0, #56]
 1481 00b0 920D     		lsrs	r2, r2, #22
 1482 00b2 9205     		lsls	r2, r2, #22
 1483 00b4 0C68     		ldr	r4, [r1]
 1484 00b6 42EAC432 		orr	r2, r2, r4, lsl #15
 1485 00ba 8263     		str	r2, [r0, #56]
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1486              		.loc 1 1016 0
 1487 00bc 0020     		movs	r0, #0
 1488 00be B7E7     		b	.L148
 1489              	.L146:
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1490              		.loc 1 1076 0
 1491 00c0 4A68     		ldr	r2, [r1, #4]
 1492 00c2 0C69     		ldr	r4, [r1, #16]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 50


 1493 00c4 A242     		cmp	r2, r4
 1494 00c6 15D8     		bhi	.L149
1080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
 1495              		.loc 1 1080 0
 1496 00c8 1F68     		ldr	r7, [r3]
 1497 00ca BD6B     		ldr	r5, [r7, #56]
 1498 00cc 101B     		subs	r0, r2, r4
 1499 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 1500 00d2 0F30     		adds	r0, r0, #15
 1501 00d4 1F22     		movs	r2, #31
 1502 00d6 8240     		lsls	r2, r2, r0
 1503 00d8 42F44012 		orr	r2, r2, #3145728
 1504 00dc 25EA0205 		bic	r5, r5, r2
 1505 00e0 621E     		subs	r2, r4, #1
 1506 00e2 0E68     		ldr	r6, [r1]
 1507 00e4 06FA00F0 		lsl	r0, r6, r0
 1508 00e8 40EA0252 		orr	r2, r0, r2, lsl #20
 1509 00ec 2A43     		orrs	r2, r2, r5
 1510 00ee BA63     		str	r2, [r7, #56]
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1511              		.loc 1 1016 0
 1512 00f0 0020     		movs	r0, #0
 1513 00f2 9DE7     		b	.L148
 1514              	.L149:
1095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
 1515              		.loc 1 1095 0
 1516 00f4 1E68     		ldr	r6, [r3]
 1517 00f6 B56B     		ldr	r5, [r6, #56]
 1518 00f8 121B     		subs	r2, r2, r4
 1519 00fa 02EB8202 		add	r2, r2, r2, lsl #2
 1520 00fe 0F32     		adds	r2, r2, #15
 1521 0100 1F20     		movs	r0, #31
 1522 0102 00FA02F2 		lsl	r2, r0, r2
 1523 0106 42F44012 		orr	r2, r2, #3145728
 1524 010a 25EA0202 		bic	r2, r5, r2
 1525 010e B263     		str	r2, [r6, #56]
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1526              		.loc 1 1016 0
 1527 0110 0020     		movs	r0, #0
 1528 0112 8DE7     		b	.L148
 1529              	.LVL99:
 1530              	.L173:
1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
 1531              		.loc 1 1117 0 discriminator 1
 1532 0114 CD69     		ldr	r5, [r1, #28]
 1533 0116 B5F5C04F 		cmp	r5, #24576
 1534 011a 97D1     		bne	.L152
1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
 1535              		.loc 1 1117 0 is_stmt 0
 1536 011c 4FF48045 		mov	r5, #16384
 1537 0120 94E7     		b	.L152
 1538              	.L174:
1132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 1539              		.loc 1 1132 0 is_stmt 1
 1540 0122 CA69     		ldr	r2, [r1, #28]
 1541 0124 B2F5E04F 		cmp	r2, #28672
 1542 0128 05D0     		beq	.L178
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 51


1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 1543              		.loc 1 1139 0
 1544 012a 9A6A     		ldr	r2, [r3, #40]
 1545 012c 42F02002 		orr	r2, r2, #32
 1546 0130 9A62     		str	r2, [r3, #40]
 1547              	.LVL100:
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 1548              		.loc 1 1141 0
 1549 0132 0120     		movs	r0, #1
 1550 0134 8FE7     		b	.L153
 1551              	.LVL101:
 1552              	.L178:
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 1553              		.loc 1 1134 0
 1554 0136 1C68     		ldr	r4, [r3]
 1555 0138 6268     		ldr	r2, [r4, #4]
 1556 013a 42F48062 		orr	r2, r2, #1024
 1557 013e 6260     		str	r2, [r4, #4]
 1558 0140 89E7     		b	.L153
 1559              	.L175:
1149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 1560              		.loc 1 1149 0
 1561 0142 8A69     		ldr	r2, [r1, #24]
 1562 0144 2AB9     		cbnz	r2, .L156
1151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       } 
 1563              		.loc 1 1151 0
 1564 0146 1C68     		ldr	r4, [r3]
 1565 0148 6268     		ldr	r2, [r4, #4]
 1566 014a 42F48052 		orr	r2, r2, #4096
 1567 014e 6260     		str	r2, [r4, #4]
 1568 0150 84E7     		b	.L155
 1569              	.L156:
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 1570              		.loc 1 1156 0
 1571 0152 9A6A     		ldr	r2, [r3, #40]
 1572 0154 42F02002 		orr	r2, r2, #32
 1573 0158 9A62     		str	r2, [r3, #40]
 1574              	.LVL102:
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 1575              		.loc 1 1158 0
 1576 015a 0120     		movs	r0, #1
 1577 015c 7EE7     		b	.L155
 1578              	.LVL103:
 1579              	.L157:
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel)                       ,
 1580              		.loc 1 1173 0
 1581 015e 1E68     		ldr	r6, [r3]
 1582 0160 3469     		ldr	r4, [r6, #16]
 1583 0162 02EB4202 		add	r2, r2, r2, lsl #1
 1584 0166 0725     		movs	r5, #7
 1585 0168 9540     		lsls	r5, r5, r2
 1586 016a 24EA0504 		bic	r4, r4, r5
 1587 016e 8D68     		ldr	r5, [r1, #8]
 1588 0170 05FA02F2 		lsl	r2, r5, r2
 1589 0174 2243     		orrs	r2, r2, r4
 1590 0176 3261     		str	r2, [r6, #16]
 1591 0178 81E7     		b	.L158
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 52


 1592              	.L176:
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 1593              		.loc 1 1183 0
 1594 017a 1C68     		ldr	r4, [r3]
 1595 017c A268     		ldr	r2, [r4, #8]
 1596 017e 42F40002 		orr	r2, r2, #8388608
 1597 0182 A260     		str	r2, [r4, #8]
 1598 0184 7FE7     		b	.L159
 1599              	.L177:
1192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
 1600              		.loc 1 1192 0
 1601 0186 1C68     		ldr	r4, [r3]
 1602 0188 6269     		ldr	r2, [r4, #20]
 1603 018a 22F47F62 		bic	r2, r2, #4080
 1604 018e 22F00F02 		bic	r2, r2, #15
 1605 0192 CD68     		ldr	r5, [r1, #12]
 1606 0194 2A43     		orrs	r2, r2, r5
 1607 0196 6261     		str	r2, [r4, #20]
 1608              	.L164:
1214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 1609              		.loc 1 1218 0
 1610 0198 0A68     		ldr	r2, [r1]
 1611 019a 103A     		subs	r2, r2, #16
 1612 019c 012A     		cmp	r2, #1
 1613 019e 19D9     		bls	.L179
 1614              	.LVL104:
 1615              	.L165:
1219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
1220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (hadc->Instance == ADC1)
1225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
1227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
1229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
1232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
1236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             wait_loop_index--;
1238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
1239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 53


1245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
1248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1616              		.loc 1 1252 0
 1617 01a0 0022     		movs	r2, #0
 1618 01a2 83F82420 		strb	r2, [r3, #36]
 1619              	.LVL105:
 1620              	.L145:
1253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
1256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1621              		.loc 1 1256 0
 1622 01a6 02B0     		add	sp, sp, #8
 1623              	.LCFI27:
 1624              		.cfi_remember_state
 1625              		.cfi_def_cfa_offset 16
 1626              		@ sp needed
 1627 01a8 F0BC     		pop	{r4, r5, r6, r7}
 1628              	.LCFI28:
 1629              		.cfi_restore 7
 1630              		.cfi_restore 6
 1631              		.cfi_restore 5
 1632              		.cfi_restore 4
 1633              		.cfi_def_cfa_offset 0
 1634 01aa 7047     		bx	lr
 1635              	.LVL106:
 1636              	.L161:
 1637              	.LCFI29:
 1638              		.cfi_restore_state
1198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
 1639              		.loc 1 1198 0
 1640 01ac 1C68     		ldr	r4, [r3]
 1641 01ae A269     		ldr	r2, [r4, #24]
 1642 01b0 22F47F62 		bic	r2, r2, #4080
 1643 01b4 22F00F02 		bic	r2, r2, #15
 1644 01b8 CD68     		ldr	r5, [r1, #12]
 1645 01ba 2A43     		orrs	r2, r2, r5
 1646 01bc A261     		str	r2, [r4, #24]
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 3:
 1647              		.loc 1 1201 0
 1648 01be EBE7     		b	.L164
 1649              	.L162:
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
 1650              		.loc 1 1204 0
 1651 01c0 1C68     		ldr	r4, [r3]
 1652 01c2 E269     		ldr	r2, [r4, #28]
 1653 01c4 22F47F62 		bic	r2, r2, #4080
 1654 01c8 22F00F02 		bic	r2, r2, #15
 1655 01cc CD68     		ldr	r5, [r1, #12]
 1656 01ce 2A43     		orrs	r2, r2, r5
 1657 01d0 E261     		str	r2, [r4, #28]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 54


1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 4:
 1658              		.loc 1 1207 0
 1659 01d2 E1E7     		b	.L164
 1660              	.L179:
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1661              		.loc 1 1224 0
 1662 01d4 1A68     		ldr	r2, [r3]
 1663 01d6 154C     		ldr	r4, .L181+4
 1664 01d8 A242     		cmp	r2, r4
 1665 01da 05D0     		beq	.L180
1245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 1666              		.loc 1 1245 0
 1667 01dc 9A6A     		ldr	r2, [r3, #40]
 1668 01de 42F02002 		orr	r2, r2, #32
 1669 01e2 9A62     		str	r2, [r3, #40]
 1670              	.LVL107:
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 1671              		.loc 1 1247 0
 1672 01e4 0120     		movs	r0, #1
 1673 01e6 DBE7     		b	.L165
 1674              	.LVL108:
 1675              	.L180:
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 1676              		.loc 1 1226 0
 1677 01e8 9468     		ldr	r4, [r2, #8]
 1678 01ea 14F4000F 		tst	r4, #8388608
 1679 01ee D7D1     		bne	.L165
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 1680              		.loc 1 1228 0
 1681 01f0 9468     		ldr	r4, [r2, #8]
 1682 01f2 44F40004 		orr	r4, r4, #8388608
 1683 01f6 9460     		str	r4, [r2, #8]
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 1684              		.loc 1 1230 0
 1685 01f8 0A68     		ldr	r2, [r1]
 1686 01fa 102A     		cmp	r2, #16
 1687 01fc D0D1     		bne	.L165
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 1688              		.loc 1 1234 0
 1689 01fe 0C4A     		ldr	r2, .L181+8
 1690 0200 1268     		ldr	r2, [r2]
 1691 0202 0C49     		ldr	r1, .L181+12
 1692              	.LVL109:
 1693 0204 A1FB0212 		umull	r1, r2, r1, r2
 1694 0208 920C     		lsrs	r2, r2, #18
 1695 020a 02EB8202 		add	r2, r2, r2, lsl #2
 1696 020e 5100     		lsls	r1, r2, #1
 1697 0210 0191     		str	r1, [sp, #4]
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
 1698              		.loc 1 1235 0
 1699 0212 02E0     		b	.L167
 1700              	.L168:
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
 1701              		.loc 1 1237 0
 1702 0214 019A     		ldr	r2, [sp, #4]
 1703 0216 013A     		subs	r2, r2, #1
 1704 0218 0192     		str	r2, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 55


 1705              	.L167:
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
 1706              		.loc 1 1235 0
 1707 021a 019A     		ldr	r2, [sp, #4]
 1708 021c 002A     		cmp	r2, #0
 1709 021e F9D1     		bne	.L168
 1710 0220 BEE7     		b	.L165
 1711              	.LVL110:
 1712              	.L169:
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 1713              		.loc 1 1035 0
 1714 0222 0220     		movs	r0, #2
 1715 0224 BFE7     		b	.L145
 1716              	.L182:
 1717 0226 00BF     		.align	2
 1718              	.L181:
 1719 0228 003C0140 		.word	1073822720
 1720 022c 00240140 		.word	1073816576
 1721 0230 00000000 		.word	SystemCoreClock
 1722 0234 83DE1B43 		.word	1125899907
 1723              		.cfi_endproc
 1724              	.LFE137:
 1726              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 1727              		.align	1
 1728              		.global	HAL_ADCEx_MultiModeConfigChannel
 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1732              		.fpu fpv4-sp-d16
 1734              	HAL_ADCEx_MultiModeConfigChannel:
 1735              	.LFB138:
1257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (AT32F403Rx_HD) || defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105
1259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
1261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
1263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
1264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting 
1265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
1266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
1267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
1268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
1269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
1270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
1271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  multimode: Structure of ADC multimode configuration
1273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
1276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1736              		.loc 1 1276 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741              	.LVL111:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 56


 1742 0000 0346     		mov	r3, r0
 1743              	.LVL112:
1277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
1279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
1281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1744              		.loc 1 1285 0
 1745 0002 90F82420 		ldrb	r2, [r0, #36]	@ zero_extendqisi2
 1746 0006 012A     		cmp	r2, #1
 1747 0008 20D0     		beq	.L187
 1748              		.loc 1 1285 0 is_stmt 0 discriminator 2
 1749 000a 0122     		movs	r2, #1
 1750 000c 80F82420 		strb	r2, [r0, #36]
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
1288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
1289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
1293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - ADC master and ADC slave DMA configuration                            */
1294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Multimode mode selection                                              */
1296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* To optimize code, all multimode settings can be set when both ADCs of    */
1297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* the common group are in state: disabled.                                 */
1298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((ADC_IS_ENABLE(hadc) == RESET)                     &&
 1751              		.loc 1 1298 0 is_stmt 1 discriminator 2
 1752 0010 0268     		ldr	r2, [r0]
 1753 0012 9068     		ldr	r0, [r2, #8]
 1754              	.LVL113:
 1755 0014 10F0010F 		tst	r0, #1
 1756 0018 07D1     		bne	.L185
1299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 1757              		.loc 1 1299 0 discriminator 1
 1758 001a 0D48     		ldr	r0, .L189
 1759 001c 8068     		ldr	r0, [r0, #8]
1298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 1760              		.loc 1 1298 0 discriminator 1
 1761 001e 10F0010F 		tst	r0, #1
 1762 0022 02D1     		bne	.L185
 1763              		.loc 1 1299 0
 1764 0024 0B48     		ldr	r0, .L189+4
 1765 0026 8242     		cmp	r2, r0
 1766 0028 08D0     		beq	.L188
 1767              	.L185:
1300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance))   )
1301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR1,
1303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR1_DUALMOD    ,
1304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                multimode->Mode     );
1305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 57


1307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
1308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
1311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1768              		.loc 1 1311 0
 1769 002a 9A6A     		ldr	r2, [r3, #40]
 1770 002c 42F02002 		orr	r2, r2, #32
 1771 0030 9A62     		str	r2, [r3, #40]
 1772              	.LVL114:
1312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 1773              		.loc 1 1313 0
 1774 0032 0120     		movs	r0, #1
 1775              	.LVL115:
 1776              	.L186:
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1777              		.loc 1 1318 0
 1778 0034 0022     		movs	r2, #0
 1779 0036 83F82420 		strb	r2, [r3, #36]
1319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1780              		.loc 1 1321 0
 1781 003a 7047     		bx	lr
 1782              	.LVL116:
 1783              	.L188:
1302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR1_DUALMOD    ,
 1784              		.loc 1 1302 0
 1785 003c 5068     		ldr	r0, [r2, #4]
 1786 003e 20F47020 		bic	r0, r0, #983040
 1787 0042 0968     		ldr	r1, [r1]
 1788              	.LVL117:
 1789 0044 0143     		orrs	r1, r1, r0
 1790 0046 5160     		str	r1, [r2, #4]
1277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 1791              		.loc 1 1277 0
 1792 0048 0020     		movs	r0, #0
1302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR1_DUALMOD    ,
 1793              		.loc 1 1302 0
 1794 004a F3E7     		b	.L186
 1795              	.LVL118:
 1796              	.L187:
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 1797              		.loc 1 1285 0
 1798 004c 0220     		movs	r0, #2
 1799              	.LVL119:
1322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** } 
 1800              		.loc 1 1322 0
 1801 004e 7047     		bx	lr
 1802              	.L190:
 1803              		.align	2
 1804              	.L189:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 58


 1805 0050 00280140 		.word	1073817600
 1806 0054 00240140 		.word	1073816576
 1807              		.cfi_endproc
 1808              	.LFE138:
 1810              		.text
 1811              	.Letext0:
 1812              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1813              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1814              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 1815              		.file 5 "Inc/system_at32f4xx.h"
 1816              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1817              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1818              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1819              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1820              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1821              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1822              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1823              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1824              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1825              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 1826              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc_ex.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:17     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:24     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:194    .text.HAL_ADCEx_Calibration_Start:00000000000000e8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:199    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:206    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:335    .text.HAL_ADCEx_InjectedStart:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:340    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:347    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:426    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:433    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:684    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000154 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:693    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:700    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:834    .text.HAL_ADCEx_InjectedStart_IT:00000000000000c4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:839    .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:846    .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:930    .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:937    .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1100   .text.HAL_ADCEx_MultiModeStart_DMA:00000000000000e0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1109   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1116   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1225   .text.HAL_ADCEx_MultiModeStop_DMA:000000000000007c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1230   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1237   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1286   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1293   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1321   .text.HAL_ADCEx_MultiModeGetValue:0000000000000018 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1327   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1334   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1348   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1355   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1719   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000228 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1727   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1734   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyhcXpS.s:1805   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000050 $d

UNDEFINED SYMBOLS
ADC_ConversionStop_Disable
HAL_RCCEx_GetPeriphCLKFreq
ADC_Enable
HAL_GetTick
SystemCoreClock
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
