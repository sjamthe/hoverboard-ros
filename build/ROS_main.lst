ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ROS_main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC3
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB158:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE158:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB159:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE159:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB160:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE160:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC5
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC6
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB161:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE161:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC7
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC8
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC9
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 615              		.align	1
 616              		.weak	_ZN8std_msgs6String11deserializeEPh
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	_ZN8std_msgs6String11deserializeEPh:
 623              		.fnstart
 624              	.LFB404:
 625              		.file 5 "ROSSerial/std_msgs/ROSString.h"
   1:ROSSerial/std_msgs/ROSString.h **** #ifndef _ROS_std_msgs_String_h
   2:ROSSerial/std_msgs/ROSString.h **** #define _ROS_std_msgs_String_h
   3:ROSSerial/std_msgs/ROSString.h **** 
   4:ROSSerial/std_msgs/ROSString.h **** #include <cstring>
   5:ROSSerial/std_msgs/ROSString.h **** #include <stdint.h>
   6:ROSSerial/std_msgs/ROSString.h **** #include <string.h>
   7:ROSSerial/std_msgs/ROSString.h **** #include <stdlib.h>
   8:ROSSerial/std_msgs/ROSString.h **** #include "ros/msg.h"
   9:ROSSerial/std_msgs/ROSString.h **** 
  10:ROSSerial/std_msgs/ROSString.h **** namespace std_msgs
  11:ROSSerial/std_msgs/ROSString.h **** {
  12:ROSSerial/std_msgs/ROSString.h **** 
  13:ROSSerial/std_msgs/ROSString.h ****   class String : public ros::Msg
  14:ROSSerial/std_msgs/ROSString.h ****   {
  15:ROSSerial/std_msgs/ROSString.h ****     public:
  16:ROSSerial/std_msgs/ROSString.h ****       const char* data;
  17:ROSSerial/std_msgs/ROSString.h **** 
  18:ROSSerial/std_msgs/ROSString.h ****     virtual int serialize(unsigned char *outbuffer) const
  19:ROSSerial/std_msgs/ROSString.h ****     {
  20:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  21:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data = strlen(this->data);
  22:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  23:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  24:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, this->data, length_data);
  25:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  26:ROSSerial/std_msgs/ROSString.h ****       return offset;
  27:ROSSerial/std_msgs/ROSString.h ****     }
  28:ROSSerial/std_msgs/ROSString.h **** 
  29:ROSSerial/std_msgs/ROSString.h ****     virtual int deserialize(unsigned char *inbuffer)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 19


 626              		.loc 5 29 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL60:
 632 0000 30B4     		push	{r4, r5}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 5, -4
 637              	.LVL61:
  30:ROSSerial/std_msgs/ROSString.h ****     {
  31:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  32:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data;
  33:ROSSerial/std_msgs/ROSString.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
 638              		.loc 5 33 0
 639 0002 0D68     		ldr	r5, [r1]	@ unaligned
 640              	.LVL62:
 641              	.LBB162:
  34:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  35:ROSSerial/std_msgs/ROSString.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
 642              		.loc 5 35 0
 643 0004 0423     		movs	r3, #4
 644              	.LVL63:
 645              	.L41:
 646              		.loc 5 35 0 is_stmt 0 discriminator 3
 647 0006 2A1D     		adds	r2, r5, #4
 648 0008 9A42     		cmp	r2, r3
 649 000a 04D9     		bls	.L40
  36:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 650              		.loc 5 36 0 is_stmt 1 discriminator 2
 651 000c 5A1E     		subs	r2, r3, #1
 652 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 653 0010 8C54     		strb	r4, [r1, r2]
  35:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 654              		.loc 5 35 0 discriminator 2
 655 0012 0133     		adds	r3, r3, #1
 656              	.LVL64:
 657 0014 F7E7     		b	.L41
 658              	.L40:
 659              	.LBE162:
  37:ROSSerial/std_msgs/ROSString.h ****       }
  38:ROSSerial/std_msgs/ROSString.h ****       inbuffer[offset+length_data-1]=0;
 660              		.loc 5 38 0
 661 0016 0335     		adds	r5, r5, #3
 662              	.LVL65:
 663 0018 0023     		movs	r3, #0
 664              	.LVL66:
 665 001a 4B55     		strb	r3, [r1, r5]
  39:ROSSerial/std_msgs/ROSString.h ****       this->data = (char *)(inbuffer + offset-1);
 666              		.loc 5 39 0
 667 001c 0331     		adds	r1, r1, #3
 668              	.LVL67:
 669 001e 4160     		str	r1, [r0, #4]
 670              	.LVL68:
  40:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 20


  41:ROSSerial/std_msgs/ROSString.h ****      return offset;
  42:ROSSerial/std_msgs/ROSString.h ****     }
 671              		.loc 5 42 0
 672 0020 1046     		mov	r0, r2
 673              	.LVL69:
 674 0022 30BC     		pop	{r4, r5}
 675              	.LCFI5:
 676              		.cfi_restore 5
 677              		.cfi_restore 4
 678              		.cfi_def_cfa_offset 0
 679 0024 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE404:
 682              		.cantunwind
 683              		.fnend
 685              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 686              		.align	1
 687              		.weak	_ZN8std_msgs6String7getTypeEv
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	_ZN8std_msgs6String7getTypeEv:
 694              		.fnstart
 695              	.LFB405:
  43:ROSSerial/std_msgs/ROSString.h **** 
  44:ROSSerial/std_msgs/ROSString.h ****     const char * getType(){ return "std_msgs/String"; };
 696              		.loc 5 44 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701              	.LVL70:
 702              		.loc 5 44 0
 703 0000 0048     		ldr	r0, .L44
 704              	.LVL71:
 705 0002 7047     		bx	lr
 706              	.L45:
 707              		.align	2
 708              	.L44:
 709 0004 00000000 		.word	.LC10
 710              		.cfi_endproc
 711              	.LFE405:
 712              		.cantunwind
 713              		.fnend
 715              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 716              		.align	1
 717              		.weak	_ZN8std_msgs6String6getMD5Ev
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	_ZN8std_msgs6String6getMD5Ev:
 724              		.fnstart
 725              	.LFB406:
  45:ROSSerial/std_msgs/ROSString.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 726              		.loc 5 45 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 21


 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL72:
 732              		.loc 5 45 0
 733 0000 0048     		ldr	r0, .L47
 734              	.LVL73:
 735 0002 7047     		bx	lr
 736              	.L48:
 737              		.align	2
 738              	.L47:
 739 0004 00000000 		.word	.LC11
 740              		.cfi_endproc
 741              	.LFE406:
 742              		.cantunwind
 743              		.fnend
 745              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 746              		.align	1
 747              		.weak	_ZN8std_msgs6Header11deserializeEPh
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv4-sp-d16
 753              	_ZN8std_msgs6Header11deserializeEPh:
 754              		.fnstart
 755              	.LFB475:
 756              		.file 6 "ROSSerial/std_msgs/Header.h"
   1:ROSSerial/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:ROSSerial/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:ROSSerial/std_msgs/Header.h **** 
   4:ROSSerial/std_msgs/Header.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Header.h **** #include <string.h>
   6:ROSSerial/std_msgs/Header.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Header.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Header.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Header.h **** 
  10:ROSSerial/std_msgs/Header.h **** namespace std_msgs
  11:ROSSerial/std_msgs/Header.h **** {
  12:ROSSerial/std_msgs/Header.h **** 
  13:ROSSerial/std_msgs/Header.h ****   class Header : public ros::Msg
  14:ROSSerial/std_msgs/Header.h ****   {
  15:ROSSerial/std_msgs/Header.h ****     public:
  16:ROSSerial/std_msgs/Header.h ****       uint32_t seq;
  17:ROSSerial/std_msgs/Header.h ****       ros::Time stamp;
  18:ROSSerial/std_msgs/Header.h ****       const char* frame_id;
  19:ROSSerial/std_msgs/Header.h **** 
  20:ROSSerial/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/std_msgs/Header.h ****     {
  22:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  26:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  27:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 22


  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  31:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  32:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  36:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  37:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  38:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  39:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  40:ROSSerial/std_msgs/Header.h ****       offset += 4;
  41:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  42:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  43:ROSSerial/std_msgs/Header.h ****       return offset;
  44:ROSSerial/std_msgs/Header.h ****     }
  45:ROSSerial/std_msgs/Header.h **** 
  46:ROSSerial/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
 757              		.loc 6 46 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL74:
 763 0000 30B4     		push	{r4, r5}
 764              	.LCFI6:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 5, -4
 768              	.LVL75:
  47:ROSSerial/std_msgs/Header.h ****     {
  48:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  49:ROSSerial/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
 769              		.loc 6 49 0
 770 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 771 0004 4360     		str	r3, [r0, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 772              		.loc 6 50 0
 773 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 774 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 775 000c 4360     		str	r3, [r0, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 776              		.loc 6 51 0
 777 000e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 778 0010 43EA0243 		orr	r3, r3, r2, lsl #16
 779 0014 4360     		str	r3, [r0, #4]
  52:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 780              		.loc 6 52 0
 781 0016 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 782 0018 43EA0263 		orr	r3, r3, r2, lsl #24
 783 001c 4360     		str	r3, [r0, #4]
 784              	.LVL76:
  53:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 785              		.loc 6 54 0
 786 001e 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 787 0020 8360     		str	r3, [r0, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 23


 788              		.loc 6 55 0
 789 0022 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 790 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 791 0028 8360     		str	r3, [r0, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 792              		.loc 6 56 0
 793 002a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 794 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 795 0030 8360     		str	r3, [r0, #8]
  57:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 796              		.loc 6 57 0
 797 0032 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 798 0034 43EA0263 		orr	r3, r3, r2, lsl #24
 799 0038 8360     		str	r3, [r0, #8]
 800              	.LVL77:
  58:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 801              		.loc 6 59 0
 802 003a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 803 003c C360     		str	r3, [r0, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 804              		.loc 6 60 0
 805 003e 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 806 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 807 0044 C360     		str	r3, [r0, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 808              		.loc 6 61 0
 809 0046 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 810 0048 43EA0243 		orr	r3, r3, r2, lsl #16
 811 004c C360     		str	r3, [r0, #12]
  62:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 812              		.loc 6 62 0
 813 004e CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 814 0050 43EA0263 		orr	r3, r3, r2, lsl #24
 815 0054 C360     		str	r3, [r0, #12]
 816              	.LVL78:
  63:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  64:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id;
  65:ROSSerial/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
 817              		.loc 6 65 0
 818 0056 CD68     		ldr	r5, [r1, #12]	@ unaligned
 819              	.LVL79:
 820              	.LBB164:
  66:ROSSerial/std_msgs/Header.h ****       offset += 4;
  67:ROSSerial/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
 821              		.loc 6 67 0
 822 0058 1023     		movs	r3, #16
 823              	.LVL80:
 824              	.L51:
 825              		.loc 6 67 0 is_stmt 0 discriminator 3
 826 005a 05F11002 		add	r2, r5, #16
 827 005e 9A42     		cmp	r2, r3
 828 0060 04D9     		bls	.L50
  68:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 829              		.loc 6 68 0 is_stmt 1 discriminator 2
 830 0062 5A1E     		subs	r2, r3, #1
 831 0064 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 24


 832 0066 8C54     		strb	r4, [r1, r2]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 833              		.loc 6 67 0 discriminator 2
 834 0068 0133     		adds	r3, r3, #1
 835              	.LVL81:
 836 006a F6E7     		b	.L51
 837              	.L50:
 838              	.LBE164:
  69:ROSSerial/std_msgs/Header.h ****       }
  70:ROSSerial/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
 839              		.loc 6 70 0
 840 006c 0F35     		adds	r5, r5, #15
 841              	.LVL82:
 842 006e 0023     		movs	r3, #0
 843              	.LVL83:
 844 0070 4B55     		strb	r3, [r1, r5]
  71:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 845              		.loc 6 71 0
 846 0072 0F31     		adds	r1, r1, #15
 847              	.LVL84:
 848 0074 0161     		str	r1, [r0, #16]
 849              	.LVL85:
  72:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  73:ROSSerial/std_msgs/Header.h ****      return offset;
  74:ROSSerial/std_msgs/Header.h ****     }
 850              		.loc 6 74 0
 851 0076 1046     		mov	r0, r2
 852              	.LVL86:
 853 0078 30BC     		pop	{r4, r5}
 854              	.LCFI7:
 855              		.cfi_restore 5
 856              		.cfi_restore 4
 857              		.cfi_def_cfa_offset 0
 858 007a 7047     		bx	lr
 859              		.cfi_endproc
 860              	.LFE475:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs6Header7getTypeEv
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	_ZN8std_msgs6Header7getTypeEv:
 873              		.fnstart
 874              	.LFB476:
  75:ROSSerial/std_msgs/Header.h **** 
  76:ROSSerial/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 875              		.loc 6 76 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL87:
 881              		.loc 6 76 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 25


 882 0000 0048     		ldr	r0, .L54
 883              	.LVL88:
 884 0002 7047     		bx	lr
 885              	.L55:
 886              		.align	2
 887              	.L54:
 888 0004 00000000 		.word	.LC12
 889              		.cfi_endproc
 890              	.LFE476:
 891              		.cantunwind
 892              		.fnend
 894              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 895              		.align	1
 896              		.weak	_ZN8std_msgs6Header6getMD5Ev
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	_ZN8std_msgs6Header6getMD5Ev:
 903              		.fnstart
 904              	.LFB477:
  77:ROSSerial/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 905              		.loc 6 77 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL89:
 911              		.loc 6 77 0
 912 0000 0048     		ldr	r0, .L57
 913              	.LVL90:
 914 0002 7047     		bx	lr
 915              	.L58:
 916              		.align	2
 917              	.L57:
 918 0004 00000000 		.word	.LC13
 919              		.cfi_endproc
 920              	.LFE477:
 921              		.cantunwind
 922              		.fnend
 924              		.section	.text._ZN11sensor_msgs10JointState7getTypeEv,"axG",%progbits,_ZN11sensor_msgs10JointState
 925              		.align	1
 926              		.weak	_ZN11sensor_msgs10JointState7getTypeEv
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN11sensor_msgs10JointState7getTypeEv:
 933              		.fnstart
 934              	.LFB489:
 935              		.file 7 "ROSSerial/sensor_msgs/JointState.h"
   1:ROSSerial/sensor_msgs/JointState.h **** #ifndef _ROS_sensor_msgs_JointState_h
   2:ROSSerial/sensor_msgs/JointState.h **** #define _ROS_sensor_msgs_JointState_h
   3:ROSSerial/sensor_msgs/JointState.h **** 
   4:ROSSerial/sensor_msgs/JointState.h **** #include <stdint.h>
   5:ROSSerial/sensor_msgs/JointState.h **** #include <string.h>
   6:ROSSerial/sensor_msgs/JointState.h **** #include <stdlib.h>
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 26


   7:ROSSerial/sensor_msgs/JointState.h **** #include "ros/msg.h"
   8:ROSSerial/sensor_msgs/JointState.h **** #include "std_msgs/Header.h"
   9:ROSSerial/sensor_msgs/JointState.h **** 
  10:ROSSerial/sensor_msgs/JointState.h **** namespace sensor_msgs
  11:ROSSerial/sensor_msgs/JointState.h **** {
  12:ROSSerial/sensor_msgs/JointState.h **** 
  13:ROSSerial/sensor_msgs/JointState.h ****   class JointState : public ros::Msg
  14:ROSSerial/sensor_msgs/JointState.h ****   {
  15:ROSSerial/sensor_msgs/JointState.h ****     public:
  16:ROSSerial/sensor_msgs/JointState.h ****       typedef std_msgs::Header _header_type;
  17:ROSSerial/sensor_msgs/JointState.h ****       _header_type header;
  18:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_length;
  19:ROSSerial/sensor_msgs/JointState.h ****       typedef char* _name_type;
  20:ROSSerial/sensor_msgs/JointState.h ****       _name_type st_name;
  21:ROSSerial/sensor_msgs/JointState.h ****       _name_type * name;
  22:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_length;
  23:ROSSerial/sensor_msgs/JointState.h ****       typedef float _position_type;
  24:ROSSerial/sensor_msgs/JointState.h ****       _position_type st_position;
  25:ROSSerial/sensor_msgs/JointState.h ****       _position_type * position;
  26:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_length;
  27:ROSSerial/sensor_msgs/JointState.h ****       typedef float _velocity_type;
  28:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type st_velocity;
  29:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type * velocity;
  30:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_length;
  31:ROSSerial/sensor_msgs/JointState.h ****       typedef float _effort_type;
  32:ROSSerial/sensor_msgs/JointState.h ****       _effort_type st_effort;
  33:ROSSerial/sensor_msgs/JointState.h ****       _effort_type * effort;
  34:ROSSerial/sensor_msgs/JointState.h **** 
  35:ROSSerial/sensor_msgs/JointState.h ****     JointState():
  36:ROSSerial/sensor_msgs/JointState.h ****       header(),
  37:ROSSerial/sensor_msgs/JointState.h ****       name_length(0), name(NULL),
  38:ROSSerial/sensor_msgs/JointState.h ****       position_length(0), position(NULL),
  39:ROSSerial/sensor_msgs/JointState.h ****       velocity_length(0), velocity(NULL),
  40:ROSSerial/sensor_msgs/JointState.h ****       effort_length(0), effort(NULL)
  41:ROSSerial/sensor_msgs/JointState.h ****     {
  42:ROSSerial/sensor_msgs/JointState.h ****     }
  43:ROSSerial/sensor_msgs/JointState.h **** 
  44:ROSSerial/sensor_msgs/JointState.h ****     virtual int serialize(unsigned char *outbuffer) const
  45:ROSSerial/sensor_msgs/JointState.h ****     {
  46:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  47:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.serialize(outbuffer + offset);
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->name_length >> (8 * 0)) & 0xFF;
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
  51:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
  52:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  53:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
  54:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
  55:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
  56:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
  57:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
  58:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
  59:ROSSerial/sensor_msgs/JointState.h ****       }
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->position_length >> (8 * 0)) & 0xFF;
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
  63:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 27


  64:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
  65:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
  66:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
  67:ROSSerial/sensor_msgs/JointState.h ****       }
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->velocity_length >> (8 * 0)) & 0xFF;
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
  71:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
  72:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
  73:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
  74:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
  75:ROSSerial/sensor_msgs/JointState.h ****       }
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->effort_length >> (8 * 0)) & 0xFF;
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
  79:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
  80:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
  81:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
  82:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
  83:ROSSerial/sensor_msgs/JointState.h ****       }
  84:ROSSerial/sensor_msgs/JointState.h ****       return offset;
  85:ROSSerial/sensor_msgs/JointState.h ****     }
  86:ROSSerial/sensor_msgs/JointState.h **** 
  87:ROSSerial/sensor_msgs/JointState.h ****     virtual int deserialize(unsigned char *inbuffer)
  88:ROSSerial/sensor_msgs/JointState.h ****     {
  89:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  90:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.deserialize(inbuffer + offset);
  91:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
  94:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
  95:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  96:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
  97:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
  98:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
  99:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 100:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 101:ROSSerial/sensor_msgs/JointState.h ****       arrToVar(length_st_name, (inbuffer + offset));
 102:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 103:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 104:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 105:ROSSerial/sensor_msgs/JointState.h ****       }
 106:ROSSerial/sensor_msgs/JointState.h ****       inbuffer[offset+length_st_name-1]=0;
 107:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 108:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 109:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 110:ROSSerial/sensor_msgs/JointState.h ****       }
 111:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 114:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 115:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 116:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 117:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 118:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 119:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 120:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 28


 121:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 122:ROSSerial/sensor_msgs/JointState.h ****       }
 123:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 126:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 127:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 128:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 129:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 130:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 131:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 132:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 133:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 134:ROSSerial/sensor_msgs/JointState.h ****       }
 135:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 138:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 139:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 140:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 141:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 142:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 143:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 144:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 145:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 146:ROSSerial/sensor_msgs/JointState.h ****       }
 147:ROSSerial/sensor_msgs/JointState.h ****      return offset;
 148:ROSSerial/sensor_msgs/JointState.h ****     }
 149:ROSSerial/sensor_msgs/JointState.h **** 
 150:ROSSerial/sensor_msgs/JointState.h ****     const char * getType(){ return "sensor_msgs/JointState"; };
 936              		.loc 7 150 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL91:
 942              		.loc 7 150 0
 943 0000 0048     		ldr	r0, .L60
 944              	.LVL92:
 945 0002 7047     		bx	lr
 946              	.L61:
 947              		.align	2
 948              	.L60:
 949 0004 00000000 		.word	.LC14
 950              		.cfi_endproc
 951              	.LFE489:
 952              		.cantunwind
 953              		.fnend
 955              		.section	.text._ZN11sensor_msgs10JointState6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs10JointState6
 956              		.align	1
 957              		.weak	_ZN11sensor_msgs10JointState6getMD5Ev
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	_ZN11sensor_msgs10JointState6getMD5Ev:
 964              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 29


 965              	.LFB490:
 151:ROSSerial/sensor_msgs/JointState.h ****     const char * getMD5(){ return "3066dcd76a6cfaef579bd0f34173e9fd"; };
 966              		.loc 7 151 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL93:
 972              		.loc 7 151 0
 973 0000 0048     		ldr	r0, .L63
 974              	.LVL94:
 975 0002 7047     		bx	lr
 976              	.L64:
 977              		.align	2
 978              	.L63:
 979 0004 00000000 		.word	.LC15
 980              		.cfi_endproc
 981              	.LFE490:
 982              		.cantunwind
 983              		.fnend
 985              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 986              		.align	1
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
 992              	_Z41__static_initialization_and_destruction_0ii:
 993              		.fnstart
 994              	.LFB529:
 995              		.file 8 "./Src/ROS_main.cpp"
   1:./Src/ROS_main.cpp **** /*
   2:./Src/ROS_main.cpp **** * Implement all ROS functions here.
   3:./Src/ROS_main.cpp **** */
   4:./Src/ROS_main.cpp **** 
   5:./Src/ROS_main.cpp **** #include "ros.h"
   6:./Src/ROS_main.cpp **** #include "ROS_subscribe.h"
   7:./Src/ROS_main.cpp **** #include "std_msgs/ROSString.h"
   8:./Src/ROS_main.cpp **** #include "sensor_msgs/JointState.h"
   9:./Src/ROS_main.cpp **** #include "hallinterrupts.h"
  10:./Src/ROS_main.cpp **** #include "defines.h"
  11:./Src/ROS_main.cpp **** 
  12:./Src/ROS_main.cpp **** extern volatile WHEEL_POSN_STRUCT wheel_posn[2];
  13:./Src/ROS_main.cpp **** extern int pwms[2];
  14:./Src/ROS_main.cpp **** 
  15:./Src/ROS_main.cpp **** uint32_t publish_time = 0;
  16:./Src/ROS_main.cpp **** extern "C" 
  17:./Src/ROS_main.cpp **** {
  18:./Src/ROS_main.cpp ****     void ros_init(void);
  19:./Src/ROS_main.cpp ****     void ros_run(void);
  20:./Src/ROS_main.cpp ****     void publish_hovebot_state(void);
  21:./Src/ROS_main.cpp ****     void wheels_pwm_set(void);
  22:./Src/ROS_main.cpp ****     void init_PID_control(void);
  23:./Src/ROS_main.cpp **** 
  24:./Src/ROS_main.cpp **** }
  25:./Src/ROS_main.cpp **** 
  26:./Src/ROS_main.cpp **** using namespace ros;
  27:./Src/ROS_main.cpp **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 30


  28:./Src/ROS_main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  29:./Src/ROS_main.cpp **** 
  30:./Src/ROS_main.cpp **** ros::PublisherType *hovebotState;
  31:./Src/ROS_main.cpp **** ros::PublisherType *chatter;
  32:./Src/ROS_main.cpp **** 
  33:./Src/ROS_main.cpp **** 
  34:./Src/ROS_main.cpp **** void ros_init()
  35:./Src/ROS_main.cpp **** {
  36:./Src/ROS_main.cpp ****     nh.initNode();
  37:./Src/ROS_main.cpp ****     nh.setSpinTimeout(5); //timeout after 5ms
  38:./Src/ROS_main.cpp ****     init_PID_control();
  39:./Src/ROS_main.cpp **** 
  40:./Src/ROS_main.cpp ****     /* Register Publisher hovebot_state  */
  41:./Src/ROS_main.cpp ****     sensor_msgs::JointState tmpVar;
  42:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hoverbot_state",  &tmpVar);
  43:./Src/ROS_main.cpp **** 
  44:./Src/ROS_main.cpp ****     /* Register Publisher chatter  */
  45:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  46:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &tmpStr);
  47:./Src/ROS_main.cpp **** 
  48:./Src/ROS_main.cpp ****     /* Register Subscriber */
  49:./Src/ROS_main.cpp ****     rosSubscribeWheelsCmd(&nh);
  50:./Src/ROS_main.cpp **** }
  51:./Src/ROS_main.cpp **** 
  52:./Src/ROS_main.cpp **** void publish_hovebot_state(void)
  53:./Src/ROS_main.cpp **** {
  54:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
  55:./Src/ROS_main.cpp ****     char *names[2] = {"LEFT","RIGHT"};
  56:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[LEFT].ticks,wheel_posn[RIGHT].ticks};
  57:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[LEFT].rpm, wheel_posn[RIGHT].rpm};
  58:./Src/ROS_main.cpp ****     float effort[2] = {pwms[LEFT], pwms[RIGHT]};
  59:./Src/ROS_main.cpp **** 
  60:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
  61:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
  62:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
  63:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
  64:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
  65:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
  66:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
  67:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
  68:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
  69:./Src/ROS_main.cpp **** 
  70:./Src/ROS_main.cpp ****     //Note: If message (wheelPositions) is declared outside function/globally publish1 doesn't work
  71:./Src/ROS_main.cpp ****     //may be constructor is not getting called.
  72:./Src/ROS_main.cpp ****     int retval = nh.publish1(hovebotState->topic_id, &wheelPositions); 
  73:./Src/ROS_main.cpp ****     if(retval < 0)
  74:./Src/ROS_main.cpp ****     {
  75:./Src/ROS_main.cpp ****         printf("hoverbot_state publish1 failed %d\n",retval);
  76:./Src/ROS_main.cpp ****     }
  77:./Src/ROS_main.cpp **** 
  78:./Src/ROS_main.cpp **** #ifdef DEBUG
  79:./Src/ROS_main.cpp ****     char buf[512];
  80:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  81:./Src/ROS_main.cpp ****     tmpStr.data = buf;
  82:./Src/ROS_main.cpp ****     int motor=0;
  83:./Src/ROS_main.cpp ****     int rpm = 1000*wheel_posn[motor].rpm;
  84:./Src/ROS_main.cpp ****     // sprintf(buf,"%d:%d:rpm=%d:%ld:%lu:%d\n",motor,wheel_posn[motor].hall,rpm,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 31


  85:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks,wheel_posn[motor].millis_at_tick,
  86:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks_at_prev_rotation);
  87:./Src/ROS_main.cpp ****     sprintf(buf,"%d: Hello world\n",publish_time);
  88:./Src/ROS_main.cpp ****     //int retval2 = nh.publish1(chatter->topic_id, &tmpStr);
  89:./Src/ROS_main.cpp **** #endif
  90:./Src/ROS_main.cpp **** }
  91:./Src/ROS_main.cpp **** 
  92:./Src/ROS_main.cpp **** void ros_run()
  93:./Src/ROS_main.cpp **** {
  94:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
  95:./Src/ROS_main.cpp ****     int retval = nh.spinOnce1();
  96:./Src/ROS_main.cpp ****     if(retval != 0)
  97:./Src/ROS_main.cpp ****     {
  98:./Src/ROS_main.cpp ****         printf("%lu:ERROR: spinOnce1 returned error probably SPIN_TIMEOUT = %d\n",now,retval);
  99:./Src/ROS_main.cpp ****         //return;
 100:./Src/ROS_main.cpp ****     }
 101:./Src/ROS_main.cpp ****     //Publish every 100ms (10Hz)
 102:./Src/ROS_main.cpp ****     if ((now - publish_time) > 100) {
 103:./Src/ROS_main.cpp ****         //printf("publishing %ld, %ld\n",now, (now - publish_time));
 104:./Src/ROS_main.cpp ****         publish_hovebot_state();
 105:./Src/ROS_main.cpp ****         publish_time = now;
 106:./Src/ROS_main.cpp ****     }
 107:./Src/ROS_main.cpp ****     wheels_pwm_set();
 108:./Src/ROS_main.cpp **** }...
 996              		.loc 8 108 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001              	.LVL95:
 1002              		.loc 8 108 0
 1003 0000 0128     		cmp	r0, #1
 1004 0002 00D0     		beq	.L75
 1005              	.LVL96:
 1006              	.L65:
 1007 0004 7047     		bx	lr
 1008              	.LVL97:
 1009              	.L75:
 1010              		.loc 8 108 0 is_stmt 0 discriminator 1
 1011 0006 4FF6FF73 		movw	r3, #65535
 1012 000a 9942     		cmp	r1, r3
 1013 000c FAD1     		bne	.L65
 1014              	.LVL98:
 1015              	.LBB178:
 1016              	.LBB179:
 1017              	.LBB180:
 1018              		.file 9 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 32


  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** #include "std_msgs/ROSString.h"
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** namespace ros
  66:ROSSerial/ros/node_handle.h **** {
  67:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 33


  68:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  69:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  70:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  71:ROSSerial/ros/node_handle.h **** 
  72:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  73:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** /*
  76:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:ROSSerial/ros/node_handle.h ****  */
  83:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:ROSSerial/ros/node_handle.h **** 
  95:ROSSerial/ros/node_handle.h **** 
  96:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:ROSSerial/ros/node_handle.h **** 
 100:ROSSerial/ros/node_handle.h **** typedef struct
 101:ROSSerial/ros/node_handle.h **** {
 102:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 103:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 104:ROSSerial/ros/node_handle.h ****     const char* message_type;
 105:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 106:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 107:ROSSerial/ros/node_handle.h **** } SubscriberType;
 108:ROSSerial/ros/node_handle.h **** 
 109:ROSSerial/ros/node_handle.h **** typedef struct
 110:ROSSerial/ros/node_handle.h **** {
 111:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 112:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 113:ROSSerial/ros/node_handle.h ****     const Msg* msg; 
 114:ROSSerial/ros/node_handle.h ****     const char* message_type;
 115:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 116:ROSSerial/ros/node_handle.h **** } PublisherType;
 117:ROSSerial/ros/node_handle.h **** 
 118:ROSSerial/ros/node_handle.h **** /* Node Handle */
 119:ROSSerial/ros/node_handle.h **** template<class Hardware,
 120:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 121:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 122:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 123:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 124:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 34


 125:ROSSerial/ros/node_handle.h **** {
 126:ROSSerial/ros/node_handle.h **** protected:
 127:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 128:ROSSerial/ros/node_handle.h **** 
 129:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 130:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 131:ROSSerial/ros/node_handle.h **** 
 132:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 133:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 134:ROSSerial/ros/node_handle.h **** 
 135:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 136:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 137:ROSSerial/ros/node_handle.h **** 
 138:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 139:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 142:ROSSerial/ros/node_handle.h ****   PublisherType publishers2[MAX_PUBLISHERS];
 143:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 144:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 145:ROSSerial/ros/node_handle.h **** 
 146:ROSSerial/ros/node_handle.h ****   /*
 147:ROSSerial/ros/node_handle.h ****    * Setup Functions
 148:ROSSerial/ros/node_handle.h ****    */
 149:ROSSerial/ros/node_handle.h **** public:
 150:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 1019              		.loc 9 150 0 is_stmt 1
 1020 000e 244A     		ldr	r2, .L76
 1021 0010 244B     		ldr	r3, .L76+4
 1022 0012 1360     		str	r3, [r2]
 1023 0014 0023     		movs	r3, #0
 1024 0016 82F81C35 		strb	r3, [r2, #1308]
 1025              	.LVL99:
 1026              	.LBB181:
 1027              	.LBB182:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 1028              		.loc 4 51 0
 1029 001a 2349     		ldr	r1, .L76+8
 1030              	.LVL100:
 1031 001c C2F83015 		str	r1, [r2, #1328]
 1032              	.LVL101:
 1033              	.L68:
 1034              	.LBE182:
 1035              	.LBE181:
 1036              	.LBB183:
 1037              	.LBB184:
 151:ROSSerial/ros/node_handle.h ****   {
 152:ROSSerial/ros/node_handle.h **** 
 153:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++) {
 1038              		.loc 9 153 0
 1039 0020 042B     		cmp	r3, #4
 1040 0022 0CD8     		bhi	.L72
 154:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1041              		.loc 9 154 0
 1042 0024 1E48     		ldr	r0, .L76
 1043 0026 03F58372 		add	r2, r3, #262
 1044 002a 0021     		movs	r1, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 35


 1045 002c 40F82210 		str	r1, [r0, r2, lsl #2]
 155:ROSSerial/ros/node_handle.h ****       publishers2[i].topic_id = 0;
 1046              		.loc 9 155 0
 1047 0030 1422     		movs	r2, #20
 1048 0032 02FB0302 		mla	r2, r2, r3, r0
 1049 0036 A2F82C14 		strh	r1, [r2, #1068]	@ movhi
 153:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1050              		.loc 9 153 0
 1051 003a 0133     		adds	r3, r3, #1
 1052              	.LVL102:
 1053 003c F0E7     		b	.L68
 1054              	.L72:
 1055              	.LBE184:
 1056              	.LBB185:
 156:ROSSerial/ros/node_handle.h ****     }
 157:ROSSerial/ros/node_handle.h **** 
 158:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 1057              		.loc 9 158 0
 1058 003e 0023     		movs	r3, #0
 1059              	.LVL103:
 1060              	.L67:
 1061 0040 042B     		cmp	r3, #4
 1062 0042 0CD8     		bhi	.L73
 159:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1063              		.loc 9 159 0
 1064 0044 1648     		ldr	r0, .L76
 1065 0046 03F59272 		add	r2, r3, #292
 1066 004a 0021     		movs	r1, #0
 1067 004c 40F82210 		str	r1, [r0, r2, lsl #2]
 160:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 1068              		.loc 9 160 0
 1069 0050 1422     		movs	r2, #20
 1070 0052 02FB0302 		mla	r2, r2, r3, r0
 1071 0056 A2F8A414 		strh	r1, [r2, #1188]	@ movhi
 158:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1072              		.loc 9 158 0
 1073 005a 0133     		adds	r3, r3, #1
 1074              	.LVL104:
 1075 005c F0E7     		b	.L67
 1076              	.L73:
 1077              	.LBE185:
 1078              	.LBB186:
 161:ROSSerial/ros/node_handle.h ****     }
 162:ROSSerial/ros/node_handle.h **** 
 163:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 1079              		.loc 9 163 0
 1080 005e 0023     		movs	r3, #0
 1081              	.LVL105:
 1082              	.L69:
 1083 0060 B3F5007F 		cmp	r3, #512
 1084 0064 05D2     		bcs	.L74
 164:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1085              		.loc 9 164 0
 1086 0066 0E4A     		ldr	r2, .L76
 1087 0068 1A44     		add	r2, r2, r3
 1088 006a 0021     		movs	r1, #0
 1089 006c 1176     		strb	r1, [r2, #24]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 36


 163:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1090              		.loc 9 163 0
 1091 006e 0133     		adds	r3, r3, #1
 1092              	.LVL106:
 1093 0070 F6E7     		b	.L69
 1094              	.L74:
 1095              	.LBE186:
 1096              	.LBB187:
 165:ROSSerial/ros/node_handle.h **** 
 166:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 1097              		.loc 9 166 0
 1098 0072 0023     		movs	r3, #0
 1099              	.LVL107:
 1100              	.L70:
 1101 0074 B3F5007F 		cmp	r3, #512
 1102 0078 06D2     		bcs	.L71
 167:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1103              		.loc 9 167 0
 1104 007a 094A     		ldr	r2, .L76
 1105 007c 1A44     		add	r2, r2, r3
 1106 007e 0021     		movs	r1, #0
 1107 0080 82F81812 		strb	r1, [r2, #536]
 166:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1108              		.loc 9 166 0
 1109 0084 0133     		adds	r3, r3, #1
 1110              	.LVL108:
 1111 0086 F5E7     		b	.L70
 1112              	.L71:
 1113              	.LBE187:
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 1114              		.loc 9 169 0
 1115 0088 054B     		ldr	r3, .L76
 1116              	.LVL109:
 1117 008a 0022     		movs	r2, #0
 1118 008c 83F83425 		strb	r2, [r3, #1332]
 170:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 1119              		.loc 9 170 0
 1120 0090 C3F83C25 		str	r2, [r3, #1340]
 171:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 1121              		.loc 9 171 0
 1122 0094 83F84025 		strb	r2, [r3, #1344]
 172:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 1123              		.loc 9 172 0
 1124 0098 C3F84825 		str	r2, [r3, #1352]
 173:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 174:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 175:ROSSerial/ros/node_handle.h **** 
 176:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 1125              		.loc 9 176 0
 1126 009c 5A61     		str	r2, [r3, #20]
 1127              	.LBE183:
 1128              	.LBE180:
 1129              	.LBE179:
 1130              	.LBE178:
 1131              		.loc 8 108 0
 1132 009e B1E7     		b	.L65
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 37


 1133              	.L77:
 1134              		.align	2
 1135              	.L76:
 1136 00a0 00000000 		.word	.LANCHOR1
 1137 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 1138 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 1139              		.cfi_endproc
 1140              	.LFE529:
 1141              		.cantunwind
 1142              		.fnend
 1144              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 1145              		.align	1
 1146              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 1153              		.fnstart
 1154              	.LFB532:
 177:ROSSerial/ros/node_handle.h ****   }
 178:ROSSerial/ros/node_handle.h **** 
 179:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 180:ROSSerial/ros/node_handle.h ****   {
 181:ROSSerial/ros/node_handle.h ****     return &hardware_;
 182:ROSSerial/ros/node_handle.h ****   }
 183:ROSSerial/ros/node_handle.h **** 
 184:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 185:ROSSerial/ros/node_handle.h ****   void initNode()
 186:ROSSerial/ros/node_handle.h ****   {
 187:ROSSerial/ros/node_handle.h ****     hardware_.init();
 188:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 189:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 190:ROSSerial/ros/node_handle.h ****     index_ = 0;
 191:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 192:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 193:ROSSerial/ros/node_handle.h ****   };
 194:ROSSerial/ros/node_handle.h **** 
 195:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 196:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 197:ROSSerial/ros/node_handle.h ****   {
 198:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 199:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 200:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 201:ROSSerial/ros/node_handle.h ****     index_ = 0;
 202:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 203:ROSSerial/ros/node_handle.h ****   };
 204:ROSSerial/ros/node_handle.h **** 
 205:ROSSerial/ros/node_handle.h ****   /**
 206:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 207:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 208:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 209:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 210:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 211:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 212:ROSSerial/ros/node_handle.h ****    */
 213:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 38


 214:ROSSerial/ros/node_handle.h ****   {
 215:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 216:ROSSerial/ros/node_handle.h ****   }
 217:ROSSerial/ros/node_handle.h **** 
 218:ROSSerial/ros/node_handle.h **** protected:
 219:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 220:ROSSerial/ros/node_handle.h ****   int mode_;
 221:ROSSerial/ros/node_handle.h ****   int bytes_;
 222:ROSSerial/ros/node_handle.h ****   int topic_;
 223:ROSSerial/ros/node_handle.h ****   int index_;
 224:ROSSerial/ros/node_handle.h ****   int checksum_;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h ****   bool configured_;
 227:ROSSerial/ros/node_handle.h **** 
 228:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 229:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 230:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 231:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 232:ROSSerial/ros/node_handle.h **** 
 233:ROSSerial/ros/node_handle.h **** public:
 234:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 235:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 236:ROSSerial/ros/node_handle.h ****    */
 237:ROSSerial/ros/node_handle.h **** 
 238:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 239:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 240:ROSSerial/ros/node_handle.h ****   }
 241:ROSSerial/ros/node_handle.h **** 
 242:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 243:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 244:ROSSerial/ros/node_handle.h ****   {
 245:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 246:ROSSerial/ros/node_handle.h ****     
 247:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 248:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 249:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 250:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 251:ROSSerial/ros/node_handle.h ****     {
 252:ROSSerial/ros/node_handle.h ****       //printf("spinOnce  setting configured_ false %lu, %lu, %ld\n",c_time, 
 253:ROSSerial/ros/node_handle.h ****       //        last_sync_receive_time, (c_time-last_sync_receive_time));
 254:ROSSerial/ros/node_handle.h ****       configured_ = false;
 255:ROSSerial/ros/node_handle.h ****     }
 256:ROSSerial/ros/node_handle.h **** 
 257:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 258:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 259:ROSSerial/ros/node_handle.h ****     {
 260:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 261:ROSSerial/ros/node_handle.h ****       {
 262:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 263:ROSSerial/ros/node_handle.h ****       }
 264:ROSSerial/ros/node_handle.h ****     }
 265:ROSSerial/ros/node_handle.h **** 
 266:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 267:ROSSerial/ros/node_handle.h ****     while (true)
 268:ROSSerial/ros/node_handle.h ****     {
 269:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 270:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 39


 271:ROSSerial/ros/node_handle.h ****       {
 272:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 273:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 274:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 275:ROSSerial/ros/node_handle.h ****         // and start fresh.
 276:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 277:ROSSerial/ros/node_handle.h ****         {
 278:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 279:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 280:ROSSerial/ros/node_handle.h ****         }
 281:ROSSerial/ros/node_handle.h ****       }
 282:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 283:ROSSerial/ros/node_handle.h ****       if (data < 0)
 284:ROSSerial/ros/node_handle.h ****         break;
 285:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 286:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 289:ROSSerial/ros/node_handle.h ****         bytes_--;
 290:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 291:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 292:ROSSerial/ros/node_handle.h ****       }
 293:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 294:ROSSerial/ros/node_handle.h ****       {
 295:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 296:ROSSerial/ros/node_handle.h ****         {
 297:ROSSerial/ros/node_handle.h ****           mode_++;
 298:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 299:ROSSerial/ros/node_handle.h ****         }
 300:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 301:ROSSerial/ros/node_handle.h ****         {
 302:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 303:ROSSerial/ros/node_handle.h ****           configured_ = false;
 304:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****       }
 307:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 308:ROSSerial/ros/node_handle.h ****       {
 309:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 310:ROSSerial/ros/node_handle.h ****         {
 311:ROSSerial/ros/node_handle.h ****           mode_++;
 312:ROSSerial/ros/node_handle.h ****         }
 313:ROSSerial/ros/node_handle.h ****         else
 314:ROSSerial/ros/node_handle.h ****         {
 315:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 316:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 317:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 318:ROSSerial/ros/node_handle.h ****         }
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 323:ROSSerial/ros/node_handle.h ****         index_ = 0;
 324:ROSSerial/ros/node_handle.h ****         mode_++;
 325:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 326:ROSSerial/ros/node_handle.h ****       }
 327:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 40


 328:ROSSerial/ros/node_handle.h ****       {
 329:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 330:ROSSerial/ros/node_handle.h ****         mode_++;
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 335:ROSSerial/ros/node_handle.h ****           mode_++;
 336:ROSSerial/ros/node_handle.h ****         else
 337:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 338:ROSSerial/ros/node_handle.h ****       }
 339:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 340:ROSSerial/ros/node_handle.h ****       {
 341:ROSSerial/ros/node_handle.h ****         topic_ = data;
 342:ROSSerial/ros/node_handle.h ****         mode_++;
 343:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 348:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 349:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 350:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 351:ROSSerial/ros/node_handle.h ****       }
 352:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 353:ROSSerial/ros/node_handle.h ****       {
 354:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 355:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 356:ROSSerial/ros/node_handle.h ****         {
 357:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 358:ROSSerial/ros/node_handle.h ****           {
 359:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 360:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 361:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 362:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 363:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 364:ROSSerial/ros/node_handle.h ****           }
 365:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 366:ROSSerial/ros/node_handle.h ****           {
 367:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 368:ROSSerial/ros/node_handle.h ****           }
 369:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 370:ROSSerial/ros/node_handle.h ****           {
 371:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 372:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 373:ROSSerial/ros/node_handle.h ****           }
 374:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 375:ROSSerial/ros/node_handle.h ****           {
 376:ROSSerial/ros/node_handle.h ****             configured_ = false;
 377:ROSSerial/ros/node_handle.h ****           }
 378:ROSSerial/ros/node_handle.h ****           else
 379:ROSSerial/ros/node_handle.h ****           {
 380:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 381:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 382:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 383:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 384:ROSSerial/ros/node_handle.h ****             }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 41


 385:ROSSerial/ros/node_handle.h ****           }
 386:ROSSerial/ros/node_handle.h ****         }
 387:ROSSerial/ros/node_handle.h ****       }
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 391:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 392:ROSSerial/ros/node_handle.h ****     {
 393:ROSSerial/ros/node_handle.h ****       //printf("Resetting sync time %lu, %lu, %ld\n",c_time, last_sync_time, (c_time-last_sync_time
 394:ROSSerial/ros/node_handle.h ****       requestSyncTime(); 
 395:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 396:ROSSerial/ros/node_handle.h ****     }
 397:ROSSerial/ros/node_handle.h **** 
 398:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 399:ROSSerial/ros/node_handle.h ****   }
 400:ROSSerial/ros/node_handle.h **** 
 401:ROSSerial/ros/node_handle.h **** 
 402:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 403:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 1155              		.loc 9 403 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160              	.LVL110:
 404:ROSSerial/ros/node_handle.h ****   {
 405:ROSSerial/ros/node_handle.h ****     return configured_;
 406:ROSSerial/ros/node_handle.h ****   };
 1161              		.loc 9 406 0
 1162 0000 90F81C05 		ldrb	r0, [r0, #1308]	@ zero_extendqisi2
 1163              	.LVL111:
 1164 0004 7047     		bx	lr
 1165              		.cfi_endproc
 1166              	.LFE532:
 1167              		.cantunwind
 1168              		.fnend
 1170              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1171              		.align	1
 1172              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1179              		.fnstart
 1180              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1181              		.loc 4 113 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              	.LVL112:
 1186 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1187              	.LCFI8:
 1188              		.cfi_def_cfa_offset 24
 1189              		.cfi_offset 3, -24
 1190              		.cfi_offset 4, -20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 42


 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 0646     		mov	r6, r0
 1196 0004 0D46     		mov	r5, r1
 1197              	.LVL113:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1198              		.loc 4 116 0
 1199 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1200              	.LVL114:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1201              		.loc 4 117 0
 1202 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1203 000a A342     		cmp	r3, r4
 1204 000c 1AD3     		bcc	.L92
 1205              	.LVL115:
 1206              	.L80:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1207              		.loc 4 120 0
 1208 000e 3471     		strb	r4, [r6, #4]
 1209              	.LVL116:
 1210              	.LBB195:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1211              		.loc 4 121 0
 1212 0010 0022     		movs	r2, #0
 1213              	.LBE195:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1214              		.loc 4 119 0
 1215 0012 0424     		movs	r4, #4
 1216              	.LVL117:
 1217              	.L82:
 1218              	.LBB197:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1219              		.loc 4 121 0 discriminator 3
 1220 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1221 0016 9342     		cmp	r3, r2
 1222 0018 1AD9     		bls	.L81
 1223              	.LBB196:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1224              		.loc 4 127 0 discriminator 2
 1225 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1226              		.loc 4 128 0 discriminator 2
 1227 001c 611C     		adds	r1, r4, #1
 1228 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1229 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1230              		.loc 4 129 0 discriminator 2
 1231 0024 A11C     		adds	r1, r4, #2
 1232 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1233 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1234              		.loc 4 130 0 discriminator 2
 1235 002c E11C     		adds	r1, r4, #3
 1236 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1237 0030 43EA0163 		orr	r3, r3, r1, lsl #24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 43


 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1238              		.loc 4 131 0 discriminator 2
 1239 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1240              		.loc 4 132 0 discriminator 2
 1241 0036 0434     		adds	r4, r4, #4
 1242              	.LVL118:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1243              		.loc 4 133 0 discriminator 2
 1244 0038 F168     		ldr	r1, [r6, #12]
 1245 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1246              	.LBE196:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1247              		.loc 4 121 0 discriminator 2
 1248 003e 0132     		adds	r2, r2, #1
 1249              	.LVL119:
 1250 0040 D2B2     		uxtb	r2, r2
 1251              	.LVL120:
 1252 0042 E7E7     		b	.L82
 1253              	.LVL121:
 1254              	.L92:
 1255              	.LBE197:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1256              		.loc 4 118 0
 1257 0044 A100     		lsls	r1, r4, #2
 1258              	.LVL122:
 1259 0046 C068     		ldr	r0, [r0, #12]
 1260              	.LVL123:
 1261 0048 FFF7FEFF 		bl	realloc
 1262              	.LVL124:
 1263 004c F060     		str	r0, [r6, #12]
 1264 004e DEE7     		b	.L80
 1265              	.LVL125:
 1266              	.L81:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1267              		.loc 4 135 0
 1268 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1269              	.LVL126:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1270              		.loc 4 136 0
 1271 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1272 0054 BB42     		cmp	r3, r7
 1273 0056 1AD3     		bcc	.L93
 1274              	.LVL127:
 1275              	.L83:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1276              		.loc 4 138 0
 1277 0058 0434     		adds	r4, r4, #4
 1278              	.LVL128:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1279              		.loc 4 139 0
 1280 005a 3774     		strb	r7, [r6, #16]
 1281              	.LVL129:
 1282              	.LBB198:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1283              		.loc 4 140 0
 1284 005c 0022     		movs	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 44


 1285              	.LVL130:
 1286              	.L85:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1287              		.loc 4 140 0 is_stmt 0 discriminator 3
 1288 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1289 0060 9342     		cmp	r3, r2
 1290 0062 1AD9     		bls	.L84
 1291              	.LBB199:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1292              		.loc 4 146 0 is_stmt 1 discriminator 2
 1293 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1294              		.loc 4 147 0 discriminator 2
 1295 0066 611C     		adds	r1, r4, #1
 1296 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1297 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1298              		.loc 4 148 0 discriminator 2
 1299 006e A11C     		adds	r1, r4, #2
 1300 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1301 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1302              		.loc 4 149 0 discriminator 2
 1303 0076 E11C     		adds	r1, r4, #3
 1304 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1305 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1306              		.loc 4 150 0 discriminator 2
 1307 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1308              		.loc 4 151 0 discriminator 2
 1309 0080 0434     		adds	r4, r4, #4
 1310              	.LVL131:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1311              		.loc 4 152 0 discriminator 2
 1312 0082 B169     		ldr	r1, [r6, #24]
 1313 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1314              	.LBE199:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1315              		.loc 4 140 0 discriminator 2
 1316 0088 0132     		adds	r2, r2, #1
 1317              	.LVL132:
 1318 008a D2B2     		uxtb	r2, r2
 1319              	.LVL133:
 1320 008c E7E7     		b	.L85
 1321              	.LVL134:
 1322              	.L93:
 1323              	.LBE198:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1324              		.loc 4 137 0
 1325 008e B900     		lsls	r1, r7, #2
 1326 0090 B069     		ldr	r0, [r6, #24]
 1327 0092 FFF7FEFF 		bl	realloc
 1328              	.LVL135:
 1329 0096 B061     		str	r0, [r6, #24]
 1330 0098 DEE7     		b	.L83
 1331              	.LVL136:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 45


 1332              	.L84:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1333              		.loc 4 154 0
 1334 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1335              	.LVL137:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1336              		.loc 4 155 0
 1337 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1338 009e BB42     		cmp	r3, r7
 1339 00a0 04D3     		bcc	.L94
 1340              	.LVL138:
 1341              	.L86:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1342              		.loc 4 157 0
 1343 00a2 201D     		adds	r0, r4, #4
 1344              	.LVL139:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1345              		.loc 4 158 0
 1346 00a4 3777     		strb	r7, [r6, #28]
 1347              	.LVL140:
 1348              	.LBB200:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1349              		.loc 4 159 0
 1350 00a6 4FF0000C 		mov	ip, #0
 1351 00aa 12E0     		b	.L90
 1352              	.LVL141:
 1353              	.L94:
 1354              	.LBE200:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1355              		.loc 4 156 0
 1356 00ac B900     		lsls	r1, r7, #2
 1357 00ae 706A     		ldr	r0, [r6, #36]
 1358 00b0 FFF7FEFF 		bl	realloc
 1359              	.LVL142:
 1360 00b4 7062     		str	r0, [r6, #36]
 1361 00b6 F4E7     		b	.L86
 1362              	.LVL143:
 1363              	.L88:
 1364              	.LBB204:
 1365              	.LBB201:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1366              		.loc 4 166 0 discriminator 2
 1367 00b8 431E     		subs	r3, r0, #1
 1368              	.LVL144:
 1369 00ba 0022     		movs	r2, #0
 1370 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1371              		.loc 4 167 0 discriminator 2
 1372 00be 013C     		subs	r4, r4, #1
 1373 00c0 2C44     		add	r4, r4, r5
 1374 00c2 3462     		str	r4, [r6, #32]
 1375              	.LVL145:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1376              		.loc 4 169 0 discriminator 2
 1377 00c4 736A     		ldr	r3, [r6, #36]
 1378 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1379              	.LVL146:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 46


 1380              	.LBE201:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1381              		.loc 4 159 0 discriminator 2
 1382 00ca 0CF1010C 		add	ip, ip, #1
 1383              	.LVL147:
 1384 00ce 5FFA8CFC 		uxtb	ip, ip
 1385              	.LVL148:
 1386              	.L90:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1387              		.loc 4 159 0 is_stmt 0 discriminator 1
 1388 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1389 00d4 6345     		cmp	r3, ip
 1390 00d6 0AD9     		bls	.L79
 1391              	.LBB203:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1392              		.loc 4 161 0 is_stmt 1
 1393 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1394              	.LVL149:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1395              		.loc 4 162 0
 1396 00da 041D     		adds	r4, r0, #4
 1397              	.LVL150:
 1398              	.LBB202:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1399              		.loc 4 163 0
 1400 00dc 2346     		mov	r3, r4
 1401              	.LVL151:
 1402              	.L89:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1403              		.loc 4 163 0 is_stmt 0 discriminator 3
 1404 00de 3819     		adds	r0, r7, r4
 1405 00e0 9842     		cmp	r0, r3
 1406 00e2 E9D9     		bls	.L88
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1407              		.loc 4 164 0 is_stmt 1 discriminator 2
 1408 00e4 5A1E     		subs	r2, r3, #1
 1409 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1410 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1411              		.loc 4 163 0 discriminator 2
 1412 00ea 0133     		adds	r3, r3, #1
 1413              	.LVL152:
 1414 00ec F7E7     		b	.L89
 1415              	.LVL153:
 1416              	.L79:
 1417              	.LBE202:
 1418              	.LBE203:
 1419              	.LBE204:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1420              		.loc 4 172 0
 1421 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE395:
 1424              		.cantunwind
 1425              		.fnend
 1427              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1428              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 47


 1429              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	_ZNK8std_msgs6Header9serializeEPh:
 1436              		.fnstart
 1437              	.LFB474:
  20:ROSSerial/std_msgs/Header.h ****     {
 1438              		.loc 6 20 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              	.LVL154:
 1443 0000 70B5     		push	{r4, r5, r6, lr}
 1444              	.LCFI9:
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0546     		mov	r5, r0
 1451 0004 0C46     		mov	r4, r1
 1452              	.LVL155:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1453              		.loc 6 23 0
 1454 0006 4368     		ldr	r3, [r0, #4]
 1455 0008 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1456              		.loc 6 24 0
 1457 000a 4368     		ldr	r3, [r0, #4]
 1458 000c 1B0A     		lsrs	r3, r3, #8
 1459 000e 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1460              		.loc 6 25 0
 1461 0010 C388     		ldrh	r3, [r0, #6]
 1462 0012 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1463              		.loc 6 26 0
 1464 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1465 0016 CB70     		strb	r3, [r1, #3]
 1466              	.LVL156:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1467              		.loc 6 28 0
 1468 0018 8368     		ldr	r3, [r0, #8]
 1469 001a 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1470              		.loc 6 29 0
 1471 001c 8368     		ldr	r3, [r0, #8]
 1472 001e 1B0A     		lsrs	r3, r3, #8
 1473 0020 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1474              		.loc 6 30 0
 1475 0022 4389     		ldrh	r3, [r0, #10]
 1476 0024 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1477              		.loc 6 31 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 48


 1478 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1479 0028 CB71     		strb	r3, [r1, #7]
 1480              	.LVL157:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1481              		.loc 6 33 0
 1482 002a C368     		ldr	r3, [r0, #12]
 1483 002c 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1484              		.loc 6 34 0
 1485 002e C368     		ldr	r3, [r0, #12]
 1486 0030 1B0A     		lsrs	r3, r3, #8
 1487 0032 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1488              		.loc 6 35 0
 1489 0034 C389     		ldrh	r3, [r0, #14]
 1490 0036 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1491              		.loc 6 36 0
 1492 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1493 003a CB72     		strb	r3, [r1, #11]
 1494              	.LVL158:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1495              		.loc 6 38 0
 1496 003c 0069     		ldr	r0, [r0, #16]
 1497              	.LVL159:
 1498 003e FFF7FEFF 		bl	strlen
 1499              	.LVL160:
 1500 0042 0646     		mov	r6, r0
 1501              	.LVL161:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 1502              		.loc 6 39 0
 1503 0044 E060     		str	r0, [r4, #12]	@ unaligned
 1504              	.LVL162:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 1505              		.loc 6 41 0
 1506 0046 0246     		mov	r2, r0
 1507 0048 2969     		ldr	r1, [r5, #16]
 1508 004a 04F11000 		add	r0, r4, #16
 1509              	.LVL163:
 1510 004e FFF7FEFF 		bl	memcpy
 1511              	.LVL164:
  44:ROSSerial/std_msgs/Header.h **** 
 1512              		.loc 6 44 0
 1513 0052 06F11000 		add	r0, r6, #16
 1514              	.LVL165:
 1515 0056 70BD     		pop	{r4, r5, r6, pc}
 1516              		.cfi_endproc
 1517              	.LFE474:
 1518              		.cantunwind
 1519              		.fnend
 1521              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 1522              		.align	1
 1523              		.weak	_ZNK8std_msgs6String9serializeEPh
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 49


 1529              	_ZNK8std_msgs6String9serializeEPh:
 1530              		.fnstart
 1531              	.LFB403:
  18:ROSSerial/std_msgs/ROSString.h ****     {
 1532              		.loc 5 18 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL166:
 1537 0000 70B5     		push	{r4, r5, r6, lr}
 1538              	.LCFI10:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 4, -16
 1541              		.cfi_offset 5, -12
 1542              		.cfi_offset 6, -8
 1543              		.cfi_offset 14, -4
 1544 0002 0646     		mov	r6, r0
 1545 0004 0C46     		mov	r4, r1
 1546              	.LVL167:
  21:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 1547              		.loc 5 21 0
 1548 0006 4068     		ldr	r0, [r0, #4]
 1549              	.LVL168:
 1550 0008 FFF7FEFF 		bl	strlen
 1551              	.LVL169:
 1552 000c 0546     		mov	r5, r0
 1553              	.LVL170:
  22:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
 1554              		.loc 5 22 0
 1555 000e 2046     		mov	r0, r4
 1556              	.LVL171:
 1557 0010 40F8045B 		str	r5, [r0], #4	@ unaligned
 1558              	.LVL172:
  24:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
 1559              		.loc 5 24 0
 1560 0014 2A46     		mov	r2, r5
 1561 0016 7168     		ldr	r1, [r6, #4]
 1562 0018 FFF7FEFF 		bl	memcpy
 1563              	.LVL173:
  27:ROSSerial/std_msgs/ROSString.h **** 
 1564              		.loc 5 27 0
 1565 001c 281D     		adds	r0, r5, #4
 1566              	.LVL174:
 1567 001e 70BD     		pop	{r4, r5, r6, pc}
 1568              		.cfi_endproc
 1569              	.LFE403:
 1570              		.cantunwind
 1571              		.fnend
 1573              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1574              		.align	1
 1575              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv4-sp-d16
 1581              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1582              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 50


 1583              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 1584              		.loc 3 24 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL175:
 1589 0000 70B5     		push	{r4, r5, r6, lr}
 1590              	.LCFI11:
 1591              		.cfi_def_cfa_offset 16
 1592              		.cfi_offset 4, -16
 1593              		.cfi_offset 5, -12
 1594              		.cfi_offset 6, -8
 1595              		.cfi_offset 14, -4
 1596 0002 0646     		mov	r6, r0
 1597 0004 0D46     		mov	r5, r1
 1598              	.LVL176:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1599              		.loc 3 27 0
 1600 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1601 0008 0B70     		strb	r3, [r1]
 1602              	.LVL177:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1603              		.loc 3 29 0
 1604 000a 8068     		ldr	r0, [r0, #8]
 1605              	.LVL178:
 1606 000c FFF7FEFF 		bl	strlen
 1607              	.LVL179:
 1608 0010 0446     		mov	r4, r0
 1609              	.LVL180:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 1610              		.loc 3 30 0
 1611 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1612              	.LVL181:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 1613              		.loc 3 32 0
 1614 0016 0246     		mov	r2, r0
 1615 0018 B168     		ldr	r1, [r6, #8]
 1616 001a 681D     		adds	r0, r5, #5
 1617              	.LVL182:
 1618 001c FFF7FEFF 		bl	memcpy
 1619              	.LVL183:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1620              		.loc 3 35 0
 1621 0020 601D     		adds	r0, r4, #5
 1622              	.LVL184:
 1623 0022 70BD     		pop	{r4, r5, r6, pc}
 1624              		.cfi_endproc
 1625              	.LFE386:
 1626              		.cantunwind
 1627              		.fnend
 1629              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1630              		.align	1
 1631              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 51


 1635              		.fpu fpv4-sp-d16
 1637              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1638              		.fnstart
 1639              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 1640              		.loc 2 29 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              	.LVL185:
 1645 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1646              	.LCFI12:
 1647              		.cfi_def_cfa_offset 24
 1648              		.cfi_offset 4, -24
 1649              		.cfi_offset 5, -20
 1650              		.cfi_offset 6, -16
 1651              		.cfi_offset 7, -12
 1652              		.cfi_offset 8, -8
 1653              		.cfi_offset 14, -4
 1654 0004 0646     		mov	r6, r0
 1655 0006 0C46     		mov	r4, r1
 1656              	.LVL186:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1657              		.loc 2 32 0
 1658 0008 8388     		ldrh	r3, [r0, #4]
 1659 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1660              		.loc 2 33 0
 1661 000c 8388     		ldrh	r3, [r0, #4]
 1662 000e 1B0A     		lsrs	r3, r3, #8
 1663 0010 4B70     		strb	r3, [r1, #1]
 1664              	.LVL187:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1665              		.loc 2 35 0
 1666 0012 8068     		ldr	r0, [r0, #8]
 1667              	.LVL188:
 1668 0014 FFF7FEFF 		bl	strlen
 1669              	.LVL189:
 1670 0018 0746     		mov	r7, r0
 1671              	.LVL190:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1672              		.loc 2 36 0
 1673 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 1674              	.LVL191:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1675              		.loc 2 38 0
 1676 001e 0246     		mov	r2, r0
 1677 0020 B168     		ldr	r1, [r6, #8]
 1678 0022 A01D     		adds	r0, r4, #6
 1679              	.LVL192:
 1680 0024 FFF7FEFF 		bl	memcpy
 1681              	.LVL193:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1682              		.loc 2 39 0
 1683 0028 07F10608 		add	r8, r7, #6
 1684              	.LVL194:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 52


 1685              		.loc 2 40 0
 1686 002c F068     		ldr	r0, [r6, #12]
 1687 002e FFF7FEFF 		bl	strlen
 1688              	.LVL195:
 1689 0032 0546     		mov	r5, r0
 1690              	.LVL196:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1691              		.loc 2 41 0
 1692 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1693              		.loc 2 42 0
 1694 0038 0A37     		adds	r7, r7, #10
 1695              	.LVL197:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1696              		.loc 2 43 0
 1697 003a 0246     		mov	r2, r0
 1698 003c F168     		ldr	r1, [r6, #12]
 1699 003e E019     		adds	r0, r4, r7
 1700              	.LVL198:
 1701 0040 FFF7FEFF 		bl	memcpy
 1702              	.LVL199:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1703              		.loc 2 44 0
 1704 0044 2F44     		add	r7, r7, r5
 1705              	.LVL200:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1706              		.loc 2 45 0
 1707 0046 3069     		ldr	r0, [r6, #16]
 1708 0048 FFF7FEFF 		bl	strlen
 1709              	.LVL201:
 1710 004c 0546     		mov	r5, r0
 1711              	.LVL202:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1712              		.loc 2 46 0
 1713 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 1714              		.loc 2 47 0
 1715 0050 0437     		adds	r7, r7, #4
 1716              	.LVL203:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1717              		.loc 2 48 0
 1718 0052 0246     		mov	r2, r0
 1719 0054 3169     		ldr	r1, [r6, #16]
 1720 0056 E019     		adds	r0, r4, r7
 1721              	.LVL204:
 1722 0058 FFF7FEFF 		bl	memcpy
 1723              	.LVL205:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 1724              		.loc 2 49 0
 1725 005c E819     		adds	r0, r5, r7
 1726              	.LVL206:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1727              		.loc 2 54 0
 1728 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1729              		.loc 2 55 0
 1730 0060 2354     		strb	r3, [r4, r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 53


  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1731              		.loc 2 56 0
 1732 0062 190A     		lsrs	r1, r3, #8
 1733 0064 421C     		adds	r2, r0, #1
 1734 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1735              		.loc 2 57 0
 1736 0068 190C     		lsrs	r1, r3, #16
 1737 006a 821C     		adds	r2, r0, #2
 1738 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1739              		.loc 2 58 0
 1740 006e 1B0E     		lsrs	r3, r3, #24
 1741 0070 C21C     		adds	r2, r0, #3
 1742 0072 A354     		strb	r3, [r4, r2]
 1743              	.LVL207:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 1744              		.loc 2 61 0
 1745 0074 0430     		adds	r0, r0, #4
 1746              	.LVL208:
 1747 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1748              		.cfi_endproc
 1749              	.LFE382:
 1750              		.cantunwind
 1751              		.fnend
 1753              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1754              		.align	1
 1755              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1759              		.fpu fpv4-sp-d16
 1761              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1762              		.fnstart
 1763              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1764              		.loc 4 64 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL209:
 1769 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1770              	.LCFI13:
 1771              		.cfi_def_cfa_offset 24
 1772              		.cfi_offset 4, -24
 1773              		.cfi_offset 5, -20
 1774              		.cfi_offset 6, -16
 1775              		.cfi_offset 7, -12
 1776              		.cfi_offset 8, -8
 1777              		.cfi_offset 14, -4
 1778 0004 0546     		mov	r5, r0
 1779 0006 0C46     		mov	r4, r1
 1780              	.LVL210:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1781              		.loc 4 67 0
 1782 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1783 000a 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 54


 1784              	.LVL211:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1785              		.loc 4 68 0
 1786 000c 0022     		movs	r2, #0
 1787 000e 4A70     		strb	r2, [r1, #1]
 1788              	.LVL212:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1789              		.loc 4 69 0
 1790 0010 8A70     		strb	r2, [r1, #2]
 1791              	.LVL213:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1792              		.loc 4 70 0
 1793 0012 CA70     		strb	r2, [r1, #3]
 1794              	.LVL214:
 1795 0014 0423     		movs	r3, #4
 1796              	.LVL215:
 1797              	.L105:
 1798              	.LBB205:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1799              		.loc 4 71 0 discriminator 3
 1800 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1801 0018 9142     		cmp	r1, r2
 1802 001a 10D9     		bls	.L104
 1803              	.LBB206:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1804              		.loc 4 76 0 discriminator 2
 1805 001c E968     		ldr	r1, [r5, #12]
 1806 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1807              		.loc 4 77 0 discriminator 2
 1808 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1809              		.loc 4 78 0 discriminator 2
 1810 0024 0E0A     		lsrs	r6, r1, #8
 1811 0026 581C     		adds	r0, r3, #1
 1812 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1813              		.loc 4 79 0 discriminator 2
 1814 002a 0E0C     		lsrs	r6, r1, #16
 1815 002c 981C     		adds	r0, r3, #2
 1816 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1817              		.loc 4 80 0 discriminator 2
 1818 0030 090E     		lsrs	r1, r1, #24
 1819 0032 D81C     		adds	r0, r3, #3
 1820 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1821              		.loc 4 81 0 discriminator 2
 1822 0036 0433     		adds	r3, r3, #4
 1823              	.LVL216:
 1824              	.LBE206:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1825              		.loc 4 71 0 discriminator 2
 1826 0038 0132     		adds	r2, r2, #1
 1827              	.LVL217:
 1828 003a D2B2     		uxtb	r2, r2
 1829              	.LVL218:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 55


 1830 003c EBE7     		b	.L105
 1831              	.L104:
 1832              	.LBE205:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1833              		.loc 4 83 0
 1834 003e 591C     		adds	r1, r3, #1
 1835              	.LVL219:
 1836 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1837              	.LVL220:
 1838 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1839              		.loc 4 84 0
 1840 0044 981C     		adds	r0, r3, #2
 1841              	.LVL221:
 1842 0046 0022     		movs	r2, #0
 1843 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1844              		.loc 4 85 0
 1845 004a D91C     		adds	r1, r3, #3
 1846              	.LVL222:
 1847 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1848              		.loc 4 86 0
 1849 004e 0433     		adds	r3, r3, #4
 1850              	.LVL223:
 1851 0050 6254     		strb	r2, [r4, r1]
 1852              	.LVL224:
 1853              	.L107:
 1854              	.LBB207:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1855              		.loc 4 87 0 discriminator 3
 1856 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1857 0054 9142     		cmp	r1, r2
 1858 0056 10D9     		bls	.L106
 1859              	.LBB208:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1860              		.loc 4 92 0 discriminator 2
 1861 0058 A969     		ldr	r1, [r5, #24]
 1862 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1863              		.loc 4 93 0 discriminator 2
 1864 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1865              		.loc 4 94 0 discriminator 2
 1866 0060 0E0A     		lsrs	r6, r1, #8
 1867 0062 581C     		adds	r0, r3, #1
 1868 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1869              		.loc 4 95 0 discriminator 2
 1870 0066 0E0C     		lsrs	r6, r1, #16
 1871 0068 981C     		adds	r0, r3, #2
 1872 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1873              		.loc 4 96 0 discriminator 2
 1874 006c 090E     		lsrs	r1, r1, #24
 1875 006e D81C     		adds	r0, r3, #3
 1876 0070 2154     		strb	r1, [r4, r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 56


  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1877              		.loc 4 97 0 discriminator 2
 1878 0072 0433     		adds	r3, r3, #4
 1879              	.LVL225:
 1880              	.LBE208:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1881              		.loc 4 87 0 discriminator 2
 1882 0074 0132     		adds	r2, r2, #1
 1883              	.LVL226:
 1884 0076 D2B2     		uxtb	r2, r2
 1885              	.LVL227:
 1886 0078 EBE7     		b	.L107
 1887              	.L106:
 1888              	.LBE207:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1889              		.loc 4 99 0
 1890 007a 5A1C     		adds	r2, r3, #1
 1891              	.LVL228:
 1892 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1893 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1894              		.loc 4 100 0
 1895 0080 991C     		adds	r1, r3, #2
 1896              	.LVL229:
 1897 0082 4FF00008 		mov	r8, #0
 1898 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1899              		.loc 4 101 0
 1900 008a DA1C     		adds	r2, r3, #3
 1901              	.LVL230:
 1902 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1903              		.loc 4 102 0
 1904 0090 1E1D     		adds	r6, r3, #4
 1905              	.LVL231:
 1906 0092 04F80280 		strb	r8, [r4, r2]
 1907              	.LVL232:
 1908              	.L109:
 1909              	.LBB209:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1910              		.loc 4 103 0 discriminator 3
 1911 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1912 0098 4345     		cmp	r3, r8
 1913 009a 14D9     		bls	.L103
 1914              	.LBB210:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1915              		.loc 4 104 0 discriminator 2
 1916 009c 6B6A     		ldr	r3, [r5, #36]
 1917 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1918 00a2 FFF7FEFF 		bl	strlen
 1919              	.LVL233:
 1920 00a6 0746     		mov	r7, r0
 1921              	.LVL234:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1922              		.loc 4 105 0 discriminator 2
 1923 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 57


 1924              		.loc 4 106 0 discriminator 2
 1925 00aa 0436     		adds	r6, r6, #4
 1926              	.LVL235:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1927              		.loc 4 107 0 discriminator 2
 1928 00ac 6B6A     		ldr	r3, [r5, #36]
 1929 00ae 0246     		mov	r2, r0
 1930 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1931 00b4 A019     		adds	r0, r4, r6
 1932              	.LVL236:
 1933 00b6 FFF7FEFF 		bl	memcpy
 1934              	.LVL237:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1935              		.loc 4 108 0 discriminator 2
 1936 00ba 3E44     		add	r6, r6, r7
 1937              	.LVL238:
 1938              	.LBE210:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1939              		.loc 4 103 0 discriminator 2
 1940 00bc 08F10108 		add	r8, r8, #1
 1941              	.LVL239:
 1942 00c0 5FFA88F8 		uxtb	r8, r8
 1943              	.LVL240:
 1944 00c4 E7E7     		b	.L109
 1945              	.L103:
 1946              	.LBE209:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1947              		.loc 4 111 0
 1948 00c6 3046     		mov	r0, r6
 1949 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1950              		.cfi_endproc
 1951              	.LFE394:
 1952              		.cantunwind
 1953              		.fnend
 1955              		.section	.text._ZNK11sensor_msgs10JointState9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs10Joint
 1956              		.align	1
 1957              		.weak	_ZNK11sensor_msgs10JointState9serializeEPh
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1961              		.fpu fpv4-sp-d16
 1963              	_ZNK11sensor_msgs10JointState9serializeEPh:
 1964              		.fnstart
 1965              	.LFB487:
  44:ROSSerial/sensor_msgs/JointState.h ****     {
 1966              		.loc 7 44 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              	.LVL241:
 1971 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1972              	.LCFI14:
 1973              		.cfi_def_cfa_offset 32
 1974              		.cfi_offset 3, -32
 1975              		.cfi_offset 4, -28
 1976              		.cfi_offset 5, -24
 1977              		.cfi_offset 6, -20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 58


 1978              		.cfi_offset 7, -16
 1979              		.cfi_offset 8, -12
 1980              		.cfi_offset 9, -8
 1981              		.cfi_offset 14, -4
 1982 0004 0646     		mov	r6, r0
 1983 0006 0D46     		mov	r5, r1
 1984              	.LVL242:
 1985              	.LBB226:
 1986              	.LBB227:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1987              		.loc 6 23 0
 1988 0008 8368     		ldr	r3, [r0, #8]
 1989 000a 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1990              		.loc 6 24 0
 1991 000c 8368     		ldr	r3, [r0, #8]
 1992 000e 1B0A     		lsrs	r3, r3, #8
 1993 0010 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1994              		.loc 6 25 0
 1995 0012 4389     		ldrh	r3, [r0, #10]
 1996 0014 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1997              		.loc 6 26 0
 1998 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1999 0018 CB70     		strb	r3, [r1, #3]
 2000              	.LVL243:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 2001              		.loc 6 28 0
 2002 001a C368     		ldr	r3, [r0, #12]
 2003 001c 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 2004              		.loc 6 29 0
 2005 001e C368     		ldr	r3, [r0, #12]
 2006 0020 1B0A     		lsrs	r3, r3, #8
 2007 0022 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 2008              		.loc 6 30 0
 2009 0024 C389     		ldrh	r3, [r0, #14]
 2010 0026 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2011              		.loc 6 31 0
 2012 0028 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 2013 002a CB71     		strb	r3, [r1, #7]
 2014              	.LVL244:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 2015              		.loc 6 33 0
 2016 002c 0369     		ldr	r3, [r0, #16]
 2017 002e 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 2018              		.loc 6 34 0
 2019 0030 0369     		ldr	r3, [r0, #16]
 2020 0032 1B0A     		lsrs	r3, r3, #8
 2021 0034 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 2022              		.loc 6 35 0
 2023 0036 438A     		ldrh	r3, [r0, #18]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 59


 2024 0038 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2025              		.loc 6 36 0
 2026 003a C37C     		ldrb	r3, [r0, #19]	@ zero_extendqisi2
 2027 003c CB72     		strb	r3, [r1, #11]
 2028              	.LVL245:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 2029              		.loc 6 38 0
 2030 003e 4069     		ldr	r0, [r0, #20]
 2031              	.LVL246:
 2032 0040 FFF7FEFF 		bl	strlen
 2033              	.LVL247:
 2034 0044 0446     		mov	r4, r0
 2035              	.LVL248:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2036              		.loc 6 39 0
 2037 0046 E860     		str	r0, [r5, #12]	@ unaligned
 2038              	.LVL249:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2039              		.loc 6 41 0
 2040 0048 0246     		mov	r2, r0
 2041 004a 7169     		ldr	r1, [r6, #20]
 2042 004c 05F11000 		add	r0, r5, #16
 2043              	.LVL250:
 2044 0050 FFF7FEFF 		bl	memcpy
 2045              	.LVL251:
  42:ROSSerial/std_msgs/Header.h ****       return offset;
 2046              		.loc 6 42 0
 2047 0054 04F11003 		add	r3, r4, #16
 2048              	.LVL252:
 2049              	.LBE227:
 2050              	.LBE226:
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
 2051              		.loc 7 48 0
 2052 0058 B269     		ldr	r2, [r6, #24]
 2053 005a EA54     		strb	r2, [r5, r3]
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
 2054              		.loc 7 49 0
 2055 005c B369     		ldr	r3, [r6, #24]
 2056 005e 1B0A     		lsrs	r3, r3, #8
 2057 0060 04F11102 		add	r2, r4, #17
 2058 0064 AB54     		strb	r3, [r5, r2]
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
 2059              		.loc 7 50 0
 2060 0066 728B     		ldrh	r2, [r6, #26]
 2061 0068 04F11203 		add	r3, r4, #18
 2062 006c EA54     		strb	r2, [r5, r3]
  51:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2063              		.loc 7 51 0
 2064 006e F27E     		ldrb	r2, [r6, #27]	@ zero_extendqisi2
 2065 0070 04F11303 		add	r3, r4, #19
 2066 0074 EA54     		strb	r2, [r5, r3]
  52:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2067              		.loc 7 52 0
 2068 0076 1434     		adds	r4, r4, #20
 2069              	.LVL253:
 2070              	.LBB228:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 60


  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2071              		.loc 7 53 0
 2072 0078 4FF00008 		mov	r8, #0
 2073 007c 0AE0     		b	.L115
 2074              	.LVL254:
 2075              	.L113:
 2076              	.LBB229:
  56:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
 2077              		.loc 7 56 0 discriminator 2
 2078 007e 0434     		adds	r4, r4, #4
 2079              	.LVL255:
  57:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
 2080              		.loc 7 57 0 discriminator 2
 2081 0080 336A     		ldr	r3, [r6, #32]
 2082 0082 3A46     		mov	r2, r7
 2083 0084 53F80910 		ldr	r1, [r3, r9]
 2084 0088 2819     		adds	r0, r5, r4
 2085 008a FFF7FEFF 		bl	memcpy
 2086              	.LVL256:
  58:ROSSerial/sensor_msgs/JointState.h ****       }
 2087              		.loc 7 58 0 discriminator 2
 2088 008e 3C44     		add	r4, r4, r7
 2089              	.LVL257:
 2090              	.LBE229:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2091              		.loc 7 53 0 discriminator 2
 2092 0090 08F10108 		add	r8, r8, #1
 2093              	.LVL258:
 2094              	.L115:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2095              		.loc 7 53 0 is_stmt 0 discriminator 3
 2096 0094 B369     		ldr	r3, [r6, #24]
 2097 0096 4345     		cmp	r3, r8
 2098 0098 12D9     		bls	.L112
 2099              	.LBB232:
  54:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
 2100              		.loc 7 54 0 is_stmt 1 discriminator 2
 2101 009a 336A     		ldr	r3, [r6, #32]
 2102 009c 4FEA8809 		lsl	r9, r8, #2
 2103 00a0 53F82800 		ldr	r0, [r3, r8, lsl #2]
 2104 00a4 FFF7FEFF 		bl	strlen
 2105              	.LVL259:
 2106 00a8 0746     		mov	r7, r0
 2107              	.LVL260:
  55:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2108              		.loc 7 55 0 discriminator 2
 2109 00aa 2046     		mov	r0, r4
 2110              	.LVL261:
 2111              	.LBB230:
 2112              	.LBB231:
 2113              		.file 10 "ROSSerial/ros/msg.h"
   1:ROSSerial/ros/msg.h **** /*
   2:ROSSerial/ros/msg.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/msg.h ****  *
   4:ROSSerial/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/msg.h ****  * All rights reserved.
   6:ROSSerial/ros/msg.h ****  *
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 61


   7:ROSSerial/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/msg.h ****  * are met:
  10:ROSSerial/ros/msg.h ****  *
  11:ROSSerial/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/msg.h ****  *    with the distribution.
  17:ROSSerial/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/msg.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/msg.h ****  *
  21:ROSSerial/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/msg.h ****  */
  34:ROSSerial/ros/msg.h **** 
  35:ROSSerial/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:ROSSerial/ros/msg.h **** #define _ROS_MSG_H_
  37:ROSSerial/ros/msg.h **** 
  38:ROSSerial/ros/msg.h **** #include <stdint.h>
  39:ROSSerial/ros/msg.h **** #include <stddef.h>
  40:ROSSerial/ros/msg.h **** 
  41:ROSSerial/ros/msg.h **** namespace ros
  42:ROSSerial/ros/msg.h **** {
  43:ROSSerial/ros/msg.h **** 
  44:ROSSerial/ros/msg.h **** /* Base Message Type */
  45:ROSSerial/ros/msg.h **** class Msg
  46:ROSSerial/ros/msg.h **** {
  47:ROSSerial/ros/msg.h **** public:
  48:ROSSerial/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  49:ROSSerial/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  50:ROSSerial/ros/msg.h ****   virtual const char * getType() = 0;
  51:ROSSerial/ros/msg.h ****   virtual const char * getMD5() = 0;
  52:ROSSerial/ros/msg.h **** 
  53:ROSSerial/ros/msg.h ****   /**
  54:ROSSerial/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  55:ROSSerial/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  56:ROSSerial/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  57:ROSSerial/ros/msg.h ****    *
  58:ROSSerial/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  59:ROSSerial/ros/msg.h ****    * @param[in] f value to serialize.
  60:ROSSerial/ros/msg.h ****    *
  61:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  62:ROSSerial/ros/msg.h ****    *
  63:ROSSerial/ros/msg.h ****    */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 62


  64:ROSSerial/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  65:ROSSerial/ros/msg.h ****   {
  66:ROSSerial/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  67:ROSSerial/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
  68:ROSSerial/ros/msg.h ****     if (exp != 0)
  69:ROSSerial/ros/msg.h ****     {
  70:ROSSerial/ros/msg.h ****       exp += 1023 - 127;
  71:ROSSerial/ros/msg.h ****     }
  72:ROSSerial/ros/msg.h **** 
  73:ROSSerial/ros/msg.h ****     int32_t sig = *val;
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
  81:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  82:ROSSerial/ros/msg.h **** 
  83:ROSSerial/ros/msg.h ****     // Mark negative bit as necessary.
  84:ROSSerial/ros/msg.h ****     if (f < 0)
  85:ROSSerial/ros/msg.h ****     {
  86:ROSSerial/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
  87:ROSSerial/ros/msg.h ****     }
  88:ROSSerial/ros/msg.h **** 
  89:ROSSerial/ros/msg.h ****     return 8;
  90:ROSSerial/ros/msg.h ****   }
  91:ROSSerial/ros/msg.h **** 
  92:ROSSerial/ros/msg.h ****   /**
  93:ROSSerial/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  94:ROSSerial/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  95:ROSSerial/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  96:ROSSerial/ros/msg.h ****    *
  97:ROSSerial/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  98:ROSSerial/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  99:ROSSerial/ros/msg.h ****    *
 100:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 101:ROSSerial/ros/msg.h ****    */
 102:ROSSerial/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 103:ROSSerial/ros/msg.h ****   {
 104:ROSSerial/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 105:ROSSerial/ros/msg.h ****     inbuffer += 3;
 106:ROSSerial/ros/msg.h **** 
 107:ROSSerial/ros/msg.h ****     // Copy truncated mantissa.
 108:ROSSerial/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 111:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 112:ROSSerial/ros/msg.h **** 
 113:ROSSerial/ros/msg.h ****     // Copy truncated exponent.
 114:ROSSerial/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 115:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 116:ROSSerial/ros/msg.h ****     if (exp != 0)
 117:ROSSerial/ros/msg.h ****     {
 118:ROSSerial/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 119:ROSSerial/ros/msg.h ****     }
 120:ROSSerial/ros/msg.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 63


 121:ROSSerial/ros/msg.h ****     // Copy negative sign.
 122:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 123:ROSSerial/ros/msg.h **** 
 124:ROSSerial/ros/msg.h ****     return 8;
 125:ROSSerial/ros/msg.h ****   }
 126:ROSSerial/ros/msg.h **** 
 127:ROSSerial/ros/msg.h ****   // Copy data from variable into a byte array
 128:ROSSerial/ros/msg.h ****   template<typename A, typename V>
 129:ROSSerial/ros/msg.h ****   static void varToArr(A arr, const V var)
 130:ROSSerial/ros/msg.h ****   {
 131:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2114              		.loc 10 131 0 discriminator 2
 2115 00ac 0023     		movs	r3, #0
 2116              	.LVL262:
 2117              	.L114:
 2118              		.loc 10 131 0 is_stmt 0
 2119 00ae 032B     		cmp	r3, #3
 2120 00b0 E5D8     		bhi	.L113
 132:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2121              		.loc 10 132 0 is_stmt 1
 2122 00b2 DA00     		lsls	r2, r3, #3
 2123 00b4 27FA02F2 		lsr	r2, r7, r2
 2124 00b8 C118     		adds	r1, r0, r3
 2125 00ba 6A54     		strb	r2, [r5, r1]
 131:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2126              		.loc 10 131 0
 2127 00bc 0133     		adds	r3, r3, #1
 2128              	.LVL263:
 2129 00be F6E7     		b	.L114
 2130              	.LVL264:
 2131              	.L112:
 2132              	.LBE231:
 2133              	.LBE230:
 2134              	.LBE232:
 2135              	.LBE228:
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
 2136              		.loc 7 60 0
 2137 00c0 736A     		ldr	r3, [r6, #36]
 2138 00c2 2B55     		strb	r3, [r5, r4]
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
 2139              		.loc 7 61 0
 2140 00c4 736A     		ldr	r3, [r6, #36]
 2141 00c6 1B0A     		lsrs	r3, r3, #8
 2142 00c8 621C     		adds	r2, r4, #1
 2143 00ca AB54     		strb	r3, [r5, r2]
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
 2144              		.loc 7 62 0
 2145 00cc F28C     		ldrh	r2, [r6, #38]
 2146 00ce A31C     		adds	r3, r4, #2
 2147 00d0 EA54     		strb	r2, [r5, r3]
  63:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2148              		.loc 7 63 0
 2149 00d2 96F82720 		ldrb	r2, [r6, #39]	@ zero_extendqisi2
 2150 00d6 E31C     		adds	r3, r4, #3
 2151 00d8 EA54     		strb	r2, [r5, r3]
  64:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2152              		.loc 7 64 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 64


 2153 00da 201D     		adds	r0, r4, #4
 2154              	.LVL265:
 2155              	.LBB233:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2156              		.loc 7 65 0
 2157 00dc 0027     		movs	r7, #0
 2158 00de 17E0     		b	.L120
 2159              	.LVL266:
 2160              	.L117:
 2161              	.LBB234:
 2162              	.LBB235:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2163              		.loc 10 74 0
 2164 00e0 0024     		movs	r4, #0
 2165 00e2 1470     		strb	r4, [r2]
 2166              	.LVL267:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2167              		.loc 10 75 0
 2168 00e4 5470     		strb	r4, [r2, #1]
 2169              	.LVL268:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2170              		.loc 10 76 0
 2171 00e6 9470     		strb	r4, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2172              		.loc 10 77 0
 2173 00e8 5C01     		lsls	r4, r3, #5
 2174              	.LVL269:
 2175 00ea D470     		strb	r4, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2176              		.loc 10 78 0
 2177 00ec DC10     		asrs	r4, r3, #3
 2178              	.LVL270:
 2179 00ee 1471     		strb	r4, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2180              		.loc 10 79 0
 2181 00f0 DC12     		asrs	r4, r3, #11
 2182              	.LVL271:
 2183 00f2 5471     		strb	r4, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2184              		.loc 10 80 0
 2185 00f4 C3F3C343 		ubfx	r3, r3, #19, #4
 2186              	.LVL272:
 2187 00f8 43EA0113 		orr	r3, r3, r1, lsl #4
 2188 00fc 9371     		strb	r3, [r2, #6]
 2189              	.LVL273:
  81:ROSSerial/ros/msg.h **** 
 2190              		.loc 10 81 0
 2191 00fe 0909     		lsrs	r1, r1, #4
 2192              	.LVL274:
 2193 0100 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2194              		.loc 10 84 0
 2195 0102 F5EEC07A 		vcmpe.f32	s15, #0
 2196 0106 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2197 010a 13D4     		bmi	.L135
 2198              	.L118:
 2199              	.LVL275:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 65


 2200              	.LBE235:
 2201              	.LBE234:
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2202              		.loc 7 66 0
 2203 010c 0830     		adds	r0, r0, #8
 2204              	.LVL276:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2205              		.loc 7 65 0
 2206 010e 0137     		adds	r7, r7, #1
 2207              	.LVL277:
 2208              	.L120:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2209              		.loc 7 65 0 is_stmt 0 discriminator 3
 2210 0110 736A     		ldr	r3, [r6, #36]
 2211 0112 BB42     		cmp	r3, r7
 2212 0114 12D9     		bls	.L116
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2213              		.loc 7 66 0 is_stmt 1 discriminator 2
 2214 0116 2A18     		adds	r2, r5, r0
 2215 0118 F36A     		ldr	r3, [r6, #44]
 2216 011a 03EB8703 		add	r3, r3, r7, lsl #2
 2217 011e D3ED007A 		vldr.32	s15, [r3]
 2218              	.LVL278:
 2219              	.LBB237:
 2220              	.LBB236:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2221              		.loc 10 67 0 discriminator 2
 2222 0122 17EE903A 		vmov	r3, s15	@ int
 2223 0126 C3F3C751 		ubfx	r1, r3, #23, #8
 2224              	.LVL279:
  68:ROSSerial/ros/msg.h ****     {
 2225              		.loc 10 68 0 discriminator 2
 2226 012a 0029     		cmp	r1, #0
 2227 012c D8D0     		beq	.L117
  70:ROSSerial/ros/msg.h ****     }
 2228              		.loc 10 70 0
 2229 012e 01F56071 		add	r1, r1, #896
 2230              	.LVL280:
 2231 0132 D5E7     		b	.L117
 2232              	.LVL281:
 2233              	.L135:
  86:ROSSerial/ros/msg.h ****     }
 2234              		.loc 10 86 0
 2235 0134 61F07F01 		orn	r1, r1, #127
 2236 0138 D171     		strb	r1, [r2, #7]
 2237 013a E7E7     		b	.L118
 2238              	.LVL282:
 2239              	.L116:
 2240              	.LBE236:
 2241              	.LBE237:
 2242              	.LBE233:
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
 2243              		.loc 7 68 0
 2244 013c 336B     		ldr	r3, [r6, #48]
 2245 013e 2B54     		strb	r3, [r5, r0]
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
 2246              		.loc 7 69 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 66


 2247 0140 336B     		ldr	r3, [r6, #48]
 2248 0142 1B0A     		lsrs	r3, r3, #8
 2249 0144 421C     		adds	r2, r0, #1
 2250 0146 AB54     		strb	r3, [r5, r2]
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
 2251              		.loc 7 70 0
 2252 0148 728E     		ldrh	r2, [r6, #50]
 2253 014a 831C     		adds	r3, r0, #2
 2254 014c EA54     		strb	r2, [r5, r3]
  71:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2255              		.loc 7 71 0
 2256 014e 96F83320 		ldrb	r2, [r6, #51]	@ zero_extendqisi2
 2257 0152 C31C     		adds	r3, r0, #3
 2258 0154 EA54     		strb	r2, [r5, r3]
  72:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2259              		.loc 7 72 0
 2260 0156 0430     		adds	r0, r0, #4
 2261              	.LVL283:
 2262              	.LBB238:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2263              		.loc 7 73 0
 2264 0158 0024     		movs	r4, #0
 2265 015a 17E0     		b	.L125
 2266              	.LVL284:
 2267              	.L122:
 2268              	.LBB239:
 2269              	.LBB240:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2270              		.loc 10 74 0
 2271 015c 0027     		movs	r7, #0
 2272 015e 1770     		strb	r7, [r2]
 2273              	.LVL285:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2274              		.loc 10 75 0
 2275 0160 5770     		strb	r7, [r2, #1]
 2276              	.LVL286:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2277              		.loc 10 76 0
 2278 0162 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2279              		.loc 10 77 0
 2280 0164 5F01     		lsls	r7, r3, #5
 2281              	.LVL287:
 2282 0166 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2283              		.loc 10 78 0
 2284 0168 DF10     		asrs	r7, r3, #3
 2285              	.LVL288:
 2286 016a 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2287              		.loc 10 79 0
 2288 016c DF12     		asrs	r7, r3, #11
 2289              	.LVL289:
 2290 016e 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2291              		.loc 10 80 0
 2292 0170 C3F3C343 		ubfx	r3, r3, #19, #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 67


 2293              	.LVL290:
 2294 0174 43EA0113 		orr	r3, r3, r1, lsl #4
 2295 0178 9371     		strb	r3, [r2, #6]
 2296              	.LVL291:
  81:ROSSerial/ros/msg.h **** 
 2297              		.loc 10 81 0
 2298 017a 0909     		lsrs	r1, r1, #4
 2299              	.LVL292:
 2300 017c D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2301              		.loc 10 84 0
 2302 017e F5EEC07A 		vcmpe.f32	s15, #0
 2303 0182 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2304 0186 13D4     		bmi	.L136
 2305              	.L123:
 2306              	.LVL293:
 2307              	.LBE240:
 2308              	.LBE239:
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2309              		.loc 7 74 0
 2310 0188 0830     		adds	r0, r0, #8
 2311              	.LVL294:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2312              		.loc 7 73 0
 2313 018a 0134     		adds	r4, r4, #1
 2314              	.LVL295:
 2315              	.L125:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2316              		.loc 7 73 0 is_stmt 0 discriminator 3
 2317 018c 336B     		ldr	r3, [r6, #48]
 2318 018e A342     		cmp	r3, r4
 2319 0190 12D9     		bls	.L121
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2320              		.loc 7 74 0 is_stmt 1 discriminator 2
 2321 0192 2A18     		adds	r2, r5, r0
 2322 0194 B36B     		ldr	r3, [r6, #56]
 2323 0196 03EB8403 		add	r3, r3, r4, lsl #2
 2324 019a D3ED007A 		vldr.32	s15, [r3]
 2325              	.LVL296:
 2326              	.LBB242:
 2327              	.LBB241:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2328              		.loc 10 67 0 discriminator 2
 2329 019e 17EE903A 		vmov	r3, s15	@ int
 2330 01a2 C3F3C751 		ubfx	r1, r3, #23, #8
 2331              	.LVL297:
  68:ROSSerial/ros/msg.h ****     {
 2332              		.loc 10 68 0 discriminator 2
 2333 01a6 0029     		cmp	r1, #0
 2334 01a8 D8D0     		beq	.L122
  70:ROSSerial/ros/msg.h ****     }
 2335              		.loc 10 70 0
 2336 01aa 01F56071 		add	r1, r1, #896
 2337              	.LVL298:
 2338 01ae D5E7     		b	.L122
 2339              	.LVL299:
 2340              	.L136:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 68


  86:ROSSerial/ros/msg.h ****     }
 2341              		.loc 10 86 0
 2342 01b0 61F07F01 		orn	r1, r1, #127
 2343 01b4 D171     		strb	r1, [r2, #7]
 2344 01b6 E7E7     		b	.L123
 2345              	.LVL300:
 2346              	.L121:
 2347              	.LBE241:
 2348              	.LBE242:
 2349              	.LBE238:
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
 2350              		.loc 7 76 0
 2351 01b8 F36B     		ldr	r3, [r6, #60]
 2352 01ba 2B54     		strb	r3, [r5, r0]
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
 2353              		.loc 7 77 0
 2354 01bc F36B     		ldr	r3, [r6, #60]
 2355 01be 1B0A     		lsrs	r3, r3, #8
 2356 01c0 421C     		adds	r2, r0, #1
 2357 01c2 AB54     		strb	r3, [r5, r2]
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
 2358              		.loc 7 78 0
 2359 01c4 F28F     		ldrh	r2, [r6, #62]
 2360 01c6 831C     		adds	r3, r0, #2
 2361 01c8 EA54     		strb	r2, [r5, r3]
  79:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2362              		.loc 7 79 0
 2363 01ca 96F83F20 		ldrb	r2, [r6, #63]	@ zero_extendqisi2
 2364 01ce C31C     		adds	r3, r0, #3
 2365 01d0 EA54     		strb	r2, [r5, r3]
  80:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2366              		.loc 7 80 0
 2367 01d2 0430     		adds	r0, r0, #4
 2368              	.LVL301:
 2369              	.LBB243:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2370              		.loc 7 81 0
 2371 01d4 0024     		movs	r4, #0
 2372              	.LVL302:
 2373 01d6 17E0     		b	.L130
 2374              	.LVL303:
 2375              	.L127:
 2376              	.LBB244:
 2377              	.LBB245:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2378              		.loc 10 74 0
 2379 01d8 0027     		movs	r7, #0
 2380 01da 1770     		strb	r7, [r2]
 2381              	.LVL304:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2382              		.loc 10 75 0
 2383 01dc 5770     		strb	r7, [r2, #1]
 2384              	.LVL305:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2385              		.loc 10 76 0
 2386 01de 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 69


 2387              		.loc 10 77 0
 2388 01e0 5F01     		lsls	r7, r3, #5
 2389              	.LVL306:
 2390 01e2 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2391              		.loc 10 78 0
 2392 01e4 DF10     		asrs	r7, r3, #3
 2393              	.LVL307:
 2394 01e6 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2395              		.loc 10 79 0
 2396 01e8 DF12     		asrs	r7, r3, #11
 2397              	.LVL308:
 2398 01ea 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2399              		.loc 10 80 0
 2400 01ec C3F3C343 		ubfx	r3, r3, #19, #4
 2401              	.LVL309:
 2402 01f0 43EA0113 		orr	r3, r3, r1, lsl #4
 2403 01f4 9371     		strb	r3, [r2, #6]
 2404              	.LVL310:
  81:ROSSerial/ros/msg.h **** 
 2405              		.loc 10 81 0
 2406 01f6 0909     		lsrs	r1, r1, #4
 2407              	.LVL311:
 2408 01f8 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2409              		.loc 10 84 0
 2410 01fa F5EEC07A 		vcmpe.f32	s15, #0
 2411 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2412 0202 13D4     		bmi	.L137
 2413              	.L128:
 2414              	.LVL312:
 2415              	.LBE245:
 2416              	.LBE244:
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2417              		.loc 7 82 0
 2418 0204 0830     		adds	r0, r0, #8
 2419              	.LVL313:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2420              		.loc 7 81 0
 2421 0206 0134     		adds	r4, r4, #1
 2422              	.LVL314:
 2423              	.L130:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2424              		.loc 7 81 0 is_stmt 0 discriminator 3
 2425 0208 F36B     		ldr	r3, [r6, #60]
 2426 020a A342     		cmp	r3, r4
 2427 020c 12D9     		bls	.L111
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2428              		.loc 7 82 0 is_stmt 1 discriminator 2
 2429 020e 2A18     		adds	r2, r5, r0
 2430 0210 736C     		ldr	r3, [r6, #68]
 2431 0212 03EB8403 		add	r3, r3, r4, lsl #2
 2432 0216 D3ED007A 		vldr.32	s15, [r3]
 2433              	.LVL315:
 2434              	.LBB247:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 70


 2435              	.LBB246:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2436              		.loc 10 67 0 discriminator 2
 2437 021a 17EE903A 		vmov	r3, s15	@ int
 2438 021e C3F3C751 		ubfx	r1, r3, #23, #8
 2439              	.LVL316:
  68:ROSSerial/ros/msg.h ****     {
 2440              		.loc 10 68 0 discriminator 2
 2441 0222 0029     		cmp	r1, #0
 2442 0224 D8D0     		beq	.L127
  70:ROSSerial/ros/msg.h ****     }
 2443              		.loc 10 70 0
 2444 0226 01F56071 		add	r1, r1, #896
 2445              	.LVL317:
 2446 022a D5E7     		b	.L127
 2447              	.LVL318:
 2448              	.L137:
  86:ROSSerial/ros/msg.h ****     }
 2449              		.loc 10 86 0
 2450 022c 61F07F01 		orn	r1, r1, #127
 2451 0230 D171     		strb	r1, [r2, #7]
 2452 0232 E7E7     		b	.L128
 2453              	.LVL319:
 2454              	.L111:
 2455              	.LBE246:
 2456              	.LBE247:
 2457              	.LBE243:
  85:ROSSerial/sensor_msgs/JointState.h **** 
 2458              		.loc 7 85 0
 2459 0234 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2460              		.cfi_endproc
 2461              	.LFE487:
 2462              		.cantunwind
 2463              		.fnend
 2465              		.section	.text._ZN11sensor_msgs10JointState11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs10Join
 2466              		.align	1
 2467              		.weak	_ZN11sensor_msgs10JointState11deserializeEPh
 2468              		.syntax unified
 2469              		.thumb
 2470              		.thumb_func
 2471              		.fpu fpv4-sp-d16
 2473              	_ZN11sensor_msgs10JointState11deserializeEPh:
 2474              		.fnstart
 2475              	.LFB488:
  87:ROSSerial/sensor_msgs/JointState.h ****     {
 2476              		.loc 7 87 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
 2480              	.LVL320:
 2481 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2482              	.LCFI15:
 2483              		.cfi_def_cfa_offset 24
 2484              		.cfi_offset 3, -24
 2485              		.cfi_offset 4, -20
 2486              		.cfi_offset 5, -16
 2487              		.cfi_offset 6, -12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 71


 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 0446     		mov	r4, r0
 2491 0004 0D46     		mov	r5, r1
 2492              	.LVL321:
  90:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 2493              		.loc 7 90 0
 2494 0006 021D     		adds	r2, r0, #4
 2495              	.LVL322:
 2496              	.LBB266:
 2497              	.LBB267:
  49:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2498              		.loc 6 49 0
 2499 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2500 000a 5360     		str	r3, [r2, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2501              		.loc 6 50 0
 2502 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 2503              	.LVL323:
 2504 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 2505 0012 5360     		str	r3, [r2, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2506              		.loc 6 51 0
 2507 0014 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2508 0016 43EA0143 		orr	r3, r3, r1, lsl #16
 2509 001a 5360     		str	r3, [r2, #4]
  52:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2510              		.loc 6 52 0
 2511 001c E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 2512 001e 43EA0163 		orr	r3, r3, r1, lsl #24
 2513 0022 5360     		str	r3, [r2, #4]
 2514              	.LVL324:
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2515              		.loc 6 54 0
 2516 0024 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2517 0026 9360     		str	r3, [r2, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2518              		.loc 6 55 0
 2519 0028 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 2520 002a 43EA0123 		orr	r3, r3, r1, lsl #8
 2521 002e 9360     		str	r3, [r2, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2522              		.loc 6 56 0
 2523 0030 A979     		ldrb	r1, [r5, #6]	@ zero_extendqisi2
 2524 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 2525 0036 9360     		str	r3, [r2, #8]
  57:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2526              		.loc 6 57 0
 2527 0038 E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 2528 003a 43EA0163 		orr	r3, r3, r1, lsl #24
 2529 003e 9360     		str	r3, [r2, #8]
 2530              	.LVL325:
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2531              		.loc 6 59 0
 2532 0040 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2533 0042 D360     		str	r3, [r2, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 72


 2534              		.loc 6 60 0
 2535 0044 697A     		ldrb	r1, [r5, #9]	@ zero_extendqisi2
 2536 0046 43EA0123 		orr	r3, r3, r1, lsl #8
 2537 004a D360     		str	r3, [r2, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2538              		.loc 6 61 0
 2539 004c A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 2540 004e 43EA0143 		orr	r3, r3, r1, lsl #16
 2541 0052 D360     		str	r3, [r2, #12]
  62:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2542              		.loc 6 62 0
 2543 0054 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 2544 0056 43EA0163 		orr	r3, r3, r1, lsl #24
 2545 005a D360     		str	r3, [r2, #12]
 2546              	.LVL326:
  65:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2547              		.loc 6 65 0
 2548 005c EF68     		ldr	r7, [r5, #12]	@ unaligned
 2549              	.LVL327:
 2550              	.LBB268:
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2551              		.loc 6 67 0
 2552 005e 1023     		movs	r3, #16
 2553              	.LVL328:
 2554              	.L140:
 2555 0060 07F11006 		add	r6, r7, #16
 2556 0064 9E42     		cmp	r6, r3
 2557 0066 04D9     		bls	.L139
  68:ROSSerial/std_msgs/Header.h ****       }
 2558              		.loc 6 68 0
 2559 0068 591E     		subs	r1, r3, #1
 2560 006a E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 2561 006c 6854     		strb	r0, [r5, r1]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2562              		.loc 6 67 0
 2563 006e 0133     		adds	r3, r3, #1
 2564              	.LVL329:
 2565 0070 F6E7     		b	.L140
 2566              	.L139:
 2567              	.LBE268:
  70:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2568              		.loc 6 70 0
 2569 0072 0F37     		adds	r7, r7, #15
 2570              	.LVL330:
 2571 0074 0023     		movs	r3, #0
 2572              	.LVL331:
 2573 0076 EB55     		strb	r3, [r5, r7]
  71:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2574              		.loc 6 71 0
 2575 0078 05F10F03 		add	r3, r5, #15
 2576 007c 1361     		str	r3, [r2, #16]
 2577              	.LVL332:
 2578              	.LBE267:
 2579              	.LBE266:
  91:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2580              		.loc 7 91 0
 2581 007e AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 73


 2582              	.LVL333:
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2583              		.loc 7 92 0
 2584 0080 731C     		adds	r3, r6, #1
 2585 0082 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2586 0084 47EA0327 		orr	r7, r7, r3, lsl #8
 2587              	.LVL334:
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2588              		.loc 7 93 0
 2589 0088 B31C     		adds	r3, r6, #2
 2590 008a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2591 008c 47EA0347 		orr	r7, r7, r3, lsl #16
 2592              	.LVL335:
  94:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2593              		.loc 7 94 0
 2594 0090 F31C     		adds	r3, r6, #3
 2595 0092 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2596 0094 47EA0367 		orr	r7, r7, r3, lsl #24
 2597              	.LVL336:
  95:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
 2598              		.loc 7 95 0
 2599 0098 0436     		adds	r6, r6, #4
 2600              	.LVL337:
  96:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
 2601              		.loc 7 96 0
 2602 009a A369     		ldr	r3, [r4, #24]
 2603 009c BB42     		cmp	r3, r7
 2604 009e 02D3     		bcc	.L161
 2605              	.L141:
  98:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2606              		.loc 7 98 0
 2607 00a0 A761     		str	r7, [r4, #24]
 2608              	.LVL338:
 2609              	.LBB269:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2610              		.loc 7 99 0
 2611 00a2 0020     		movs	r0, #0
 2612 00a4 1AE0     		b	.L147
 2613              	.LVL339:
 2614              	.L161:
 2615              	.LBE269:
  97:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
 2616              		.loc 7 97 0
 2617 00a6 B900     		lsls	r1, r7, #2
 2618 00a8 206A     		ldr	r0, [r4, #32]
 2619 00aa FFF7FEFF 		bl	realloc
 2620              	.LVL340:
 2621 00ae 2062     		str	r0, [r4, #32]
 2622 00b0 F6E7     		b	.L141
 2623              	.LVL341:
 2624              	.L143:
 2625              	.LBB276:
 2626              	.LBB270:
 102:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 2627              		.loc 7 102 0
 2628 00b2 0436     		adds	r6, r6, #4
 2629              	.LVL342:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 74


 2630              	.LBB271:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2631              		.loc 7 103 0
 2632 00b4 3346     		mov	r3, r6
 2633              	.LVL343:
 2634              	.L146:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2635              		.loc 7 103 0 is_stmt 0 discriminator 3
 2636 00b6 B118     		adds	r1, r6, r2
 2637 00b8 9942     		cmp	r1, r3
 2638 00ba 04D9     		bls	.L145
 104:ROSSerial/sensor_msgs/JointState.h ****       }
 2639              		.loc 7 104 0 is_stmt 1 discriminator 2
 2640 00bc 591E     		subs	r1, r3, #1
 2641 00be EF5C     		ldrb	r7, [r5, r3]	@ zero_extendqisi2
 2642 00c0 6F54     		strb	r7, [r5, r1]
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2643              		.loc 7 103 0 discriminator 2
 2644 00c2 0133     		adds	r3, r3, #1
 2645              	.LVL344:
 2646 00c4 F7E7     		b	.L146
 2647              	.L145:
 2648              	.LBE271:
 106:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 2649              		.loc 7 106 0 discriminator 2
 2650 00c6 4B1E     		subs	r3, r1, #1
 2651              	.LVL345:
 2652 00c8 0022     		movs	r2, #0
 2653              	.LVL346:
 2654 00ca EA54     		strb	r2, [r5, r3]
 107:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 2655              		.loc 7 107 0 discriminator 2
 2656 00cc 013E     		subs	r6, r6, #1
 2657 00ce AB19     		adds	r3, r5, r6
 2658 00d0 E361     		str	r3, [r4, #28]
 108:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 2659              		.loc 7 108 0 discriminator 2
 2660 00d2 0E46     		mov	r6, r1
 2661              	.LVL347:
 109:ROSSerial/sensor_msgs/JointState.h ****       }
 2662              		.loc 7 109 0 discriminator 2
 2663 00d4 226A     		ldr	r2, [r4, #32]
 2664 00d6 42F82030 		str	r3, [r2, r0, lsl #2]	@ unaligned
 2665              	.LBE270:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2666              		.loc 7 99 0 discriminator 2
 2667 00da 0130     		adds	r0, r0, #1
 2668              	.LVL348:
 2669              	.L147:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2670              		.loc 7 99 0 is_stmt 0 discriminator 1
 2671 00dc A369     		ldr	r3, [r4, #24]
 2672 00de 8342     		cmp	r3, r0
 2673 00e0 0CD9     		bls	.L142
 2674              	.LBB275:
 101:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2675              		.loc 7 101 0 is_stmt 1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 75


 2676 00e2 B446     		mov	ip, r6
 2677              	.LVL349:
 2678              	.LBB272:
 2679              	.LBB273:
 133:ROSSerial/ros/msg.h ****   }
 134:ROSSerial/ros/msg.h **** 
 135:ROSSerial/ros/msg.h ****   // Copy data from a byte array into variable
 136:ROSSerial/ros/msg.h ****   template<typename V, typename A>
 137:ROSSerial/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 138:ROSSerial/ros/msg.h ****   {
 139:ROSSerial/ros/msg.h ****     var = 0;
 2680              		.loc 10 139 0
 2681 00e4 0022     		movs	r2, #0
 2682              	.LBB274:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2683              		.loc 10 140 0
 2684 00e6 1346     		mov	r3, r2
 2685              	.LVL350:
 2686              	.L144:
 2687 00e8 032B     		cmp	r3, #3
 2688 00ea E2D8     		bhi	.L143
 141:ROSSerial/ros/msg.h ****       var |= (arr[i] << (8 * i));
 2689              		.loc 10 141 0
 2690 00ec 05EB0C01 		add	r1, r5, ip
 2691 00f0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 2692 00f2 DF00     		lsls	r7, r3, #3
 2693 00f4 B940     		lsls	r1, r1, r7
 2694 00f6 0A43     		orrs	r2, r2, r1
 2695              	.LVL351:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2696              		.loc 10 140 0
 2697 00f8 0133     		adds	r3, r3, #1
 2698              	.LVL352:
 2699 00fa F5E7     		b	.L144
 2700              	.LVL353:
 2701              	.L142:
 2702              	.LBE274:
 2703              	.LBE273:
 2704              	.LBE272:
 2705              	.LBE275:
 2706              	.LBE276:
 111:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2707              		.loc 7 111 0
 2708 00fc AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2709              	.LVL354:
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2710              		.loc 7 112 0
 2711 00fe 731C     		adds	r3, r6, #1
 2712 0100 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2713 0102 47EA0327 		orr	r7, r7, r3, lsl #8
 2714              	.LVL355:
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2715              		.loc 7 113 0
 2716 0106 B31C     		adds	r3, r6, #2
 2717 0108 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2718 010a 47EA0347 		orr	r7, r7, r3, lsl #16
 2719              	.LVL356:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 76


 114:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2720              		.loc 7 114 0
 2721 010e F31C     		adds	r3, r6, #3
 2722 0110 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2723 0112 47EA0367 		orr	r7, r7, r3, lsl #24
 2724              	.LVL357:
 115:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 2725              		.loc 7 115 0
 2726 0116 0436     		adds	r6, r6, #4
 2727              	.LVL358:
 116:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 2728              		.loc 7 116 0
 2729 0118 636A     		ldr	r3, [r4, #36]
 2730 011a BB42     		cmp	r3, r7
 2731 011c 02D3     		bcc	.L162
 2732              	.LVL359:
 2733              	.L148:
 118:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2734              		.loc 7 118 0
 2735 011e 6762     		str	r7, [r4, #36]
 2736              	.LVL360:
 2737              	.LBB277:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2738              		.loc 7 119 0
 2739 0120 0020     		movs	r0, #0
 2740 0122 12E0     		b	.L151
 2741              	.LVL361:
 2742              	.L162:
 2743              	.LBE277:
 117:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 2744              		.loc 7 117 0
 2745 0124 B900     		lsls	r1, r7, #2
 2746 0126 E06A     		ldr	r0, [r4, #44]
 2747              	.LVL362:
 2748 0128 FFF7FEFF 		bl	realloc
 2749              	.LVL363:
 2750 012c E062     		str	r0, [r4, #44]
 2751 012e F6E7     		b	.L148
 2752              	.LVL364:
 2753              	.L150:
 2754              	.LBB282:
 2755              	.LBB278:
 2756              	.LBB279:
 122:ROSSerial/ros/msg.h **** 
 2757              		.loc 10 122 0
 2758 0130 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2759 0132 1B06     		lsls	r3, r3, #24
 2760 0134 03F00043 		and	r3, r3, #-2147483648
 2761 0138 A26A     		ldr	r2, [r4, #40]
 2762 013a 1343     		orrs	r3, r3, r2
 2763 013c A362     		str	r3, [r4, #40]
 2764              	.LVL365:
 2765              	.LBE279:
 2766              	.LBE278:
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2767              		.loc 7 120 0
 2768 013e 0836     		adds	r6, r6, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 77


 2769              	.LVL366:
 121:ROSSerial/sensor_msgs/JointState.h ****       }
 2770              		.loc 7 121 0
 2771 0140 E36A     		ldr	r3, [r4, #44]
 2772 0142 A26A     		ldr	r2, [r4, #40]	@ unaligned
 2773 0144 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2774              		.loc 7 119 0
 2775 0148 0130     		adds	r0, r0, #1
 2776              	.LVL367:
 2777              	.L151:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2778              		.loc 7 119 0 is_stmt 0 discriminator 3
 2779 014a 636A     		ldr	r3, [r4, #36]
 2780 014c 8342     		cmp	r3, r0
 2781 014e 1FD9     		bls	.L149
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2782              		.loc 7 120 0 is_stmt 1 discriminator 2
 2783 0150 A919     		adds	r1, r5, r6
 2784              	.LVL368:
 2785              	.LBB281:
 2786              	.LBB280:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2787              		.loc 10 108 0 discriminator 2
 2788 0152 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2789 0154 5B09     		lsrs	r3, r3, #5
 2790 0156 A362     		str	r3, [r4, #40]
 2791              	.LVL369:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2792              		.loc 10 109 0 discriminator 2
 2793 0158 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2794 015a 43EAC203 		orr	r3, r3, r2, lsl #3
 2795 015e A362     		str	r3, [r4, #40]
 2796              	.LVL370:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2797              		.loc 10 110 0 discriminator 2
 2798 0160 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2799 0162 43EAC223 		orr	r3, r3, r2, lsl #11
 2800 0166 A362     		str	r3, [r4, #40]
 111:ROSSerial/ros/msg.h **** 
 2801              		.loc 10 111 0 discriminator 2
 2802 0168 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2803 016a D204     		lsls	r2, r2, #19
 2804 016c 02F4F002 		and	r2, r2, #7864320
 2805 0170 1343     		orrs	r3, r3, r2
 2806 0172 A362     		str	r3, [r4, #40]
 2807              	.LVL371:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2808              		.loc 10 114 0 discriminator 2
 2809 0174 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2810              	.LVL372:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2811              		.loc 10 115 0 discriminator 2
 2812 0176 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2813 0178 1201     		lsls	r2, r2, #4
 2814 017a 02F4FE62 		and	r2, r2, #2032
 2815              	.LVL373:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 78


 116:ROSSerial/ros/msg.h ****     {
 2816              		.loc 10 116 0 discriminator 2
 2817 017e 52EA1712 		orrs	r2, r2, r7, lsr #4
 2818              	.LVL374:
 2819 0182 D5D0     		beq	.L150
 118:ROSSerial/ros/msg.h ****     }
 2820              		.loc 10 118 0
 2821 0184 A2F56072 		sub	r2, r2, #896
 2822              	.LVL375:
 2823 0188 43EAC253 		orr	r3, r3, r2, lsl #23
 2824 018c A362     		str	r3, [r4, #40]
 2825 018e CFE7     		b	.L150
 2826              	.LVL376:
 2827              	.L149:
 2828              	.LBE280:
 2829              	.LBE281:
 2830              	.LBE282:
 123:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2831              		.loc 7 123 0
 2832 0190 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2833              	.LVL377:
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2834              		.loc 7 124 0
 2835 0192 731C     		adds	r3, r6, #1
 2836 0194 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2837 0196 47EA0327 		orr	r7, r7, r3, lsl #8
 2838              	.LVL378:
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2839              		.loc 7 125 0
 2840 019a B31C     		adds	r3, r6, #2
 2841 019c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2842 019e 47EA0347 		orr	r7, r7, r3, lsl #16
 2843              	.LVL379:
 126:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2844              		.loc 7 126 0
 2845 01a2 F31C     		adds	r3, r6, #3
 2846 01a4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2847 01a6 47EA0367 		orr	r7, r7, r3, lsl #24
 2848              	.LVL380:
 127:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 2849              		.loc 7 127 0
 2850 01aa 0436     		adds	r6, r6, #4
 2851              	.LVL381:
 128:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 2852              		.loc 7 128 0
 2853 01ac 236B     		ldr	r3, [r4, #48]
 2854 01ae BB42     		cmp	r3, r7
 2855 01b0 02D3     		bcc	.L163
 2856              	.LVL382:
 2857              	.L152:
 130:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2858              		.loc 7 130 0
 2859 01b2 2763     		str	r7, [r4, #48]
 2860              	.LVL383:
 2861              	.LBB283:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2862              		.loc 7 131 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 79


 2863 01b4 0020     		movs	r0, #0
 2864 01b6 12E0     		b	.L155
 2865              	.LVL384:
 2866              	.L163:
 2867              	.LBE283:
 129:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 2868              		.loc 7 129 0
 2869 01b8 B900     		lsls	r1, r7, #2
 2870 01ba A06B     		ldr	r0, [r4, #56]
 2871              	.LVL385:
 2872 01bc FFF7FEFF 		bl	realloc
 2873              	.LVL386:
 2874 01c0 A063     		str	r0, [r4, #56]
 2875 01c2 F6E7     		b	.L152
 2876              	.LVL387:
 2877              	.L154:
 2878              	.LBB288:
 2879              	.LBB284:
 2880              	.LBB285:
 122:ROSSerial/ros/msg.h **** 
 2881              		.loc 10 122 0
 2882 01c4 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2883 01c6 1B06     		lsls	r3, r3, #24
 2884 01c8 03F00043 		and	r3, r3, #-2147483648
 2885 01cc 626B     		ldr	r2, [r4, #52]
 2886 01ce 1343     		orrs	r3, r3, r2
 2887 01d0 6363     		str	r3, [r4, #52]
 2888              	.LVL388:
 2889              	.LBE285:
 2890              	.LBE284:
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2891              		.loc 7 132 0
 2892 01d2 0836     		adds	r6, r6, #8
 2893              	.LVL389:
 133:ROSSerial/sensor_msgs/JointState.h ****       }
 2894              		.loc 7 133 0
 2895 01d4 A36B     		ldr	r3, [r4, #56]
 2896 01d6 626B     		ldr	r2, [r4, #52]	@ unaligned
 2897 01d8 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2898              		.loc 7 131 0
 2899 01dc 0130     		adds	r0, r0, #1
 2900              	.LVL390:
 2901              	.L155:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2902              		.loc 7 131 0 is_stmt 0 discriminator 3
 2903 01de 236B     		ldr	r3, [r4, #48]
 2904 01e0 8342     		cmp	r3, r0
 2905 01e2 1FD9     		bls	.L153
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2906              		.loc 7 132 0 is_stmt 1 discriminator 2
 2907 01e4 A919     		adds	r1, r5, r6
 2908              	.LVL391:
 2909              	.LBB287:
 2910              	.LBB286:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2911              		.loc 10 108 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 80


 2912 01e6 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2913 01e8 5B09     		lsrs	r3, r3, #5
 2914 01ea 6363     		str	r3, [r4, #52]
 2915              	.LVL392:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2916              		.loc 10 109 0 discriminator 2
 2917 01ec 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2918 01ee 43EAC203 		orr	r3, r3, r2, lsl #3
 2919 01f2 6363     		str	r3, [r4, #52]
 2920              	.LVL393:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2921              		.loc 10 110 0 discriminator 2
 2922 01f4 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2923 01f6 43EAC223 		orr	r3, r3, r2, lsl #11
 2924 01fa 6363     		str	r3, [r4, #52]
 111:ROSSerial/ros/msg.h **** 
 2925              		.loc 10 111 0 discriminator 2
 2926 01fc 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2927 01fe D204     		lsls	r2, r2, #19
 2928 0200 02F4F002 		and	r2, r2, #7864320
 2929 0204 1343     		orrs	r3, r3, r2
 2930 0206 6363     		str	r3, [r4, #52]
 2931              	.LVL394:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2932              		.loc 10 114 0 discriminator 2
 2933 0208 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2934              	.LVL395:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2935              		.loc 10 115 0 discriminator 2
 2936 020a CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2937 020c 1201     		lsls	r2, r2, #4
 2938 020e 02F4FE62 		and	r2, r2, #2032
 2939              	.LVL396:
 116:ROSSerial/ros/msg.h ****     {
 2940              		.loc 10 116 0 discriminator 2
 2941 0212 52EA1712 		orrs	r2, r2, r7, lsr #4
 2942              	.LVL397:
 2943 0216 D5D0     		beq	.L154
 118:ROSSerial/ros/msg.h ****     }
 2944              		.loc 10 118 0
 2945 0218 A2F56072 		sub	r2, r2, #896
 2946              	.LVL398:
 2947 021c 43EAC253 		orr	r3, r3, r2, lsl #23
 2948 0220 6363     		str	r3, [r4, #52]
 2949 0222 CFE7     		b	.L154
 2950              	.LVL399:
 2951              	.L153:
 2952              	.LBE286:
 2953              	.LBE287:
 2954              	.LBE288:
 135:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2955              		.loc 7 135 0
 2956 0224 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2957              	.LVL400:
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2958              		.loc 7 136 0
 2959 0226 731C     		adds	r3, r6, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 81


 2960 0228 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2961 022a 47EA0327 		orr	r7, r7, r3, lsl #8
 2962              	.LVL401:
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2963              		.loc 7 137 0
 2964 022e B31C     		adds	r3, r6, #2
 2965 0230 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2966 0232 47EA0347 		orr	r7, r7, r3, lsl #16
 2967              	.LVL402:
 138:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2968              		.loc 7 138 0
 2969 0236 F31C     		adds	r3, r6, #3
 2970 0238 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2971 023a 47EA0367 		orr	r7, r7, r3, lsl #24
 2972              	.LVL403:
 139:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 2973              		.loc 7 139 0
 2974 023e 0436     		adds	r6, r6, #4
 2975              	.LVL404:
 140:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 2976              		.loc 7 140 0
 2977 0240 E36B     		ldr	r3, [r4, #60]
 2978 0242 BB42     		cmp	r3, r7
 2979 0244 02D3     		bcc	.L164
 2980              	.LVL405:
 2981              	.L156:
 142:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2982              		.loc 7 142 0
 2983 0246 E763     		str	r7, [r4, #60]
 2984              	.LVL406:
 2985              	.LBB289:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2986              		.loc 7 143 0
 2987 0248 0020     		movs	r0, #0
 2988 024a 12E0     		b	.L159
 2989              	.LVL407:
 2990              	.L164:
 2991              	.LBE289:
 141:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 2992              		.loc 7 141 0
 2993 024c B900     		lsls	r1, r7, #2
 2994 024e 606C     		ldr	r0, [r4, #68]
 2995              	.LVL408:
 2996 0250 FFF7FEFF 		bl	realloc
 2997              	.LVL409:
 2998 0254 6064     		str	r0, [r4, #68]
 2999 0256 F6E7     		b	.L156
 3000              	.LVL410:
 3001              	.L158:
 3002              	.LBB294:
 3003              	.LBB290:
 3004              	.LBB291:
 122:ROSSerial/ros/msg.h **** 
 3005              		.loc 10 122 0
 3006 0258 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 3007 025a 1B06     		lsls	r3, r3, #24
 3008 025c 03F00043 		and	r3, r3, #-2147483648
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 82


 3009 0260 226C     		ldr	r2, [r4, #64]
 3010 0262 1343     		orrs	r3, r3, r2
 3011 0264 2364     		str	r3, [r4, #64]
 3012              	.LVL411:
 3013              	.LBE291:
 3014              	.LBE290:
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3015              		.loc 7 144 0
 3016 0266 0836     		adds	r6, r6, #8
 3017              	.LVL412:
 145:ROSSerial/sensor_msgs/JointState.h ****       }
 3018              		.loc 7 145 0
 3019 0268 636C     		ldr	r3, [r4, #68]
 3020 026a 226C     		ldr	r2, [r4, #64]	@ unaligned
 3021 026c 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3022              		.loc 7 143 0
 3023 0270 0130     		adds	r0, r0, #1
 3024              	.LVL413:
 3025              	.L159:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3026              		.loc 7 143 0 is_stmt 0 discriminator 3
 3027 0272 E36B     		ldr	r3, [r4, #60]
 3028 0274 8342     		cmp	r3, r0
 3029 0276 1FD9     		bls	.L138
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3030              		.loc 7 144 0 is_stmt 1 discriminator 2
 3031 0278 A919     		adds	r1, r5, r6
 3032              	.LVL414:
 3033              	.LBB293:
 3034              	.LBB292:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3035              		.loc 10 108 0 discriminator 2
 3036 027a CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 3037 027c 5B09     		lsrs	r3, r3, #5
 3038 027e 2364     		str	r3, [r4, #64]
 3039              	.LVL415:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3040              		.loc 10 109 0 discriminator 2
 3041 0280 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 3042 0282 43EAC203 		orr	r3, r3, r2, lsl #3
 3043 0286 2364     		str	r3, [r4, #64]
 3044              	.LVL416:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3045              		.loc 10 110 0 discriminator 2
 3046 0288 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 3047 028a 43EAC223 		orr	r3, r3, r2, lsl #11
 3048 028e 2364     		str	r3, [r4, #64]
 111:ROSSerial/ros/msg.h **** 
 3049              		.loc 10 111 0 discriminator 2
 3050 0290 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 3051 0292 D204     		lsls	r2, r2, #19
 3052 0294 02F4F002 		and	r2, r2, #7864320
 3053 0298 1343     		orrs	r3, r3, r2
 3054 029a 2364     		str	r3, [r4, #64]
 3055              	.LVL417:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 83


 3056              		.loc 10 114 0 discriminator 2
 3057 029c 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 3058              	.LVL418:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 3059              		.loc 10 115 0 discriminator 2
 3060 029e CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 3061 02a0 1201     		lsls	r2, r2, #4
 3062 02a2 02F4FE62 		and	r2, r2, #2032
 3063              	.LVL419:
 116:ROSSerial/ros/msg.h ****     {
 3064              		.loc 10 116 0 discriminator 2
 3065 02a6 52EA1712 		orrs	r2, r2, r7, lsr #4
 3066              	.LVL420:
 3067 02aa D5D0     		beq	.L158
 118:ROSSerial/ros/msg.h ****     }
 3068              		.loc 10 118 0
 3069 02ac A2F56072 		sub	r2, r2, #896
 3070              	.LVL421:
 3071 02b0 43EAC253 		orr	r3, r3, r2, lsl #23
 3072 02b4 2364     		str	r3, [r4, #64]
 3073 02b6 CFE7     		b	.L158
 3074              	.LVL422:
 3075              	.L138:
 3076              	.LBE292:
 3077              	.LBE293:
 3078              	.LBE294:
 148:ROSSerial/sensor_msgs/JointState.h **** 
 3079              		.loc 7 148 0
 3080 02b8 3046     		mov	r0, r6
 3081              	.LVL423:
 3082 02ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3083              		.cfi_endproc
 3084              	.LFE488:
 3085              		.cantunwind
 3086              		.fnend
 3088              		.section	.text.ros_init,"ax",%progbits
 3089              		.align	1
 3090              		.global	ros_init
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv4-sp-d16
 3096              	ros_init:
 3097              		.fnstart
 3098              	.LFB491:
  35:./Src/ROS_main.cpp **** {
 3099              		.loc 8 35 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 80
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3104              		.save {r4, r5, r6, r7, r8, lr}
 3105              	.LCFI16:
 3106              		.cfi_def_cfa_offset 24
 3107              		.cfi_offset 4, -24
 3108              		.cfi_offset 5, -20
 3109              		.cfi_offset 6, -16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 84


 3110              		.cfi_offset 7, -12
 3111              		.cfi_offset 8, -8
 3112              		.cfi_offset 14, -4
 3113              		.pad #80
 3114 0004 94B0     		sub	sp, sp, #80
 3115              	.LCFI17:
 3116              		.cfi_def_cfa_offset 104
 3117              	.LVL424:
 3118              	.LBB320:
 3119              	.LBB321:
 3120              	.LBB322:
 3121              	.LBB323:
 3122              		.file 11 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "stm32f1xx_hal.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** #include "setup.h"
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern UART_HandleTypeDef huart2; 
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** extern uint8_t g_RxBuf[];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 85


  45:ROSSerial/AT32hardware.h **** extern uint8_t byte;		/* receive byte */
  46:ROSSerial/AT32hardware.h **** extern uint8_t g_RxRead;
  47:ROSSerial/AT32hardware.h **** extern uint8_t g_RxWritten;
  48:ROSSerial/AT32hardware.h **** 
  49:ROSSerial/AT32hardware.h **** class STM32Hardware
  50:ROSSerial/AT32hardware.h **** {
  51:ROSSerial/AT32hardware.h **** public:
  52:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  53:ROSSerial/AT32hardware.h **** 	{
  54:ROSSerial/AT32hardware.h **** 	}
  55:ROSSerial/AT32hardware.h **** 
  56:ROSSerial/AT32hardware.h **** 	/*
  57:ROSSerial/AT32hardware.h **** 	 * Method: init
  58:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  59:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  60:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  61:ROSSerial/AT32hardware.h **** 	 *   returns: none
  62:ROSSerial/AT32hardware.h **** 	 */
  63:ROSSerial/AT32hardware.h **** 	void init(void)
  64:ROSSerial/AT32hardware.h **** 	{
  65:ROSSerial/AT32hardware.h **** 		if(HAL_UART_Receive_IT(&huart2, &byte, 1) != 0)
 3123              		.loc 11 65 0
 3124 0006 0122     		movs	r2, #1
 3125 0008 4749     		ldr	r1, .L177
 3126 000a 4848     		ldr	r0, .L177+4
 3127 000c FFF7FEFF 		bl	HAL_UART_Receive_IT
 3128              	.LVL425:
 3129              	.LBE323:
 3130              	.LBE322:
 188:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 3131              		.loc 9 188 0
 3132 0010 474D     		ldr	r5, .L177+8
 3133 0012 0024     		movs	r4, #0
 3134 0014 C5F80845 		str	r4, [r5, #1288]
 189:ROSSerial/ros/node_handle.h ****     index_ = 0;
 3135              		.loc 9 189 0
 3136 0018 C5F80C45 		str	r4, [r5, #1292]
 190:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 3137              		.loc 9 190 0
 3138 001c C5F81445 		str	r4, [r5, #1300]
 191:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 3139              		.loc 9 191 0
 3140 0020 C5F81045 		str	r4, [r5, #1296]
 192:ROSSerial/ros/node_handle.h ****   };
 3141              		.loc 9 192 0
 3142 0024 4348     		ldr	r0, .L177+12
 3143 0026 FFF7FEFF 		bl	puts
 3144              	.LVL426:
 3145              	.LBE321:
 3146              	.LBE320:
 3147              	.LBB324:
 3148              	.LBB325:
 215:ROSSerial/ros/node_handle.h ****   }
 3149              		.loc 9 215 0
 3150 002a 0523     		movs	r3, #5
 3151 002c 6B61     		str	r3, [r5, #20]
 3152              	.LVL427:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 86


 3153              	.LBE325:
 3154              	.LBE324:
  38:./Src/ROS_main.cpp ****     init_PID_control();
 3155              		.loc 8 38 0
 3156 002e FFF7FEFF 		bl	init_PID_control
 3157              	.LVL428:
 3158              	.LBB326:
 3159              	.LBB327:
 3160              	.LBB328:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3161              		.loc 7 40 0
 3162 0032 414B     		ldr	r3, .L177+16
 3163 0034 0293     		str	r3, [sp, #8]
 3164 0036 0494     		str	r4, [sp, #16]
 3165 0038 0794     		str	r4, [sp, #28]
 3166              	.LVL429:
 3167              	.LBB329:
 3168              	.LBB330:
  13:ROSSerial/std_msgs/Header.h ****   {
 3169              		.loc 6 13 0
 3170 003a 404B     		ldr	r3, .L177+20
 3171 003c 0393     		str	r3, [sp, #12]
 3172              	.LVL430:
 3173              	.LBB331:
 3174              	.LBB332:
 3175              	.LBB333:
 3176              		.file 12 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 87


  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 3177              		.loc 12 51 0
 3178 003e 0594     		str	r4, [sp, #20]
 3179 0040 0694     		str	r4, [sp, #24]
 3180              	.LVL431:
 3181              	.LBE333:
 3182              	.LBE332:
 3183              	.LBE331:
 3184              	.LBE330:
 3185              	.LBE329:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3186              		.loc 7 40 0
 3187 0042 0894     		str	r4, [sp, #32]
 3188 0044 0A94     		str	r4, [sp, #40]
 3189 0046 0B94     		str	r4, [sp, #44]
 3190 0048 0D94     		str	r4, [sp, #52]
 3191 004a 0E94     		str	r4, [sp, #56]
 3192 004c 1094     		str	r4, [sp, #64]
 3193 004e 1194     		str	r4, [sp, #68]
 3194 0050 1394     		str	r4, [sp, #76]
 3195              	.LVL432:
 3196              	.L168:
 3197              	.LBE328:
 3198              	.LBE327:
 3199              	.LBE326:
 3200              	.LBB334:
 3201              	.LBB335:
 3202              	.LBB336:
 407:ROSSerial/ros/node_handle.h **** 
 408:ROSSerial/ros/node_handle.h ****   /********************************************************************
 409:ROSSerial/ros/node_handle.h ****    * Time functions
 410:ROSSerial/ros/node_handle.h ****    */
 411:ROSSerial/ros/node_handle.h **** 
 412:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 413:ROSSerial/ros/node_handle.h ****   {
 414:ROSSerial/ros/node_handle.h ****     if(last_sync_receive_time < rt_time)
 415:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 88


 416:ROSSerial/ros/node_handle.h ****       //printf("skip requestSyncTime as one is pending %lu\n",hardware_.time());
 417:ROSSerial/ros/node_handle.h ****       return;
 418:ROSSerial/ros/node_handle.h ****     }
 419:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 420:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 421:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 422:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 423:ROSSerial/ros/node_handle.h ****     //printf("end requestSyncTime  rt_time=%lu\n",hardware_.time());
 424:ROSSerial/ros/node_handle.h ****   }
 425:ROSSerial/ros/node_handle.h **** 
 426:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 427:ROSSerial/ros/node_handle.h ****   {
 428:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 429:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 430:ROSSerial/ros/node_handle.h **** 
 431:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 432:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 433:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 434:ROSSerial/ros/node_handle.h **** 
 435:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 436:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     //printf("syncTime c_time=%lu, offset=%ld\n",c_time,offset);
 438:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = c_time;
 439:ROSSerial/ros/node_handle.h ****   }
 440:ROSSerial/ros/node_handle.h **** 
 441:ROSSerial/ros/node_handle.h ****   Time now()
 442:ROSSerial/ros/node_handle.h ****   {
 443:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 444:ROSSerial/ros/node_handle.h ****     Time current_time;
 445:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 446:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 447:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 448:ROSSerial/ros/node_handle.h ****     return current_time;
 449:ROSSerial/ros/node_handle.h ****   }
 450:ROSSerial/ros/node_handle.h **** 
 451:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 452:ROSSerial/ros/node_handle.h ****   {
 453:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 454:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 455:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 456:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 457:ROSSerial/ros/node_handle.h ****   }
 458:ROSSerial/ros/node_handle.h **** 
 459:ROSSerial/ros/node_handle.h ****   /********************************************************************
 460:ROSSerial/ros/node_handle.h ****    * Topic Management
 461:ROSSerial/ros/node_handle.h ****    */
 462:ROSSerial/ros/node_handle.h **** 
 463:ROSSerial/ros/node_handle.h ****    /* Register a new publisher without C++ template */
 464:ROSSerial/ros/node_handle.h ****   PublisherType* addPublisher(char * topic_name, Msg * msg)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 3203              		.loc 9 466 0
 3204 0052 042C     		cmp	r4, #4
 3205 0054 2CDC     		bgt	.L172
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id == 0) {// empty slot}
 3206              		.loc 9 468 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 89


 3207 0056 04EB8403 		add	r3, r4, r4, lsl #2
 3208 005a 354A     		ldr	r2, .L177+8
 3209 005c 02EB8303 		add	r3, r2, r3, lsl #2
 3210 0060 B3F82C34 		ldrh	r3, [r3, #1068]
 3211 0064 0BB1     		cbz	r3, .L175
 466:ROSSerial/ros/node_handle.h ****     {
 3212              		.loc 9 466 0
 3213 0066 0134     		adds	r4, r4, #1
 3214              	.LVL433:
 3215 0068 F3E7     		b	.L168
 3216              	.L175:
 469:ROSSerial/ros/node_handle.h **** 
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_id = i + 100 + MAX_SUBSCRIBERS;
 3217              		.loc 9 470 0
 3218 006a 04F16903 		add	r3, r4, #105
 3219 006e 1546     		mov	r5, r2
 3220 0070 A600     		lsls	r6, r4, #2
 3221 0072 3719     		adds	r7, r6, r4
 3222 0074 02EB8707 		add	r7, r2, r7, lsl #2
 3223 0078 A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3224              		.loc 9 471 0
 3225 007c 304B     		ldr	r3, .L177+24
 3226 007e C7F83034 		str	r3, [r7, #1072]
 472:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3227              		.loc 9 472 0
 3228 0082 0DF10808 		add	r8, sp, #8
 3229              	.LVL434:
 3230 0086 C7F83484 		str	r8, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3231              		.loc 9 473 0
 3232 008a 029B     		ldr	r3, [sp, #8]
 3233 008c 9B68     		ldr	r3, [r3, #8]
 3234 008e 4046     		mov	r0, r8
 3235 0090 9847     		blx	r3
 3236              	.LVL435:
 3237 0092 C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3238              		.loc 9 474 0
 3239 0096 029B     		ldr	r3, [sp, #8]
 3240 0098 DB68     		ldr	r3, [r3, #12]
 3241 009a 4046     		mov	r0, r8
 3242 009c 9847     		blx	r3
 3243              	.LVL436:
 3244 009e C7F83C04 		str	r0, [r7, #1084]
 475:ROSSerial/ros/node_handle.h **** 
 476:ROSSerial/ros/node_handle.h ****         return &publishers2[i];
 3245              		.loc 9 476 0
 3246 00a2 3319     		adds	r3, r6, r4
 3247 00a4 9B00     		lsls	r3, r3, #2
 3248 00a6 03F58563 		add	r3, r3, #1064
 3249 00aa 2B44     		add	r3, r3, r5
 3250 00ac 0433     		adds	r3, r3, #4
 3251 00ae 00E0     		b	.L166
 3252              	.LVL437:
 3253              	.L172:
 3254              	.LBE336:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 90


 477:ROSSerial/ros/node_handle.h ****       }
 478:ROSSerial/ros/node_handle.h ****     }
 479:ROSSerial/ros/node_handle.h ****     return nullptr;
 3255              		.loc 9 479 0
 3256 00b0 0023     		movs	r3, #0
 3257              	.L166:
 3258              	.LVL438:
 3259              	.LBE335:
 3260              	.LBE334:
  42:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hoverbot_state",  &tmpVar);
 3261              		.loc 8 42 0
 3262 00b2 244A     		ldr	r2, .L177+28
 3263 00b4 1360     		str	r3, [r2]
 3264              	.LVL439:
 3265              	.LBB337:
 3266              	.LBB338:
  13:ROSSerial/std_msgs/ROSString.h ****   {
 3267              		.loc 5 13 0
 3268 00b6 244B     		ldr	r3, .L177+32
 3269 00b8 0093     		str	r3, [sp]
 3270              	.LVL440:
 3271              	.LBE338:
 3272              	.LBE337:
 3273              	.LBB339:
 3274              	.LBB340:
 3275              	.LBB341:
 466:ROSSerial/ros/node_handle.h ****     {
 3276              		.loc 9 466 0
 3277 00ba 0024     		movs	r4, #0
 3278              	.L171:
 3279              	.LVL441:
 3280 00bc 042C     		cmp	r4, #4
 3281 00be 2ADC     		bgt	.L173
 468:ROSSerial/ros/node_handle.h **** 
 3282              		.loc 9 468 0
 3283 00c0 04EB8403 		add	r3, r4, r4, lsl #2
 3284 00c4 1A4A     		ldr	r2, .L177+8
 3285 00c6 02EB8303 		add	r3, r2, r3, lsl #2
 3286 00ca B3F82C34 		ldrh	r3, [r3, #1068]
 3287 00ce 0BB1     		cbz	r3, .L176
 466:ROSSerial/ros/node_handle.h ****     {
 3288              		.loc 9 466 0
 3289 00d0 0134     		adds	r4, r4, #1
 3290              	.LVL442:
 3291 00d2 F3E7     		b	.L171
 3292              	.L176:
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3293              		.loc 9 470 0
 3294 00d4 04F16903 		add	r3, r4, #105
 3295 00d8 1546     		mov	r5, r2
 3296 00da A600     		lsls	r6, r4, #2
 3297 00dc 3719     		adds	r7, r6, r4
 3298 00de 02EB8707 		add	r7, r2, r7, lsl #2
 3299 00e2 A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3300              		.loc 9 471 0
 3301 00e6 194B     		ldr	r3, .L177+36
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 91


 3302 00e8 C7F83034 		str	r3, [r7, #1072]
 472:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3303              		.loc 9 472 0
 3304 00ec C7F834D4 		str	sp, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3305              		.loc 9 473 0
 3306 00f0 009B     		ldr	r3, [sp]
 3307 00f2 9B68     		ldr	r3, [r3, #8]
 3308 00f4 6846     		mov	r0, sp
 3309 00f6 9847     		blx	r3
 3310              	.LVL443:
 3311 00f8 C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h **** 
 3312              		.loc 9 474 0
 3313 00fc 009B     		ldr	r3, [sp]
 3314 00fe DB68     		ldr	r3, [r3, #12]
 3315 0100 6846     		mov	r0, sp
 3316 0102 9847     		blx	r3
 3317              	.LVL444:
 3318 0104 C7F83C04 		str	r0, [r7, #1084]
 476:ROSSerial/ros/node_handle.h ****       }
 3319              		.loc 9 476 0
 3320 0108 3319     		adds	r3, r6, r4
 3321 010a 9B00     		lsls	r3, r3, #2
 3322 010c 03F58563 		add	r3, r3, #1064
 3323 0110 2B44     		add	r3, r3, r5
 3324 0112 0433     		adds	r3, r3, #4
 3325 0114 00E0     		b	.L169
 3326              	.L173:
 3327              	.LBE341:
 3328              		.loc 9 479 0
 3329 0116 0023     		movs	r3, #0
 3330              	.L169:
 3331              	.LVL445:
 3332              	.LBE340:
 3333              	.LBE339:
  46:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &tmpStr);
 3334              		.loc 8 46 0
 3335 0118 0D4A     		ldr	r2, .L177+40
 3336 011a 1360     		str	r3, [r2]
  49:./Src/ROS_main.cpp ****     rosSubscribeWheelsCmd(&nh);
 3337              		.loc 8 49 0
 3338 011c 0448     		ldr	r0, .L177+8
 3339 011e FFF7FEFF 		bl	_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 3340              	.LVL446:
  50:./Src/ROS_main.cpp **** }
 3341              		.loc 8 50 0
 3342 0122 14B0     		add	sp, sp, #80
 3343              	.LCFI18:
 3344              		.cfi_def_cfa_offset 24
 3345              		@ sp needed
 3346 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3347              	.L178:
 3348              		.align	2
 3349              	.L177:
 3350 0128 00000000 		.word	byte
 3351 012c 00000000 		.word	huart2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 92


 3352 0130 00000000 		.word	.LANCHOR1
 3353 0134 00000000 		.word	.LC16
 3354 0138 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 3355 013c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 3356 0140 0C000000 		.word	.LC17
 3357 0144 00000000 		.word	.LANCHOR2
 3358 0148 08000000 		.word	_ZTVN8std_msgs6StringE+8
 3359 014c 1C000000 		.word	.LC18
 3360 0150 00000000 		.word	.LANCHOR3
 3361              		.cfi_endproc
 3362              	.LFE491:
 3363              		.fnend
 3365              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE,"axG"
 3366              		.align	1
 3367              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3368              		.syntax unified
 3369              		.thumb
 3370              		.thumb_func
 3371              		.fpu fpv4-sp-d16
 3373              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:
 3374              		.fnstart
 3375              	.LFB512:
 480:ROSSerial/ros/node_handle.h ****   }
 481:ROSSerial/ros/node_handle.h **** 
 482:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 483:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 484:ROSSerial/ros/node_handle.h ****   {
 485:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 486:ROSSerial/ros/node_handle.h ****     {
 487:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 488:ROSSerial/ros/node_handle.h ****       {
 489:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 490:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 491:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 492:ROSSerial/ros/node_handle.h ****         return true;
 493:ROSSerial/ros/node_handle.h ****       }
 494:ROSSerial/ros/node_handle.h ****     }
 495:ROSSerial/ros/node_handle.h ****     return false;
 496:ROSSerial/ros/node_handle.h ****   }
 497:ROSSerial/ros/node_handle.h **** 
 498:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 499:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 500:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 501:ROSSerial/ros/node_handle.h ****   {
 502:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 503:ROSSerial/ros/node_handle.h ****     {
 504:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 505:ROSSerial/ros/node_handle.h ****       {
 506:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 507:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 508:ROSSerial/ros/node_handle.h ****         return true;
 509:ROSSerial/ros/node_handle.h ****       }
 510:ROSSerial/ros/node_handle.h ****     }
 511:ROSSerial/ros/node_handle.h ****     return false;
 512:ROSSerial/ros/node_handle.h ****   }
 513:ROSSerial/ros/node_handle.h **** 
 514:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 93


 515:ROSSerial/ros/node_handle.h ****   {
 516:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 517:ROSSerial/ros/node_handle.h ****     {
 518:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 519:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 520:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 521:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 522:ROSSerial/ros/node_handle.h ****         printf("Registered %s with id %d\n", \
 523:ROSSerial/ros/node_handle.h ****           subscribers2[i].topic_name,subscribers2[i].topic_id);
 524:ROSSerial/ros/node_handle.h ****         return true;
 525:ROSSerial/ros/node_handle.h ****       }
 526:ROSSerial/ros/node_handle.h ****     }
 527:ROSSerial/ros/node_handle.h ****     return false;
 528:ROSSerial/ros/node_handle.h ****   }
 529:ROSSerial/ros/node_handle.h **** 
 530:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 531:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 532:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 533:ROSSerial/ros/node_handle.h ****   {
 534:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 535:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 536:ROSSerial/ros/node_handle.h ****     {
 537:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 538:ROSSerial/ros/node_handle.h ****       {
 539:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 540:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 541:ROSSerial/ros/node_handle.h ****         return v;
 542:ROSSerial/ros/node_handle.h ****       }
 543:ROSSerial/ros/node_handle.h ****     }
 544:ROSSerial/ros/node_handle.h ****     return false;
 545:ROSSerial/ros/node_handle.h ****   }
 546:ROSSerial/ros/node_handle.h **** 
 547:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 548:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 549:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 550:ROSSerial/ros/node_handle.h ****   {
 551:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 552:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 553:ROSSerial/ros/node_handle.h ****     {
 554:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 555:ROSSerial/ros/node_handle.h ****       {
 556:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 557:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 558:ROSSerial/ros/node_handle.h ****         return v;
 559:ROSSerial/ros/node_handle.h ****       }
 560:ROSSerial/ros/node_handle.h ****     }
 561:ROSSerial/ros/node_handle.h ****     return false;
 562:ROSSerial/ros/node_handle.h ****   }
 563:ROSSerial/ros/node_handle.h **** 
 564:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 565:ROSSerial/ros/node_handle.h ****   {
 566:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 567:ROSSerial/ros/node_handle.h ****     int i;
 568:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 569:ROSSerial/ros/node_handle.h ****     {
 570:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id != 0) // non-empty slot
 571:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 94


 572:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers2[i].topic_id;
 573:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 574:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 575:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 576:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 577:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 578:ROSSerial/ros/node_handle.h ****       }
 579:ROSSerial/ros/node_handle.h ****     }
 580:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 581:ROSSerial/ros/node_handle.h ****     {
 582:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 583:ROSSerial/ros/node_handle.h ****       {
 584:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 585:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 586:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 587:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 588:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 589:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 590:ROSSerial/ros/node_handle.h ****       }
 591:ROSSerial/ros/node_handle.h ****     }
 592:ROSSerial/ros/node_handle.h ****     configured_ = true;
 593:ROSSerial/ros/node_handle.h ****   }
 594:ROSSerial/ros/node_handle.h **** 
 595:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 596:ROSSerial/ros/node_handle.h ****   {
 597:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 598:ROSSerial/ros/node_handle.h ****   }
 599:ROSSerial/ros/node_handle.h **** 
 600:ROSSerial/ros/node_handle.h ****   int publish1(int id, Msg * msg)
 3376              		.loc 9 600 0
 3377              		.cfi_startproc
 3378              		@ args = 0, pretend = 0, frame = 16
 3379              		@ frame_needed = 0, uses_anonymous_args = 0
 3380              	.LVL447:
 3381 0000 30B5     		push	{r4, r5, lr}
 3382              		.save {r4, r5, lr}
 3383              	.LCFI19:
 3384              		.cfi_def_cfa_offset 12
 3385              		.cfi_offset 4, -12
 3386              		.cfi_offset 5, -8
 3387              		.cfi_offset 14, -4
 3388              		.pad #20
 3389 0002 85B0     		sub	sp, sp, #20
 3390              	.LCFI20:
 3391              		.cfi_def_cfa_offset 32
 601:ROSSerial/ros/node_handle.h ****   {
 602:ROSSerial/ros/node_handle.h ****     // if(id == TopicInfo::ID_TIME)
 603:ROSSerial/ros/node_handle.h ****     // {
 604:ROSSerial/ros/node_handle.h ****     //   printf("time=%lu, in nh.publsh %d %x\n",hardware_.time(), id, msg);
 605:ROSSerial/ros/node_handle.h ****     // }
 606:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 3392              		.loc 9 606 0
 3393 0004 6329     		cmp	r1, #99
 3394 0006 03DD     		ble	.L180
 3395              		.loc 9 606 0 is_stmt 0 discriminator 1
 3396 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3397 000c 002B     		cmp	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 95


 3398 000e 5DD0     		beq	.L185
 3399              	.L180:
 3400 0010 0D46     		mov	r5, r1
 3401 0012 0446     		mov	r4, r0
 607:ROSSerial/ros/node_handle.h ****       return 0;
 608:ROSSerial/ros/node_handle.h ****     }
 609:ROSSerial/ros/node_handle.h ****     // if(id == TopicInfo::ID_TIME)
 610:ROSSerial/ros/node_handle.h ****     //   printf("in nh.publsh %s\n",msg->getType());
 611:ROSSerial/ros/node_handle.h ****     /* serialize message */
 612:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 3402              		.loc 9 612 0 is_stmt 1
 3403 0014 1368     		ldr	r3, [r2]
 3404 0016 1B68     		ldr	r3, [r3]
 3405 0018 00F21F21 		addw	r1, r0, #543
 3406              	.LVL448:
 3407 001c 1046     		mov	r0, r2
 3408              	.LVL449:
 3409 001e 9847     		blx	r3
 3410              	.LVL450:
 613:ROSSerial/ros/node_handle.h **** 
 614:ROSSerial/ros/node_handle.h ****     /* setup the header */
 615:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 3411              		.loc 9 615 0
 3412 0020 FF23     		movs	r3, #255
 3413 0022 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3414              		.loc 9 616 0
 3415 0026 FE23     		movs	r3, #254
 3416 0028 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3417              		.loc 9 617 0
 3418 002c C3B2     		uxtb	r3, r0
 3419 002e 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3420              		.loc 9 618 0
 3421 0032 C0F30722 		ubfx	r2, r0, #8, #8
 3422 0036 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3423              		.loc 9 619 0
 3424 003a 1344     		add	r3, r3, r2
 3425 003c DBB2     		uxtb	r3, r3
 3426 003e DB43     		mvns	r3, r3
 3427 0040 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3428              		.loc 9 620 0
 3429 0044 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3430              		.loc 9 621 0
 3431 0048 45F30721 		sbfx	r1, r5, #8, #8
 3432 004c 84F81E12 		strb	r1, [r4, #542]
 3433              	.LVL451:
 3434              	.LBB358:
 622:ROSSerial/ros/node_handle.h **** 
 623:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 624:ROSSerial/ros/node_handle.h ****     int chk = 0;
 625:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3435              		.loc 9 625 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 96


 3436 0050 0522     		movs	r2, #5
 3437              	.LBE358:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3438              		.loc 9 624 0
 3439 0052 0023     		movs	r3, #0
 3440              	.LVL452:
 3441              	.L183:
 3442              	.LBB359:
 3443              		.loc 9 625 0 discriminator 3
 3444 0054 C11D     		adds	r1, r0, #7
 3445 0056 9142     		cmp	r1, r2
 3446 0058 05DD     		ble	.L182
 626:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3447              		.loc 9 626 0 discriminator 2
 3448 005a A118     		adds	r1, r4, r2
 3449 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3450 0060 0B44     		add	r3, r3, r1
 3451              	.LVL453:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3452              		.loc 9 625 0 discriminator 2
 3453 0062 0132     		adds	r2, r2, #1
 3454              	.LVL454:
 3455 0064 F6E7     		b	.L183
 3456              	.L182:
 3457              	.LVL455:
 3458              	.LBE359:
 627:ROSSerial/ros/node_handle.h ****     l += 7;
 628:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 3459              		.loc 9 628 0
 3460 0066 5A42     		rsbs	r2, r3, #0
 3461              	.LVL456:
 3462 0068 DBB2     		uxtb	r3, r3
 3463              	.LVL457:
 3464 006a D2B2     		uxtb	r2, r2
 3465 006c 58BF     		it	pl
 3466 006e 5342     		rsbpl	r3, r2, #0
 3467 0070 00F10805 		add	r5, r0, #8
 3468              	.LVL458:
 3469 0074 DB43     		mvns	r3, r3
 3470 0076 2144     		add	r1, r1, r4
 3471 0078 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 630:ROSSerial/ros/node_handle.h ****     //  printf("Sending message - %s, length %d\n",msg->getType(), l);
 631:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3472              		.loc 9 631 0
 3473 007c B5F5007F 		cmp	r5, #512
 3474 0080 12DC     		bgt	.L184
 632:ROSSerial/ros/node_handle.h ****     {
 633:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 3475              		.loc 9 633 0
 3476 0082 04F50674 		add	r4, r4, #536
 3477              	.LVL459:
 3478              	.LBB360:
 3479              	.LBB361:
  66:ROSSerial/AT32hardware.h **** 		{
  67:ROSSerial/AT32hardware.h **** 			return ;
  68:ROSSerial/AT32hardware.h **** 		}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 97


  69:ROSSerial/AT32hardware.h **** 	}
  70:ROSSerial/AT32hardware.h **** 
  71:ROSSerial/AT32hardware.h **** 	/*
  72:ROSSerial/AT32hardware.h ****      * Method: read
  73:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  74:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  75:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  76:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  77:ROSSerial/AT32hardware.h **** 	 */
  78:ROSSerial/AT32hardware.h **** 	int read(void)
  79:ROSSerial/AT32hardware.h **** 	{
  80:ROSSerial/AT32hardware.h **** 		int ucData = -1;
  81:ROSSerial/AT32hardware.h **** 		
  82:ROSSerial/AT32hardware.h **** 		if(g_RxRead < g_RxWritten)
  83:ROSSerial/AT32hardware.h **** 		{
  84:ROSSerial/AT32hardware.h **** 			ucData = g_RxBuf[g_RxRead++];
  85:ROSSerial/AT32hardware.h **** 		}
  86:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE &&  g_RxRead == g_RxWritten )
  87:ROSSerial/AT32hardware.h **** 		{
  88:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
  89:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
  90:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
  91:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
  92:ROSSerial/AT32hardware.h **** 		}
  93:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE && g_RxWritten > g_RxRead)
  94:ROSSerial/AT32hardware.h **** 		{
  95:ROSSerial/AT32hardware.h **** 			printf("How did this happen? %d %d\n",g_RxRead,g_RxWritten);
  96:ROSSerial/AT32hardware.h **** 		}
  97:ROSSerial/AT32hardware.h **** 		
  98:ROSSerial/AT32hardware.h **** 		
  99:ROSSerial/AT32hardware.h **** 		if(g_RxRead == RX_BUF_SIZE )
 100:ROSSerial/AT32hardware.h **** 		{
 101:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
 102:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 103:ROSSerial/AT32hardware.h **** 			//Enable the interrupt so we can read again.
 104:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 105:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 106:ROSSerial/AT32hardware.h **** 		}
 107:ROSSerial/AT32hardware.h **** 		return ucData;
 108:ROSSerial/AT32hardware.h **** 	}
 109:ROSSerial/AT32hardware.h **** 
 110:ROSSerial/AT32hardware.h **** 	/*
 111:ROSSerial/AT32hardware.h **** 	 * Method: write
 112:ROSSerial/AT32hardware.h ****      * ----------------------------
 113:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
 114:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
 115:ROSSerial/AT32hardware.h **** 	 *   returns: none
 116:ROSSerial/AT32hardware.h **** 	 */
 117:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
 118:ROSSerial/AT32hardware.h **** 	{
 119:ROSSerial/AT32hardware.h **** 		// printf("printing %d\n",length);
 120:ROSSerial/AT32hardware.h **** 		/* Without Interrupt we can still publish chatter at 111.6Hz or 9ms per message */
 121:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 20);
 3480              		.loc 11 121 0
 3481 0086 1423     		movs	r3, #20
 3482 0088 AAB2     		uxth	r2, r5
 3483 008a 2146     		mov	r1, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 98


 3484 008c 1048     		ldr	r0, .L188
 3485 008e FFF7FEFF 		bl	HAL_UART_Transmit
 3486              	.LVL460:
 122:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3487              		.loc 11 122 0
 3488 0092 0146     		mov	r1, r0
 3489 0094 10B9     		cbnz	r0, .L187
 3490              	.LVL461:
 3491              	.L179:
 3492              	.LBE361:
 3493              	.LBE360:
 634:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 635:ROSSerial/ros/node_handle.h ****       // {
 636:ROSSerial/ros/node_handle.h ****       //   printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 637:ROSSerial/ros/node_handle.h ****       // }
 638:ROSSerial/ros/node_handle.h ****         
 639:ROSSerial/ros/node_handle.h ****       return l;
 640:ROSSerial/ros/node_handle.h ****     }
 641:ROSSerial/ros/node_handle.h ****     else
 642:ROSSerial/ros/node_handle.h ****     {
 643:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 644:ROSSerial/ros/node_handle.h ****       printf("Message from device dropped: message larger than buffer.");
 645:ROSSerial/ros/node_handle.h ****       return -1;
 646:ROSSerial/ros/node_handle.h ****     }
 647:ROSSerial/ros/node_handle.h ****   }
 3494              		.loc 9 647 0
 3495 0096 2846     		mov	r0, r5
 3496 0098 05B0     		add	sp, sp, #20
 3497              	.LCFI21:
 3498              		.cfi_remember_state
 3499              		.cfi_def_cfa_offset 12
 3500              		@ sp needed
 3501 009a 30BD     		pop	{r4, r5, pc}
 3502              	.LVL462:
 3503              	.L187:
 3504              	.LCFI22:
 3505              		.cfi_restore_state
 3506              	.LBB363:
 3507              	.LBB362:
 123:ROSSerial/AT32hardware.h **** 		{
 124:ROSSerial/AT32hardware.h **** 			printf("HAL write error %d %lu - %s\n",ret,length, data);
 3508              		.loc 11 124 0
 3509 009c 2346     		mov	r3, r4
 3510 009e 2A46     		mov	r2, r5
 3511 00a0 0C48     		ldr	r0, .L188+4
 3512              	.LVL463:
 3513 00a2 FFF7FEFF 		bl	printf
 3514              	.LVL464:
 3515 00a6 F6E7     		b	.L179
 3516              	.LVL465:
 3517              	.L184:
 3518              	.LBE362:
 3519              	.LBE363:
 3520              	.LBB364:
 3521              	.LBB365:
 3522              	.LBB366:
 3523              	.LBB367:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 99


 3524              	.LBB368:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3525              		.loc 3 13 0
 3526 00a8 0B4B     		ldr	r3, .L188+8
 3527 00aa 0193     		str	r3, [sp, #4]
 3528              	.LVL466:
 3529              	.LBE368:
 3530              	.LBE367:
 648:ROSSerial/ros/node_handle.h **** 
 649:ROSSerial/ros/node_handle.h ****   /********************************************************************
 650:ROSSerial/ros/node_handle.h ****    * Logging
 651:ROSSerial/ros/node_handle.h ****    */
 652:ROSSerial/ros/node_handle.h **** 
 653:ROSSerial/ros/node_handle.h **** private:
 654:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 655:ROSSerial/ros/node_handle.h ****   {
 656:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 657:ROSSerial/ros/node_handle.h ****     l.level = byte;
 3531              		.loc 9 657 0
 3532 00ac 0323     		movs	r3, #3
 3533 00ae 8DF80830 		strb	r3, [sp, #8]
 658:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3534              		.loc 9 658 0
 3535 00b2 0A4D     		ldr	r5, .L188+12
 3536              	.LVL467:
 3537 00b4 0395     		str	r5, [sp, #12]
 659:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3538              		.loc 9 659 0
 3539 00b6 01AA     		add	r2, sp, #4
 3540 00b8 0721     		movs	r1, #7
 3541 00ba 2046     		mov	r0, r4
 3542              	.LVL468:
 3543 00bc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3544              	.LVL469:
 3545              	.LBE366:
 3546              	.LBE365:
 3547              	.LBE364:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3548              		.loc 9 644 0
 3549 00c0 2846     		mov	r0, r5
 3550 00c2 FFF7FEFF 		bl	printf
 3551              	.LVL470:
 645:ROSSerial/ros/node_handle.h ****     }
 3552              		.loc 9 645 0
 3553 00c6 4FF0FF35 		mov	r5, #-1
 3554 00ca E4E7     		b	.L179
 3555              	.LVL471:
 3556              	.L185:
 607:ROSSerial/ros/node_handle.h ****     }
 3557              		.loc 9 607 0
 3558 00cc 0025     		movs	r5, #0
 3559 00ce E2E7     		b	.L179
 3560              	.L189:
 3561              		.align	2
 3562              	.L188:
 3563 00d0 00000000 		.word	huart2
 3564 00d4 00000000 		.word	.LC19
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 100


 3565 00d8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3566 00dc 20000000 		.word	.LC20
 3567              		.cfi_endproc
 3568              	.LFE512:
 3569              		.fnend
 3571              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3572              		.align	1
 3573              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3577              		.fpu fpv4-sp-d16
 3579              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3580              		.fnstart
 3581              	.LFB530:
 595:ROSSerial/ros/node_handle.h ****   {
 3582              		.loc 9 595 0
 3583              		.cfi_startproc
 3584              		@ args = 0, pretend = 0, frame = 24
 3585              		@ frame_needed = 0, uses_anonymous_args = 0
 3586              	.LVL472:
 3587 0000 30B5     		push	{r4, r5, lr}
 3588              		.save {r4, r5, lr}
 3589              	.LCFI23:
 3590              		.cfi_def_cfa_offset 12
 3591              		.cfi_offset 4, -12
 3592              		.cfi_offset 5, -8
 3593              		.cfi_offset 14, -4
 3594              		.pad #28
 3595 0002 87B0     		sub	sp, sp, #28
 3596              	.LCFI24:
 3597              		.cfi_def_cfa_offset 40
 3598              	.LVL473:
 3599              	.LBB391:
 3600              	.LBB392:
 606:ROSSerial/ros/node_handle.h ****       return 0;
 3601              		.loc 9 606 0
 3602 0004 6329     		cmp	r1, #99
 3603 0006 04DD     		ble	.L191
 3604 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3605 000c 002B     		cmp	r3, #0
 3606 000e 00F0AE80 		beq	.L200
 3607              	.L191:
 3608 0012 0D46     		mov	r5, r1
 3609 0014 0446     		mov	r4, r0
 612:ROSSerial/ros/node_handle.h **** 
 3610              		.loc 9 612 0
 3611 0016 1368     		ldr	r3, [r2]
 3612 0018 1B68     		ldr	r3, [r3]
 3613 001a 00F21F21 		addw	r1, r0, #543
 3614              	.LVL474:
 3615 001e 1046     		mov	r0, r2
 3616              	.LVL475:
 3617 0020 9847     		blx	r3
 3618              	.LVL476:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3619              		.loc 9 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 101


 3620 0022 FF23     		movs	r3, #255
 3621 0024 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3622              		.loc 9 616 0
 3623 0028 FE23     		movs	r3, #254
 3624 002a 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3625              		.loc 9 617 0
 3626 002e C3B2     		uxtb	r3, r0
 3627 0030 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3628              		.loc 9 618 0
 3629 0034 C0F30722 		ubfx	r2, r0, #8, #8
 3630 0038 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3631              		.loc 9 619 0
 3632 003c 1344     		add	r3, r3, r2
 3633 003e DBB2     		uxtb	r3, r3
 3634 0040 DB43     		mvns	r3, r3
 3635 0042 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3636              		.loc 9 620 0
 3637 0046 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 3638              		.loc 9 621 0
 3639 004a 45F30721 		sbfx	r1, r5, #8, #8
 3640 004e 84F81E12 		strb	r1, [r4, #542]
 3641              	.LVL477:
 3642              	.LBB393:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3643              		.loc 9 625 0
 3644 0052 0522     		movs	r2, #5
 3645              	.LBE393:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3646              		.loc 9 624 0
 3647 0054 0023     		movs	r3, #0
 3648              	.LVL478:
 3649              	.L194:
 3650              	.LBB394:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3651              		.loc 9 625 0
 3652 0056 C11D     		adds	r1, r0, #7
 3653 0058 9142     		cmp	r1, r2
 3654 005a 05DD     		ble	.L193
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 3655              		.loc 9 626 0
 3656 005c A118     		adds	r1, r4, r2
 3657 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3658 0062 0B44     		add	r3, r3, r1
 3659              	.LVL479:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3660              		.loc 9 625 0
 3661 0064 0132     		adds	r2, r2, #1
 3662              	.LVL480:
 3663 0066 F6E7     		b	.L194
 3664              	.L193:
 3665              	.LVL481:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 102


 3666              	.LBE394:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3667              		.loc 9 628 0
 3668 0068 5A42     		rsbs	r2, r3, #0
 3669              	.LVL482:
 3670 006a DBB2     		uxtb	r3, r3
 3671              	.LVL483:
 3672 006c D2B2     		uxtb	r2, r2
 3673 006e 58BF     		it	pl
 3674 0070 5342     		rsbpl	r3, r2, #0
 3675 0072 00F10805 		add	r5, r0, #8
 3676              	.LVL484:
 3677 0076 DB43     		mvns	r3, r3
 3678 0078 2144     		add	r1, r1, r4
 3679 007a 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 3680              		.loc 9 631 0
 3681 007e B5F5007F 		cmp	r5, #512
 3682 0082 12DC     		bgt	.L195
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 3683              		.loc 9 633 0
 3684 0084 04F50674 		add	r4, r4, #536
 3685              	.LVL485:
 3686              	.LBB395:
 3687              	.LBB396:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3688              		.loc 11 121 0
 3689 0088 1423     		movs	r3, #20
 3690 008a AAB2     		uxth	r2, r5
 3691 008c 2146     		mov	r1, r4
 3692 008e 3948     		ldr	r0, .L204
 3693 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 3694              	.LVL486:
 122:ROSSerial/AT32hardware.h **** 		{
 3695              		.loc 11 122 0
 3696 0094 0146     		mov	r1, r0
 3697 0096 10B9     		cbnz	r0, .L202
 3698              	.LVL487:
 3699              	.L190:
 3700              	.LBE396:
 3701              	.LBE395:
 3702              	.LBE392:
 3703              	.LBE391:
 598:ROSSerial/ros/node_handle.h **** 
 3704              		.loc 9 598 0
 3705 0098 2846     		mov	r0, r5
 3706 009a 07B0     		add	sp, sp, #28
 3707              	.LCFI25:
 3708              		.cfi_remember_state
 3709              		.cfi_def_cfa_offset 12
 3710              		@ sp needed
 3711 009c 30BD     		pop	{r4, r5, pc}
 3712              	.LVL488:
 3713              	.L202:
 3714              	.LCFI26:
 3715              		.cfi_restore_state
 3716              	.LBB422:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 103


 3717              	.LBB421:
 3718              	.LBB398:
 3719              	.LBB397:
 3720              		.loc 11 124 0
 3721 009e 2346     		mov	r3, r4
 3722 00a0 2A46     		mov	r2, r5
 3723 00a2 3548     		ldr	r0, .L204+4
 3724              	.LVL489:
 3725 00a4 FFF7FEFF 		bl	printf
 3726              	.LVL490:
 3727 00a8 F6E7     		b	.L190
 3728              	.LVL491:
 3729              	.L195:
 3730              	.LBE397:
 3731              	.LBE398:
 3732              	.LBB399:
 3733              	.LBB400:
 3734              	.LBB401:
 3735              	.LBB402:
 3736              	.LBB403:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3737              		.loc 3 13 0
 3738 00aa 344B     		ldr	r3, .L204+8
 3739 00ac 0093     		str	r3, [sp]
 3740              	.LVL492:
 3741              	.LBE403:
 3742              	.LBE402:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3743              		.loc 9 657 0
 3744 00ae 0322     		movs	r2, #3
 3745 00b0 8DF80420 		strb	r2, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3746              		.loc 9 658 0
 3747 00b4 324A     		ldr	r2, .L204+12
 3748 00b6 0292     		str	r2, [sp, #8]
 3749              	.LVL493:
 3750              	.LBB404:
 3751              	.LBB405:
 612:ROSSerial/ros/node_handle.h **** 
 3752              		.loc 9 612 0
 3753 00b8 1B68     		ldr	r3, [r3]
 3754 00ba 04F21F21 		addw	r1, r4, #543
 3755 00be 6846     		mov	r0, sp
 3756 00c0 9847     		blx	r3
 3757              	.LVL494:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3758              		.loc 9 615 0
 3759 00c2 FF23     		movs	r3, #255
 3760 00c4 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3761              		.loc 9 616 0
 3762 00c8 FE23     		movs	r3, #254
 3763 00ca 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3764              		.loc 9 617 0
 3765 00ce C3B2     		uxtb	r3, r0
 3766 00d0 84F81A32 		strb	r3, [r4, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 104


 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3767              		.loc 9 618 0
 3768 00d4 C0F30722 		ubfx	r2, r0, #8, #8
 3769 00d8 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3770              		.loc 9 619 0
 3771 00dc 1344     		add	r3, r3, r2
 3772 00de DBB2     		uxtb	r3, r3
 3773 00e0 DB43     		mvns	r3, r3
 3774 00e2 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3775              		.loc 9 620 0
 3776 00e6 0723     		movs	r3, #7
 3777 00e8 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 3778              		.loc 9 621 0
 3779 00ec 0023     		movs	r3, #0
 3780 00ee 84F81E32 		strb	r3, [r4, #542]
 3781              	.LVL495:
 3782              	.LBB406:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3783              		.loc 9 625 0
 3784 00f2 0522     		movs	r2, #5
 3785              	.LVL496:
 3786              	.L197:
 3787 00f4 C11D     		adds	r1, r0, #7
 3788 00f6 9142     		cmp	r1, r2
 3789 00f8 05DD     		ble	.L196
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 3790              		.loc 9 626 0
 3791 00fa A118     		adds	r1, r4, r2
 3792 00fc 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3793 0100 0B44     		add	r3, r3, r1
 3794              	.LVL497:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3795              		.loc 9 625 0
 3796 0102 0132     		adds	r2, r2, #1
 3797              	.LVL498:
 3798 0104 F6E7     		b	.L197
 3799              	.L196:
 3800              	.LVL499:
 3801              	.LBE406:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3802              		.loc 9 628 0
 3803 0106 5A42     		rsbs	r2, r3, #0
 3804              	.LVL500:
 3805 0108 DBB2     		uxtb	r3, r3
 3806              	.LVL501:
 3807 010a D2B2     		uxtb	r2, r2
 3808 010c 58BF     		it	pl
 3809 010e 5342     		rsbpl	r3, r2, #0
 3810 0110 00F10805 		add	r5, r0, #8
 3811              	.LVL502:
 3812 0114 DB43     		mvns	r3, r3
 3813 0116 2144     		add	r1, r1, r4
 3814 0118 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 105


 3815              		.loc 9 631 0
 3816 011c B5F5007F 		cmp	r5, #512
 3817 0120 15DC     		bgt	.L198
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 3818              		.loc 9 633 0
 3819 0122 04F50674 		add	r4, r4, #536
 3820              	.LVL503:
 3821              	.LBB407:
 3822              	.LBB408:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3823              		.loc 11 121 0
 3824 0126 1423     		movs	r3, #20
 3825 0128 AAB2     		uxth	r2, r5
 3826 012a 2146     		mov	r1, r4
 3827 012c 1148     		ldr	r0, .L204
 3828 012e FFF7FEFF 		bl	HAL_UART_Transmit
 3829              	.LVL504:
 122:ROSSerial/AT32hardware.h **** 		{
 3830              		.loc 11 122 0
 3831 0132 0146     		mov	r1, r0
 3832 0134 28B9     		cbnz	r0, .L203
 3833              	.LVL505:
 3834              	.L199:
 3835              	.LBE408:
 3836              	.LBE407:
 3837              	.LBE405:
 3838              	.LBE404:
 3839              	.LBE401:
 3840              	.LBE400:
 3841              	.LBE399:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3842              		.loc 9 644 0
 3843 0136 1248     		ldr	r0, .L204+12
 3844 0138 FFF7FEFF 		bl	printf
 3845              	.LVL506:
 645:ROSSerial/ros/node_handle.h ****     }
 3846              		.loc 9 645 0
 3847 013c 4FF0FF35 		mov	r5, #-1
 3848 0140 AAE7     		b	.L190
 3849              	.LVL507:
 3850              	.L203:
 3851              	.LBB420:
 3852              	.LBB419:
 3853              	.LBB418:
 3854              	.LBB417:
 3855              	.LBB416:
 3856              	.LBB410:
 3857              	.LBB409:
 3858              		.loc 11 124 0
 3859 0142 2346     		mov	r3, r4
 3860 0144 2A46     		mov	r2, r5
 3861 0146 0C48     		ldr	r0, .L204+4
 3862              	.LVL508:
 3863 0148 FFF7FEFF 		bl	printf
 3864              	.LVL509:
 3865 014c F3E7     		b	.L199
 3866              	.LVL510:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 106


 3867              	.L198:
 3868              	.LBE409:
 3869              	.LBE410:
 3870              	.LBB411:
 3871              	.LBB412:
 3872              	.LBB413:
 3873              	.LBB414:
 3874              	.LBB415:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3875              		.loc 3 13 0
 3876 014e 0B4B     		ldr	r3, .L204+8
 3877 0150 0393     		str	r3, [sp, #12]
 3878              	.LVL511:
 3879              	.LBE415:
 3880              	.LBE414:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3881              		.loc 9 657 0
 3882 0152 0323     		movs	r3, #3
 3883 0154 8DF81030 		strb	r3, [sp, #16]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3884              		.loc 9 658 0
 3885 0158 094D     		ldr	r5, .L204+12
 3886              	.LVL512:
 3887 015a 0595     		str	r5, [sp, #20]
 3888              		.loc 9 659 0
 3889 015c 03AA     		add	r2, sp, #12
 3890 015e 0721     		movs	r1, #7
 3891 0160 2046     		mov	r0, r4
 3892              	.LVL513:
 3893 0162 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3894              	.LVL514:
 3895              	.LBE413:
 3896              	.LBE412:
 3897              	.LBE411:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3898              		.loc 9 644 0
 3899 0166 2846     		mov	r0, r5
 3900 0168 FFF7FEFF 		bl	printf
 3901              	.LVL515:
 3902 016c E3E7     		b	.L199
 3903              	.LVL516:
 3904              	.L200:
 3905              	.LBE416:
 3906              	.LBE417:
 3907              	.LBE418:
 3908              	.LBE419:
 3909              	.LBE420:
 607:ROSSerial/ros/node_handle.h ****     }
 3910              		.loc 9 607 0
 3911 016e 0025     		movs	r5, #0
 3912              	.LVL517:
 3913              	.LBE421:
 3914              	.LBE422:
 597:ROSSerial/ros/node_handle.h ****   }
 3915              		.loc 9 597 0
 3916 0170 92E7     		b	.L190
 3917              	.L205:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 107


 3918 0172 00BF     		.align	2
 3919              	.L204:
 3920 0174 00000000 		.word	huart2
 3921 0178 00000000 		.word	.LC19
 3922 017c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3923 0180 20000000 		.word	.LC20
 3924              		.cfi_endproc
 3925              	.LFE530:
 3926              		.fnend
 3928              		.section	.text.publish_hovebot_state,"ax",%progbits
 3929              		.align	1
 3930              		.global	publish_hovebot_state
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	publish_hovebot_state:
 3937              		.fnstart
 3938              	.LFB495:
  53:./Src/ROS_main.cpp **** {
 3939              		.loc 8 53 0
 3940              		.cfi_startproc
 3941              		@ args = 0, pretend = 0, frame = 136
 3942              		@ frame_needed = 0, uses_anonymous_args = 0
 3943 0000 30B5     		push	{r4, r5, lr}
 3944              		.save {r4, r5, lr}
 3945              	.LCFI27:
 3946              		.cfi_def_cfa_offset 12
 3947              		.cfi_offset 4, -12
 3948              		.cfi_offset 5, -8
 3949              		.cfi_offset 14, -4
 3950              		.pad #140
 3951 0002 A3B0     		sub	sp, sp, #140
 3952              	.LCFI28:
 3953              		.cfi_def_cfa_offset 152
 3954              	.LVL518:
 3955              	.LBB461:
 3956              	.LBB462:
 3957              	.LBB463:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3958              		.loc 7 40 0
 3959 0004 8B4B     		ldr	r3, .L222
 3960 0006 0E93     		str	r3, [sp, #56]
 3961 0008 0023     		movs	r3, #0
 3962 000a 1093     		str	r3, [sp, #64]
 3963 000c 1393     		str	r3, [sp, #76]
 3964              	.LVL519:
 3965              	.LBB464:
 3966              	.LBB465:
  13:ROSSerial/std_msgs/Header.h ****   {
 3967              		.loc 6 13 0
 3968 000e 8A4A     		ldr	r2, .L222+4
 3969 0010 0F92     		str	r2, [sp, #60]
 3970              	.LVL520:
 3971              	.LBB466:
 3972              	.LBB467:
 3973              	.LBB468:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 108


 3974              		.loc 12 51 0
 3975 0012 1193     		str	r3, [sp, #68]
 3976 0014 1293     		str	r3, [sp, #72]
 3977              	.LVL521:
 3978              	.LBE468:
 3979              	.LBE467:
 3980              	.LBE466:
 3981              	.LBE465:
 3982              	.LBE464:
 3983              	.LBE463:
 3984              	.LBE462:
 3985              	.LBE461:
  55:./Src/ROS_main.cpp ****     char *names[2] = {"LEFT","RIGHT"};
 3986              		.loc 8 55 0
 3987 0016 894B     		ldr	r3, .L222+8
 3988 0018 0CAA     		add	r2, sp, #48
 3989 001a 93E80300 		ldm	r3, {r0, r1}
 3990 001e 82E80300 		stm	r2, {r0, r1}
  56:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[LEFT].ticks,wheel_posn[RIGHT].ticks};
 3991              		.loc 8 56 0
 3992 0022 874B     		ldr	r3, .L222+12
 3993 0024 D3ED057A 		vldr.32	s15, [r3, #20]	@ int
 3994 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 3995 002c CDED0A7A 		vstr.32	s15, [sp, #40]
 3996 0030 D3ED0F7A 		vldr.32	s15, [r3, #60]	@ int
 3997 0034 F8EEE77A 		vcvt.f32.s32	s15, s15
 3998 0038 CDED0B7A 		vstr.32	s15, [sp, #44]
  57:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[LEFT].rpm, wheel_posn[RIGHT].rpm};
 3999              		.loc 8 57 0
 4000 003c 1969     		ldr	r1, [r3, #16]	@ float
 4001 003e 0891     		str	r1, [sp, #32]	@ float
 4002 0040 9B6B     		ldr	r3, [r3, #56]	@ float
 4003 0042 0993     		str	r3, [sp, #36]	@ float
  58:./Src/ROS_main.cpp ****     float effort[2] = {pwms[LEFT], pwms[RIGHT]};
 4004              		.loc 8 58 0
 4005 0044 7F4B     		ldr	r3, .L222+16
 4006 0046 D3ED007A 		vldr.32	s15, [r3]	@ int
 4007 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 4008 004e CDED067A 		vstr.32	s15, [sp, #24]
 4009 0052 D3ED017A 		vldr.32	s15, [r3, #4]	@ int
 4010 0056 F8EEE77A 		vcvt.f32.s32	s15, s15
 4011 005a CDED077A 		vstr.32	s15, [sp, #28]
  60:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
 4012              		.loc 8 60 0
 4013 005e 1692     		str	r2, [sp, #88]
  61:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
 4014              		.loc 8 61 0
 4015 0060 0223     		movs	r3, #2
 4016 0062 1493     		str	r3, [sp, #80]
  62:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
 4017              		.loc 8 62 0
 4018 0064 0AAA     		add	r2, sp, #40
 4019 0066 1992     		str	r2, [sp, #100]
  63:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
 4020              		.loc 8 63 0
 4021 0068 1793     		str	r3, [sp, #92]
  64:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 109


 4022              		.loc 8 64 0
 4023 006a 08AA     		add	r2, sp, #32
 4024 006c 1C92     		str	r2, [sp, #112]
  65:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
 4025              		.loc 8 65 0
 4026 006e 1A93     		str	r3, [sp, #104]
  66:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
 4027              		.loc 8 66 0
 4028 0070 1D93     		str	r3, [sp, #116]
  67:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
 4029              		.loc 8 67 0
 4030 0072 06AB     		add	r3, sp, #24
 4031 0074 1F93     		str	r3, [sp, #124]
 4032              	.LVL522:
 4033              	.LBB469:
 4034              	.LBB470:
 4035              	.LBB471:
 4036              	.LBB472:
 125:ROSSerial/AT32hardware.h **** 		}
 126:ROSSerial/AT32hardware.h **** 		
 127:ROSSerial/AT32hardware.h **** 		// /* Try Interrupt - Has delayed byte problem. */
 128:ROSSerial/AT32hardware.h **** 		// if(HAL_UART_Transmit_IT(&huart2, (uint8_t *)data, length)!= HAL_OK)
 129:ROSSerial/AT32hardware.h ****   		// {
 130:ROSSerial/AT32hardware.h **** 		// 	HAL_Delay(10); 
 131:ROSSerial/AT32hardware.h **** 		// 	printf("delayed bytes %d\n",length); 
 132:ROSSerial/AT32hardware.h **** 		// }
 133:ROSSerial/AT32hardware.h **** 
 134:ROSSerial/AT32hardware.h **** 		// else
 135:ROSSerial/AT32hardware.h **** 		// {
 136:ROSSerial/AT32hardware.h **** 		// 	printf("sent %d bytes over Interrupt\n",length);
 137:ROSSerial/AT32hardware.h **** 		// }
 138:ROSSerial/AT32hardware.h **** 		
 139:ROSSerial/AT32hardware.h **** 	}
 140:ROSSerial/AT32hardware.h **** 
 141:ROSSerial/AT32hardware.h **** 	/*
 142:ROSSerial/AT32hardware.h **** 	 * Method: time
 143:ROSSerial/AT32hardware.h **** 	 * ----------------------------
 144:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
 145:ROSSerial/AT32hardware.h **** 	 *   parameters: none
 146:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
 147:ROSSerial/AT32hardware.h **** 	 */
 148:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 149:ROSSerial/AT32hardware.h **** 	{
 150:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 151:ROSSerial/AT32hardware.h **** 		return HAL_GetTick();
 4037              		.loc 11 151 0
 4038 0076 FFF7FEFF 		bl	HAL_GetTick
 4039              	.LVL523:
 4040              	.LBE472:
 4041              	.LBE471:
 445:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 4042              		.loc 9 445 0
 4043 007a 734B     		ldr	r3, .L222+20
 4044 007c A3FB0023 		umull	r2, r3, r3, r0
 4045 0080 9B09     		lsrs	r3, r3, #6
 4046 0082 7249     		ldr	r1, .L222+24
 4047 0084 CA68     		ldr	r2, [r1, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 110


 4048 0086 1A44     		add	r2, r2, r3
 4049 0088 2092     		str	r2, [sp, #128]
 446:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 4050              		.loc 9 446 0
 4051 008a 4FF47A72 		mov	r2, #1000
 4052 008e 02FB1303 		mls	r3, r2, r3, r0
 4053 0092 0869     		ldr	r0, [r1, #16]
 4054              	.LVL524:
 4055 0094 6E4A     		ldr	r2, .L222+28
 4056 0096 02FB0303 		mla	r3, r2, r3, r0
 4057 009a 2193     		str	r3, [sp, #132]
 447:ROSSerial/ros/node_handle.h ****     return current_time;
 4058              		.loc 9 447 0
 4059 009c 20AC     		add	r4, sp, #128
 4060 009e 21A9     		add	r1, sp, #132
 4061 00a0 2046     		mov	r0, r4
 4062 00a2 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4063              	.LVL525:
 4064              	.LBE470:
 4065              	.LBE469:
  68:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
 4066              		.loc 8 68 0
 4067 00a6 11AB     		add	r3, sp, #68
 4068 00a8 94E80300 		ldm	r4, {r0, r1}
 4069 00ac 83E80300 		stm	r3, {r0, r1}
  72:./Src/ROS_main.cpp ****     int retval = nh.publish1(hovebotState->topic_id, &wheelPositions); 
 4070              		.loc 8 72 0
 4071 00b0 684B     		ldr	r3, .L222+32
 4072 00b2 1B68     		ldr	r3, [r3]
 4073 00b4 1D88     		ldrh	r5, [r3]
 4074              	.LVL526:
 4075              	.LBB473:
 4076              	.LBB474:
 606:ROSSerial/ros/node_handle.h ****       return 0;
 4077              		.loc 9 606 0
 4078 00b6 632D     		cmp	r5, #99
 4079 00b8 05DD     		ble	.L207
 4080 00ba 644B     		ldr	r3, .L222+24
 4081 00bc 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4082 00c0 002B     		cmp	r3, #0
 4083 00c2 00F0AF80 		beq	.L217
 4084              	.L207:
 612:ROSSerial/ros/node_handle.h **** 
 4085              		.loc 9 612 0
 4086 00c6 614C     		ldr	r4, .L222+24
 4087 00c8 0E9B     		ldr	r3, [sp, #56]
 4088 00ca 1B68     		ldr	r3, [r3]
 4089 00cc 04F21F21 		addw	r1, r4, #543
 4090 00d0 0EA8     		add	r0, sp, #56
 4091              	.LVL527:
 4092 00d2 9847     		blx	r3
 4093              	.LVL528:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4094              		.loc 9 615 0
 4095 00d4 FF23     		movs	r3, #255
 4096 00d6 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 111


 4097              		.loc 9 616 0
 4098 00da FE23     		movs	r3, #254
 4099 00dc 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4100              		.loc 9 617 0
 4101 00e0 C3B2     		uxtb	r3, r0
 4102 00e2 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4103              		.loc 9 618 0
 4104 00e6 C0F30722 		ubfx	r2, r0, #8, #8
 4105 00ea 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4106              		.loc 9 619 0
 4107 00ee 1344     		add	r3, r3, r2
 4108 00f0 DBB2     		uxtb	r3, r3
 4109 00f2 DB43     		mvns	r3, r3
 4110 00f4 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4111              		.loc 9 620 0
 4112 00f8 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4113              		.loc 9 621 0
 4114 00fc 45F30725 		sbfx	r5, r5, #8, #8
 4115              	.LVL529:
 4116 0100 84F81E52 		strb	r5, [r4, #542]
 4117              	.LVL530:
 4118              	.LBB475:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4119              		.loc 9 625 0
 4120 0104 0523     		movs	r3, #5
 4121              	.LBE475:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4122              		.loc 9 624 0
 4123 0106 0024     		movs	r4, #0
 4124              	.LVL531:
 4125              	.L210:
 4126              	.LBB476:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4127              		.loc 9 625 0
 4128 0108 C21D     		adds	r2, r0, #7
 4129 010a 9A42     		cmp	r2, r3
 4130 010c 06DD     		ble	.L209
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4131              		.loc 9 626 0
 4132 010e 4F4A     		ldr	r2, .L222+24
 4133 0110 1A44     		add	r2, r2, r3
 4134 0112 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4135 0116 1444     		add	r4, r4, r2
 4136              	.LVL532:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4137              		.loc 9 625 0
 4138 0118 0133     		adds	r3, r3, #1
 4139              	.LVL533:
 4140 011a F5E7     		b	.L210
 4141              	.L209:
 4142              	.LVL534:
 4143              	.LBE476:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 112


 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4144              		.loc 9 628 0
 4145 011c 6342     		rsbs	r3, r4, #0
 4146              	.LVL535:
 4147 011e E4B2     		uxtb	r4, r4
 4148              	.LVL536:
 4149 0120 DBB2     		uxtb	r3, r3
 4150 0122 58BF     		it	pl
 4151 0124 5C42     		rsbpl	r4, r3, #0
 4152 0126 00F10805 		add	r5, r0, #8
 4153              	.LVL537:
 4154 012a E443     		mvns	r4, r4
 4155 012c 474B     		ldr	r3, .L222+24
 4156 012e 1A44     		add	r2, r2, r3
 4157 0130 82F81842 		strb	r4, [r2, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 4158              		.loc 9 631 0
 4159 0134 B5F5007F 		cmp	r5, #512
 4160 0138 11DC     		bgt	.L211
 4161              	.LVL538:
 4162              	.LBB477:
 4163              	.LBB478:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4164              		.loc 11 121 0
 4165 013a 1423     		movs	r3, #20
 4166 013c AAB2     		uxth	r2, r5
 4167 013e 4649     		ldr	r1, .L222+36
 4168 0140 4648     		ldr	r0, .L222+40
 4169 0142 FFF7FEFF 		bl	HAL_UART_Transmit
 4170              	.LVL539:
 122:ROSSerial/AT32hardware.h **** 		{
 4171              		.loc 11 122 0
 4172 0146 0146     		mov	r1, r0
 4173 0148 18B9     		cbnz	r0, .L219
 4174              	.LVL540:
 4175              	.L208:
 4176              	.LBE478:
 4177              	.LBE477:
 4178              	.LBE474:
 4179              	.LBE473:
  73:./Src/ROS_main.cpp ****     if(retval < 0)
 4180              		.loc 8 73 0
 4181 014a 002D     		cmp	r5, #0
 4182 014c 6CDB     		blt	.L220
 4183              	.L206:
  90:./Src/ROS_main.cpp **** }
 4184              		.loc 8 90 0
 4185 014e 23B0     		add	sp, sp, #140
 4186              	.LCFI29:
 4187              		.cfi_remember_state
 4188              		.cfi_def_cfa_offset 12
 4189              		@ sp needed
 4190 0150 30BD     		pop	{r4, r5, pc}
 4191              	.LVL541:
 4192              	.L219:
 4193              	.LCFI30:
 4194              		.cfi_restore_state
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 113


 4195              	.LBB504:
 4196              	.LBB503:
 4197              	.LBB480:
 4198              	.LBB479:
 124:ROSSerial/AT32hardware.h **** 		}
 4199              		.loc 11 124 0
 4200 0152 414B     		ldr	r3, .L222+36
 4201 0154 2A46     		mov	r2, r5
 4202 0156 4248     		ldr	r0, .L222+44
 4203              	.LVL542:
 4204 0158 FFF7FEFF 		bl	printf
 4205              	.LVL543:
 4206 015c F5E7     		b	.L208
 4207              	.LVL544:
 4208              	.L211:
 4209              	.LBE479:
 4210              	.LBE480:
 4211              	.LBB481:
 4212              	.LBB482:
 4213              	.LBB483:
 4214              	.LBB484:
 4215              	.LBB485:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4216              		.loc 3 13 0
 4217 015e 414B     		ldr	r3, .L222+48
 4218 0160 0093     		str	r3, [sp]
 4219              	.LVL545:
 4220              	.LBE485:
 4221              	.LBE484:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4222              		.loc 9 657 0
 4223 0162 0322     		movs	r2, #3
 4224 0164 8DF80420 		strb	r2, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4225              		.loc 9 658 0
 4226 0168 3F4A     		ldr	r2, .L222+52
 4227 016a 0292     		str	r2, [sp, #8]
 4228              	.LVL546:
 4229              	.LBB486:
 4230              	.LBB487:
 612:ROSSerial/ros/node_handle.h **** 
 4231              		.loc 9 612 0
 4232 016c 374C     		ldr	r4, .L222+24
 4233 016e 1B68     		ldr	r3, [r3]
 4234 0170 04F21F21 		addw	r1, r4, #543
 4235 0174 6846     		mov	r0, sp
 4236 0176 9847     		blx	r3
 4237              	.LVL547:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4238              		.loc 9 615 0
 4239 0178 FF23     		movs	r3, #255
 4240 017a 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4241              		.loc 9 616 0
 4242 017e FE23     		movs	r3, #254
 4243 0180 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 114


 4244              		.loc 9 617 0
 4245 0184 C3B2     		uxtb	r3, r0
 4246 0186 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4247              		.loc 9 618 0
 4248 018a C0F30722 		ubfx	r2, r0, #8, #8
 4249 018e 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4250              		.loc 9 619 0
 4251 0192 1344     		add	r3, r3, r2
 4252 0194 DBB2     		uxtb	r3, r3
 4253 0196 DB43     		mvns	r3, r3
 4254 0198 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4255              		.loc 9 620 0
 4256 019c 0723     		movs	r3, #7
 4257 019e 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4258              		.loc 9 621 0
 4259 01a2 0023     		movs	r3, #0
 4260 01a4 84F81E32 		strb	r3, [r4, #542]
 4261              	.LVL548:
 4262              	.LBB488:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4263              		.loc 9 625 0
 4264 01a8 0522     		movs	r2, #5
 4265              	.LVL549:
 4266              	.L213:
 4267 01aa C11D     		adds	r1, r0, #7
 4268 01ac 9142     		cmp	r1, r2
 4269 01ae 06DD     		ble	.L212
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4270              		.loc 9 626 0
 4271 01b0 2649     		ldr	r1, .L222+24
 4272 01b2 1144     		add	r1, r1, r2
 4273 01b4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4274 01b8 0B44     		add	r3, r3, r1
 4275              	.LVL550:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4276              		.loc 9 625 0
 4277 01ba 0132     		adds	r2, r2, #1
 4278              	.LVL551:
 4279 01bc F5E7     		b	.L213
 4280              	.L212:
 4281              	.LVL552:
 4282              	.LBE488:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4283              		.loc 9 628 0
 4284 01be 5A42     		rsbs	r2, r3, #0
 4285              	.LVL553:
 4286 01c0 DBB2     		uxtb	r3, r3
 4287              	.LVL554:
 4288 01c2 D2B2     		uxtb	r2, r2
 4289 01c4 58BF     		it	pl
 4290 01c6 5342     		rsbpl	r3, r2, #0
 4291 01c8 00F10804 		add	r4, r0, #8
 4292              	.LVL555:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 115


 4293 01cc DB43     		mvns	r3, r3
 4294 01ce 1F4A     		ldr	r2, .L222+24
 4295 01d0 1144     		add	r1, r1, r2
 4296 01d2 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 4297              		.loc 9 631 0
 4298 01d6 B4F5007F 		cmp	r4, #512
 4299 01da 13DC     		bgt	.L214
 4300              	.LVL556:
 4301              	.LBB489:
 4302              	.LBB490:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4303              		.loc 11 121 0
 4304 01dc 1423     		movs	r3, #20
 4305 01de A2B2     		uxth	r2, r4
 4306 01e0 1D49     		ldr	r1, .L222+36
 4307 01e2 1E48     		ldr	r0, .L222+40
 4308 01e4 FFF7FEFF 		bl	HAL_UART_Transmit
 4309              	.LVL557:
 122:ROSSerial/AT32hardware.h **** 		{
 4310              		.loc 11 122 0
 4311 01e8 0146     		mov	r1, r0
 4312 01ea 28B9     		cbnz	r0, .L221
 4313              	.LVL558:
 4314              	.L215:
 4315              	.LBE490:
 4316              	.LBE489:
 4317              	.LBE487:
 4318              	.LBE486:
 4319              	.LBE483:
 4320              	.LBE482:
 4321              	.LBE481:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4322              		.loc 9 644 0
 4323 01ec 1E48     		ldr	r0, .L222+52
 4324 01ee FFF7FEFF 		bl	printf
 4325              	.LVL559:
 645:ROSSerial/ros/node_handle.h ****     }
 4326              		.loc 9 645 0
 4327 01f2 4FF0FF35 		mov	r5, #-1
 4328              	.LVL560:
 4329 01f6 A8E7     		b	.L208
 4330              	.LVL561:
 4331              	.L221:
 4332              	.LBB502:
 4333              	.LBB501:
 4334              	.LBB500:
 4335              	.LBB499:
 4336              	.LBB498:
 4337              	.LBB492:
 4338              	.LBB491:
 124:ROSSerial/AT32hardware.h **** 		}
 4339              		.loc 11 124 0
 4340 01f8 174B     		ldr	r3, .L222+36
 4341 01fa 2246     		mov	r2, r4
 4342 01fc 1848     		ldr	r0, .L222+44
 4343              	.LVL562:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 116


 4344 01fe FFF7FEFF 		bl	printf
 4345              	.LVL563:
 4346 0202 F3E7     		b	.L215
 4347              	.LVL564:
 4348              	.L214:
 4349              	.LBE491:
 4350              	.LBE492:
 4351              	.LBB493:
 4352              	.LBB494:
 4353              	.LBB495:
 4354              	.LBB496:
 4355              	.LBB497:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4356              		.loc 3 13 0
 4357 0204 174B     		ldr	r3, .L222+48
 4358 0206 0393     		str	r3, [sp, #12]
 4359              	.LVL565:
 4360              	.LBE497:
 4361              	.LBE496:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4362              		.loc 9 657 0
 4363 0208 0323     		movs	r3, #3
 4364 020a 8DF81030 		strb	r3, [sp, #16]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4365              		.loc 9 658 0
 4366 020e 164C     		ldr	r4, .L222+52
 4367              	.LVL566:
 4368 0210 0594     		str	r4, [sp, #20]
 4369              		.loc 9 659 0
 4370 0212 03AA     		add	r2, sp, #12
 4371 0214 0721     		movs	r1, #7
 4372 0216 0D48     		ldr	r0, .L222+24
 4373              	.LVL567:
 4374 0218 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4375              	.LVL568:
 4376              	.LBE495:
 4377              	.LBE494:
 4378              	.LBE493:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4379              		.loc 9 644 0
 4380 021c 2046     		mov	r0, r4
 4381 021e FFF7FEFF 		bl	printf
 4382              	.LVL569:
 4383 0222 E3E7     		b	.L215
 4384              	.LVL570:
 4385              	.L217:
 4386              	.LBE498:
 4387              	.LBE499:
 4388              	.LBE500:
 4389              	.LBE501:
 4390              	.LBE502:
 607:ROSSerial/ros/node_handle.h ****     }
 4391              		.loc 9 607 0
 4392 0224 0025     		movs	r5, #0
 4393              	.LVL571:
 4394 0226 90E7     		b	.L208
 4395              	.LVL572:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 117


 4396              	.L220:
 4397              	.LBE503:
 4398              	.LBE504:
  75:./Src/ROS_main.cpp ****         printf("hoverbot_state publish1 failed %d\n",retval);
 4399              		.loc 8 75 0
 4400 0228 2946     		mov	r1, r5
 4401 022a 1048     		ldr	r0, .L222+56
 4402 022c FFF7FEFF 		bl	printf
 4403              	.LVL573:
  90:./Src/ROS_main.cpp **** }
 4404              		.loc 8 90 0
 4405 0230 8DE7     		b	.L206
 4406              	.L223:
 4407 0232 00BF     		.align	2
 4408              	.L222:
 4409 0234 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 4410 0238 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4411 023c 00000000 		.word	.LANCHOR4
 4412 0240 00000000 		.word	wheel_posn
 4413 0244 00000000 		.word	pwms
 4414 0248 D34D6210 		.word	274877907
 4415 024c 00000000 		.word	.LANCHOR1
 4416 0250 40420F00 		.word	1000000
 4417 0254 00000000 		.word	.LANCHOR2
 4418 0258 18020000 		.word	.LANCHOR1+536
 4419 025c 00000000 		.word	huart2
 4420 0260 00000000 		.word	.LC19
 4421 0264 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4422 0268 20000000 		.word	.LC20
 4423 026c 00000000 		.word	.LC22
 4424              		.cfi_endproc
 4425              	.LFE495:
 4426              		.fnend
 4428              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 4429              		.align	1
 4430              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4431              		.syntax unified
 4432              		.thumb
 4433              		.thumb_func
 4434              		.fpu fpv4-sp-d16
 4436              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 4437              		.fnstart
 4438              	.LFB515:
 412:ROSSerial/ros/node_handle.h ****   {
 4439              		.loc 9 412 0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 24
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
 4443              	.LVL574:
 414:ROSSerial/ros/node_handle.h ****     {
 4444              		.loc 9 414 0
 4445 0000 D0F82425 		ldr	r2, [r0, #1316]
 4446 0004 8368     		ldr	r3, [r0, #8]
 4447 0006 9A42     		cmp	r2, r3
 4448 0008 00D2     		bcs	.L235
 4449 000a 7047     		bx	lr
 4450              	.L235:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 118


 412:ROSSerial/ros/node_handle.h ****   {
 4451              		.loc 9 412 0
 4452 000c 70B5     		push	{r4, r5, r6, lr}
 4453              		.save {r4, r5, r6, lr}
 4454              	.LCFI31:
 4455              		.cfi_def_cfa_offset 16
 4456              		.cfi_offset 4, -16
 4457              		.cfi_offset 5, -12
 4458              		.cfi_offset 6, -8
 4459              		.cfi_offset 14, -4
 4460              		.pad #24
 4461 000e 86B0     		sub	sp, sp, #24
 4462              	.LCFI32:
 4463              		.cfi_def_cfa_offset 40
 4464 0010 0446     		mov	r4, r0
 4465              	.LVL575:
 4466              	.LBB532:
 4467              	.LBB533:
  14:ROSSerial/std_msgs/Time.h ****   {
 4468              		.loc 1 14 0
 4469 0012 304B     		ldr	r3, .L237
 4470 0014 0393     		str	r3, [sp, #12]
 4471              	.LVL576:
 4472              	.LBB534:
 4473              	.LBB535:
 4474              	.LBB536:
 4475              		.loc 12 51 0
 4476 0016 0025     		movs	r5, #0
 4477 0018 0495     		str	r5, [sp, #16]
 4478 001a 0595     		str	r5, [sp, #20]
 4479              	.LVL577:
 4480              	.LBE536:
 4481              	.LBE535:
 4482              	.LBE534:
 4483              	.LBE533:
 4484              	.LBE532:
 4485              	.LBB537:
 4486              	.LBB538:
 4487              		.loc 11 151 0
 4488 001c FFF7FEFF 		bl	HAL_GetTick
 4489              	.LVL578:
 4490              	.LBE538:
 4491              	.LBE537:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 4492              		.loc 9 420 0
 4493 0020 A060     		str	r0, [r4, #8]
 4494              	.LVL579:
 4495              	.LBB539:
 4496              	.LBB540:
 612:ROSSerial/ros/node_handle.h **** 
 4497              		.loc 9 612 0
 4498 0022 039B     		ldr	r3, [sp, #12]
 4499 0024 1B68     		ldr	r3, [r3]
 4500 0026 04F21F21 		addw	r1, r4, #543
 4501 002a 03A8     		add	r0, sp, #12
 4502              	.LVL580:
 4503 002c 9847     		blx	r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 119


 4504              	.LVL581:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4505              		.loc 9 615 0
 4506 002e FF23     		movs	r3, #255
 4507 0030 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4508              		.loc 9 616 0
 4509 0034 FE23     		movs	r3, #254
 4510 0036 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4511              		.loc 9 617 0
 4512 003a C3B2     		uxtb	r3, r0
 4513 003c 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4514              		.loc 9 618 0
 4515 0040 C0F30722 		ubfx	r2, r0, #8, #8
 4516 0044 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4517              		.loc 9 619 0
 4518 0048 1344     		add	r3, r3, r2
 4519 004a DBB2     		uxtb	r3, r3
 4520 004c DB43     		mvns	r3, r3
 4521 004e 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4522              		.loc 9 620 0
 4523 0052 0A23     		movs	r3, #10
 4524 0054 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4525              		.loc 9 621 0
 4526 0058 84F81E52 		strb	r5, [r4, #542]
 4527              	.LVL582:
 4528              	.LBB541:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4529              		.loc 9 625 0
 4530 005c 0521     		movs	r1, #5
 4531              	.LBE541:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4532              		.loc 9 624 0
 4533 005e 2B46     		mov	r3, r5
 4534              	.LVL583:
 4535              	.L227:
 4536              	.LBB542:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4537              		.loc 9 625 0
 4538 0060 C51D     		adds	r5, r0, #7
 4539 0062 8D42     		cmp	r5, r1
 4540 0064 05DD     		ble	.L226
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4541              		.loc 9 626 0
 4542 0066 6218     		adds	r2, r4, r1
 4543 0068 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4544 006c 1344     		add	r3, r3, r2
 4545              	.LVL584:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4546              		.loc 9 625 0
 4547 006e 0131     		adds	r1, r1, #1
 4548              	.LVL585:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 120


 4549 0070 F6E7     		b	.L227
 4550              	.L226:
 4551              	.LVL586:
 4552              	.LBE542:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4553              		.loc 9 628 0
 4554 0072 5A42     		rsbs	r2, r3, #0
 4555 0074 DBB2     		uxtb	r3, r3
 4556              	.LVL587:
 4557 0076 D2B2     		uxtb	r2, r2
 4558 0078 58BF     		it	pl
 4559 007a 5342     		rsbpl	r3, r2, #0
 4560 007c 00F10806 		add	r6, r0, #8
 4561              	.LVL588:
 4562 0080 DB43     		mvns	r3, r3
 4563 0082 2544     		add	r5, r5, r4
 4564 0084 85F81832 		strb	r3, [r5, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 4565              		.loc 9 631 0
 4566 0088 B6F5007F 		cmp	r6, #512
 4567 008c 11DC     		bgt	.L228
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 4568              		.loc 9 633 0
 4569 008e 04F50674 		add	r4, r4, #536
 4570              	.LVL589:
 4571              	.LBB543:
 4572              	.LBB544:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4573              		.loc 11 121 0
 4574 0092 1423     		movs	r3, #20
 4575 0094 B2B2     		uxth	r2, r6
 4576 0096 2146     		mov	r1, r4
 4577              	.LVL590:
 4578 0098 0F48     		ldr	r0, .L237+4
 4579 009a FFF7FEFF 		bl	HAL_UART_Transmit
 4580              	.LVL591:
 122:ROSSerial/AT32hardware.h **** 		{
 4581              		.loc 11 122 0
 4582 009e 0146     		mov	r1, r0
 4583 00a0 08B9     		cbnz	r0, .L236
 4584              	.LVL592:
 4585              	.L224:
 4586              	.LBE544:
 4587              	.LBE543:
 4588              	.LBE540:
 4589              	.LBE539:
 424:ROSSerial/ros/node_handle.h **** 
 4590              		.loc 9 424 0
 4591 00a2 06B0     		add	sp, sp, #24
 4592              	.LCFI33:
 4593              		.cfi_remember_state
 4594              		.cfi_def_cfa_offset 16
 4595              		@ sp needed
 4596 00a4 70BD     		pop	{r4, r5, r6, pc}
 4597              	.LVL593:
 4598              	.L236:
 4599              	.LCFI34:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 121


 4600              		.cfi_restore_state
 4601              	.LBB553:
 4602              	.LBB552:
 4603              	.LBB546:
 4604              	.LBB545:
 124:ROSSerial/AT32hardware.h **** 		}
 4605              		.loc 11 124 0
 4606 00a6 2346     		mov	r3, r4
 4607 00a8 3246     		mov	r2, r6
 4608 00aa 0C48     		ldr	r0, .L237+8
 4609              	.LVL594:
 4610 00ac FFF7FEFF 		bl	printf
 4611              	.LVL595:
 4612 00b0 F7E7     		b	.L224
 4613              	.LVL596:
 4614              	.L228:
 4615              	.LBE545:
 4616              	.LBE546:
 4617              	.LBB547:
 4618              	.LBB548:
 4619              	.LBB549:
 4620              	.LBB550:
 4621              	.LBB551:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4622              		.loc 3 13 0
 4623 00b2 0B4B     		ldr	r3, .L237+12
 4624 00b4 0093     		str	r3, [sp]
 4625              	.LVL597:
 4626              	.LBE551:
 4627              	.LBE550:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4628              		.loc 9 657 0
 4629 00b6 0323     		movs	r3, #3
 4630 00b8 8DF80430 		strb	r3, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4631              		.loc 9 658 0
 4632 00bc 094D     		ldr	r5, .L237+16
 4633 00be 0295     		str	r5, [sp, #8]
 4634              		.loc 9 659 0
 4635 00c0 6A46     		mov	r2, sp
 4636 00c2 0721     		movs	r1, #7
 4637              	.LVL598:
 4638 00c4 2046     		mov	r0, r4
 4639 00c6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4640              	.LVL599:
 4641              	.LBE549:
 4642              	.LBE548:
 4643              	.LBE547:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4644              		.loc 9 644 0
 4645 00ca 2846     		mov	r0, r5
 4646 00cc FFF7FEFF 		bl	printf
 4647              	.LVL600:
 4648 00d0 E7E7     		b	.L224
 4649              	.L238:
 4650 00d2 00BF     		.align	2
 4651              	.L237:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 122


 4652 00d4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4653 00d8 00000000 		.word	huart2
 4654 00dc 00000000 		.word	.LC19
 4655 00e0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4656 00e4 20000000 		.word	.LC20
 4657              	.LBE552:
 4658              	.LBE553:
 4659              		.cfi_endproc
 4660              	.LFE515:
 4661              		.fnend
 4663              		.section	.text.ros_run,"ax",%progbits
 4664              		.align	1
 4665              		.global	ros_run
 4666              		.syntax unified
 4667              		.thumb
 4668              		.thumb_func
 4669              		.fpu fpv4-sp-d16
 4671              	ros_run:
 4672              		.fnstart
 4673              	.LFB496:
  93:./Src/ROS_main.cpp **** {
 4674              		.loc 8 93 0
 4675              		.cfi_startproc
 4676              		@ args = 0, pretend = 0, frame = 40
 4677              		@ frame_needed = 0, uses_anonymous_args = 0
 4678 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4679              		.save {r4, r5, r6, r7, r8, r9, lr}
 4680              	.LCFI35:
 4681              		.cfi_def_cfa_offset 28
 4682              		.cfi_offset 4, -28
 4683              		.cfi_offset 5, -24
 4684              		.cfi_offset 6, -20
 4685              		.cfi_offset 7, -16
 4686              		.cfi_offset 8, -12
 4687              		.cfi_offset 9, -8
 4688              		.cfi_offset 14, -4
 4689              		.pad #44
 4690 0004 8BB0     		sub	sp, sp, #44
 4691              	.LCFI36:
 4692              		.cfi_def_cfa_offset 72
  94:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
 4693              		.loc 8 94 0
 4694 0006 FFF7FEFF 		bl	HAL_GetTick
 4695              	.LVL601:
 4696 000a 0546     		mov	r5, r0
 4697              	.LVL602:
 4698              	.LBB639:
 4699              	.LBB640:
 4700              	.LBB641:
 4701              	.LBB642:
 4702              		.loc 11 151 0
 4703 000c FFF7FEFF 		bl	HAL_GetTick
 4704              	.LVL603:
 4705 0010 0446     		mov	r4, r0
 4706              	.LVL604:
 4707              	.LBE642:
 4708              	.LBE641:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 123


 250:ROSSerial/ros/node_handle.h ****     {
 4709              		.loc 9 250 0
 4710 0012 B44B     		ldr	r3, .L320
 4711 0014 D3F82435 		ldr	r3, [r3, #1316]
 4712 0018 C31A     		subs	r3, r0, r3
 4713 001a 42F6F822 		movw	r2, #11000
 4714 001e 9342     		cmp	r3, r2
 4715 0020 03D9     		bls	.L240
 254:ROSSerial/ros/node_handle.h ****     }
 4716              		.loc 9 254 0
 4717 0022 B04B     		ldr	r3, .L320
 4718 0024 0022     		movs	r2, #0
 4719 0026 83F81C25 		strb	r2, [r3, #1308]
 4720              	.L240:
 258:ROSSerial/ros/node_handle.h ****     {
 4721              		.loc 9 258 0
 4722 002a AE4B     		ldr	r3, .L320
 4723 002c D3F80835 		ldr	r3, [r3, #1288]
 4724 0030 002B     		cmp	r3, #0
 4725 0032 4BD0     		beq	.L242
 260:ROSSerial/ros/node_handle.h ****       {
 4726              		.loc 9 260 0
 4727 0034 AB4B     		ldr	r3, .L320
 4728 0036 D3F82835 		ldr	r3, [r3, #1320]
 4729 003a 9C42     		cmp	r4, r3
 4730 003c 46D9     		bls	.L242
 262:ROSSerial/ros/node_handle.h ****       }
 4731              		.loc 9 262 0
 4732 003e A94B     		ldr	r3, .L320
 4733 0040 0022     		movs	r2, #0
 4734 0042 C3F80825 		str	r2, [r3, #1288]
 4735 0046 41E0     		b	.L242
 4736              	.LVL605:
 4737              	.L299:
 4738              	.LBB643:
 4739              	.LBB644:
 4740              	.LBB645:
  84:ROSSerial/AT32hardware.h **** 		}
 4741              		.loc 11 84 0
 4742 0048 591C     		adds	r1, r3, #1
 4743 004a A74A     		ldr	r2, .L320+4
 4744 004c 1170     		strb	r1, [r2]
 4745 004e A74A     		ldr	r2, .L320+8
 4746 0050 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4747              	.LVL606:
 4748              	.L246:
 4749              	.LBE645:
 4750              	.LBE644:
 283:ROSSerial/ros/node_handle.h ****         break;
 4751              		.loc 9 283 0
 4752 0052 0028     		cmp	r0, #0
 4753 0054 C0F2C082 		blt	.L247
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4754              		.loc 9 285 0
 4755 0058 A24B     		ldr	r3, .L320
 4756 005a D3F81825 		ldr	r2, [r3, #1304]
 4757 005e 0244     		add	r2, r2, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 124


 4758 0060 C3F81825 		str	r2, [r3, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 4759              		.loc 9 286 0
 4760 0064 D3F80835 		ldr	r3, [r3, #1288]
 4761 0068 072B     		cmp	r3, #7
 4762 006a 1ED0     		beq	.L298
 293:ROSSerial/ros/node_handle.h ****       {
 4763              		.loc 9 293 0
 4764 006c 002B     		cmp	r3, #0
 4765 006e 51D1     		bne	.L250
 295:ROSSerial/ros/node_handle.h ****         {
 4766              		.loc 9 295 0
 4767 0070 FF28     		cmp	r0, #255
 4768 0072 41D1     		bne	.L251
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4769              		.loc 9 297 0
 4770 0074 9B4A     		ldr	r2, .L320
 4771 0076 0133     		adds	r3, r3, #1
 4772 0078 C2F80835 		str	r3, [r2, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 4773              		.loc 9 298 0
 4774 007c 04F11403 		add	r3, r4, #20
 4775 0080 C2F82835 		str	r3, [r2, #1320]
 4776 0084 22E0     		b	.L242
 4777              	.LVL607:
 4778              	.L300:
 4779              	.LBB648:
 4780              	.LBB646:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 4781              		.loc 11 88 0
 4782 0086 0023     		movs	r3, #0
 4783 0088 974A     		ldr	r2, .L320+4
 4784 008a 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 4785              		.loc 11 89 0
 4786 008c 984A     		ldr	r2, .L320+12
 4787 008e 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 4788              		.loc 11 90 0
 4789 0090 9848     		ldr	r0, .L320+16
 4790 0092 0268     		ldr	r2, [r0]
 4791 0094 D368     		ldr	r3, [r2, #12]
 4792 0096 43F04003 		orr	r3, r3, #64
 4793 009a D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 4794              		.loc 11 91 0
 4795 009c 0122     		movs	r2, #1
 4796 009e 9649     		ldr	r1, .L320+20
 4797 00a0 FFF7FEFF 		bl	HAL_UART_Receive_IT
 4798              	.LVL608:
  80:ROSSerial/AT32hardware.h **** 		
 4799              		.loc 11 80 0
 4800 00a4 4FF0FF30 		mov	r0, #-1
 4801 00a8 D3E7     		b	.L246
 4802              	.LVL609:
 4803              	.L298:
 4804              	.LBE646:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 125


 4805              	.LBE648:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 4806              		.loc 9 288 0
 4807 00aa 8E4B     		ldr	r3, .L320
 4808 00ac D3F81425 		ldr	r2, [r3, #1300]
 4809 00b0 511C     		adds	r1, r2, #1
 4810 00b2 C3F81415 		str	r1, [r3, #1300]
 4811 00b6 1A44     		add	r2, r2, r3
 4812 00b8 1076     		strb	r0, [r2, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4813              		.loc 9 289 0
 4814 00ba D3F80C25 		ldr	r2, [r3, #1292]
 4815 00be 013A     		subs	r2, r2, #1
 4816 00c0 C3F80C25 		str	r2, [r3, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4817              		.loc 9 290 0
 4818 00c4 12B9     		cbnz	r2, .L242
 291:ROSSerial/ros/node_handle.h ****       }
 4819              		.loc 9 291 0
 4820 00c6 0822     		movs	r2, #8
 4821 00c8 C3F80825 		str	r2, [r3, #1288]
 4822              	.L242:
 270:ROSSerial/ros/node_handle.h ****       {
 4823              		.loc 9 270 0
 4824 00cc 854B     		ldr	r3, .L320
 4825 00ce 5B69     		ldr	r3, [r3, #20]
 4826 00d0 3BB1     		cbz	r3, .L243
 4827              	.LVL610:
 4828              	.LBB649:
 4829              	.LBB650:
 4830              		.loc 11 151 0
 4831 00d2 FFF7FEFF 		bl	HAL_GetTick
 4832              	.LVL611:
 4833              	.LBE650:
 4834              	.LBE649:
 276:ROSSerial/ros/node_handle.h ****         {
 4835              		.loc 9 276 0
 4836 00d6 001B     		subs	r0, r0, r4
 4837 00d8 824B     		ldr	r3, .L320
 4838 00da 5B69     		ldr	r3, [r3, #20]
 4839 00dc 9842     		cmp	r0, r3
 4840 00de 00F20383 		bhi	.L293
 4841              	.L243:
 4842              	.LVL612:
 4843              	.LBB651:
 4844              	.LBB647:
  82:ROSSerial/AT32hardware.h **** 		{
 4845              		.loc 11 82 0
 4846 00e2 814B     		ldr	r3, .L320+4
 4847 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4848 00e6 824A     		ldr	r2, .L320+12
 4849 00e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4850 00ea 9342     		cmp	r3, r2
 4851 00ec ACD3     		bcc	.L299
  86:ROSSerial/AT32hardware.h **** 		{
 4852              		.loc 11 86 0
 4853 00ee 9342     		cmp	r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 126


 4854 00f0 C9D0     		beq	.L300
  80:ROSSerial/AT32hardware.h **** 		
 4855              		.loc 11 80 0
 4856 00f2 4FF0FF30 		mov	r0, #-1
 4857 00f6 ACE7     		b	.L246
 4858              	.LVL613:
 4859              	.L251:
 4860              	.LBE647:
 4861              	.LBE651:
 4862              	.LBB652:
 4863              	.LBB653:
 4864              		.loc 11 151 0
 4865 00f8 FFF7FEFF 		bl	HAL_GetTick
 4866              	.LVL614:
 4867              	.LBE653:
 4868              	.LBE652:
 300:ROSSerial/ros/node_handle.h ****         {
 4869              		.loc 9 300 0
 4870 00fc 001B     		subs	r0, r0, r4
 4871 00fe 41F28833 		movw	r3, #5000
 4872 0102 9842     		cmp	r0, r3
 4873 0104 E2D9     		bls	.L242
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4874              		.loc 9 303 0
 4875 0106 774B     		ldr	r3, .L320
 4876 0108 0022     		movs	r2, #0
 4877 010a 83F81C25 		strb	r2, [r3, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 4878              		.loc 9 304 0
 4879 010e 6FF00102 		mvn	r2, #1
 4880 0112 EBE2     		b	.L244
 4881              	.L250:
 307:ROSSerial/ros/node_handle.h ****       {
 4882              		.loc 9 307 0
 4883 0114 012B     		cmp	r3, #1
 4884 0116 3ED0     		beq	.L301
 320:ROSSerial/ros/node_handle.h ****       {
 4885              		.loc 9 320 0
 4886 0118 022B     		cmp	r3, #2
 4887 011a 00F0B280 		beq	.L302
 327:ROSSerial/ros/node_handle.h ****       {
 4888              		.loc 9 327 0
 4889 011e 032B     		cmp	r3, #3
 4890 0120 00F0BB80 		beq	.L303
 332:ROSSerial/ros/node_handle.h ****       {
 4891              		.loc 9 332 0
 4892 0124 042B     		cmp	r3, #4
 4893 0126 00F0C380 		beq	.L304
 339:ROSSerial/ros/node_handle.h ****       {
 4894              		.loc 9 339 0
 4895 012a 052B     		cmp	r3, #5
 4896 012c 00F0D180 		beq	.L305
 345:ROSSerial/ros/node_handle.h ****       {
 4897              		.loc 9 345 0
 4898 0130 062B     		cmp	r3, #6
 4899 0132 00F0EF80 		beq	.L306
 352:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 127


 4900              		.loc 9 352 0
 4901 0136 082B     		cmp	r3, #8
 4902 0138 C8D1     		bne	.L242
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4903              		.loc 9 354 0
 4904 013a 6A4B     		ldr	r3, .L320
 4905 013c 0021     		movs	r1, #0
 4906 013e C3F80815 		str	r1, [r3, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 4907              		.loc 9 355 0
 4908 0142 8B1A     		subs	r3, r1, r2
 4909 0144 D2B2     		uxtb	r2, r2
 4910 0146 DBB2     		uxtb	r3, r3
 4911 0148 58BF     		it	pl
 4912 014a 5A42     		rsbpl	r2, r3, #0
 4913 014c FF2A     		cmp	r2, #255
 4914 014e BDD1     		bne	.L242
 357:ROSSerial/ros/node_handle.h ****           {
 4915              		.loc 9 357 0
 4916 0150 644B     		ldr	r3, .L320
 4917 0152 D3F81065 		ldr	r6, [r3, #1296]
 4918 0156 002E     		cmp	r6, #0
 4919 0158 00F0F080 		beq	.L307
 365:ROSSerial/ros/node_handle.h ****           {
 4920              		.loc 9 365 0
 4921 015c 0A2E     		cmp	r6, #10
 4922 015e 00F04381 		beq	.L308
 369:ROSSerial/ros/node_handle.h ****           {
 4923              		.loc 9 369 0
 4924 0162 062E     		cmp	r6, #6
 4925 0164 00F08481 		beq	.L309
 374:ROSSerial/ros/node_handle.h ****           {
 4926              		.loc 9 374 0
 4927 0168 0B2E     		cmp	r6, #11
 4928 016a 00F03082 		beq	.L310
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 4929              		.loc 9 380 0
 4930 016e 643E     		subs	r6, r6, #100
 4931 0170 06EB8602 		add	r2, r6, r6, lsl #2
 4932 0174 5B4B     		ldr	r3, .L320
 4933 0176 03EB8203 		add	r3, r3, r2, lsl #2
 4934 017a B3F8A434 		ldrh	r3, [r3, #1188]
 4935 017e 002B     		cmp	r3, #0
 4936 0180 A4D0     		beq	.L242
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 4937              		.loc 9 381 0
 4938 0182 5848     		ldr	r0, .L320
 4939 0184 00EB8206 		add	r6, r0, r2, lsl #2
 4940 0188 D6F8B434 		ldr	r3, [r6, #1204]
 4941 018c 5B4A     		ldr	r2, .L320+24
 4942 018e 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 4943              		.loc 9 383 0
 4944 0190 1830     		adds	r0, r0, #24
 4945 0192 9847     		blx	r3
 4946              	.LVL615:
 4947 0194 9AE7     		b	.L242
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 128


 4948              	.L301:
 309:ROSSerial/ros/node_handle.h ****         {
 4949              		.loc 9 309 0
 4950 0196 FE28     		cmp	r0, #254
 4951 0198 3FD0     		beq	.L311
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4952              		.loc 9 315 0
 4953 019a 524B     		ldr	r3, .L320
 4954 019c 0022     		movs	r2, #0
 4955 019e C3F80825 		str	r2, [r3, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4956              		.loc 9 316 0
 4957 01a2 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4958 01a6 002B     		cmp	r3, #0
 4959 01a8 90D1     		bne	.L242
 4960              	.LVL616:
 4961              	.LBB654:
 4962              	.LBB655:
 414:ROSSerial/ros/node_handle.h ****     {
 4963              		.loc 9 414 0
 4964 01aa 4E4B     		ldr	r3, .L320
 4965 01ac D3F82425 		ldr	r2, [r3, #1316]
 4966 01b0 9B68     		ldr	r3, [r3, #8]
 4967 01b2 9A42     		cmp	r2, r3
 4968 01b4 8AD3     		bcc	.L242
 4969              	.LVL617:
 4970              	.LBB656:
 4971              	.LBB657:
  14:ROSSerial/std_msgs/Time.h ****   {
 4972              		.loc 1 14 0
 4973 01b6 524B     		ldr	r3, .L320+28
 4974 01b8 0193     		str	r3, [sp, #4]
 4975              	.LVL618:
 4976              	.LBB658:
 4977              	.LBB659:
 4978              	.LBB660:
 4979              		.loc 12 51 0
 4980 01ba 0026     		movs	r6, #0
 4981 01bc 0296     		str	r6, [sp, #8]
 4982 01be 0396     		str	r6, [sp, #12]
 4983              	.LVL619:
 4984              	.LBE660:
 4985              	.LBE659:
 4986              	.LBE658:
 4987              	.LBE657:
 4988              	.LBE656:
 4989              	.LBB661:
 4990              	.LBB662:
 4991              		.loc 11 151 0
 4992 01c0 FFF7FEFF 		bl	HAL_GetTick
 4993              	.LVL620:
 4994              	.LBE662:
 4995              	.LBE661:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 4996              		.loc 9 420 0
 4997 01c4 474F     		ldr	r7, .L320
 4998 01c6 B860     		str	r0, [r7, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 129


 4999              	.LVL621:
 5000              	.LBB663:
 5001              	.LBB664:
 612:ROSSerial/ros/node_handle.h **** 
 5002              		.loc 9 612 0
 5003 01c8 019B     		ldr	r3, [sp, #4]
 5004 01ca 1B68     		ldr	r3, [r3]
 5005 01cc 07F21F21 		addw	r1, r7, #543
 5006 01d0 01A8     		add	r0, sp, #4
 5007              	.LVL622:
 5008 01d2 9847     		blx	r3
 5009              	.LVL623:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5010              		.loc 9 615 0
 5011 01d4 FF23     		movs	r3, #255
 5012 01d6 87F81832 		strb	r3, [r7, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5013              		.loc 9 616 0
 5014 01da FE23     		movs	r3, #254
 5015 01dc 87F81932 		strb	r3, [r7, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5016              		.loc 9 617 0
 5017 01e0 C3B2     		uxtb	r3, r0
 5018 01e2 87F81A32 		strb	r3, [r7, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5019              		.loc 9 618 0
 5020 01e6 C0F30722 		ubfx	r2, r0, #8, #8
 5021 01ea 87F81B22 		strb	r2, [r7, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5022              		.loc 9 619 0
 5023 01ee 1344     		add	r3, r3, r2
 5024 01f0 DBB2     		uxtb	r3, r3
 5025 01f2 DB43     		mvns	r3, r3
 5026 01f4 87F81C32 		strb	r3, [r7, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5027              		.loc 9 620 0
 5028 01f8 0A23     		movs	r3, #10
 5029 01fa 87F81D32 		strb	r3, [r7, #541]
 621:ROSSerial/ros/node_handle.h **** 
 5030              		.loc 9 621 0
 5031 01fe 87F81E62 		strb	r6, [r7, #542]
 5032              	.LVL624:
 5033              	.LBB665:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5034              		.loc 9 625 0
 5035 0202 0522     		movs	r2, #5
 5036              	.LBE665:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5037              		.loc 9 624 0
 5038 0204 3346     		mov	r3, r6
 5039              	.LVL625:
 5040              	.L256:
 5041              	.LBB666:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5042              		.loc 9 625 0
 5043 0206 C11D     		adds	r1, r0, #7
 5044 0208 9142     		cmp	r1, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 130


 5045 020a 0BDD     		ble	.L255
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 5046              		.loc 9 626 0
 5047 020c 3549     		ldr	r1, .L320
 5048 020e 1144     		add	r1, r1, r2
 5049 0210 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5050 0214 0B44     		add	r3, r3, r1
 5051              	.LVL626:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5052              		.loc 9 625 0
 5053 0216 0132     		adds	r2, r2, #1
 5054              	.LVL627:
 5055 0218 F5E7     		b	.L256
 5056              	.LVL628:
 5057              	.L311:
 5058              	.LBE666:
 5059              	.LBE664:
 5060              	.LBE663:
 5061              	.LBE655:
 5062              	.LBE654:
 311:ROSSerial/ros/node_handle.h ****         }
 5063              		.loc 9 311 0
 5064 021a 0133     		adds	r3, r3, #1
 5065 021c 314A     		ldr	r2, .L320
 5066 021e C2F80835 		str	r3, [r2, #1288]
 5067 0222 53E7     		b	.L242
 5068              	.LVL629:
 5069              	.L255:
 5070              	.LBB677:
 5071              	.LBB676:
 5072              	.LBB675:
 5073              	.LBB674:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 5074              		.loc 9 628 0
 5075 0224 5A42     		rsbs	r2, r3, #0
 5076              	.LVL630:
 5077 0226 DBB2     		uxtb	r3, r3
 5078              	.LVL631:
 5079 0228 D2B2     		uxtb	r2, r2
 5080 022a 58BF     		it	pl
 5081 022c 5342     		rsbpl	r3, r2, #0
 5082 022e 00F10806 		add	r6, r0, #8
 5083              	.LVL632:
 5084 0232 DB43     		mvns	r3, r3
 5085 0234 2B4A     		ldr	r2, .L320
 5086 0236 1144     		add	r1, r1, r2
 5087 0238 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 5088              		.loc 9 631 0
 5089 023c B6F5007F 		cmp	r6, #512
 5090 0240 0FDC     		bgt	.L257
 5091              	.LVL633:
 5092              	.LBB667:
 5093              	.LBB668:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 5094              		.loc 11 121 0
 5095 0242 1423     		movs	r3, #20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 131


 5096 0244 B2B2     		uxth	r2, r6
 5097 0246 2F49     		ldr	r1, .L320+32
 5098 0248 2A48     		ldr	r0, .L320+16
 5099 024a FFF7FEFF 		bl	HAL_UART_Transmit
 5100              	.LVL634:
 122:ROSSerial/AT32hardware.h **** 		{
 5101              		.loc 11 122 0
 5102 024e 0146     		mov	r1, r0
 5103 0250 0028     		cmp	r0, #0
 5104 0252 3FF43BAF 		beq	.L242
 124:ROSSerial/AT32hardware.h **** 		}
 5105              		.loc 11 124 0
 5106 0256 2B4B     		ldr	r3, .L320+32
 5107 0258 3246     		mov	r2, r6
 5108 025a 2B48     		ldr	r0, .L320+36
 5109              	.LVL635:
 5110 025c FFF7FEFF 		bl	printf
 5111              	.LVL636:
 5112 0260 34E7     		b	.L242
 5113              	.LVL637:
 5114              	.L257:
 5115              	.LBE668:
 5116              	.LBE667:
 5117              	.LBB669:
 5118              	.LBB670:
 5119              	.LBB671:
 5120              	.LBB672:
 5121              	.LBB673:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5122              		.loc 3 13 0
 5123 0262 2A4B     		ldr	r3, .L320+40
 5124 0264 0493     		str	r3, [sp, #16]
 5125              	.LVL638:
 5126              	.LBE673:
 5127              	.LBE672:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5128              		.loc 9 657 0
 5129 0266 0323     		movs	r3, #3
 5130 0268 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5131              		.loc 9 658 0
 5132 026c 284E     		ldr	r6, .L320+44
 5133              	.LVL639:
 5134 026e 0696     		str	r6, [sp, #24]
 5135              		.loc 9 659 0
 5136 0270 04AA     		add	r2, sp, #16
 5137 0272 0721     		movs	r1, #7
 5138 0274 1B48     		ldr	r0, .L320
 5139              	.LVL640:
 5140 0276 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5141              	.LVL641:
 5142              	.LBE671:
 5143              	.LBE670:
 5144              	.LBE669:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 5145              		.loc 9 644 0
 5146 027a 3046     		mov	r0, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 132


 5147 027c FFF7FEFF 		bl	printf
 5148              	.LVL642:
 5149 0280 24E7     		b	.L242
 5150              	.LVL643:
 5151              	.L302:
 5152              	.LBE674:
 5153              	.LBE675:
 5154              	.LBE676:
 5155              	.LBE677:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5156              		.loc 9 322 0
 5157 0282 184A     		ldr	r2, .L320
 5158 0284 C2F80C05 		str	r0, [r2, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 5159              		.loc 9 323 0
 5160 0288 0021     		movs	r1, #0
 5161 028a C2F81415 		str	r1, [r2, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5162              		.loc 9 324 0
 5163 028e 0133     		adds	r3, r3, #1
 5164 0290 C2F80835 		str	r3, [r2, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 5165              		.loc 9 325 0
 5166 0294 C2F81805 		str	r0, [r2, #1304]
 5167 0298 18E7     		b	.L242
 5168              	.L303:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 5169              		.loc 9 329 0
 5170 029a 124A     		ldr	r2, .L320
 5171 029c D2F80C15 		ldr	r1, [r2, #1292]
 5172 02a0 01EB0020 		add	r0, r1, r0, lsl #8
 5173 02a4 C2F80C05 		str	r0, [r2, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 5174              		.loc 9 330 0
 5175 02a8 0133     		adds	r3, r3, #1
 5176 02aa C2F80835 		str	r3, [r2, #1288]
 5177 02ae 0DE7     		b	.L242
 5178              	.L304:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 5179              		.loc 9 334 0
 5180 02b0 5142     		rsbs	r1, r2, #0
 5181 02b2 D2B2     		uxtb	r2, r2
 5182 02b4 C9B2     		uxtb	r1, r1
 5183 02b6 58BF     		it	pl
 5184 02b8 4A42     		rsbpl	r2, r1, #0
 5185 02ba FF2A     		cmp	r2, #255
 5186 02bc 04D0     		beq	.L312
 337:ROSSerial/ros/node_handle.h ****       }
 5187              		.loc 9 337 0
 5188 02be 094B     		ldr	r3, .L320
 5189 02c0 0022     		movs	r2, #0
 5190 02c2 C3F80825 		str	r2, [r3, #1288]
 5191 02c6 01E7     		b	.L242
 5192              	.L312:
 335:ROSSerial/ros/node_handle.h ****         else
 5193              		.loc 9 335 0
 5194 02c8 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 133


 5195 02ca 064A     		ldr	r2, .L320
 5196 02cc C2F80835 		str	r3, [r2, #1288]
 5197 02d0 FCE6     		b	.L242
 5198              	.L305:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 5199              		.loc 9 341 0
 5200 02d2 044A     		ldr	r2, .L320
 5201 02d4 C2F81005 		str	r0, [r2, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5202              		.loc 9 342 0
 5203 02d8 0133     		adds	r3, r3, #1
 5204 02da C2F80835 		str	r3, [r2, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 5205              		.loc 9 343 0
 5206 02de C2F81805 		str	r0, [r2, #1304]
 5207 02e2 F3E6     		b	.L242
 5208              	.L321:
 5209              		.align	2
 5210              	.L320:
 5211 02e4 00000000 		.word	.LANCHOR1
 5212 02e8 00000000 		.word	g_RxRead
 5213 02ec 00000000 		.word	g_RxBuf
 5214 02f0 00000000 		.word	g_RxWritten
 5215 02f4 00000000 		.word	huart2
 5216 02f8 00000000 		.word	byte
 5217 02fc 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5218 0300 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5219 0304 18020000 		.word	.LANCHOR1+536
 5220 0308 00000000 		.word	.LC19
 5221 030c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5222 0310 20000000 		.word	.LC20
 5223              	.L306:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5224              		.loc 9 347 0
 5225 0314 BE4B     		ldr	r3, .L322
 5226 0316 D3F81025 		ldr	r2, [r3, #1296]
 5227 031a 02EB0022 		add	r2, r2, r0, lsl #8
 5228 031e C3F81025 		str	r2, [r3, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5229              		.loc 9 348 0
 5230 0322 0722     		movs	r2, #7
 5231 0324 C3F80825 		str	r2, [r3, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5232              		.loc 9 349 0
 5233 0328 D3F80C35 		ldr	r3, [r3, #1292]
 5234 032c 002B     		cmp	r3, #0
 5235 032e 7FF4CDAE 		bne	.L242
 350:ROSSerial/ros/node_handle.h ****       }
 5236              		.loc 9 350 0
 5237 0332 B74B     		ldr	r3, .L322
 5238 0334 0822     		movs	r2, #8
 5239 0336 C3F80825 		str	r2, [r3, #1288]
 5240 033a C7E6     		b	.L242
 5241              	.L307:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 5242              		.loc 9 359 0
 5243 033c 1846     		mov	r0, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 134


 5244 033e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 5245              	.LVL644:
 5246              	.LBB678:
 5247              	.LBB679:
 5248              	.LBB680:
 5249              	.LBB681:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 5250              		.loc 2 12 0
 5251 0342 B44B     		ldr	r3, .L322+4
 5252 0344 0493     		str	r3, [sp, #16]
 5253              	.LVL645:
 5254              	.LBE681:
 5255              	.LBE680:
 568:ROSSerial/ros/node_handle.h ****     {
 5256              		.loc 9 568 0
 5257 0346 3746     		mov	r7, r6
 5258 0348 00E0     		b	.L268
 5259              	.LVL646:
 5260              	.L267:
 5261 034a 0137     		adds	r7, r7, #1
 5262              	.LVL647:
 5263              	.L268:
 5264 034c 042F     		cmp	r7, #4
 5265 034e 1FDC     		bgt	.L266
 570:ROSSerial/ros/node_handle.h ****       {
 5266              		.loc 9 570 0
 5267 0350 07EB8702 		add	r2, r7, r7, lsl #2
 5268 0354 AE4B     		ldr	r3, .L322
 5269 0356 03EB8203 		add	r3, r3, r2, lsl #2
 5270 035a B3F82C34 		ldrh	r3, [r3, #1068]
 5271 035e 002B     		cmp	r3, #0
 5272 0360 F3D0     		beq	.L267
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 5273              		.loc 9 572 0
 5274 0362 ADF81430 		strh	r3, [sp, #20]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 5275              		.loc 9 573 0
 5276 0366 AA48     		ldr	r0, .L322
 5277 0368 00EB8203 		add	r3, r0, r2, lsl #2
 5278 036c D3F83024 		ldr	r2, [r3, #1072]
 5279 0370 0692     		str	r2, [sp, #24]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 5280              		.loc 9 574 0
 5281 0372 D3F83824 		ldr	r2, [r3, #1080]
 5282 0376 0792     		str	r2, [sp, #28]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 5283              		.loc 9 575 0
 5284 0378 D3F83C34 		ldr	r3, [r3, #1084]
 5285 037c 0893     		str	r3, [sp, #32]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 5286              		.loc 9 576 0
 5287 037e 4FF40073 		mov	r3, #512
 5288 0382 0993     		str	r3, [sp, #36]
 577:ROSSerial/ros/node_handle.h ****       }
 5289              		.loc 9 577 0
 5290 0384 04AA     		add	r2, sp, #16
 5291 0386 0021     		movs	r1, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 135


 5292 0388 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5293              	.LVL648:
 5294 038c DDE7     		b	.L267
 5295              	.LVL649:
 5296              	.L270:
 580:ROSSerial/ros/node_handle.h ****     {
 5297              		.loc 9 580 0
 5298 038e 0136     		adds	r6, r6, #1
 5299              	.LVL650:
 5300              	.L266:
 5301 0390 042E     		cmp	r6, #4
 5302 0392 1EDC     		bgt	.L269
 582:ROSSerial/ros/node_handle.h ****       {
 5303              		.loc 9 582 0
 5304 0394 06EB8602 		add	r2, r6, r6, lsl #2
 5305 0398 9D4B     		ldr	r3, .L322
 5306 039a 03EB8203 		add	r3, r3, r2, lsl #2
 5307 039e B3F8A434 		ldrh	r3, [r3, #1188]
 5308 03a2 002B     		cmp	r3, #0
 5309 03a4 F3D0     		beq	.L270
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 5310              		.loc 9 584 0
 5311 03a6 ADF81430 		strh	r3, [sp, #20]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 5312              		.loc 9 585 0
 5313 03aa 9948     		ldr	r0, .L322
 5314 03ac 00EB8203 		add	r3, r0, r2, lsl #2
 5315 03b0 D3F8A824 		ldr	r2, [r3, #1192]
 5316 03b4 0692     		str	r2, [sp, #24]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 5317              		.loc 9 586 0
 5318 03b6 D3F8AC24 		ldr	r2, [r3, #1196]
 5319 03ba 0792     		str	r2, [sp, #28]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 5320              		.loc 9 587 0
 5321 03bc D3F8B034 		ldr	r3, [r3, #1200]
 5322 03c0 0893     		str	r3, [sp, #32]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 5323              		.loc 9 588 0
 5324 03c2 4FF40073 		mov	r3, #512
 5325 03c6 0993     		str	r3, [sp, #36]
 589:ROSSerial/ros/node_handle.h ****       }
 5326              		.loc 9 589 0
 5327 03c8 04AA     		add	r2, sp, #16
 5328 03ca 0121     		movs	r1, #1
 5329 03cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5330              	.LVL651:
 5331 03d0 DDE7     		b	.L270
 5332              	.L269:
 592:ROSSerial/ros/node_handle.h ****   }
 5333              		.loc 9 592 0
 5334 03d2 8F4B     		ldr	r3, .L322
 5335 03d4 0122     		movs	r2, #1
 5336 03d6 83F81C25 		strb	r2, [r3, #1308]
 5337              	.LVL652:
 5338              	.LBE679:
 5339              	.LBE678:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 136


 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 5340              		.loc 9 361 0
 5341 03da C3F82045 		str	r4, [r3, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 5342              		.loc 9 362 0
 5343 03de C3F82445 		str	r4, [r3, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 5344              		.loc 9 363 0
 5345 03e2 4FF0FF32 		mov	r2, #-1
 5346 03e6 81E1     		b	.L244
 5347              	.L308:
 5348              	.LVL653:
 5349              	.LBB682:
 5350              	.LBB683:
 5351              	.LBB684:
 5352              	.LBB685:
 5353              		.loc 11 151 0
 5354 03e8 FFF7FEFF 		bl	HAL_GetTick
 5355              	.LVL654:
 5356              	.LBE685:
 5357              	.LBE684:
 429:ROSSerial/ros/node_handle.h **** 
 5358              		.loc 9 429 0
 5359 03ec 884E     		ldr	r6, .L322
 5360 03ee B368     		ldr	r3, [r6, #8]
 5361 03f0 C01A     		subs	r0, r0, r3
 5362              	.LVL655:
 5363              	.LBB686:
 5364              	.LBB687:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5365              		.loc 1 38 0
 5366 03f2 337E     		ldrb	r3, [r6, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5367              		.loc 1 39 0
 5368 03f4 727E     		ldrb	r2, [r6, #25]	@ zero_extendqisi2
 5369 03f6 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5370              		.loc 1 40 0
 5371 03fa B27E     		ldrb	r2, [r6, #26]	@ zero_extendqisi2
 5372 03fc 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 5373              		.loc 1 41 0
 5374 0400 F17E     		ldrb	r1, [r6, #27]	@ zero_extendqisi2
 5375 0402 43EA0161 		orr	r1, r3, r1, lsl #24
 5376              	.LVL656:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5377              		.loc 1 43 0
 5378 0406 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5379              		.loc 1 44 0
 5380 0408 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 5381 040a 43EA0223 		orr	r3, r3, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5382              		.loc 1 45 0
 5383 040e B27F     		ldrb	r2, [r6, #30]	@ zero_extendqisi2
 5384 0410 43EA0243 		orr	r3, r3, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 137


 5385              		.loc 1 46 0
 5386 0414 F27F     		ldrb	r2, [r6, #31]	@ zero_extendqisi2
 5387 0416 43EA0262 		orr	r2, r3, r2, lsl #24
 5388              	.LVL657:
 5389              	.LBE687:
 5390              	.LBE686:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 5391              		.loc 9 432 0
 5392 041a 7F4F     		ldr	r7, .L322+8
 5393 041c A7FB00C3 		umull	ip, r3, r7, r0
 5394 0420 9B09     		lsrs	r3, r3, #6
 5395 0422 1944     		add	r1, r1, r3
 5396 0424 0591     		str	r1, [sp, #20]
 433:ROSSerial/ros/node_handle.h **** 
 5397              		.loc 9 433 0
 5398 0426 4FF47A79 		mov	r9, #1000
 5399 042a 09FB1303 		mls	r3, r9, r3, r0
 5400 042e DFF8F481 		ldr	r8, .L322+20
 5401 0432 08FB0323 		mla	r3, r8, r3, r2
 5402 0436 0693     		str	r3, [sp, #24]
 5403              	.LVL658:
 5404              	.LBB688:
 5405              	.LBB689:
 5406              	.LBB690:
 5407              	.LBB691:
 5408              		.loc 11 151 0
 5409 0438 FFF7FEFF 		bl	HAL_GetTick
 5410              	.LVL659:
 5411              	.LBE691:
 5412              	.LBE690:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 5413              		.loc 9 454 0
 5414 043c A7FB0023 		umull	r2, r3, r7, r0
 5415 0440 9B09     		lsrs	r3, r3, #6
 5416 0442 059A     		ldr	r2, [sp, #20]
 5417 0444 D21A     		subs	r2, r2, r3
 5418 0446 013A     		subs	r2, r2, #1
 5419 0448 F260     		str	r2, [r6, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 5420              		.loc 9 455 0
 5421 044a 09FB1303 		mls	r3, r9, r3, r0
 5422 044e 069A     		ldr	r2, [sp, #24]
 5423 0450 08FB1323 		mls	r3, r8, r3, r2
 5424 0454 714A     		ldr	r2, .L322+12
 5425 0456 1A44     		add	r2, r2, r3
 5426 0458 3146     		mov	r1, r6
 5427 045a 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 5428              		.loc 9 456 0
 5429 045e 06F10C00 		add	r0, r6, #12
 5430              	.LVL660:
 5431 0462 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 5432              	.LVL661:
 5433              	.LBE689:
 5434              	.LBE688:
 5435              	.LBB692:
 5436              	.LBB693:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 138


 5437              		.loc 11 151 0
 5438 0466 FFF7FEFF 		bl	HAL_GetTick
 5439              	.LVL662:
 5440              	.LBE693:
 5441              	.LBE692:
 438:ROSSerial/ros/node_handle.h ****   }
 5442              		.loc 9 438 0
 5443 046a C6F82405 		str	r0, [r6, #1316]
 5444 046e 2DE6     		b	.L242
 5445              	.LVL663:
 5446              	.L309:
 5447              	.LBE683:
 5448              	.LBE682:
 5449              	.LBB694:
 5450              	.LBB695:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 5451              		.loc 4 116 0
 5452 0470 674B     		ldr	r3, .L322
 5453 0472 1E7E     		ldrb	r6, [r3, #24]	@ zero_extendqisi2
 5454              	.LVL664:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 5455              		.loc 4 117 0
 5456 0474 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5457 0478 9E42     		cmp	r6, r3
 5458 047a 23D8     		bhi	.L313
 5459              	.L273:
 5460              	.LVL665:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 5461              		.loc 4 120 0
 5462 047c 644B     		ldr	r3, .L322
 5463 047e 83F83465 		strb	r6, [r3, #1332]
 5464              	.LVL666:
 5465              	.LBB696:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5466              		.loc 4 121 0
 5467 0482 0022     		movs	r2, #0
 5468              	.LBE696:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 5469              		.loc 4 119 0
 5470 0484 0426     		movs	r6, #4
 5471              	.LVL667:
 5472              	.L275:
 5473              	.LBB698:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5474              		.loc 4 121 0
 5475 0486 624B     		ldr	r3, .L322
 5476 0488 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5477 048c 9342     		cmp	r3, r2
 5478 048e 22D9     		bls	.L274
 5479              	.LBB697:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5480              		.loc 4 127 0
 5481 0490 5F48     		ldr	r0, .L322
 5482 0492 00F11801 		add	r1, r0, #24
 5483 0496 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5484              		.loc 4 128 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 139


 5485 0498 771C     		adds	r7, r6, #1
 5486 049a CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5487 049c 43EA0723 		orr	r3, r3, r7, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5488              		.loc 4 129 0
 5489 04a0 B71C     		adds	r7, r6, #2
 5490 04a2 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5491 04a4 43EA0743 		orr	r3, r3, r7, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 5492              		.loc 4 130 0
 5493 04a8 F71C     		adds	r7, r6, #3
 5494 04aa C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 5495 04ac 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 5496              		.loc 4 131 0
 5497 04b0 C0F83835 		str	r3, [r0, #1336]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 5498              		.loc 4 132 0
 5499 04b4 0436     		adds	r6, r6, #4
 5500              	.LVL668:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5501              		.loc 4 133 0
 5502 04b6 D0F83C15 		ldr	r1, [r0, #1340]
 5503 04ba 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5504              	.LBE697:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5505              		.loc 4 121 0
 5506 04be 0132     		adds	r2, r2, #1
 5507              	.LVL669:
 5508 04c0 D2B2     		uxtb	r2, r2
 5509              	.LVL670:
 5510 04c2 E0E7     		b	.L275
 5511              	.LVL671:
 5512              	.L313:
 5513              	.LBE698:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5514              		.loc 4 118 0
 5515 04c4 524F     		ldr	r7, .L322
 5516 04c6 B100     		lsls	r1, r6, #2
 5517 04c8 D7F83C05 		ldr	r0, [r7, #1340]
 5518 04cc FFF7FEFF 		bl	realloc
 5519              	.LVL672:
 5520 04d0 C7F83C05 		str	r0, [r7, #1340]
 5521 04d4 D2E7     		b	.L273
 5522              	.LVL673:
 5523              	.L274:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 5524              		.loc 4 135 0
 5525 04d6 4E4B     		ldr	r3, .L322
 5526 04d8 03F11802 		add	r2, r3, #24
 5527              	.LVL674:
 5528 04dc 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
 5529              	.LVL675:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 5530              		.loc 4 136 0
 5531 04de 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5532 04e2 9F42     		cmp	r7, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 140


 5533 04e4 24D8     		bhi	.L314
 5534              	.L276:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 5535              		.loc 4 138 0
 5536 04e6 0436     		adds	r6, r6, #4
 5537              	.LVL676:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 5538              		.loc 4 139 0
 5539 04e8 494B     		ldr	r3, .L322
 5540 04ea 83F84075 		strb	r7, [r3, #1344]
 5541              	.LVL677:
 5542              	.LBB699:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5543              		.loc 4 140 0
 5544 04ee 0022     		movs	r2, #0
 5545              	.LVL678:
 5546              	.L278:
 5547 04f0 474B     		ldr	r3, .L322
 5548 04f2 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5549 04f6 9342     		cmp	r3, r2
 5550 04f8 24D9     		bls	.L277
 5551              	.LBB700:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5552              		.loc 4 146 0
 5553 04fa 4548     		ldr	r0, .L322
 5554 04fc 00F11801 		add	r1, r0, #24
 5555 0500 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5556              		.loc 4 147 0
 5557 0502 771C     		adds	r7, r6, #1
 5558 0504 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5559 0506 43EA0723 		orr	r3, r3, r7, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5560              		.loc 4 148 0
 5561 050a B71C     		adds	r7, r6, #2
 5562 050c CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5563 050e 43EA0743 		orr	r3, r3, r7, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 5564              		.loc 4 149 0
 5565 0512 F71C     		adds	r7, r6, #3
 5566 0514 C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 5567 0516 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 5568              		.loc 4 150 0
 5569 051a 00F24451 		addw	r1, r0, #1348
 5570 051e 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 5571              		.loc 4 151 0
 5572 0520 0436     		adds	r6, r6, #4
 5573              	.LVL679:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5574              		.loc 4 152 0
 5575 0522 D0F84815 		ldr	r1, [r0, #1352]
 5576 0526 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5577              	.LBE700:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5578              		.loc 4 140 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 141


 5579 052a 0132     		adds	r2, r2, #1
 5580              	.LVL680:
 5581 052c D2B2     		uxtb	r2, r2
 5582              	.LVL681:
 5583 052e DFE7     		b	.L278
 5584              	.LVL682:
 5585              	.L314:
 5586              	.LBE699:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5587              		.loc 4 137 0
 5588 0530 A2F11808 		sub	r8, r2, #24
 5589 0534 B900     		lsls	r1, r7, #2
 5590 0536 D8F84805 		ldr	r0, [r8, #1352]
 5591 053a FFF7FEFF 		bl	realloc
 5592              	.LVL683:
 5593 053e C8F84805 		str	r0, [r8, #1352]
 5594 0542 D0E7     		b	.L276
 5595              	.LVL684:
 5596              	.L277:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 5597              		.loc 4 154 0
 5598 0544 324B     		ldr	r3, .L322
 5599 0546 03F11802 		add	r2, r3, #24
 5600              	.LVL685:
 5601 054a 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
 5602              	.LVL686:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 5603              		.loc 4 155 0
 5604 054c 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 5605 0550 9F42     		cmp	r7, r3
 5606 0552 06D8     		bhi	.L315
 5607              	.L279:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 5608              		.loc 4 157 0
 5609 0554 321D     		adds	r2, r6, #4
 5610              	.LVL687:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 5611              		.loc 4 158 0
 5612 0556 2E4B     		ldr	r3, .L322
 5613 0558 83F84C75 		strb	r7, [r3, #1356]
 5614              	.LVL688:
 5615              	.LBB701:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5616              		.loc 4 159 0
 5617 055c 4FF0000C 		mov	ip, #0
 5618 0560 1BE0     		b	.L283
 5619              	.LVL689:
 5620              	.L315:
 5621              	.LBE701:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5622              		.loc 4 156 0
 5623 0562 A2F11808 		sub	r8, r2, #24
 5624 0566 B900     		lsls	r1, r7, #2
 5625 0568 D8F85405 		ldr	r0, [r8, #1364]
 5626 056c FFF7FEFF 		bl	realloc
 5627              	.LVL690:
 5628 0570 C8F85405 		str	r0, [r8, #1364]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 142


 5629 0574 EEE7     		b	.L279
 5630              	.LVL691:
 5631              	.L281:
 5632              	.LBB705:
 5633              	.LBB702:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 5634              		.loc 4 166 0
 5635 0576 2649     		ldr	r1, .L322
 5636 0578 01F11803 		add	r3, r1, #24
 5637              	.LVL692:
 5638 057c 501E     		subs	r0, r2, #1
 5639 057e 0027     		movs	r7, #0
 5640              	.LVL693:
 5641 0580 1F54     		strb	r7, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 5642              		.loc 4 167 0
 5643 0582 013E     		subs	r6, r6, #1
 5644 0584 1E44     		add	r6, r6, r3
 5645 0586 C1F85065 		str	r6, [r1, #1360]
 5646              	.LVL694:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5647              		.loc 4 169 0
 5648 058a D1F85435 		ldr	r3, [r1, #1364]
 5649 058e 43F82C60 		str	r6, [r3, ip, lsl #2]	@ unaligned
 5650              	.LBE702:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5651              		.loc 4 159 0
 5652 0592 0CF1010C 		add	ip, ip, #1
 5653              	.LVL695:
 5654 0596 5FFA8CFC 		uxtb	ip, ip
 5655              	.LVL696:
 5656              	.L283:
 5657 059a 1D4B     		ldr	r3, .L322
 5658 059c 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 5659 05a0 6345     		cmp	r3, ip
 5660 05a2 0FD9     		bls	.L280
 5661              	.LBB704:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 5662              		.loc 4 161 0
 5663 05a4 1E4B     		ldr	r3, .L322+16
 5664 05a6 9F58     		ldr	r7, [r3, r2]	@ unaligned
 5665              	.LVL697:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 5666              		.loc 4 162 0
 5667 05a8 161D     		adds	r6, r2, #4
 5668              	.LVL698:
 5669              	.LBB703:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5670              		.loc 4 163 0
 5671 05aa 3346     		mov	r3, r6
 5672              	.LVL699:
 5673              	.L282:
 5674 05ac BA19     		adds	r2, r7, r6
 5675 05ae 9A42     		cmp	r2, r3
 5676 05b0 E1D9     		bls	.L281
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5677              		.loc 4 164 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 143


 5678 05b2 174A     		ldr	r2, .L322
 5679 05b4 02F11800 		add	r0, r2, #24
 5680 05b8 591E     		subs	r1, r3, #1
 5681 05ba 1A44     		add	r2, r2, r3
 5682 05bc 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 5683 05be 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5684              		.loc 4 163 0
 5685 05c0 0133     		adds	r3, r3, #1
 5686              	.LVL700:
 5687 05c2 F3E7     		b	.L282
 5688              	.LVL701:
 5689              	.L280:
 5690              	.LBE703:
 5691              	.LBE704:
 5692              	.LBE705:
 5693              	.LBE695:
 5694              	.LBE694:
 372:ROSSerial/ros/node_handle.h ****           }
 5695              		.loc 9 372 0
 5696 05c4 124B     		ldr	r3, .L322
 5697 05c6 0122     		movs	r2, #1
 5698 05c8 83F82C25 		strb	r2, [r3, #1324]
 5699 05cc 7EE5     		b	.L242
 5700              	.L310:
 376:ROSSerial/ros/node_handle.h ****           }
 5701              		.loc 9 376 0
 5702 05ce 104B     		ldr	r3, .L322
 5703 05d0 0022     		movs	r2, #0
 5704 05d2 83F81C25 		strb	r2, [r3, #1308]
 5705 05d6 79E5     		b	.L242
 5706              	.L247:
 5707              	.LBE643:
 391:ROSSerial/ros/node_handle.h ****     {
 5708              		.loc 9 391 0
 5709 05d8 0D4B     		ldr	r3, .L322
 5710 05da 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 5711 05de 002B     		cmp	r3, #0
 5712 05e0 00F08F80 		beq	.L295
 5713 05e4 0A4B     		ldr	r3, .L322
 5714 05e6 D3F82035 		ldr	r3, [r3, #1312]
 5715 05ea E31A     		subs	r3, r4, r3
 5716 05ec 40F6C412 		movw	r2, #2500
 5717 05f0 9342     		cmp	r3, r2
 5718 05f2 01D8     		bhi	.L316
 398:ROSSerial/ros/node_handle.h ****   }
 5719              		.loc 9 398 0
 5720 05f4 0022     		movs	r2, #0
 5721 05f6 79E0     		b	.L244
 5722              	.L316:
 5723              	.LVL702:
 5724              	.LBB706:
 5725              	.LBB707:
 414:ROSSerial/ros/node_handle.h ****     {
 5726              		.loc 9 414 0
 5727 05f8 054B     		ldr	r3, .L322
 5728 05fa D3F82425 		ldr	r2, [r3, #1316]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 144


 5729 05fe 9B68     		ldr	r3, [r3, #8]
 5730 0600 9A42     		cmp	r2, r3
 5731 0602 11D2     		bcs	.L317
 5732              	.L290:
 5733              	.LVL703:
 5734              	.LBE707:
 5735              	.LBE706:
 395:ROSSerial/ros/node_handle.h ****     }
 5736              		.loc 9 395 0
 5737 0604 024B     		ldr	r3, .L322
 5738 0606 C3F82045 		str	r4, [r3, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 5739              		.loc 9 398 0
 5740 060a 0022     		movs	r2, #0
 5741 060c 6EE0     		b	.L244
 5742              	.L323:
 5743 060e 00BF     		.align	2
 5744              	.L322:
 5745 0610 00000000 		.word	.LANCHOR1
 5746 0614 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 5747 0618 D34D6210 		.word	274877907
 5748 061c 00CA9A3B 		.word	1000000000
 5749 0620 18000000 		.word	.LANCHOR1+24
 5750 0624 40420F00 		.word	1000000
 5751              	.LVL704:
 5752              	.L317:
 5753              	.LBB727:
 5754              	.LBB726:
 5755              	.LBB708:
 5756              	.LBB709:
  14:ROSSerial/std_msgs/Time.h ****   {
 5757              		.loc 1 14 0
 5758 0628 3C4B     		ldr	r3, .L324
 5759 062a 0193     		str	r3, [sp, #4]
 5760              	.LVL705:
 5761              	.LBB710:
 5762              	.LBB711:
 5763              	.LBB712:
 5764              		.loc 12 51 0
 5765 062c 0026     		movs	r6, #0
 5766 062e 0296     		str	r6, [sp, #8]
 5767 0630 0396     		str	r6, [sp, #12]
 5768              	.LVL706:
 5769              	.LBE712:
 5770              	.LBE711:
 5771              	.LBE710:
 5772              	.LBE709:
 5773              	.LBE708:
 5774              	.LBB713:
 5775              	.LBB714:
 5776              		.loc 11 151 0
 5777 0632 FFF7FEFF 		bl	HAL_GetTick
 5778              	.LVL707:
 5779              	.LBE714:
 5780              	.LBE713:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 5781              		.loc 9 420 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 145


 5782 0636 3A4F     		ldr	r7, .L324+4
 5783 0638 B860     		str	r0, [r7, #8]
 5784              	.LVL708:
 5785              	.LBB715:
 5786              	.LBB716:
 612:ROSSerial/ros/node_handle.h **** 
 5787              		.loc 9 612 0
 5788 063a 019B     		ldr	r3, [sp, #4]
 5789 063c 1B68     		ldr	r3, [r3]
 5790 063e 07F21F21 		addw	r1, r7, #543
 5791 0642 01A8     		add	r0, sp, #4
 5792              	.LVL709:
 5793 0644 9847     		blx	r3
 5794              	.LVL710:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5795              		.loc 9 615 0
 5796 0646 FF23     		movs	r3, #255
 5797 0648 87F81832 		strb	r3, [r7, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5798              		.loc 9 616 0
 5799 064c FE23     		movs	r3, #254
 5800 064e 87F81932 		strb	r3, [r7, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5801              		.loc 9 617 0
 5802 0652 C3B2     		uxtb	r3, r0
 5803 0654 87F81A32 		strb	r3, [r7, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5804              		.loc 9 618 0
 5805 0658 C0F30722 		ubfx	r2, r0, #8, #8
 5806 065c 87F81B22 		strb	r2, [r7, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5807              		.loc 9 619 0
 5808 0660 1344     		add	r3, r3, r2
 5809 0662 DBB2     		uxtb	r3, r3
 5810 0664 DB43     		mvns	r3, r3
 5811 0666 87F81C32 		strb	r3, [r7, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5812              		.loc 9 620 0
 5813 066a 0A23     		movs	r3, #10
 5814 066c 87F81D32 		strb	r3, [r7, #541]
 621:ROSSerial/ros/node_handle.h **** 
 5815              		.loc 9 621 0
 5816 0670 87F81E62 		strb	r6, [r7, #542]
 5817              	.LVL711:
 5818              	.LBB717:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5819              		.loc 9 625 0
 5820 0674 0522     		movs	r2, #5
 5821              	.LBE717:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5822              		.loc 9 624 0
 5823 0676 3346     		mov	r3, r6
 5824              	.LVL712:
 5825              	.L287:
 5826              	.LBB718:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5827              		.loc 9 625 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 146


 5828 0678 C11D     		adds	r1, r0, #7
 5829 067a 9142     		cmp	r1, r2
 5830 067c 06DD     		ble	.L286
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 5831              		.loc 9 626 0
 5832 067e 2849     		ldr	r1, .L324+4
 5833 0680 1144     		add	r1, r1, r2
 5834 0682 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5835 0686 0B44     		add	r3, r3, r1
 5836              	.LVL713:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5837              		.loc 9 625 0
 5838 0688 0132     		adds	r2, r2, #1
 5839              	.LVL714:
 5840 068a F5E7     		b	.L287
 5841              	.L286:
 5842              	.LVL715:
 5843              	.LBE718:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 5844              		.loc 9 628 0
 5845 068c 5A42     		rsbs	r2, r3, #0
 5846              	.LVL716:
 5847 068e DBB2     		uxtb	r3, r3
 5848              	.LVL717:
 5849 0690 D2B2     		uxtb	r2, r2
 5850 0692 58BF     		it	pl
 5851 0694 5342     		rsbpl	r3, r2, #0
 5852 0696 00F10806 		add	r6, r0, #8
 5853              	.LVL718:
 5854 069a DB43     		mvns	r3, r3
 5855 069c 204A     		ldr	r2, .L324+4
 5856 069e 1144     		add	r1, r1, r2
 5857 06a0 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 5858              		.loc 9 631 0
 5859 06a4 B6F5007F 		cmp	r6, #512
 5860 06a8 0EDC     		bgt	.L288
 5861              	.LVL719:
 5862              	.LBB719:
 5863              	.LBB720:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 5864              		.loc 11 121 0
 5865 06aa 1423     		movs	r3, #20
 5866 06ac B2B2     		uxth	r2, r6
 5867 06ae 1D49     		ldr	r1, .L324+8
 5868 06b0 1D48     		ldr	r0, .L324+12
 5869 06b2 FFF7FEFF 		bl	HAL_UART_Transmit
 5870              	.LVL720:
 122:ROSSerial/AT32hardware.h **** 		{
 5871              		.loc 11 122 0
 5872 06b6 0146     		mov	r1, r0
 5873 06b8 0028     		cmp	r0, #0
 5874 06ba A3D0     		beq	.L290
 124:ROSSerial/AT32hardware.h **** 		}
 5875              		.loc 11 124 0
 5876 06bc 194B     		ldr	r3, .L324+8
 5877 06be 3246     		mov	r2, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 147


 5878 06c0 1A48     		ldr	r0, .L324+16
 5879              	.LVL721:
 5880 06c2 FFF7FEFF 		bl	printf
 5881              	.LVL722:
 5882 06c6 9DE7     		b	.L290
 5883              	.LVL723:
 5884              	.L288:
 5885              	.LBE720:
 5886              	.LBE719:
 5887              	.LBB721:
 5888              	.LBB722:
 5889              	.LBB723:
 5890              	.LBB724:
 5891              	.LBB725:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5892              		.loc 3 13 0
 5893 06c8 194B     		ldr	r3, .L324+20
 5894 06ca 0493     		str	r3, [sp, #16]
 5895              	.LVL724:
 5896              	.LBE725:
 5897              	.LBE724:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5898              		.loc 9 657 0
 5899 06cc 0323     		movs	r3, #3
 5900 06ce 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5901              		.loc 9 658 0
 5902 06d2 184E     		ldr	r6, .L324+24
 5903              	.LVL725:
 5904 06d4 0696     		str	r6, [sp, #24]
 5905              		.loc 9 659 0
 5906 06d6 04AA     		add	r2, sp, #16
 5907 06d8 0721     		movs	r1, #7
 5908 06da 1148     		ldr	r0, .L324+4
 5909              	.LVL726:
 5910 06dc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5911              	.LVL727:
 5912              	.LBE723:
 5913              	.LBE722:
 5914              	.LBE721:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 5915              		.loc 9 644 0
 5916 06e0 3046     		mov	r0, r6
 5917 06e2 FFF7FEFF 		bl	printf
 5918              	.LVL728:
 5919 06e6 8DE7     		b	.L290
 5920              	.LVL729:
 5921              	.L293:
 5922              	.LBE716:
 5923              	.LBE715:
 5924              	.LBE726:
 5925              	.LBE727:
 5926              	.LBB728:
 279:ROSSerial/ros/node_handle.h ****         }
 5927              		.loc 9 279 0
 5928 06e8 6FF00102 		mvn	r2, #1
 5929              	.L244:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 148


 5930              	.LVL730:
 5931              	.LBE728:
 5932              	.LBE640:
 5933              	.LBE639:
  96:./Src/ROS_main.cpp ****     if(retval != 0)
 5934              		.loc 8 96 0
 5935 06ec 5AB9     		cbnz	r2, .L318
 5936              	.L291:
 102:./Src/ROS_main.cpp ****     if ((now - publish_time) > 100) {
 5937              		.loc 8 102 0
 5938 06ee 124B     		ldr	r3, .L324+28
 5939 06f0 1B68     		ldr	r3, [r3]
 5940 06f2 EB1A     		subs	r3, r5, r3
 5941 06f4 642B     		cmp	r3, #100
 5942 06f6 0BD8     		bhi	.L319
 5943              	.L292:
 107:./Src/ROS_main.cpp ****     wheels_pwm_set();
 5944              		.loc 8 107 0
 5945 06f8 FFF7FEFF 		bl	wheels_pwm_set
 5946              	.LVL731:
 5947              		.loc 8 108 0
 5948 06fc 0BB0     		add	sp, sp, #44
 5949              	.LCFI37:
 5950              		.cfi_remember_state
 5951              		.cfi_def_cfa_offset 28
 5952              		@ sp needed
 5953 06fe BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5954              	.LVL732:
 5955              	.L295:
 5956              	.LCFI38:
 5957              		.cfi_restore_state
 5958              	.LBB730:
 5959              	.LBB729:
 398:ROSSerial/ros/node_handle.h ****   }
 5960              		.loc 9 398 0
 5961 0702 0022     		movs	r2, #0
 5962 0704 F2E7     		b	.L244
 5963              	.LVL733:
 5964              	.L318:
 5965              	.LBE729:
 5966              	.LBE730:
  98:./Src/ROS_main.cpp ****         printf("%lu:ERROR: spinOnce1 returned error probably SPIN_TIMEOUT = %d\n",now,retval);
 5967              		.loc 8 98 0
 5968 0706 2946     		mov	r1, r5
 5969 0708 0C48     		ldr	r0, .L324+32
 5970 070a FFF7FEFF 		bl	printf
 5971              	.LVL734:
 5972 070e EEE7     		b	.L291
 5973              	.L319:
 104:./Src/ROS_main.cpp ****         publish_hovebot_state();
 5974              		.loc 8 104 0
 5975 0710 FFF7FEFF 		bl	publish_hovebot_state
 5976              	.LVL735:
 105:./Src/ROS_main.cpp ****         publish_time = now;
 5977              		.loc 8 105 0
 5978 0714 084B     		ldr	r3, .L324+28
 5979 0716 1D60     		str	r5, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 149


 5980 0718 EEE7     		b	.L292
 5981              	.L325:
 5982 071a 00BF     		.align	2
 5983              	.L324:
 5984 071c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5985 0720 00000000 		.word	.LANCHOR1
 5986 0724 18020000 		.word	.LANCHOR1+536
 5987 0728 00000000 		.word	huart2
 5988 072c 00000000 		.word	.LC19
 5989 0730 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5990 0734 20000000 		.word	.LC20
 5991 0738 00000000 		.word	.LANCHOR5
 5992 073c 00000000 		.word	.LC23
 5993              		.cfi_endproc
 5994              	.LFE496:
 5995              		.fnend
 5997              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 5998              		.align	1
 5999              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 6000              		.syntax unified
 6001              		.thumb
 6002              		.thumb_func
 6003              		.fpu fpv4-sp-d16
 6005              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 6006              		.fnstart
 6007              	.LFB531:
 238:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 6008              		.loc 9 238 0
 6009              		.cfi_startproc
 6010              		@ args = 0, pretend = 0, frame = 40
 6011              		@ frame_needed = 0, uses_anonymous_args = 0
 6012              	.LVL736:
 6013 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6014              		.save {r4, r5, r6, r7, r8, r9, lr}
 6015              	.LCFI39:
 6016              		.cfi_def_cfa_offset 28
 6017              		.cfi_offset 4, -28
 6018              		.cfi_offset 5, -24
 6019              		.cfi_offset 6, -20
 6020              		.cfi_offset 7, -16
 6021              		.cfi_offset 8, -12
 6022              		.cfi_offset 9, -8
 6023              		.cfi_offset 14, -4
 6024              		.pad #44
 6025 0004 8BB0     		sub	sp, sp, #44
 6026              	.LCFI40:
 6027              		.cfi_def_cfa_offset 72
 6028 0006 0446     		mov	r4, r0
 6029              	.LVL737:
 6030              	.LBB816:
 6031              	.LBB817:
 6032              	.LBB818:
 6033              	.LBB819:
 6034              		.loc 11 151 0
 6035 0008 FFF7FEFF 		bl	HAL_GetTick
 6036              	.LVL738:
 6037 000c 0546     		mov	r5, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 150


 6038              	.LVL739:
 6039              	.LBE819:
 6040              	.LBE818:
 250:ROSSerial/ros/node_handle.h ****     {
 6041              		.loc 9 250 0
 6042 000e D4F82435 		ldr	r3, [r4, #1316]
 6043 0012 C31A     		subs	r3, r0, r3
 6044 0014 42F6F822 		movw	r2, #11000
 6045 0018 9342     		cmp	r3, r2
 6046 001a 02D9     		bls	.L327
 254:ROSSerial/ros/node_handle.h ****     }
 6047              		.loc 9 254 0
 6048 001c 0023     		movs	r3, #0
 6049 001e 84F81C35 		strb	r3, [r4, #1308]
 6050              	.L327:
 258:ROSSerial/ros/node_handle.h ****     {
 6051              		.loc 9 258 0
 6052 0022 D4F80835 		ldr	r3, [r4, #1288]
 6053 0026 002B     		cmp	r3, #0
 6054 0028 46D0     		beq	.L329
 260:ROSSerial/ros/node_handle.h ****       {
 6055              		.loc 9 260 0
 6056 002a D4F82835 		ldr	r3, [r4, #1320]
 6057 002e 9D42     		cmp	r5, r3
 6058 0030 42D9     		bls	.L329
 262:ROSSerial/ros/node_handle.h ****       }
 6059              		.loc 9 262 0
 6060 0032 0023     		movs	r3, #0
 6061 0034 C4F80835 		str	r3, [r4, #1288]
 6062 0038 3EE0     		b	.L329
 6063              	.LVL740:
 6064              	.L384:
 6065              	.LBB820:
 6066              	.LBB821:
 6067              	.LBB822:
  84:ROSSerial/AT32hardware.h **** 		}
 6068              		.loc 11 84 0
 6069 003a 591C     		adds	r1, r3, #1
 6070 003c BC4A     		ldr	r2, .L403
 6071 003e 1170     		strb	r1, [r2]
 6072 0040 BC4A     		ldr	r2, .L403+4
 6073 0042 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 6074              	.LVL741:
 6075              	.L333:
 6076              	.LBE822:
 6077              	.LBE821:
 283:ROSSerial/ros/node_handle.h ****         break;
 6078              		.loc 9 283 0
 6079 0044 0029     		cmp	r1, #0
 6080 0046 C0F29482 		blt	.L334
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 6081              		.loc 9 285 0
 6082 004a D4F81825 		ldr	r2, [r4, #1304]
 6083 004e 0A44     		add	r2, r2, r1
 6084 0050 C4F81825 		str	r2, [r4, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 6085              		.loc 9 286 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 151


 6086 0054 D4F80835 		ldr	r3, [r4, #1288]
 6087 0058 072B     		cmp	r3, #7
 6088 005a 1DD0     		beq	.L383
 293:ROSSerial/ros/node_handle.h ****       {
 6089              		.loc 9 293 0
 6090 005c 002B     		cmp	r3, #0
 6091 005e 4CD1     		bne	.L337
 295:ROSSerial/ros/node_handle.h ****         {
 6092              		.loc 9 295 0
 6093 0060 FF29     		cmp	r1, #255
 6094 0062 3DD1     		bne	.L338
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 6095              		.loc 9 297 0
 6096 0064 0133     		adds	r3, r3, #1
 6097 0066 C4F80835 		str	r3, [r4, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 6098              		.loc 9 298 0
 6099 006a 05F11403 		add	r3, r5, #20
 6100 006e C4F82835 		str	r3, [r4, #1320]
 6101 0072 21E0     		b	.L329
 6102              	.LVL742:
 6103              	.L385:
 6104              	.LBB825:
 6105              	.LBB823:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 6106              		.loc 11 88 0
 6107 0074 0023     		movs	r3, #0
 6108 0076 AE4A     		ldr	r2, .L403
 6109 0078 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 6110              		.loc 11 89 0
 6111 007a AF4A     		ldr	r2, .L403+8
 6112 007c 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 6113              		.loc 11 90 0
 6114 007e AF48     		ldr	r0, .L403+12
 6115 0080 0268     		ldr	r2, [r0]
 6116 0082 D368     		ldr	r3, [r2, #12]
 6117 0084 43F04003 		orr	r3, r3, #64
 6118 0088 D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 6119              		.loc 11 91 0
 6120 008a 0122     		movs	r2, #1
 6121 008c AC49     		ldr	r1, .L403+16
 6122 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 6123              	.LVL743:
  80:ROSSerial/AT32hardware.h **** 		
 6124              		.loc 11 80 0
 6125 0092 4FF0FF31 		mov	r1, #-1
 6126 0096 D5E7     		b	.L333
 6127              	.LVL744:
 6128              	.L383:
 6129              	.LBE823:
 6130              	.LBE825:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 6131              		.loc 9 288 0
 6132 0098 D4F81435 		ldr	r3, [r4, #1300]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 152


 6133 009c 5A1C     		adds	r2, r3, #1
 6134 009e C4F81425 		str	r2, [r4, #1300]
 6135 00a2 2344     		add	r3, r3, r4
 6136 00a4 1976     		strb	r1, [r3, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 6137              		.loc 9 289 0
 6138 00a6 D4F80C35 		ldr	r3, [r4, #1292]
 6139 00aa 013B     		subs	r3, r3, #1
 6140 00ac C4F80C35 		str	r3, [r4, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 6141              		.loc 9 290 0
 6142 00b0 13B9     		cbnz	r3, .L329
 291:ROSSerial/ros/node_handle.h ****       }
 6143              		.loc 9 291 0
 6144 00b2 0823     		movs	r3, #8
 6145 00b4 C4F80835 		str	r3, [r4, #1288]
 6146              	.L329:
 270:ROSSerial/ros/node_handle.h ****       {
 6147              		.loc 9 270 0
 6148 00b8 6369     		ldr	r3, [r4, #20]
 6149 00ba 33B1     		cbz	r3, .L330
 6150              	.LVL745:
 6151              	.LBB826:
 6152              	.LBB827:
 6153              		.loc 11 151 0
 6154 00bc FFF7FEFF 		bl	HAL_GetTick
 6155              	.LVL746:
 6156              	.LBE827:
 6157              	.LBE826:
 276:ROSSerial/ros/node_handle.h ****         {
 6158              		.loc 9 276 0
 6159 00c0 401B     		subs	r0, r0, r5
 6160 00c2 6369     		ldr	r3, [r4, #20]
 6161 00c4 9842     		cmp	r0, r3
 6162 00c6 00F2C982 		bhi	.L378
 6163              	.L330:
 6164              	.LVL747:
 6165              	.LBB828:
 6166              	.LBB824:
  82:ROSSerial/AT32hardware.h **** 		{
 6167              		.loc 11 82 0
 6168 00ca 994B     		ldr	r3, .L403
 6169 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6170 00ce 9A4A     		ldr	r2, .L403+8
 6171 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6172 00d2 9342     		cmp	r3, r2
 6173 00d4 B1D3     		bcc	.L384
  86:ROSSerial/AT32hardware.h **** 		{
 6174              		.loc 11 86 0
 6175 00d6 9342     		cmp	r3, r2
 6176 00d8 CCD0     		beq	.L385
  80:ROSSerial/AT32hardware.h **** 		
 6177              		.loc 11 80 0
 6178 00da 4FF0FF31 		mov	r1, #-1
 6179 00de B1E7     		b	.L333
 6180              	.LVL748:
 6181              	.L338:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 153


 6182              	.LBE824:
 6183              	.LBE828:
 6184              	.LBB829:
 6185              	.LBB830:
 6186              		.loc 11 151 0
 6187 00e0 FFF7FEFF 		bl	HAL_GetTick
 6188              	.LVL749:
 6189              	.LBE830:
 6190              	.LBE829:
 300:ROSSerial/ros/node_handle.h ****         {
 6191              		.loc 9 300 0
 6192 00e4 401B     		subs	r0, r0, r5
 6193 00e6 41F28833 		movw	r3, #5000
 6194 00ea 9842     		cmp	r0, r3
 6195 00ec E4D9     		bls	.L329
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 6196              		.loc 9 303 0
 6197 00ee 0023     		movs	r3, #0
 6198 00f0 84F81C35 		strb	r3, [r4, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 6199              		.loc 9 304 0
 6200 00f4 6FF00100 		mvn	r0, #1
 6201 00f8 B2E2     		b	.L326
 6202              	.L337:
 307:ROSSerial/ros/node_handle.h ****       {
 6203              		.loc 9 307 0
 6204 00fa 012B     		cmp	r3, #1
 6205 00fc 3DD0     		beq	.L386
 320:ROSSerial/ros/node_handle.h ****       {
 6206              		.loc 9 320 0
 6207 00fe 022B     		cmp	r3, #2
 6208 0100 00F0AD80 		beq	.L387
 327:ROSSerial/ros/node_handle.h ****       {
 6209              		.loc 9 327 0
 6210 0104 032B     		cmp	r3, #3
 6211 0106 00F0B580 		beq	.L388
 332:ROSSerial/ros/node_handle.h ****       {
 6212              		.loc 9 332 0
 6213 010a 042B     		cmp	r3, #4
 6214 010c 00F0BC80 		beq	.L389
 339:ROSSerial/ros/node_handle.h ****       {
 6215              		.loc 9 339 0
 6216 0110 052B     		cmp	r3, #5
 6217 0112 00F0C880 		beq	.L390
 345:ROSSerial/ros/node_handle.h ****       {
 6218              		.loc 9 345 0
 6219 0116 062B     		cmp	r3, #6
 6220 0118 00F0CD80 		beq	.L391
 352:ROSSerial/ros/node_handle.h ****       {
 6221              		.loc 9 352 0
 6222 011c 082B     		cmp	r3, #8
 6223 011e CBD1     		bne	.L329
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 6224              		.loc 9 354 0
 6225 0120 0023     		movs	r3, #0
 6226 0122 C4F80835 		str	r3, [r4, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 154


 6227              		.loc 9 355 0
 6228 0126 9B1A     		subs	r3, r3, r2
 6229 0128 D2B2     		uxtb	r2, r2
 6230 012a DBB2     		uxtb	r3, r3
 6231 012c 58BF     		it	pl
 6232 012e 5A42     		rsbpl	r2, r3, #0
 6233 0130 FF2A     		cmp	r2, #255
 6234 0132 C1D1     		bne	.L329
 357:ROSSerial/ros/node_handle.h ****           {
 6235              		.loc 9 357 0
 6236 0134 D4F81065 		ldr	r6, [r4, #1296]
 6237 0138 002E     		cmp	r6, #0
 6238 013a 00F0CE80 		beq	.L392
 365:ROSSerial/ros/node_handle.h ****           {
 6239              		.loc 9 365 0
 6240 013e 0A2E     		cmp	r6, #10
 6241 0140 00F03981 		beq	.L393
 369:ROSSerial/ros/node_handle.h ****           {
 6242              		.loc 9 369 0
 6243 0144 062E     		cmp	r6, #6
 6244 0146 00F07B81 		beq	.L394
 374:ROSSerial/ros/node_handle.h ****           {
 6245              		.loc 9 374 0
 6246 014a 0B2E     		cmp	r6, #11
 6247 014c 00F00D82 		beq	.L395
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 6248              		.loc 9 380 0
 6249 0150 643E     		subs	r6, r6, #100
 6250 0152 06EB8603 		add	r3, r6, r6, lsl #2
 6251 0156 04EB8303 		add	r3, r4, r3, lsl #2
 6252 015a B3F8A434 		ldrh	r3, [r3, #1188]
 6253 015e 002B     		cmp	r3, #0
 6254 0160 AAD0     		beq	.L329
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 6255              		.loc 9 381 0
 6256 0162 06EB8606 		add	r6, r6, r6, lsl #2
 6257 0166 04EB8606 		add	r6, r4, r6, lsl #2
 6258 016a D6F8B434 		ldr	r3, [r6, #1204]
 6259 016e 754A     		ldr	r2, .L403+20
 6260 0170 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 6261              		.loc 9 383 0
 6262 0172 04F11800 		add	r0, r4, #24
 6263 0176 9847     		blx	r3
 6264              	.LVL750:
 6265 0178 9EE7     		b	.L329
 6266              	.L386:
 309:ROSSerial/ros/node_handle.h ****         {
 6267              		.loc 9 309 0
 6268 017a FE29     		cmp	r1, #254
 6269 017c 3BD0     		beq	.L396
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 6270              		.loc 9 315 0
 6271 017e 0023     		movs	r3, #0
 6272 0180 C4F80835 		str	r3, [r4, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 6273              		.loc 9 316 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 155


 6274 0184 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6275 0188 002B     		cmp	r3, #0
 6276 018a 95D1     		bne	.L329
 6277              	.LVL751:
 6278              	.LBB831:
 6279              	.LBB832:
 414:ROSSerial/ros/node_handle.h ****     {
 6280              		.loc 9 414 0
 6281 018c D4F82425 		ldr	r2, [r4, #1316]
 6282 0190 A368     		ldr	r3, [r4, #8]
 6283 0192 9A42     		cmp	r2, r3
 6284 0194 90D3     		bcc	.L329
 6285              	.LVL752:
 6286              	.LBB833:
 6287              	.LBB834:
  14:ROSSerial/std_msgs/Time.h ****   {
 6288              		.loc 1 14 0
 6289 0196 6C4B     		ldr	r3, .L403+24
 6290 0198 0193     		str	r3, [sp, #4]
 6291              	.LVL753:
 6292              	.LBB835:
 6293              	.LBB836:
 6294              	.LBB837:
 6295              		.loc 12 51 0
 6296 019a 0026     		movs	r6, #0
 6297 019c 0296     		str	r6, [sp, #8]
 6298 019e 0396     		str	r6, [sp, #12]
 6299              	.LVL754:
 6300              	.LBE837:
 6301              	.LBE836:
 6302              	.LBE835:
 6303              	.LBE834:
 6304              	.LBE833:
 6305              	.LBB838:
 6306              	.LBB839:
 6307              		.loc 11 151 0
 6308 01a0 FFF7FEFF 		bl	HAL_GetTick
 6309              	.LVL755:
 6310              	.LBE839:
 6311              	.LBE838:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 6312              		.loc 9 420 0
 6313 01a4 A060     		str	r0, [r4, #8]
 6314              	.LVL756:
 6315              	.LBB840:
 6316              	.LBB841:
 612:ROSSerial/ros/node_handle.h **** 
 6317              		.loc 9 612 0
 6318 01a6 019B     		ldr	r3, [sp, #4]
 6319 01a8 1B68     		ldr	r3, [r3]
 6320 01aa 04F21F21 		addw	r1, r4, #543
 6321 01ae 01A8     		add	r0, sp, #4
 6322              	.LVL757:
 6323 01b0 9847     		blx	r3
 6324              	.LVL758:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 6325              		.loc 9 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 156


 6326 01b2 FF23     		movs	r3, #255
 6327 01b4 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 6328              		.loc 9 616 0
 6329 01b8 FE23     		movs	r3, #254
 6330 01ba 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 6331              		.loc 9 617 0
 6332 01be C3B2     		uxtb	r3, r0
 6333 01c0 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 6334              		.loc 9 618 0
 6335 01c4 C0F30722 		ubfx	r2, r0, #8, #8
 6336 01c8 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 6337              		.loc 9 619 0
 6338 01cc 1344     		add	r3, r3, r2
 6339 01ce DBB2     		uxtb	r3, r3
 6340 01d0 DB43     		mvns	r3, r3
 6341 01d2 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 6342              		.loc 9 620 0
 6343 01d6 0A23     		movs	r3, #10
 6344 01d8 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 6345              		.loc 9 621 0
 6346 01dc 84F81E62 		strb	r6, [r4, #542]
 6347              	.LVL759:
 6348              	.LBB842:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6349              		.loc 9 625 0
 6350 01e0 0522     		movs	r2, #5
 6351              	.LBE842:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 6352              		.loc 9 624 0
 6353 01e2 3346     		mov	r3, r6
 6354              	.LVL760:
 6355              	.L343:
 6356              	.LBB843:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6357              		.loc 9 625 0
 6358 01e4 C11D     		adds	r1, r0, #7
 6359 01e6 9142     		cmp	r1, r2
 6360 01e8 09DD     		ble	.L342
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 6361              		.loc 9 626 0
 6362 01ea A118     		adds	r1, r4, r2
 6363 01ec 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 6364 01f0 0B44     		add	r3, r3, r1
 6365              	.LVL761:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6366              		.loc 9 625 0
 6367 01f2 0132     		adds	r2, r2, #1
 6368              	.LVL762:
 6369 01f4 F6E7     		b	.L343
 6370              	.LVL763:
 6371              	.L396:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 157


 6372              	.LBE843:
 6373              	.LBE841:
 6374              	.LBE840:
 6375              	.LBE832:
 6376              	.LBE831:
 311:ROSSerial/ros/node_handle.h ****         }
 6377              		.loc 9 311 0
 6378 01f6 0133     		adds	r3, r3, #1
 6379 01f8 C4F80835 		str	r3, [r4, #1288]
 6380 01fc 5CE7     		b	.L329
 6381              	.LVL764:
 6382              	.L342:
 6383              	.LBB854:
 6384              	.LBB853:
 6385              	.LBB852:
 6386              	.LBB851:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 6387              		.loc 9 628 0
 6388 01fe 5A42     		rsbs	r2, r3, #0
 6389              	.LVL765:
 6390 0200 DBB2     		uxtb	r3, r3
 6391              	.LVL766:
 6392 0202 D2B2     		uxtb	r2, r2
 6393 0204 58BF     		it	pl
 6394 0206 5342     		rsbpl	r3, r2, #0
 6395 0208 00F10807 		add	r7, r0, #8
 6396              	.LVL767:
 6397 020c DB43     		mvns	r3, r3
 6398 020e 2144     		add	r1, r1, r4
 6399 0210 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 6400              		.loc 9 631 0
 6401 0214 B7F5007F 		cmp	r7, #512
 6402 0218 11DC     		bgt	.L344
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 6403              		.loc 9 633 0
 6404 021a 04F50676 		add	r6, r4, #536
 6405              	.LVL768:
 6406              	.LBB844:
 6407              	.LBB845:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 6408              		.loc 11 121 0
 6409 021e 1423     		movs	r3, #20
 6410 0220 BAB2     		uxth	r2, r7
 6411 0222 3146     		mov	r1, r6
 6412 0224 4548     		ldr	r0, .L403+12
 6413 0226 FFF7FEFF 		bl	HAL_UART_Transmit
 6414              	.LVL769:
 122:ROSSerial/AT32hardware.h **** 		{
 6415              		.loc 11 122 0
 6416 022a 0146     		mov	r1, r0
 6417 022c 0028     		cmp	r0, #0
 6418 022e 3FF443AF 		beq	.L329
 124:ROSSerial/AT32hardware.h **** 		}
 6419              		.loc 11 124 0
 6420 0232 3346     		mov	r3, r6
 6421 0234 3A46     		mov	r2, r7
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 158


 6422 0236 4548     		ldr	r0, .L403+28
 6423              	.LVL770:
 6424 0238 FFF7FEFF 		bl	printf
 6425              	.LVL771:
 6426 023c 3CE7     		b	.L329
 6427              	.LVL772:
 6428              	.L344:
 6429              	.LBE845:
 6430              	.LBE844:
 6431              	.LBB846:
 6432              	.LBB847:
 6433              	.LBB848:
 6434              	.LBB849:
 6435              	.LBB850:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 6436              		.loc 3 13 0
 6437 023e 444B     		ldr	r3, .L403+32
 6438 0240 0493     		str	r3, [sp, #16]
 6439              	.LVL773:
 6440              	.LBE850:
 6441              	.LBE849:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 6442              		.loc 9 657 0
 6443 0242 0323     		movs	r3, #3
 6444 0244 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 6445              		.loc 9 658 0
 6446 0248 424E     		ldr	r6, .L403+36
 6447 024a 0696     		str	r6, [sp, #24]
 6448              		.loc 9 659 0
 6449 024c 04AA     		add	r2, sp, #16
 6450 024e 0721     		movs	r1, #7
 6451 0250 2046     		mov	r0, r4
 6452 0252 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6453              	.LVL774:
 6454              	.LBE848:
 6455              	.LBE847:
 6456              	.LBE846:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 6457              		.loc 9 644 0
 6458 0256 3046     		mov	r0, r6
 6459 0258 FFF7FEFF 		bl	printf
 6460              	.LVL775:
 6461 025c 2CE7     		b	.L329
 6462              	.LVL776:
 6463              	.L387:
 6464              	.LBE851:
 6465              	.LBE852:
 6466              	.LBE853:
 6467              	.LBE854:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 6468              		.loc 9 322 0
 6469 025e C4F80C15 		str	r1, [r4, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 6470              		.loc 9 323 0
 6471 0262 0022     		movs	r2, #0
 6472 0264 C4F81425 		str	r2, [r4, #1300]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 159


 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 6473              		.loc 9 324 0
 6474 0268 0133     		adds	r3, r3, #1
 6475 026a C4F80835 		str	r3, [r4, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 6476              		.loc 9 325 0
 6477 026e C4F81815 		str	r1, [r4, #1304]
 6478 0272 21E7     		b	.L329
 6479              	.L388:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 6480              		.loc 9 329 0
 6481 0274 D4F80C25 		ldr	r2, [r4, #1292]
 6482 0278 02EB0121 		add	r1, r2, r1, lsl #8
 6483 027c C4F80C15 		str	r1, [r4, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 6484              		.loc 9 330 0
 6485 0280 0133     		adds	r3, r3, #1
 6486 0282 C4F80835 		str	r3, [r4, #1288]
 6487 0286 17E7     		b	.L329
 6488              	.L389:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 6489              		.loc 9 334 0
 6490 0288 5142     		rsbs	r1, r2, #0
 6491 028a D2B2     		uxtb	r2, r2
 6492 028c C9B2     		uxtb	r1, r1
 6493 028e 58BF     		it	pl
 6494 0290 4A42     		rsbpl	r2, r1, #0
 6495 0292 FF2A     		cmp	r2, #255
 6496 0294 03D0     		beq	.L397
 337:ROSSerial/ros/node_handle.h ****       }
 6497              		.loc 9 337 0
 6498 0296 0023     		movs	r3, #0
 6499 0298 C4F80835 		str	r3, [r4, #1288]
 6500 029c 0CE7     		b	.L329
 6501              	.L397:
 335:ROSSerial/ros/node_handle.h ****         else
 6502              		.loc 9 335 0
 6503 029e 0133     		adds	r3, r3, #1
 6504 02a0 C4F80835 		str	r3, [r4, #1288]
 6505 02a4 08E7     		b	.L329
 6506              	.L390:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 6507              		.loc 9 341 0
 6508 02a6 C4F81015 		str	r1, [r4, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 6509              		.loc 9 342 0
 6510 02aa 0133     		adds	r3, r3, #1
 6511 02ac C4F80835 		str	r3, [r4, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 6512              		.loc 9 343 0
 6513 02b0 C4F81815 		str	r1, [r4, #1304]
 6514 02b4 00E7     		b	.L329
 6515              	.L391:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 6516              		.loc 9 347 0
 6517 02b6 D4F81035 		ldr	r3, [r4, #1296]
 6518 02ba 03EB0123 		add	r3, r3, r1, lsl #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 160


 6519 02be C4F81035 		str	r3, [r4, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 6520              		.loc 9 348 0
 6521 02c2 0723     		movs	r3, #7
 6522 02c4 C4F80835 		str	r3, [r4, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 6523              		.loc 9 349 0
 6524 02c8 D4F80C35 		ldr	r3, [r4, #1292]
 6525 02cc 002B     		cmp	r3, #0
 6526 02ce 7FF4F3AE 		bne	.L329
 350:ROSSerial/ros/node_handle.h ****       }
 6527              		.loc 9 350 0
 6528 02d2 0823     		movs	r3, #8
 6529 02d4 C4F80835 		str	r3, [r4, #1288]
 6530 02d8 EEE6     		b	.L329
 6531              	.L392:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 6532              		.loc 9 359 0
 6533 02da 2046     		mov	r0, r4
 6534 02dc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 6535              	.LVL777:
 6536              	.LBB855:
 6537              	.LBB856:
 6538              	.LBB857:
 6539              	.LBB858:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 6540              		.loc 2 12 0
 6541 02e0 1D4B     		ldr	r3, .L403+40
 6542 02e2 0493     		str	r3, [sp, #16]
 6543              	.LVL778:
 6544              	.LBE858:
 6545              	.LBE857:
 568:ROSSerial/ros/node_handle.h ****     {
 6546              		.loc 9 568 0
 6547 02e4 3746     		mov	r7, r6
 6548 02e6 00E0     		b	.L355
 6549              	.LVL779:
 6550              	.L354:
 6551 02e8 0137     		adds	r7, r7, #1
 6552              	.LVL780:
 6553              	.L355:
 6554 02ea 042F     		cmp	r7, #4
 6555 02ec 37DC     		bgt	.L353
 570:ROSSerial/ros/node_handle.h ****       {
 6556              		.loc 9 570 0
 6557 02ee 07EB8703 		add	r3, r7, r7, lsl #2
 6558 02f2 04EB8303 		add	r3, r4, r3, lsl #2
 6559 02f6 B3F82C34 		ldrh	r3, [r3, #1068]
 6560 02fa 002B     		cmp	r3, #0
 6561 02fc F4D0     		beq	.L354
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 6562              		.loc 9 572 0
 6563 02fe ADF81430 		strh	r3, [sp, #20]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 6564              		.loc 9 573 0
 6565 0302 07EB8703 		add	r3, r7, r7, lsl #2
 6566 0306 04EB8303 		add	r3, r4, r3, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 161


 6567 030a D3F83024 		ldr	r2, [r3, #1072]
 6568 030e 0692     		str	r2, [sp, #24]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 6569              		.loc 9 574 0
 6570 0310 D3F83824 		ldr	r2, [r3, #1080]
 6571 0314 0792     		str	r2, [sp, #28]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 6572              		.loc 9 575 0
 6573 0316 D3F83C34 		ldr	r3, [r3, #1084]
 6574 031a 0893     		str	r3, [sp, #32]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 6575              		.loc 9 576 0
 6576 031c 4FF40073 		mov	r3, #512
 6577 0320 0993     		str	r3, [sp, #36]
 577:ROSSerial/ros/node_handle.h ****       }
 6578              		.loc 9 577 0
 6579 0322 04AA     		add	r2, sp, #16
 6580 0324 0021     		movs	r1, #0
 6581 0326 2046     		mov	r0, r4
 6582 0328 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6583              	.LVL781:
 6584 032c DCE7     		b	.L354
 6585              	.L404:
 6586 032e 00BF     		.align	2
 6587              	.L403:
 6588 0330 00000000 		.word	g_RxRead
 6589 0334 00000000 		.word	g_RxBuf
 6590 0338 00000000 		.word	g_RxWritten
 6591 033c 00000000 		.word	huart2
 6592 0340 00000000 		.word	byte
 6593 0344 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 6594 0348 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6595 034c 00000000 		.word	.LC19
 6596 0350 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 6597 0354 20000000 		.word	.LC20
 6598 0358 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6599              	.LVL782:
 6600              	.L357:
 580:ROSSerial/ros/node_handle.h ****     {
 6601              		.loc 9 580 0
 6602 035c 0136     		adds	r6, r6, #1
 6603              	.LVL783:
 6604              	.L353:
 6605 035e 042E     		cmp	r6, #4
 6606 0360 1FDC     		bgt	.L356
 582:ROSSerial/ros/node_handle.h ****       {
 6607              		.loc 9 582 0
 6608 0362 06EB8603 		add	r3, r6, r6, lsl #2
 6609 0366 04EB8303 		add	r3, r4, r3, lsl #2
 6610 036a B3F8A434 		ldrh	r3, [r3, #1188]
 6611 036e 002B     		cmp	r3, #0
 6612 0370 F4D0     		beq	.L357
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 6613              		.loc 9 584 0
 6614 0372 ADF81430 		strh	r3, [sp, #20]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 6615              		.loc 9 585 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 162


 6616 0376 06EB8603 		add	r3, r6, r6, lsl #2
 6617 037a 04EB8303 		add	r3, r4, r3, lsl #2
 6618 037e D3F8A824 		ldr	r2, [r3, #1192]
 6619 0382 0692     		str	r2, [sp, #24]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 6620              		.loc 9 586 0
 6621 0384 D3F8AC24 		ldr	r2, [r3, #1196]
 6622 0388 0792     		str	r2, [sp, #28]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 6623              		.loc 9 587 0
 6624 038a D3F8B034 		ldr	r3, [r3, #1200]
 6625 038e 0893     		str	r3, [sp, #32]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 6626              		.loc 9 588 0
 6627 0390 4FF40073 		mov	r3, #512
 6628 0394 0993     		str	r3, [sp, #36]
 589:ROSSerial/ros/node_handle.h ****       }
 6629              		.loc 9 589 0
 6630 0396 04AA     		add	r2, sp, #16
 6631 0398 0121     		movs	r1, #1
 6632 039a 2046     		mov	r0, r4
 6633 039c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6634              	.LVL784:
 6635 03a0 DCE7     		b	.L357
 6636              	.L356:
 592:ROSSerial/ros/node_handle.h ****   }
 6637              		.loc 9 592 0
 6638 03a2 0123     		movs	r3, #1
 6639 03a4 84F81C35 		strb	r3, [r4, #1308]
 6640              	.LVL785:
 6641              	.LBE856:
 6642              	.LBE855:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 6643              		.loc 9 361 0
 6644 03a8 C4F82055 		str	r5, [r4, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 6645              		.loc 9 362 0
 6646 03ac C4F82455 		str	r5, [r4, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 6647              		.loc 9 363 0
 6648 03b0 4FF0FF30 		mov	r0, #-1
 6649 03b4 54E1     		b	.L326
 6650              	.L393:
 367:ROSSerial/ros/node_handle.h ****           }
 6651              		.loc 9 367 0
 6652 03b6 04F11806 		add	r6, r4, #24
 6653              	.LVL786:
 6654              	.LBB859:
 6655              	.LBB860:
 6656              	.LBB861:
 6657              	.LBB862:
 6658              		.loc 11 151 0
 6659 03ba FFF7FEFF 		bl	HAL_GetTick
 6660              	.LVL787:
 6661              	.LBE862:
 6662              	.LBE861:
 429:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 163


 6663              		.loc 9 429 0
 6664 03be A368     		ldr	r3, [r4, #8]
 6665 03c0 C01A     		subs	r0, r0, r3
 6666              	.LVL788:
 6667              	.LBB863:
 6668              	.LBB864:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6669              		.loc 1 38 0
 6670 03c2 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6671              		.loc 1 39 0
 6672 03c4 3346     		mov	r3, r6
 6673 03c6 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 6674 03c8 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6675              		.loc 1 40 0
 6676 03cc B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 6677 03ce 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 6678              		.loc 1 41 0
 6679 03d2 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 6680 03d4 42EA0161 		orr	r1, r2, r1, lsl #24
 6681              	.LVL789:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6682              		.loc 1 43 0
 6683 03d8 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6684              		.loc 1 44 0
 6685 03da 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 6686 03dc 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6687              		.loc 1 45 0
 6688 03e0 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 6689 03e2 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 6690              		.loc 1 46 0
 6691 03e6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6692 03e8 42EA0362 		orr	r2, r2, r3, lsl #24
 6693              	.LVL790:
 6694              	.LBE864:
 6695              	.LBE863:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 6696              		.loc 9 432 0
 6697 03ec 9F4E     		ldr	r6, .L405
 6698 03ee A6FB0073 		umull	r7, r3, r6, r0
 6699 03f2 9B09     		lsrs	r3, r3, #6
 6700 03f4 1944     		add	r1, r1, r3
 6701 03f6 0591     		str	r1, [sp, #20]
 433:ROSSerial/ros/node_handle.h **** 
 6702              		.loc 9 433 0
 6703 03f8 4FF47A78 		mov	r8, #1000
 6704 03fc 08FB1303 		mls	r3, r8, r3, r0
 6705 0400 9B4F     		ldr	r7, .L405+4
 6706 0402 07FB0323 		mla	r3, r7, r3, r2
 6707 0406 0693     		str	r3, [sp, #24]
 6708              	.LVL791:
 6709              	.LBB865:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 164


 6710              	.LBB866:
 6711              	.LBB867:
 6712              	.LBB868:
 6713              		.loc 11 151 0
 6714 0408 FFF7FEFF 		bl	HAL_GetTick
 6715              	.LVL792:
 6716              	.LBE868:
 6717              	.LBE867:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 6718              		.loc 9 454 0
 6719 040c A6FB0023 		umull	r2, r3, r6, r0
 6720 0410 9B09     		lsrs	r3, r3, #6
 6721 0412 059A     		ldr	r2, [sp, #20]
 6722 0414 D21A     		subs	r2, r2, r3
 6723 0416 013A     		subs	r2, r2, #1
 6724 0418 E260     		str	r2, [r4, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 6725              		.loc 9 455 0
 6726 041a 08FB1303 		mls	r3, r8, r3, r0
 6727 041e 069A     		ldr	r2, [sp, #24]
 6728 0420 07FB1323 		mls	r3, r7, r3, r2
 6729 0424 934A     		ldr	r2, .L405+8
 6730 0426 1A44     		add	r2, r2, r3
 6731 0428 2146     		mov	r1, r4
 6732 042a 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 6733              		.loc 9 456 0
 6734 042e 04F10C00 		add	r0, r4, #12
 6735              	.LVL793:
 6736 0432 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 6737              	.LVL794:
 6738              	.LBE866:
 6739              	.LBE865:
 6740              	.LBB869:
 6741              	.LBB870:
 6742              		.loc 11 151 0
 6743 0436 FFF7FEFF 		bl	HAL_GetTick
 6744              	.LVL795:
 6745              	.LBE870:
 6746              	.LBE869:
 438:ROSSerial/ros/node_handle.h ****   }
 6747              		.loc 9 438 0
 6748 043a C4F82405 		str	r0, [r4, #1316]
 6749 043e 3BE6     		b	.L329
 6750              	.LVL796:
 6751              	.L394:
 6752              	.LBE860:
 6753              	.LBE859:
 371:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 6754              		.loc 9 371 0
 6755 0440 04F5A668 		add	r8, r4, #1328
 6756 0444 04F11807 		add	r7, r4, #24
 6757              	.LVL797:
 6758              	.LBB871:
 6759              	.LBB872:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 6760              		.loc 4 116 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 165


 6761 0448 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 6762              	.LVL798:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 6763              		.loc 4 117 0
 6764 044a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6765 044e 9E42     		cmp	r6, r3
 6766 0450 1ED8     		bhi	.L398
 6767              	.L360:
 6768              	.LVL799:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 6769              		.loc 4 120 0
 6770 0452 88F80460 		strb	r6, [r8, #4]
 6771              	.LVL800:
 6772              	.LBB873:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6773              		.loc 4 121 0
 6774 0456 0022     		movs	r2, #0
 6775              	.LBE873:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 6776              		.loc 4 119 0
 6777 0458 0426     		movs	r6, #4
 6778              	.LVL801:
 6779              	.L362:
 6780              	.LBB875:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6781              		.loc 4 121 0
 6782 045a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6783 045e 9342     		cmp	r3, r2
 6784 0460 1ED9     		bls	.L361
 6785              	.LBB874:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6786              		.loc 4 127 0
 6787 0462 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6788              		.loc 4 128 0
 6789 0464 711C     		adds	r1, r6, #1
 6790 0466 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6791 0468 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6792              		.loc 4 129 0
 6793 046c B11C     		adds	r1, r6, #2
 6794 046e 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6795 0470 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 6796              		.loc 4 130 0
 6797 0474 F11C     		adds	r1, r6, #3
 6798 0476 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6799 0478 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 6800              		.loc 4 131 0
 6801 047c C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 6802              		.loc 4 132 0
 6803 0480 0436     		adds	r6, r6, #4
 6804              	.LVL802:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6805              		.loc 4 133 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 166


 6806 0482 D8F80C10 		ldr	r1, [r8, #12]
 6807 0486 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6808              	.LBE874:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6809              		.loc 4 121 0
 6810 048a 0132     		adds	r2, r2, #1
 6811              	.LVL803:
 6812 048c D2B2     		uxtb	r2, r2
 6813              	.LVL804:
 6814 048e E4E7     		b	.L362
 6815              	.LVL805:
 6816              	.L398:
 6817              	.LBE875:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6818              		.loc 4 118 0
 6819 0490 B100     		lsls	r1, r6, #2
 6820 0492 D8F80C00 		ldr	r0, [r8, #12]
 6821 0496 FFF7FEFF 		bl	realloc
 6822              	.LVL806:
 6823 049a C8F80C00 		str	r0, [r8, #12]
 6824 049e D8E7     		b	.L360
 6825              	.LVL807:
 6826              	.L361:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 6827              		.loc 4 135 0
 6828 04a0 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6829              	.LVL808:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 6830              		.loc 4 136 0
 6831 04a4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6832 04a8 9945     		cmp	r9, r3
 6833 04aa 1ED8     		bhi	.L399
 6834              	.LVL809:
 6835              	.L363:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 6836              		.loc 4 138 0
 6837 04ac 0436     		adds	r6, r6, #4
 6838              	.LVL810:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 6839              		.loc 4 139 0
 6840 04ae 88F81090 		strb	r9, [r8, #16]
 6841              	.LVL811:
 6842              	.LBB876:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6843              		.loc 4 140 0
 6844 04b2 0022     		movs	r2, #0
 6845              	.LVL812:
 6846              	.L365:
 6847 04b4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6848 04b8 9342     		cmp	r3, r2
 6849 04ba 1FD9     		bls	.L364
 6850              	.LBB877:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6851              		.loc 4 146 0
 6852 04bc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6853              		.loc 4 147 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 167


 6854 04be 711C     		adds	r1, r6, #1
 6855 04c0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6856 04c2 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6857              		.loc 4 148 0
 6858 04c6 B11C     		adds	r1, r6, #2
 6859 04c8 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6860 04ca 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 6861              		.loc 4 149 0
 6862 04ce F11C     		adds	r1, r6, #3
 6863 04d0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6864 04d2 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 6865              		.loc 4 150 0
 6866 04d6 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 6867              		.loc 4 151 0
 6868 04da 0436     		adds	r6, r6, #4
 6869              	.LVL813:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6870              		.loc 4 152 0
 6871 04dc D8F81810 		ldr	r1, [r8, #24]
 6872 04e0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6873              	.LBE877:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6874              		.loc 4 140 0
 6875 04e4 0132     		adds	r2, r2, #1
 6876              	.LVL814:
 6877 04e6 D2B2     		uxtb	r2, r2
 6878              	.LVL815:
 6879 04e8 E4E7     		b	.L365
 6880              	.LVL816:
 6881              	.L399:
 6882              	.LBE876:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6883              		.loc 4 137 0
 6884 04ea 4FEA8901 		lsl	r1, r9, #2
 6885 04ee D8F81800 		ldr	r0, [r8, #24]
 6886 04f2 FFF7FEFF 		bl	realloc
 6887              	.LVL817:
 6888 04f6 C8F81800 		str	r0, [r8, #24]
 6889 04fa D7E7     		b	.L363
 6890              	.LVL818:
 6891              	.L364:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 6892              		.loc 4 154 0
 6893 04fc 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6894              	.LVL819:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 6895              		.loc 4 155 0
 6896 0500 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6897 0504 9945     		cmp	r9, r3
 6898 0506 05D8     		bhi	.L400
 6899              	.LVL820:
 6900              	.L366:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 168


 6901              		.loc 4 157 0
 6902 0508 321D     		adds	r2, r6, #4
 6903              	.LVL821:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 6904              		.loc 4 158 0
 6905 050a 88F81C90 		strb	r9, [r8, #28]
 6906              	.LVL822:
 6907              	.LBB878:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6908              		.loc 4 159 0
 6909 050e 4FF0000C 		mov	ip, #0
 6910 0512 17E0     		b	.L370
 6911              	.LVL823:
 6912              	.L400:
 6913              	.LBE878:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6914              		.loc 4 156 0
 6915 0514 4FEA8901 		lsl	r1, r9, #2
 6916 0518 D8F82400 		ldr	r0, [r8, #36]
 6917 051c FFF7FEFF 		bl	realloc
 6918              	.LVL824:
 6919 0520 C8F82400 		str	r0, [r8, #36]
 6920 0524 F0E7     		b	.L366
 6921              	.LVL825:
 6922              	.L368:
 6923              	.LBB882:
 6924              	.LBB879:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 6925              		.loc 4 166 0
 6926 0526 531E     		subs	r3, r2, #1
 6927              	.LVL826:
 6928 0528 0021     		movs	r1, #0
 6929 052a F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 6930              		.loc 4 167 0
 6931 052c 731E     		subs	r3, r6, #1
 6932 052e 3B44     		add	r3, r3, r7
 6933 0530 C8F82030 		str	r3, [r8, #32]
 6934              	.LVL827:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6935              		.loc 4 169 0
 6936 0534 D8F82410 		ldr	r1, [r8, #36]
 6937 0538 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 6938              	.LVL828:
 6939              	.LBE879:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6940              		.loc 4 159 0
 6941 053c 0CF1010C 		add	ip, ip, #1
 6942              	.LVL829:
 6943 0540 5FFA8CFC 		uxtb	ip, ip
 6944              	.LVL830:
 6945              	.L370:
 6946 0544 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6947 0548 6345     		cmp	r3, ip
 6948 054a 0AD9     		bls	.L367
 6949              	.LBB881:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 169


 6950              		.loc 4 161 0
 6951 054c B858     		ldr	r0, [r7, r2]	@ unaligned
 6952              	.LVL831:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 6953              		.loc 4 162 0
 6954 054e 161D     		adds	r6, r2, #4
 6955              	.LVL832:
 6956              	.LBB880:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6957              		.loc 4 163 0
 6958 0550 3346     		mov	r3, r6
 6959              	.LVL833:
 6960              	.L369:
 6961 0552 8219     		adds	r2, r0, r6
 6962 0554 9A42     		cmp	r2, r3
 6963 0556 E6D9     		bls	.L368
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6964              		.loc 4 164 0
 6965 0558 5A1E     		subs	r2, r3, #1
 6966 055a F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 6967 055c B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6968              		.loc 4 163 0
 6969 055e 0133     		adds	r3, r3, #1
 6970              	.LVL834:
 6971 0560 F7E7     		b	.L369
 6972              	.LVL835:
 6973              	.L367:
 6974              	.LBE880:
 6975              	.LBE881:
 6976              	.LBE882:
 6977              	.LBE872:
 6978              	.LBE871:
 372:ROSSerial/ros/node_handle.h ****           }
 6979              		.loc 9 372 0
 6980 0562 0123     		movs	r3, #1
 6981 0564 84F82C35 		strb	r3, [r4, #1324]
 6982 0568 A6E5     		b	.L329
 6983              	.L395:
 376:ROSSerial/ros/node_handle.h ****           }
 6984              		.loc 9 376 0
 6985 056a 0023     		movs	r3, #0
 6986 056c 84F81C35 		strb	r3, [r4, #1308]
 6987 0570 A2E5     		b	.L329
 6988              	.L334:
 6989              	.LBE820:
 391:ROSSerial/ros/node_handle.h ****     {
 6990              		.loc 9 391 0
 6991 0572 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6992 0576 002B     		cmp	r3, #0
 6993 0578 75D0     		beq	.L380
 6994 057a D4F82035 		ldr	r3, [r4, #1312]
 6995 057e EB1A     		subs	r3, r5, r3
 6996 0580 40F6C412 		movw	r2, #2500
 6997 0584 9342     		cmp	r3, r2
 6998 0586 01D8     		bhi	.L401
 398:ROSSerial/ros/node_handle.h ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 170


 6999              		.loc 9 398 0
 7000 0588 0020     		movs	r0, #0
 7001              	.LVL836:
 7002              	.LBE817:
 7003              	.LBE816:
 239:ROSSerial/ros/node_handle.h ****   }
 7004              		.loc 9 239 0
 7005 058a 69E0     		b	.L326
 7006              	.LVL837:
 7007              	.L401:
 7008              	.LBB908:
 7009              	.LBB906:
 7010              	.LBB883:
 7011              	.LBB884:
 414:ROSSerial/ros/node_handle.h ****     {
 7012              		.loc 9 414 0
 7013 058c D4F82425 		ldr	r2, [r4, #1316]
 7014 0590 A368     		ldr	r3, [r4, #8]
 7015 0592 9A42     		cmp	r2, r3
 7016 0594 03D2     		bcs	.L402
 7017              	.L377:
 7018              	.LVL838:
 7019              	.LBE884:
 7020              	.LBE883:
 395:ROSSerial/ros/node_handle.h ****     }
 7021              		.loc 9 395 0
 7022 0596 C4F82055 		str	r5, [r4, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 7023              		.loc 9 398 0
 7024 059a 0020     		movs	r0, #0
 7025 059c 60E0     		b	.L326
 7026              	.LVL839:
 7027              	.L402:
 7028              	.LBB904:
 7029              	.LBB903:
 7030              	.LBB885:
 7031              	.LBB886:
  14:ROSSerial/std_msgs/Time.h ****   {
 7032              		.loc 1 14 0
 7033 059e 364B     		ldr	r3, .L405+12
 7034 05a0 0193     		str	r3, [sp, #4]
 7035              	.LVL840:
 7036              	.LBB887:
 7037              	.LBB888:
 7038              	.LBB889:
 7039              		.loc 12 51 0
 7040 05a2 0026     		movs	r6, #0
 7041 05a4 0296     		str	r6, [sp, #8]
 7042 05a6 0396     		str	r6, [sp, #12]
 7043              	.LVL841:
 7044              	.LBE889:
 7045              	.LBE888:
 7046              	.LBE887:
 7047              	.LBE886:
 7048              	.LBE885:
 7049              	.LBB890:
 7050              	.LBB891:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 171


 7051              		.loc 11 151 0
 7052 05a8 FFF7FEFF 		bl	HAL_GetTick
 7053              	.LVL842:
 7054              	.LBE891:
 7055              	.LBE890:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 7056              		.loc 9 420 0
 7057 05ac A060     		str	r0, [r4, #8]
 7058              	.LVL843:
 7059              	.LBB892:
 7060              	.LBB893:
 612:ROSSerial/ros/node_handle.h **** 
 7061              		.loc 9 612 0
 7062 05ae 019B     		ldr	r3, [sp, #4]
 7063 05b0 1B68     		ldr	r3, [r3]
 7064 05b2 04F21F21 		addw	r1, r4, #543
 7065 05b6 01A8     		add	r0, sp, #4
 7066              	.LVL844:
 7067 05b8 9847     		blx	r3
 7068              	.LVL845:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 7069              		.loc 9 615 0
 7070 05ba FF23     		movs	r3, #255
 7071 05bc 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 7072              		.loc 9 616 0
 7073 05c0 FE23     		movs	r3, #254
 7074 05c2 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 7075              		.loc 9 617 0
 7076 05c6 C3B2     		uxtb	r3, r0
 7077 05c8 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 7078              		.loc 9 618 0
 7079 05cc C0F30722 		ubfx	r2, r0, #8, #8
 7080 05d0 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 7081              		.loc 9 619 0
 7082 05d4 1344     		add	r3, r3, r2
 7083 05d6 DBB2     		uxtb	r3, r3
 7084 05d8 DB43     		mvns	r3, r3
 7085 05da 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 7086              		.loc 9 620 0
 7087 05de 0A23     		movs	r3, #10
 7088 05e0 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 7089              		.loc 9 621 0
 7090 05e4 84F81E62 		strb	r6, [r4, #542]
 7091              	.LVL846:
 7092              	.LBB894:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7093              		.loc 9 625 0
 7094 05e8 0522     		movs	r2, #5
 7095              	.LBE894:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 7096              		.loc 9 624 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 172


 7097 05ea 3346     		mov	r3, r6
 7098              	.LVL847:
 7099              	.L374:
 7100              	.LBB895:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7101              		.loc 9 625 0
 7102 05ec C11D     		adds	r1, r0, #7
 7103 05ee 9142     		cmp	r1, r2
 7104 05f0 05DD     		ble	.L373
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 7105              		.loc 9 626 0
 7106 05f2 A118     		adds	r1, r4, r2
 7107 05f4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 7108 05f8 0B44     		add	r3, r3, r1
 7109              	.LVL848:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7110              		.loc 9 625 0
 7111 05fa 0132     		adds	r2, r2, #1
 7112              	.LVL849:
 7113 05fc F6E7     		b	.L374
 7114              	.L373:
 7115              	.LVL850:
 7116              	.LBE895:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 7117              		.loc 9 628 0
 7118 05fe 5A42     		rsbs	r2, r3, #0
 7119              	.LVL851:
 7120 0600 DBB2     		uxtb	r3, r3
 7121              	.LVL852:
 7122 0602 D2B2     		uxtb	r2, r2
 7123 0604 58BF     		it	pl
 7124 0606 5342     		rsbpl	r3, r2, #0
 7125 0608 00F10807 		add	r7, r0, #8
 7126              	.LVL853:
 7127 060c DB43     		mvns	r3, r3
 7128 060e 2144     		add	r1, r1, r4
 7129 0610 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 7130              		.loc 9 631 0
 7131 0614 B7F5007F 		cmp	r7, #512
 7132 0618 10DC     		bgt	.L375
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 7133              		.loc 9 633 0
 7134 061a 04F50676 		add	r6, r4, #536
 7135              	.LVL854:
 7136              	.LBB896:
 7137              	.LBB897:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 7138              		.loc 11 121 0
 7139 061e 1423     		movs	r3, #20
 7140 0620 BAB2     		uxth	r2, r7
 7141 0622 3146     		mov	r1, r6
 7142 0624 1548     		ldr	r0, .L405+16
 7143 0626 FFF7FEFF 		bl	HAL_UART_Transmit
 7144              	.LVL855:
 122:ROSSerial/AT32hardware.h **** 		{
 7145              		.loc 11 122 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 173


 7146 062a 0146     		mov	r1, r0
 7147 062c 0028     		cmp	r0, #0
 7148 062e B2D0     		beq	.L377
 124:ROSSerial/AT32hardware.h **** 		}
 7149              		.loc 11 124 0
 7150 0630 3346     		mov	r3, r6
 7151 0632 3A46     		mov	r2, r7
 7152 0634 1248     		ldr	r0, .L405+20
 7153              	.LVL856:
 7154 0636 FFF7FEFF 		bl	printf
 7155              	.LVL857:
 7156 063a ACE7     		b	.L377
 7157              	.LVL858:
 7158              	.L375:
 7159              	.LBE897:
 7160              	.LBE896:
 7161              	.LBB898:
 7162              	.LBB899:
 7163              	.LBB900:
 7164              	.LBB901:
 7165              	.LBB902:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 7166              		.loc 3 13 0
 7167 063c 114B     		ldr	r3, .L405+24
 7168 063e 0493     		str	r3, [sp, #16]
 7169              	.LVL859:
 7170              	.LBE902:
 7171              	.LBE901:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 7172              		.loc 9 657 0
 7173 0640 0323     		movs	r3, #3
 7174 0642 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 7175              		.loc 9 658 0
 7176 0646 104E     		ldr	r6, .L405+28
 7177 0648 0696     		str	r6, [sp, #24]
 7178              		.loc 9 659 0
 7179 064a 04AA     		add	r2, sp, #16
 7180 064c 0721     		movs	r1, #7
 7181 064e 2046     		mov	r0, r4
 7182 0650 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7183              	.LVL860:
 7184              	.LBE900:
 7185              	.LBE899:
 7186              	.LBE898:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 7187              		.loc 9 644 0
 7188 0654 3046     		mov	r0, r6
 7189 0656 FFF7FEFF 		bl	printf
 7190              	.LVL861:
 7191 065a 9CE7     		b	.L377
 7192              	.LVL862:
 7193              	.L378:
 7194              	.LBE893:
 7195              	.LBE892:
 7196              	.LBE903:
 7197              	.LBE904:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 174


 7198              	.LBB905:
 279:ROSSerial/ros/node_handle.h ****         }
 7199              		.loc 9 279 0
 7200 065c 6FF00100 		mvn	r0, #1
 7201              	.LVL863:
 7202              	.L326:
 7203              	.LBE905:
 7204              	.LBE906:
 7205              	.LBE908:
 240:ROSSerial/ros/node_handle.h **** 
 7206              		.loc 9 240 0
 7207 0660 0BB0     		add	sp, sp, #44
 7208              	.LCFI41:
 7209              		.cfi_remember_state
 7210              		.cfi_def_cfa_offset 28
 7211              		@ sp needed
 7212 0662 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7213              	.LVL864:
 7214              	.L380:
 7215              	.LCFI42:
 7216              		.cfi_restore_state
 7217              	.LBB909:
 7218              	.LBB907:
 398:ROSSerial/ros/node_handle.h ****   }
 7219              		.loc 9 398 0
 7220 0666 0020     		movs	r0, #0
 7221 0668 FAE7     		b	.L326
 7222              	.L406:
 7223 066a 00BF     		.align	2
 7224              	.L405:
 7225 066c D34D6210 		.word	274877907
 7226 0670 40420F00 		.word	1000000
 7227 0674 00CA9A3B 		.word	1000000000
 7228 0678 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 7229 067c 00000000 		.word	huart2
 7230 0680 00000000 		.word	.LC19
 7231 0684 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 7232 0688 20000000 		.word	.LC20
 7233              	.LBE907:
 7234              	.LBE909:
 7235              		.cfi_endproc
 7236              	.LFE531:
 7237              		.fnend
 7239              		.section	.text._GLOBAL__sub_I_publish_time,"ax",%progbits
 7240              		.align	1
 7241              		.syntax unified
 7242              		.thumb
 7243              		.thumb_func
 7244              		.fpu fpv4-sp-d16
 7246              	_GLOBAL__sub_I_publish_time:
 7247              		.fnstart
 7248              	.LFB533:
 7249              		.loc 8 108 0
 7250              		.cfi_startproc
 7251              		@ args = 0, pretend = 0, frame = 0
 7252              		@ frame_needed = 0, uses_anonymous_args = 0
 7253 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 175


 7254              	.LCFI43:
 7255              		.cfi_def_cfa_offset 8
 7256              		.cfi_offset 3, -8
 7257              		.cfi_offset 14, -4
 7258              		.loc 8 108 0
 7259 0002 4FF6FF71 		movw	r1, #65535
 7260 0006 0120     		movs	r0, #1
 7261 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 7262              	.LVL865:
 7263 000c 08BD     		pop	{r3, pc}
 7264              		.cfi_endproc
 7265              	.LFE533:
 7266              		.cantunwind
 7267              		.fnend
 7269              		.section	.init_array,"aw",%init_array
 7270              		.align	2
 7271 0000 00000000 		.word	_GLOBAL__sub_I_publish_time(target1)
 7272              		.weak	_ZTVN8std_msgs4TimeE
 7273              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 7274              		.align	2
 7277              	_ZTVN8std_msgs4TimeE:
 7278 0000 00000000 		.word	0
 7279 0004 00000000 		.word	0
 7280 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 7281 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 7282 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 7283 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 7284              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 7285              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 7286              		.align	2
 7289              	_ZTVN14rosserial_msgs9TopicInfoE:
 7290 0000 00000000 		.word	0
 7291 0004 00000000 		.word	0
 7292 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 7293 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 7294 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 7295 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 7296              		.weak	_ZTVN14rosserial_msgs3LogE
 7297              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 7298              		.align	2
 7301              	_ZTVN14rosserial_msgs3LogE:
 7302 0000 00000000 		.word	0
 7303 0004 00000000 		.word	0
 7304 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 7305 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 7306 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 7307 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 7308              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 7309              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 7310              		.align	2
 7313              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 7314 0000 00000000 		.word	0
 7315 0004 00000000 		.word	0
 7316 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 7317 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 7318 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 7319 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 176


 7320              		.weak	_ZTVN8std_msgs6StringE
 7321              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 7322              		.align	2
 7325              	_ZTVN8std_msgs6StringE:
 7326 0000 00000000 		.word	0
 7327 0004 00000000 		.word	0
 7328 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 7329 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 7330 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 7331 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 7332              		.weak	_ZTVN8std_msgs6HeaderE
 7333              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 7334              		.align	2
 7337              	_ZTVN8std_msgs6HeaderE:
 7338 0000 00000000 		.word	0
 7339 0004 00000000 		.word	0
 7340 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 7341 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 7342 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 7343 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 7344              		.weak	_ZTVN11sensor_msgs10JointStateE
 7345              		.section	.rodata._ZTVN11sensor_msgs10JointStateE,"aG",%progbits,_ZTVN11sensor_msgs10JointStateE,co
 7346              		.align	2
 7349              	_ZTVN11sensor_msgs10JointStateE:
 7350 0000 00000000 		.word	0
 7351 0004 00000000 		.word	0
 7352 0008 00000000 		.word	_ZNK11sensor_msgs10JointState9serializeEPh
 7353 000c 00000000 		.word	_ZN11sensor_msgs10JointState11deserializeEPh
 7354 0010 00000000 		.word	_ZN11sensor_msgs10JointState7getTypeEv
 7355 0014 00000000 		.word	_ZN11sensor_msgs10JointState6getMD5Ev
 7356              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 7357              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 7358              		.align	2
 7361              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 7362 0000 00000000 		.word	0
 7363 0004 00000000 		.word	0
 7364 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 7365 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 7366 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 7367              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 7368              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 7369              		.align	2
 7372              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 7373 0000 00000000 		.space	4
 7374              		.global	chatter
 7375              		.global	hovebotState
 7376              		.global	nh
 7377              		.global	publish_time
 7378              		.section	.rodata
 7379              		.align	2
 7380              		.set	.LANCHOR4,. + 0
 7381              	.LC21:
 7382 0000 00000000 		.word	.LC0
 7383 0004 08000000 		.word	.LC1
 7384              		.section	.bss.chatter,"aw",%nobits
 7385              		.align	2
 7386              		.set	.LANCHOR3,. + 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 177


 7389              	chatter:
 7390 0000 00000000 		.space	4
 7391              		.section	.bss.hovebotState,"aw",%nobits
 7392              		.align	2
 7393              		.set	.LANCHOR2,. + 0
 7396              	hovebotState:
 7397 0000 00000000 		.space	4
 7398              		.section	.bss.nh,"aw",%nobits
 7399              		.align	2
 7400              		.set	.LANCHOR1,. + 0
 7403              	nh:
 7404 0000 00000000 		.space	1368
 7404      00000000 
 7404      00000000 
 7404      00000000 
 7404      00000000 
 7405              		.section	.bss.publish_time,"aw",%nobits
 7406              		.align	2
 7407              		.set	.LANCHOR5,. + 0
 7410              	publish_time:
 7411 0000 00000000 		.space	4
 7412              		.section	.rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4,"aMS",%progbits,1
 7413              		.align	2
 7414              	.LC15:
 7415 0000 33303636 		.ascii	"3066dcd76a6cfaef579bd0f34173e9fd\000"
 7415      64636437 
 7415      36613663 
 7415      66616566 
 7415      35373962 
 7416              		.section	.rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4,"aMS",%progbits,1
 7417              		.align	2
 7418              	.LC14:
 7419 0000 73656E73 		.ascii	"sensor_msgs/JointState\000"
 7419      6F725F6D 
 7419      7367732F 
 7419      4A6F696E 
 7419      74537461 
 7420              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 7421              		.align	2
 7422              	.LC9:
 7423 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7423      39386264 
 7423      61363539 
 7423      38313938 
 7423      36646466 
 7424              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 7425              		.align	2
 7426              	.LC8:
 7427 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7427      64373331 
 7427      63323539 
 7427      33333236 
 7427      31636436 
 7428              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 7429              		.align	2
 7430              	.LC7:
 7431 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 178


 7431      65726961 
 7431      6C5F6D73 
 7431      67732F4C 
 7431      6F6700
 7432              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 7433              		.align	2
 7434              	.LC6:
 7435 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7435      31663838 
 7435      66633434 
 7435      38393266 
 7435      38633130 
 7436              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 7437              		.align	2
 7438              	.LC5:
 7439 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7439      65726961 
 7439      6C5F6D73 
 7439      67732F54 
 7439      6F706963 
 7440              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 7441              		.align	2
 7442              		.set	.LANCHOR0,. + 0
 7445              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7446 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7446      65726961 
 7446      6C5F6D73 
 7446      67732F52 
 7446      65717565 
 7447              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str
 7448              		.align	2
 7449              	.LC19:
 7450 0000 48414C20 		.ascii	"HAL write error %d %lu - %s\012\000"
 7450      77726974 
 7450      65206572 
 7450      726F7220 
 7450      25642025 
 7451 001d 000000   		.space	3
 7452              	.LC20:
 7453 0020 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7453      61676520 
 7453      66726F6D 
 7453      20646576 
 7453      69636520 
 7454 0053 66666572 		.ascii	"ffer.\000"
 7454      2E00
 7455              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 7456              		.align	2
 7457              	.LC4:
 7458 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7458      36366337 
 7458      34633535 
 7458      32633331 
 7458      31666263 
 7459              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 7460              		.align	2
 7461              	.LC3:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 179


 7462 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7462      6D736773 
 7462      2F54696D 
 7462      6500
 7463              		.section	.rodata._ZN8std_msgs6Header6getMD5Ev.str1.4,"aMS",%progbits,1
 7464              		.align	2
 7465              	.LC13:
 7466 0000 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7466      64656361 
 7466      65636263 
 7466      65373861 
 7466      62633362 
 7467              		.section	.rodata._ZN8std_msgs6Header7getTypeEv.str1.4,"aMS",%progbits,1
 7468              		.align	2
 7469              	.LC12:
 7470 0000 7374645F 		.ascii	"std_msgs/Header\000"
 7470      6D736773 
 7470      2F486561 
 7470      64657200 
 7471              		.section	.rodata._ZN8std_msgs6String6getMD5Ev.str1.4,"aMS",%progbits,1
 7472              		.align	2
 7473              	.LC11:
 7474 0000 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 7474      65386131 
 7474      36383763 
 7474      65633863 
 7474      38626438 
 7475              		.section	.rodata._ZN8std_msgs6String7getTypeEv.str1.4,"aMS",%progbits,1
 7476              		.align	2
 7477              	.LC10:
 7478 0000 7374645F 		.ascii	"std_msgs/String\000"
 7478      6D736773 
 7478      2F537472 
 7478      696E6700 
 7479              		.section	.rodata.publish_hovebot_state.str1.4,"aMS",%progbits,1
 7480              		.align	2
 7481              	.LC22:
 7482 0000 686F7665 		.ascii	"hoverbot_state publish1 failed %d\012\000"
 7482      72626F74 
 7482      5F737461 
 7482      74652070 
 7482      75626C69 
 7483              		.section	.rodata.ros_init.str1.4,"aMS",%progbits,1
 7484              		.align	2
 7485              	.LC16:
 7486 0000 4E6F6465 		.ascii	"Node init\000"
 7486      20696E69 
 7486      7400
 7487 000a 0000     		.space	2
 7488              	.LC17:
 7489 000c 686F7665 		.ascii	"hoverbot_state\000"
 7489      72626F74 
 7489      5F737461 
 7489      746500
 7490 001b 00       		.space	1
 7491              	.LC18:
 7492 001c 63686174 		.ascii	"chatter\000"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 180


 7492      74657200 
 7493              		.section	.rodata.ros_run.str1.4,"aMS",%progbits,1
 7494              		.align	2
 7495              	.LC23:
 7496 0000 256C753A 		.ascii	"%lu:ERROR: spinOnce1 returned error probably SPIN_T"
 7496      4552524F 
 7496      523A2073 
 7496      70696E4F 
 7496      6E636531 
 7497 0033 494D454F 		.ascii	"IMEOUT = %d\012\000"
 7497      5554203D 
 7497      2025640A 
 7497      00
 7498              		.section	.rodata.str1.4,"aMS",%progbits,1
 7499              		.align	2
 7500              	.LC0:
 7501 0000 4C454654 		.ascii	"LEFT\000"
 7501      00
 7502 0005 000000   		.space	3
 7503              	.LC1:
 7504 0008 52494748 		.ascii	"RIGHT\000"
 7504      5400
 7505              		.text
 7506              	.Letext0:
 7507              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 7508              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 7509              		.file 15 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 7510              		.file 16 "Inc/system_at32f4xx.h"
 7511              		.file 17 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 7512              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 7513              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 7514              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 7515              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 7516              		.file 22 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7517              		.file 23 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7518              		.file 24 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 7519              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 7520              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 7521              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 7522              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 7523              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 7524              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 7525              		.file 31 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 7526              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 7527              		.file 33 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 7528              		.file 34 "<built-in>"
 7529              		.file 35 "ROSSerial/ros/duration.h"
 7530              		.file 36 "ROSSerial/ros/publisher.h"
 7531              		.file 37 "ROSSerial/ros.h"
 7532              		.file 38 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 7533              		.file 39 "Inc/defines.h"
 7534              		.file 40 "Inc/control_structures.h"
 7535              		.file 41 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 7536              		.file 42 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 7537              		.file 43 "Inc/ROS_subscribe.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 181


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ROS_main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:615    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:622    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:686    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:693    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 _ZN8std_msgs6String7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:709    .text._ZN8std_msgs6String7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:716    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:723    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 _ZN8std_msgs6String6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:739    .text._ZN8std_msgs6String6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 182


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:746    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:753    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:865    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:872    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 _ZN8std_msgs6Header7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:888    .text._ZN8std_msgs6Header7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:895    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:902    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 _ZN8std_msgs6Header6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:918    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:925    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:932    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 _ZN11sensor_msgs10JointState7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:949    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:956    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:963    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 _ZN11sensor_msgs10JointState6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:979    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:986    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:992    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1136   .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7361   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7313   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1145   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1152   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1171   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1178   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1428   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1435   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1522   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1529   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1574   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1581   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1630   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1637   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1754   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1761   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1956   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:1963   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 _ZNK11sensor_msgs10JointState9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:2466   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:2473   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 _ZN11sensor_msgs10JointState11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3089   .text.ros_init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3096   .text.ros_init:0000000000000000 ros_init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3350   .text.ros_init:0000000000000128 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7349   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 _ZTVN11sensor_msgs10JointStateE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7337   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 _ZTVN8std_msgs6HeaderE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 183


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7325   .rodata._ZTVN8std_msgs6StringE:0000000000000000 _ZTVN8std_msgs6StringE
         .ARM.exidx.text.ros_init:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3366   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3373   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3563   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:00000000000000d0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7301   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3572   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3579   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3920   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000174 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3929   .text.publish_hovebot_state:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:3936   .text.publish_hovebot_state:0000000000000000 publish_hovebot_state
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4409   .text.publish_hovebot_state:0000000000000234 $d
.ARM.exidx.text.publish_hovebot_state:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4429   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4436   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4652   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:00000000000000d4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7277   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4664   .text.ros_run:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:4671   .text.ros_run:0000000000000000 ros_run
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5211   .text.ros_run:00000000000002e4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7372   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5225   .text.ros_run:0000000000000314 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5745   .text.ros_run:0000000000000610 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7289   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5758   .text.ros_run:0000000000000628 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5984   .text.ros_run:000000000000071c $d
          .ARM.exidx.text.ros_run:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:5998   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:6005   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:6588   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000330 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:6602   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000035c $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7225   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000066c $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7240   .text._GLOBAL__sub_I_publish_time:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7246   .text._GLOBAL__sub_I_publish_time:0000000000000000 _GLOBAL__sub_I_publish_time
.ARM.exidx.text._GLOBAL__sub_I_publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7270   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7274   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7286   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7298   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7310   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7322   .rodata._ZTVN8std_msgs6StringE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7334   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7346   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7358   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7369   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7389   .bss.chatter:0000000000000000 chatter
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7396   .bss.hovebotState:0000000000000000 hovebotState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7403   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7410   .bss.publish_time:0000000000000000 publish_time
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7379   .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7385   .bss.chatter:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7392   .bss.hovebotState:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7399   .bss.nh:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s 			page 184


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7406   .bss.publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7413   .rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7417   .rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7421   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7425   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7429   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7433   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7437   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7441   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7445   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7448   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7456   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7460   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7464   .rodata._ZN8std_msgs6Header6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7468   .rodata._ZN8std_msgs6Header7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7472   .rodata._ZN8std_msgs6String6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7476   .rodata._ZN8std_msgs6String7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7480   .rodata.publish_hovebot_state.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7484   .rodata.ros_init.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7494   .rodata.ros_run.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc04Bmbd.s:7499   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
realloc
strlen
memcpy
HAL_UART_Receive_IT
puts
init_PID_control
_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
byte
huart2
__aeabi_unwind_cpp_pr0
HAL_UART_Transmit
printf
HAL_GetTick
_ZN3ros16normalizeSecNSecERmS0_
wheel_posn
pwms
g_RxRead
g_RxBuf
g_RxWritten
wheels_pwm_set
