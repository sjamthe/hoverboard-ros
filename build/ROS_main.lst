ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ROS_main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC3
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB162:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE162:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB163:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE163:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB164:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE164:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC5
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC6
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB165:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE165:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC7
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC8
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC9
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 615              		.align	1
 616              		.weak	_ZN8std_msgs6String11deserializeEPh
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	_ZN8std_msgs6String11deserializeEPh:
 623              		.fnstart
 624              	.LFB404:
 625              		.file 5 "ROSSerial/std_msgs/ROSString.h"
   1:ROSSerial/std_msgs/ROSString.h **** #ifndef _ROS_std_msgs_String_h
   2:ROSSerial/std_msgs/ROSString.h **** #define _ROS_std_msgs_String_h
   3:ROSSerial/std_msgs/ROSString.h **** 
   4:ROSSerial/std_msgs/ROSString.h **** #include <cstring>
   5:ROSSerial/std_msgs/ROSString.h **** #include <stdint.h>
   6:ROSSerial/std_msgs/ROSString.h **** #include <string.h>
   7:ROSSerial/std_msgs/ROSString.h **** #include <stdlib.h>
   8:ROSSerial/std_msgs/ROSString.h **** #include "ros/msg.h"
   9:ROSSerial/std_msgs/ROSString.h **** 
  10:ROSSerial/std_msgs/ROSString.h **** namespace std_msgs
  11:ROSSerial/std_msgs/ROSString.h **** {
  12:ROSSerial/std_msgs/ROSString.h **** 
  13:ROSSerial/std_msgs/ROSString.h ****   class String : public ros::Msg
  14:ROSSerial/std_msgs/ROSString.h ****   {
  15:ROSSerial/std_msgs/ROSString.h ****     public:
  16:ROSSerial/std_msgs/ROSString.h ****       const char* data;
  17:ROSSerial/std_msgs/ROSString.h **** 
  18:ROSSerial/std_msgs/ROSString.h ****     virtual int serialize(unsigned char *outbuffer) const
  19:ROSSerial/std_msgs/ROSString.h ****     {
  20:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  21:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data = strlen(this->data);
  22:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  23:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  24:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, this->data, length_data);
  25:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  26:ROSSerial/std_msgs/ROSString.h ****       return offset;
  27:ROSSerial/std_msgs/ROSString.h ****     }
  28:ROSSerial/std_msgs/ROSString.h **** 
  29:ROSSerial/std_msgs/ROSString.h ****     virtual int deserialize(unsigned char *inbuffer)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 19


 626              		.loc 5 29 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL60:
 632 0000 30B4     		push	{r4, r5}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 5, -4
 637              	.LVL61:
  30:ROSSerial/std_msgs/ROSString.h ****     {
  31:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  32:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data;
  33:ROSSerial/std_msgs/ROSString.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
 638              		.loc 5 33 0
 639 0002 0D68     		ldr	r5, [r1]	@ unaligned
 640              	.LVL62:
 641              	.LBB166:
  34:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  35:ROSSerial/std_msgs/ROSString.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
 642              		.loc 5 35 0
 643 0004 0423     		movs	r3, #4
 644              	.LVL63:
 645              	.L41:
 646              		.loc 5 35 0 is_stmt 0 discriminator 3
 647 0006 2A1D     		adds	r2, r5, #4
 648 0008 9A42     		cmp	r2, r3
 649 000a 04D9     		bls	.L40
  36:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 650              		.loc 5 36 0 is_stmt 1 discriminator 2
 651 000c 5A1E     		subs	r2, r3, #1
 652 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 653 0010 8C54     		strb	r4, [r1, r2]
  35:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 654              		.loc 5 35 0 discriminator 2
 655 0012 0133     		adds	r3, r3, #1
 656              	.LVL64:
 657 0014 F7E7     		b	.L41
 658              	.L40:
 659              	.LBE166:
  37:ROSSerial/std_msgs/ROSString.h ****       }
  38:ROSSerial/std_msgs/ROSString.h ****       inbuffer[offset+length_data-1]=0;
 660              		.loc 5 38 0
 661 0016 0335     		adds	r5, r5, #3
 662              	.LVL65:
 663 0018 0023     		movs	r3, #0
 664              	.LVL66:
 665 001a 4B55     		strb	r3, [r1, r5]
  39:ROSSerial/std_msgs/ROSString.h ****       this->data = (char *)(inbuffer + offset-1);
 666              		.loc 5 39 0
 667 001c 0331     		adds	r1, r1, #3
 668              	.LVL67:
 669 001e 4160     		str	r1, [r0, #4]
 670              	.LVL68:
  40:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 20


  41:ROSSerial/std_msgs/ROSString.h ****      return offset;
  42:ROSSerial/std_msgs/ROSString.h ****     }
 671              		.loc 5 42 0
 672 0020 1046     		mov	r0, r2
 673              	.LVL69:
 674 0022 30BC     		pop	{r4, r5}
 675              	.LCFI5:
 676              		.cfi_restore 5
 677              		.cfi_restore 4
 678              		.cfi_def_cfa_offset 0
 679 0024 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE404:
 682              		.cantunwind
 683              		.fnend
 685              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 686              		.align	1
 687              		.weak	_ZN8std_msgs6String7getTypeEv
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	_ZN8std_msgs6String7getTypeEv:
 694              		.fnstart
 695              	.LFB405:
  43:ROSSerial/std_msgs/ROSString.h **** 
  44:ROSSerial/std_msgs/ROSString.h ****     const char * getType(){ return "std_msgs/String"; };
 696              		.loc 5 44 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701              	.LVL70:
 702              		.loc 5 44 0
 703 0000 0048     		ldr	r0, .L44
 704              	.LVL71:
 705 0002 7047     		bx	lr
 706              	.L45:
 707              		.align	2
 708              	.L44:
 709 0004 00000000 		.word	.LC10
 710              		.cfi_endproc
 711              	.LFE405:
 712              		.cantunwind
 713              		.fnend
 715              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 716              		.align	1
 717              		.weak	_ZN8std_msgs6String6getMD5Ev
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	_ZN8std_msgs6String6getMD5Ev:
 724              		.fnstart
 725              	.LFB406:
  45:ROSSerial/std_msgs/ROSString.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 726              		.loc 5 45 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 21


 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL72:
 732              		.loc 5 45 0
 733 0000 0048     		ldr	r0, .L47
 734              	.LVL73:
 735 0002 7047     		bx	lr
 736              	.L48:
 737              		.align	2
 738              	.L47:
 739 0004 00000000 		.word	.LC11
 740              		.cfi_endproc
 741              	.LFE406:
 742              		.cantunwind
 743              		.fnend
 745              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 746              		.align	1
 747              		.weak	_ZN8std_msgs6Header11deserializeEPh
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv4-sp-d16
 753              	_ZN8std_msgs6Header11deserializeEPh:
 754              		.fnstart
 755              	.LFB475:
 756              		.file 6 "ROSSerial/std_msgs/Header.h"
   1:ROSSerial/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:ROSSerial/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:ROSSerial/std_msgs/Header.h **** 
   4:ROSSerial/std_msgs/Header.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Header.h **** #include <string.h>
   6:ROSSerial/std_msgs/Header.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Header.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Header.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Header.h **** 
  10:ROSSerial/std_msgs/Header.h **** namespace std_msgs
  11:ROSSerial/std_msgs/Header.h **** {
  12:ROSSerial/std_msgs/Header.h **** 
  13:ROSSerial/std_msgs/Header.h ****   class Header : public ros::Msg
  14:ROSSerial/std_msgs/Header.h ****   {
  15:ROSSerial/std_msgs/Header.h ****     public:
  16:ROSSerial/std_msgs/Header.h ****       uint32_t seq;
  17:ROSSerial/std_msgs/Header.h ****       ros::Time stamp;
  18:ROSSerial/std_msgs/Header.h ****       const char* frame_id;
  19:ROSSerial/std_msgs/Header.h **** 
  20:ROSSerial/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/std_msgs/Header.h ****     {
  22:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  26:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  27:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 22


  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  31:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  32:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  36:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  37:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  38:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  39:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  40:ROSSerial/std_msgs/Header.h ****       offset += 4;
  41:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  42:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  43:ROSSerial/std_msgs/Header.h ****       return offset;
  44:ROSSerial/std_msgs/Header.h ****     }
  45:ROSSerial/std_msgs/Header.h **** 
  46:ROSSerial/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
 757              		.loc 6 46 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL74:
 763 0000 30B4     		push	{r4, r5}
 764              	.LCFI6:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 5, -4
 768              	.LVL75:
  47:ROSSerial/std_msgs/Header.h ****     {
  48:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  49:ROSSerial/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
 769              		.loc 6 49 0
 770 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 771 0004 4360     		str	r3, [r0, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 772              		.loc 6 50 0
 773 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 774 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 775 000c 4360     		str	r3, [r0, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 776              		.loc 6 51 0
 777 000e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 778 0010 43EA0243 		orr	r3, r3, r2, lsl #16
 779 0014 4360     		str	r3, [r0, #4]
  52:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 780              		.loc 6 52 0
 781 0016 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 782 0018 43EA0263 		orr	r3, r3, r2, lsl #24
 783 001c 4360     		str	r3, [r0, #4]
 784              	.LVL76:
  53:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 785              		.loc 6 54 0
 786 001e 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 787 0020 8360     		str	r3, [r0, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 23


 788              		.loc 6 55 0
 789 0022 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 790 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 791 0028 8360     		str	r3, [r0, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 792              		.loc 6 56 0
 793 002a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 794 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 795 0030 8360     		str	r3, [r0, #8]
  57:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 796              		.loc 6 57 0
 797 0032 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 798 0034 43EA0263 		orr	r3, r3, r2, lsl #24
 799 0038 8360     		str	r3, [r0, #8]
 800              	.LVL77:
  58:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 801              		.loc 6 59 0
 802 003a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 803 003c C360     		str	r3, [r0, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 804              		.loc 6 60 0
 805 003e 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 806 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 807 0044 C360     		str	r3, [r0, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 808              		.loc 6 61 0
 809 0046 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 810 0048 43EA0243 		orr	r3, r3, r2, lsl #16
 811 004c C360     		str	r3, [r0, #12]
  62:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 812              		.loc 6 62 0
 813 004e CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 814 0050 43EA0263 		orr	r3, r3, r2, lsl #24
 815 0054 C360     		str	r3, [r0, #12]
 816              	.LVL78:
  63:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  64:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id;
  65:ROSSerial/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
 817              		.loc 6 65 0
 818 0056 CD68     		ldr	r5, [r1, #12]	@ unaligned
 819              	.LVL79:
 820              	.LBB168:
  66:ROSSerial/std_msgs/Header.h ****       offset += 4;
  67:ROSSerial/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
 821              		.loc 6 67 0
 822 0058 1023     		movs	r3, #16
 823              	.LVL80:
 824              	.L51:
 825              		.loc 6 67 0 is_stmt 0 discriminator 3
 826 005a 05F11002 		add	r2, r5, #16
 827 005e 9A42     		cmp	r2, r3
 828 0060 04D9     		bls	.L50
  68:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 829              		.loc 6 68 0 is_stmt 1 discriminator 2
 830 0062 5A1E     		subs	r2, r3, #1
 831 0064 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 24


 832 0066 8C54     		strb	r4, [r1, r2]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 833              		.loc 6 67 0 discriminator 2
 834 0068 0133     		adds	r3, r3, #1
 835              	.LVL81:
 836 006a F6E7     		b	.L51
 837              	.L50:
 838              	.LBE168:
  69:ROSSerial/std_msgs/Header.h ****       }
  70:ROSSerial/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
 839              		.loc 6 70 0
 840 006c 0F35     		adds	r5, r5, #15
 841              	.LVL82:
 842 006e 0023     		movs	r3, #0
 843              	.LVL83:
 844 0070 4B55     		strb	r3, [r1, r5]
  71:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 845              		.loc 6 71 0
 846 0072 0F31     		adds	r1, r1, #15
 847              	.LVL84:
 848 0074 0161     		str	r1, [r0, #16]
 849              	.LVL85:
  72:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  73:ROSSerial/std_msgs/Header.h ****      return offset;
  74:ROSSerial/std_msgs/Header.h ****     }
 850              		.loc 6 74 0
 851 0076 1046     		mov	r0, r2
 852              	.LVL86:
 853 0078 30BC     		pop	{r4, r5}
 854              	.LCFI7:
 855              		.cfi_restore 5
 856              		.cfi_restore 4
 857              		.cfi_def_cfa_offset 0
 858 007a 7047     		bx	lr
 859              		.cfi_endproc
 860              	.LFE475:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs6Header7getTypeEv
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	_ZN8std_msgs6Header7getTypeEv:
 873              		.fnstart
 874              	.LFB476:
  75:ROSSerial/std_msgs/Header.h **** 
  76:ROSSerial/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 875              		.loc 6 76 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL87:
 881              		.loc 6 76 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 25


 882 0000 0048     		ldr	r0, .L54
 883              	.LVL88:
 884 0002 7047     		bx	lr
 885              	.L55:
 886              		.align	2
 887              	.L54:
 888 0004 00000000 		.word	.LC12
 889              		.cfi_endproc
 890              	.LFE476:
 891              		.cantunwind
 892              		.fnend
 894              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 895              		.align	1
 896              		.weak	_ZN8std_msgs6Header6getMD5Ev
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	_ZN8std_msgs6Header6getMD5Ev:
 903              		.fnstart
 904              	.LFB477:
  77:ROSSerial/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 905              		.loc 6 77 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL89:
 911              		.loc 6 77 0
 912 0000 0048     		ldr	r0, .L57
 913              	.LVL90:
 914 0002 7047     		bx	lr
 915              	.L58:
 916              		.align	2
 917              	.L57:
 918 0004 00000000 		.word	.LC13
 919              		.cfi_endproc
 920              	.LFE477:
 921              		.cantunwind
 922              		.fnend
 924              		.section	.text._ZN11sensor_msgs10JointState7getTypeEv,"axG",%progbits,_ZN11sensor_msgs10JointState
 925              		.align	1
 926              		.weak	_ZN11sensor_msgs10JointState7getTypeEv
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN11sensor_msgs10JointState7getTypeEv:
 933              		.fnstart
 934              	.LFB489:
 935              		.file 7 "ROSSerial/sensor_msgs/JointState.h"
   1:ROSSerial/sensor_msgs/JointState.h **** #ifndef _ROS_sensor_msgs_JointState_h
   2:ROSSerial/sensor_msgs/JointState.h **** #define _ROS_sensor_msgs_JointState_h
   3:ROSSerial/sensor_msgs/JointState.h **** 
   4:ROSSerial/sensor_msgs/JointState.h **** #include <stdint.h>
   5:ROSSerial/sensor_msgs/JointState.h **** #include <string.h>
   6:ROSSerial/sensor_msgs/JointState.h **** #include <stdlib.h>
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 26


   7:ROSSerial/sensor_msgs/JointState.h **** #include "ros/msg.h"
   8:ROSSerial/sensor_msgs/JointState.h **** #include "std_msgs/Header.h"
   9:ROSSerial/sensor_msgs/JointState.h **** 
  10:ROSSerial/sensor_msgs/JointState.h **** namespace sensor_msgs
  11:ROSSerial/sensor_msgs/JointState.h **** {
  12:ROSSerial/sensor_msgs/JointState.h **** 
  13:ROSSerial/sensor_msgs/JointState.h ****   class JointState : public ros::Msg
  14:ROSSerial/sensor_msgs/JointState.h ****   {
  15:ROSSerial/sensor_msgs/JointState.h ****     public:
  16:ROSSerial/sensor_msgs/JointState.h ****       typedef std_msgs::Header _header_type;
  17:ROSSerial/sensor_msgs/JointState.h ****       _header_type header;
  18:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_length;
  19:ROSSerial/sensor_msgs/JointState.h ****       typedef char* _name_type;
  20:ROSSerial/sensor_msgs/JointState.h ****       _name_type st_name;
  21:ROSSerial/sensor_msgs/JointState.h ****       _name_type * name;
  22:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_length;
  23:ROSSerial/sensor_msgs/JointState.h ****       typedef float _position_type;
  24:ROSSerial/sensor_msgs/JointState.h ****       _position_type st_position;
  25:ROSSerial/sensor_msgs/JointState.h ****       _position_type * position;
  26:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_length;
  27:ROSSerial/sensor_msgs/JointState.h ****       typedef float _velocity_type;
  28:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type st_velocity;
  29:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type * velocity;
  30:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_length;
  31:ROSSerial/sensor_msgs/JointState.h ****       typedef float _effort_type;
  32:ROSSerial/sensor_msgs/JointState.h ****       _effort_type st_effort;
  33:ROSSerial/sensor_msgs/JointState.h ****       _effort_type * effort;
  34:ROSSerial/sensor_msgs/JointState.h **** 
  35:ROSSerial/sensor_msgs/JointState.h ****     JointState():
  36:ROSSerial/sensor_msgs/JointState.h ****       header(),
  37:ROSSerial/sensor_msgs/JointState.h ****       name_length(0), name(NULL),
  38:ROSSerial/sensor_msgs/JointState.h ****       position_length(0), position(NULL),
  39:ROSSerial/sensor_msgs/JointState.h ****       velocity_length(0), velocity(NULL),
  40:ROSSerial/sensor_msgs/JointState.h ****       effort_length(0), effort(NULL)
  41:ROSSerial/sensor_msgs/JointState.h ****     {
  42:ROSSerial/sensor_msgs/JointState.h ****     }
  43:ROSSerial/sensor_msgs/JointState.h **** 
  44:ROSSerial/sensor_msgs/JointState.h ****     virtual int serialize(unsigned char *outbuffer) const
  45:ROSSerial/sensor_msgs/JointState.h ****     {
  46:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  47:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.serialize(outbuffer + offset);
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->name_length >> (8 * 0)) & 0xFF;
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
  51:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
  52:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  53:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
  54:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
  55:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
  56:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
  57:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
  58:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
  59:ROSSerial/sensor_msgs/JointState.h ****       }
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->position_length >> (8 * 0)) & 0xFF;
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
  63:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 27


  64:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
  65:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
  66:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
  67:ROSSerial/sensor_msgs/JointState.h ****       }
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->velocity_length >> (8 * 0)) & 0xFF;
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
  71:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
  72:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
  73:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
  74:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
  75:ROSSerial/sensor_msgs/JointState.h ****       }
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->effort_length >> (8 * 0)) & 0xFF;
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
  79:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
  80:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
  81:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
  82:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
  83:ROSSerial/sensor_msgs/JointState.h ****       }
  84:ROSSerial/sensor_msgs/JointState.h ****       return offset;
  85:ROSSerial/sensor_msgs/JointState.h ****     }
  86:ROSSerial/sensor_msgs/JointState.h **** 
  87:ROSSerial/sensor_msgs/JointState.h ****     virtual int deserialize(unsigned char *inbuffer)
  88:ROSSerial/sensor_msgs/JointState.h ****     {
  89:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  90:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.deserialize(inbuffer + offset);
  91:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
  94:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
  95:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  96:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
  97:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
  98:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
  99:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 100:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 101:ROSSerial/sensor_msgs/JointState.h ****       arrToVar(length_st_name, (inbuffer + offset));
 102:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 103:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 104:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 105:ROSSerial/sensor_msgs/JointState.h ****       }
 106:ROSSerial/sensor_msgs/JointState.h ****       inbuffer[offset+length_st_name-1]=0;
 107:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 108:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 109:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 110:ROSSerial/sensor_msgs/JointState.h ****       }
 111:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 114:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 115:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 116:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 117:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 118:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 119:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 120:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 28


 121:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 122:ROSSerial/sensor_msgs/JointState.h ****       }
 123:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 126:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 127:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 128:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 129:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 130:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 131:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 132:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 133:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 134:ROSSerial/sensor_msgs/JointState.h ****       }
 135:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 138:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 139:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 140:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 141:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 142:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 143:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 144:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 145:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 146:ROSSerial/sensor_msgs/JointState.h ****       }
 147:ROSSerial/sensor_msgs/JointState.h ****      return offset;
 148:ROSSerial/sensor_msgs/JointState.h ****     }
 149:ROSSerial/sensor_msgs/JointState.h **** 
 150:ROSSerial/sensor_msgs/JointState.h ****     const char * getType(){ return "sensor_msgs/JointState"; };
 936              		.loc 7 150 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL91:
 942              		.loc 7 150 0
 943 0000 0048     		ldr	r0, .L60
 944              	.LVL92:
 945 0002 7047     		bx	lr
 946              	.L61:
 947              		.align	2
 948              	.L60:
 949 0004 00000000 		.word	.LC14
 950              		.cfi_endproc
 951              	.LFE489:
 952              		.cantunwind
 953              		.fnend
 955              		.section	.text._ZN11sensor_msgs10JointState6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs10JointState6
 956              		.align	1
 957              		.weak	_ZN11sensor_msgs10JointState6getMD5Ev
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	_ZN11sensor_msgs10JointState6getMD5Ev:
 964              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 29


 965              	.LFB490:
 151:ROSSerial/sensor_msgs/JointState.h ****     const char * getMD5(){ return "3066dcd76a6cfaef579bd0f34173e9fd"; };
 966              		.loc 7 151 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL93:
 972              		.loc 7 151 0
 973 0000 0048     		ldr	r0, .L63
 974              	.LVL94:
 975 0002 7047     		bx	lr
 976              	.L64:
 977              		.align	2
 978              	.L63:
 979 0004 00000000 		.word	.LC15
 980              		.cfi_endproc
 981              	.LFE490:
 982              		.cantunwind
 983              		.fnend
 985              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 986              		.align	1
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
 992              	_Z41__static_initialization_and_destruction_0ii:
 993              		.fnstart
 994              	.LFB537:
 995              		.file 8 "./Src/ROS_main.cpp"
   1:./Src/ROS_main.cpp **** /*
   2:./Src/ROS_main.cpp **** * Implement all ROS functions here.
   3:./Src/ROS_main.cpp **** */
   4:./Src/ROS_main.cpp **** 
   5:./Src/ROS_main.cpp **** #include "ros.h"
   6:./Src/ROS_main.cpp **** #include "ROS_subscribe.h"
   7:./Src/ROS_main.cpp **** #include "std_msgs/ROSString.h"
   8:./Src/ROS_main.cpp **** #include "sensor_msgs/JointState.h"
   9:./Src/ROS_main.cpp **** #include "hallinterrupts.h"
  10:./Src/ROS_main.cpp **** #include "defines.h"
  11:./Src/ROS_main.cpp **** 
  12:./Src/ROS_main.cpp **** 
  13:./Src/ROS_main.cpp **** extern volatile int pwml;  // global variable for pwm left. -1000 to 1000
  14:./Src/ROS_main.cpp **** extern volatile int pwmr;  // global variable for pwm right. -1000 to 1000
  15:./Src/ROS_main.cpp **** extern volatile WHEEL_POSN_STRUCT wheel_posn[2];
  16:./Src/ROS_main.cpp **** 
  17:./Src/ROS_main.cpp **** uint32_t publish_time = 0;
  18:./Src/ROS_main.cpp **** 
  19:./Src/ROS_main.cpp **** extern "C" 
  20:./Src/ROS_main.cpp **** {
  21:./Src/ROS_main.cpp ****     void ros_init(void);
  22:./Src/ROS_main.cpp ****     void ros_run(void);
  23:./Src/ROS_main.cpp ****     void publish_hovebot_state(void);
  24:./Src/ROS_main.cpp **** }
  25:./Src/ROS_main.cpp **** 
  26:./Src/ROS_main.cpp **** using namespace ros;
  27:./Src/ROS_main.cpp **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 30


  28:./Src/ROS_main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  29:./Src/ROS_main.cpp **** 
  30:./Src/ROS_main.cpp **** ros::PublisherType *hovebotState;
  31:./Src/ROS_main.cpp **** ros::PublisherType *chatter;
  32:./Src/ROS_main.cpp **** 
  33:./Src/ROS_main.cpp **** 
  34:./Src/ROS_main.cpp **** void ros_init()
  35:./Src/ROS_main.cpp **** {
  36:./Src/ROS_main.cpp ****     nh.initNode();
  37:./Src/ROS_main.cpp ****     //nh.setSpinTimeout(5); //timeout after 5ms
  38:./Src/ROS_main.cpp **** 
  39:./Src/ROS_main.cpp ****     /* Register Publisher hovebot_state  */
  40:./Src/ROS_main.cpp ****     sensor_msgs::JointState tmpVar;
  41:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hoverbot_state",  &tmpVar);
  42:./Src/ROS_main.cpp **** 
  43:./Src/ROS_main.cpp ****     /* Register Publisher chatter  */
  44:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  45:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &tmpStr);
  46:./Src/ROS_main.cpp **** 
  47:./Src/ROS_main.cpp ****     /* Register Subscriber */
  48:./Src/ROS_main.cpp ****     rosSubscribeWheelsCmd(&nh);
  49:./Src/ROS_main.cpp **** }
  50:./Src/ROS_main.cpp **** 
  51:./Src/ROS_main.cpp **** void publish_hovebot_state(void)
  52:./Src/ROS_main.cpp **** {
  53:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
  54:./Src/ROS_main.cpp ****     char *names[2] = {"LEFT","RIGHT"};
  55:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[0].ticks,wheel_posn[1].ticks};
  56:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[0].rpm, wheel_posn[1].rpm};
  57:./Src/ROS_main.cpp ****     float effort[2] = {pwml, pwmr};
  58:./Src/ROS_main.cpp **** 
  59:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
  60:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
  61:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
  62:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
  63:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
  64:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
  65:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
  66:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
  67:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
  68:./Src/ROS_main.cpp **** 
  69:./Src/ROS_main.cpp ****     //Note: If message (wheelPositions) is declared outside function/globally publish1 doesn't work
  70:./Src/ROS_main.cpp ****     //may be constructor is not getting called.
  71:./Src/ROS_main.cpp ****     int retval = nh.publish1(hovebotState->topic_id, &wheelPositions); 
  72:./Src/ROS_main.cpp ****     if(retval < 0)
  73:./Src/ROS_main.cpp ****     {
  74:./Src/ROS_main.cpp ****         printf("hoverbot_state publish1 failed %d\n",retval);
  75:./Src/ROS_main.cpp ****     }
  76:./Src/ROS_main.cpp **** 
  77:./Src/ROS_main.cpp **** #ifdef DEBUG
  78:./Src/ROS_main.cpp ****     char buf[512];
  79:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  80:./Src/ROS_main.cpp ****     tmpStr.data = buf;
  81:./Src/ROS_main.cpp ****     int motor=0;
  82:./Src/ROS_main.cpp ****     int rpm = 1000*wheel_posn[motor].rpm;
  83:./Src/ROS_main.cpp ****     // sprintf(buf,"%d:%d:rpm=%d:%ld:%lu:%d\n",motor,wheel_posn[motor].hall,rpm,
  84:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks,wheel_posn[motor].millis_at_tick,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 31


  85:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks_at_prev_rotation);
  86:./Src/ROS_main.cpp ****     sprintf(buf,"%d: Hello world\n",publish_time);
  87:./Src/ROS_main.cpp ****     //int retval2 = nh.publish1(chatter->topic_id, &tmpStr);
  88:./Src/ROS_main.cpp **** #endif
  89:./Src/ROS_main.cpp **** }
  90:./Src/ROS_main.cpp **** 
  91:./Src/ROS_main.cpp **** void ros_run()
  92:./Src/ROS_main.cpp **** {
  93:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
  94:./Src/ROS_main.cpp **** 
  95:./Src/ROS_main.cpp ****     if(nh.spinOnce1() != 0)
  96:./Src/ROS_main.cpp ****     {
  97:./Src/ROS_main.cpp ****         printf("ERROR: spinOnce1 returned error probably SPIN_TIMEOUT\n");
  98:./Src/ROS_main.cpp ****         return;
  99:./Src/ROS_main.cpp ****     }
 100:./Src/ROS_main.cpp ****     //Publish every 100ms (10Hz)
 101:./Src/ROS_main.cpp ****     if ((now - publish_time) > 50) {
 102:./Src/ROS_main.cpp ****         //printf("publishing %ld, %ld\n",now, (now - publish_time));
 103:./Src/ROS_main.cpp ****         publish_hovebot_state();
 104:./Src/ROS_main.cpp ****         publish_time = now;
 105:./Src/ROS_main.cpp ****     }
 106:./Src/ROS_main.cpp **** 
 107:./Src/ROS_main.cpp ****     //Get wheel positions and set the values
 108:./Src/ROS_main.cpp ****     sensor_msgs::JointState newWheelPositions = getWheelPositions();
 109:./Src/ROS_main.cpp ****     if(newWheelPositions.name_length > 0) 
 110:./Src/ROS_main.cpp ****     {
 111:./Src/ROS_main.cpp ****         for (int i=0; i<2; i++)
 112:./Src/ROS_main.cpp ****         {
 113:./Src/ROS_main.cpp ****             printf("Received Wheel[%d] %s %d %d %d\n",i,newWheelPositions.name[i], int(newWheelPosi
 114:./Src/ROS_main.cpp ****                         int(newWheelPositions.velocity[i]),int(newWheelPositions.effort[i]) );
 115:./Src/ROS_main.cpp ****         }
 116:./Src/ROS_main.cpp **** 
 117:./Src/ROS_main.cpp ****         pwml = MIN(newWheelPositions.effort[0],80);
 118:./Src/ROS_main.cpp ****         pwmr = MIN(newWheelPositions.effort[1],80);
 119:./Src/ROS_main.cpp ****     }
 120:./Src/ROS_main.cpp **** }
 996              		.loc 8 120 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001              	.LVL95:
 1002              		.loc 8 120 0
 1003 0000 0128     		cmp	r0, #1
 1004 0002 00D0     		beq	.L75
 1005              	.LVL96:
 1006              	.L65:
 1007 0004 7047     		bx	lr
 1008              	.LVL97:
 1009              	.L75:
 1010              		.loc 8 120 0 is_stmt 0 discriminator 1
 1011 0006 4FF6FF73 		movw	r3, #65535
 1012 000a 9942     		cmp	r1, r3
 1013 000c FAD1     		bne	.L65
 1014              	.LVL98:
 1015              	.LBB182:
 1016              	.LBB183:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 32


 1017              	.LBB184:
 1018              		.file 9 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** #include "std_msgs/ROSString.h"
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 33


  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** namespace ros
  66:ROSSerial/ros/node_handle.h **** {
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  69:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  70:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  71:ROSSerial/ros/node_handle.h **** 
  72:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  73:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** /*
  76:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:ROSSerial/ros/node_handle.h ****  */
  83:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:ROSSerial/ros/node_handle.h **** 
  95:ROSSerial/ros/node_handle.h **** 
  96:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:ROSSerial/ros/node_handle.h **** 
 100:ROSSerial/ros/node_handle.h **** typedef struct
 101:ROSSerial/ros/node_handle.h **** {
 102:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 103:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 104:ROSSerial/ros/node_handle.h ****     const char* message_type;
 105:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 106:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 107:ROSSerial/ros/node_handle.h **** } SubscriberType;
 108:ROSSerial/ros/node_handle.h **** 
 109:ROSSerial/ros/node_handle.h **** typedef struct
 110:ROSSerial/ros/node_handle.h **** {
 111:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 112:ROSSerial/ros/node_handle.h ****     const char* topic_name;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 34


 113:ROSSerial/ros/node_handle.h ****     const Msg* msg; 
 114:ROSSerial/ros/node_handle.h ****     const char* message_type;
 115:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 116:ROSSerial/ros/node_handle.h **** } PublisherType;
 117:ROSSerial/ros/node_handle.h **** 
 118:ROSSerial/ros/node_handle.h **** /* Node Handle */
 119:ROSSerial/ros/node_handle.h **** template<class Hardware,
 120:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 121:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 122:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 123:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 124:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 125:ROSSerial/ros/node_handle.h **** {
 126:ROSSerial/ros/node_handle.h **** protected:
 127:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 128:ROSSerial/ros/node_handle.h **** 
 129:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 130:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 131:ROSSerial/ros/node_handle.h **** 
 132:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 133:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 134:ROSSerial/ros/node_handle.h **** 
 135:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 136:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 137:ROSSerial/ros/node_handle.h **** 
 138:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 139:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 142:ROSSerial/ros/node_handle.h ****   PublisherType publishers2[MAX_PUBLISHERS];
 143:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 144:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 145:ROSSerial/ros/node_handle.h **** 
 146:ROSSerial/ros/node_handle.h ****   /*
 147:ROSSerial/ros/node_handle.h ****    * Setup Functions
 148:ROSSerial/ros/node_handle.h ****    */
 149:ROSSerial/ros/node_handle.h **** public:
 150:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 1019              		.loc 9 150 0 is_stmt 1
 1020 000e 244A     		ldr	r2, .L76
 1021 0010 244B     		ldr	r3, .L76+4
 1022 0012 1360     		str	r3, [r2]
 1023 0014 0023     		movs	r3, #0
 1024 0016 82F81C35 		strb	r3, [r2, #1308]
 1025              	.LVL99:
 1026              	.LBB185:
 1027              	.LBB186:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 1028              		.loc 4 51 0
 1029 001a 2349     		ldr	r1, .L76+8
 1030              	.LVL100:
 1031 001c C2F83015 		str	r1, [r2, #1328]
 1032              	.LVL101:
 1033              	.L68:
 1034              	.LBE186:
 1035              	.LBE185:
 1036              	.LBB187:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 35


 1037              	.LBB188:
 151:ROSSerial/ros/node_handle.h ****   {
 152:ROSSerial/ros/node_handle.h **** 
 153:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++) {
 1038              		.loc 9 153 0
 1039 0020 042B     		cmp	r3, #4
 1040 0022 0CD8     		bhi	.L72
 154:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1041              		.loc 9 154 0
 1042 0024 1E48     		ldr	r0, .L76
 1043 0026 03F58372 		add	r2, r3, #262
 1044 002a 0021     		movs	r1, #0
 1045 002c 40F82210 		str	r1, [r0, r2, lsl #2]
 155:ROSSerial/ros/node_handle.h ****       publishers2[i].topic_id = 0;
 1046              		.loc 9 155 0
 1047 0030 1422     		movs	r2, #20
 1048 0032 02FB0302 		mla	r2, r2, r3, r0
 1049 0036 A2F82C14 		strh	r1, [r2, #1068]	@ movhi
 153:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1050              		.loc 9 153 0
 1051 003a 0133     		adds	r3, r3, #1
 1052              	.LVL102:
 1053 003c F0E7     		b	.L68
 1054              	.L72:
 1055              	.LBE188:
 1056              	.LBB189:
 156:ROSSerial/ros/node_handle.h ****     }
 157:ROSSerial/ros/node_handle.h **** 
 158:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 1057              		.loc 9 158 0
 1058 003e 0023     		movs	r3, #0
 1059              	.LVL103:
 1060              	.L67:
 1061 0040 042B     		cmp	r3, #4
 1062 0042 0CD8     		bhi	.L73
 159:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1063              		.loc 9 159 0
 1064 0044 1648     		ldr	r0, .L76
 1065 0046 03F59272 		add	r2, r3, #292
 1066 004a 0021     		movs	r1, #0
 1067 004c 40F82210 		str	r1, [r0, r2, lsl #2]
 160:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 1068              		.loc 9 160 0
 1069 0050 1422     		movs	r2, #20
 1070 0052 02FB0302 		mla	r2, r2, r3, r0
 1071 0056 A2F8A414 		strh	r1, [r2, #1188]	@ movhi
 158:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1072              		.loc 9 158 0
 1073 005a 0133     		adds	r3, r3, #1
 1074              	.LVL104:
 1075 005c F0E7     		b	.L67
 1076              	.L73:
 1077              	.LBE189:
 1078              	.LBB190:
 161:ROSSerial/ros/node_handle.h ****     }
 162:ROSSerial/ros/node_handle.h **** 
 163:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 36


 1079              		.loc 9 163 0
 1080 005e 0023     		movs	r3, #0
 1081              	.LVL105:
 1082              	.L69:
 1083 0060 B3F5007F 		cmp	r3, #512
 1084 0064 05D2     		bcs	.L74
 164:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1085              		.loc 9 164 0
 1086 0066 0E4A     		ldr	r2, .L76
 1087 0068 1A44     		add	r2, r2, r3
 1088 006a 0021     		movs	r1, #0
 1089 006c 1176     		strb	r1, [r2, #24]
 163:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1090              		.loc 9 163 0
 1091 006e 0133     		adds	r3, r3, #1
 1092              	.LVL106:
 1093 0070 F6E7     		b	.L69
 1094              	.L74:
 1095              	.LBE190:
 1096              	.LBB191:
 165:ROSSerial/ros/node_handle.h **** 
 166:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 1097              		.loc 9 166 0
 1098 0072 0023     		movs	r3, #0
 1099              	.LVL107:
 1100              	.L70:
 1101 0074 B3F5007F 		cmp	r3, #512
 1102 0078 06D2     		bcs	.L71
 167:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1103              		.loc 9 167 0
 1104 007a 094A     		ldr	r2, .L76
 1105 007c 1A44     		add	r2, r2, r3
 1106 007e 0021     		movs	r1, #0
 1107 0080 82F81812 		strb	r1, [r2, #536]
 166:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1108              		.loc 9 166 0
 1109 0084 0133     		adds	r3, r3, #1
 1110              	.LVL108:
 1111 0086 F5E7     		b	.L70
 1112              	.L71:
 1113              	.LBE191:
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 1114              		.loc 9 169 0
 1115 0088 054B     		ldr	r3, .L76
 1116              	.LVL109:
 1117 008a 0022     		movs	r2, #0
 1118 008c 83F83425 		strb	r2, [r3, #1332]
 170:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 1119              		.loc 9 170 0
 1120 0090 C3F83C25 		str	r2, [r3, #1340]
 171:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 1121              		.loc 9 171 0
 1122 0094 83F84025 		strb	r2, [r3, #1344]
 172:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 1123              		.loc 9 172 0
 1124 0098 C3F84825 		str	r2, [r3, #1352]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 37


 173:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 174:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 175:ROSSerial/ros/node_handle.h **** 
 176:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 1125              		.loc 9 176 0
 1126 009c 5A61     		str	r2, [r3, #20]
 1127              	.LBE187:
 1128              	.LBE184:
 1129              	.LBE183:
 1130              	.LBE182:
 1131              		.loc 8 120 0
 1132 009e B1E7     		b	.L65
 1133              	.L77:
 1134              		.align	2
 1135              	.L76:
 1136 00a0 00000000 		.word	.LANCHOR1
 1137 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 1138 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 1139              		.cfi_endproc
 1140              	.LFE537:
 1141              		.cantunwind
 1142              		.fnend
 1144              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 1145              		.align	1
 1146              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 1153              		.fnstart
 1154              	.LFB540:
 177:ROSSerial/ros/node_handle.h ****   }
 178:ROSSerial/ros/node_handle.h **** 
 179:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 180:ROSSerial/ros/node_handle.h ****   {
 181:ROSSerial/ros/node_handle.h ****     return &hardware_;
 182:ROSSerial/ros/node_handle.h ****   }
 183:ROSSerial/ros/node_handle.h **** 
 184:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 185:ROSSerial/ros/node_handle.h ****   void initNode()
 186:ROSSerial/ros/node_handle.h ****   {
 187:ROSSerial/ros/node_handle.h ****     hardware_.init();
 188:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 189:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 190:ROSSerial/ros/node_handle.h ****     index_ = 0;
 191:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 192:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 193:ROSSerial/ros/node_handle.h ****   };
 194:ROSSerial/ros/node_handle.h **** 
 195:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 196:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 197:ROSSerial/ros/node_handle.h ****   {
 198:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 199:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 200:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 201:ROSSerial/ros/node_handle.h ****     index_ = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 38


 202:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 203:ROSSerial/ros/node_handle.h ****   };
 204:ROSSerial/ros/node_handle.h **** 
 205:ROSSerial/ros/node_handle.h ****   /**
 206:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 207:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 208:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 209:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 210:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 211:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 212:ROSSerial/ros/node_handle.h ****    */
 213:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 214:ROSSerial/ros/node_handle.h ****   {
 215:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 216:ROSSerial/ros/node_handle.h ****   }
 217:ROSSerial/ros/node_handle.h **** 
 218:ROSSerial/ros/node_handle.h **** protected:
 219:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 220:ROSSerial/ros/node_handle.h ****   int mode_;
 221:ROSSerial/ros/node_handle.h ****   int bytes_;
 222:ROSSerial/ros/node_handle.h ****   int topic_;
 223:ROSSerial/ros/node_handle.h ****   int index_;
 224:ROSSerial/ros/node_handle.h ****   int checksum_;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h ****   bool configured_;
 227:ROSSerial/ros/node_handle.h **** 
 228:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 229:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 230:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 231:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 232:ROSSerial/ros/node_handle.h **** 
 233:ROSSerial/ros/node_handle.h **** public:
 234:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 235:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 236:ROSSerial/ros/node_handle.h ****    */
 237:ROSSerial/ros/node_handle.h **** 
 238:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 239:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 240:ROSSerial/ros/node_handle.h ****   }
 241:ROSSerial/ros/node_handle.h **** 
 242:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 243:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 244:ROSSerial/ros/node_handle.h ****   {
 245:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 246:ROSSerial/ros/node_handle.h ****     
 247:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 248:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 249:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 250:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 251:ROSSerial/ros/node_handle.h ****     {
 252:ROSSerial/ros/node_handle.h ****       //printf("spinOnce  setting configured_ false %lu, %lu, %ld\n",c_time, 
 253:ROSSerial/ros/node_handle.h ****       //        last_sync_receive_time, (c_time-last_sync_receive_time));
 254:ROSSerial/ros/node_handle.h ****       configured_ = false;
 255:ROSSerial/ros/node_handle.h ****     }
 256:ROSSerial/ros/node_handle.h **** 
 257:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 258:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 39


 259:ROSSerial/ros/node_handle.h ****     {
 260:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 261:ROSSerial/ros/node_handle.h ****       {
 262:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 263:ROSSerial/ros/node_handle.h ****       }
 264:ROSSerial/ros/node_handle.h ****     }
 265:ROSSerial/ros/node_handle.h **** 
 266:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 267:ROSSerial/ros/node_handle.h ****     while (true)
 268:ROSSerial/ros/node_handle.h ****     {
 269:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 270:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 271:ROSSerial/ros/node_handle.h ****       {
 272:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 273:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 274:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 275:ROSSerial/ros/node_handle.h ****         // and start fresh.
 276:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 277:ROSSerial/ros/node_handle.h ****         {
 278:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 279:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 280:ROSSerial/ros/node_handle.h ****         }
 281:ROSSerial/ros/node_handle.h ****       }
 282:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 283:ROSSerial/ros/node_handle.h ****       if (data < 0)
 284:ROSSerial/ros/node_handle.h ****         break;
 285:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 286:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 289:ROSSerial/ros/node_handle.h ****         bytes_--;
 290:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 291:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 292:ROSSerial/ros/node_handle.h ****       }
 293:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 294:ROSSerial/ros/node_handle.h ****       {
 295:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 296:ROSSerial/ros/node_handle.h ****         {
 297:ROSSerial/ros/node_handle.h ****           mode_++;
 298:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 299:ROSSerial/ros/node_handle.h ****         }
 300:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 301:ROSSerial/ros/node_handle.h ****         {
 302:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 303:ROSSerial/ros/node_handle.h ****           configured_ = false;
 304:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****       }
 307:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 308:ROSSerial/ros/node_handle.h ****       {
 309:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 310:ROSSerial/ros/node_handle.h ****         {
 311:ROSSerial/ros/node_handle.h ****           mode_++;
 312:ROSSerial/ros/node_handle.h ****         }
 313:ROSSerial/ros/node_handle.h ****         else
 314:ROSSerial/ros/node_handle.h ****         {
 315:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 40


 316:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 317:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 318:ROSSerial/ros/node_handle.h ****         }
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 323:ROSSerial/ros/node_handle.h ****         index_ = 0;
 324:ROSSerial/ros/node_handle.h ****         mode_++;
 325:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 326:ROSSerial/ros/node_handle.h ****       }
 327:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 328:ROSSerial/ros/node_handle.h ****       {
 329:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 330:ROSSerial/ros/node_handle.h ****         mode_++;
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 335:ROSSerial/ros/node_handle.h ****           mode_++;
 336:ROSSerial/ros/node_handle.h ****         else
 337:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 338:ROSSerial/ros/node_handle.h ****       }
 339:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 340:ROSSerial/ros/node_handle.h ****       {
 341:ROSSerial/ros/node_handle.h ****         topic_ = data;
 342:ROSSerial/ros/node_handle.h ****         mode_++;
 343:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 348:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 349:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 350:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 351:ROSSerial/ros/node_handle.h ****       }
 352:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 353:ROSSerial/ros/node_handle.h ****       {
 354:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 355:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 356:ROSSerial/ros/node_handle.h ****         {
 357:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 358:ROSSerial/ros/node_handle.h ****           {
 359:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 360:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 361:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 362:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 363:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 364:ROSSerial/ros/node_handle.h ****           }
 365:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 366:ROSSerial/ros/node_handle.h ****           {
 367:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 368:ROSSerial/ros/node_handle.h ****           }
 369:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 370:ROSSerial/ros/node_handle.h ****           {
 371:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 372:ROSSerial/ros/node_handle.h ****             param_recieved = true;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 41


 373:ROSSerial/ros/node_handle.h ****           }
 374:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 375:ROSSerial/ros/node_handle.h ****           {
 376:ROSSerial/ros/node_handle.h ****             configured_ = false;
 377:ROSSerial/ros/node_handle.h ****           }
 378:ROSSerial/ros/node_handle.h ****           else
 379:ROSSerial/ros/node_handle.h ****           {
 380:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 381:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 382:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 383:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 384:ROSSerial/ros/node_handle.h ****             }
 385:ROSSerial/ros/node_handle.h ****           }
 386:ROSSerial/ros/node_handle.h ****         }
 387:ROSSerial/ros/node_handle.h ****       }
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 391:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 392:ROSSerial/ros/node_handle.h ****     {
 393:ROSSerial/ros/node_handle.h ****       //printf("Resetting sync time %lu, %lu, %ld\n",c_time, last_sync_time, (c_time-last_sync_time
 394:ROSSerial/ros/node_handle.h ****       requestSyncTime(); 
 395:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 396:ROSSerial/ros/node_handle.h ****     }
 397:ROSSerial/ros/node_handle.h **** 
 398:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 399:ROSSerial/ros/node_handle.h ****   }
 400:ROSSerial/ros/node_handle.h **** 
 401:ROSSerial/ros/node_handle.h **** 
 402:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 403:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 1155              		.loc 9 403 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160              	.LVL110:
 404:ROSSerial/ros/node_handle.h ****   {
 405:ROSSerial/ros/node_handle.h ****     return configured_;
 406:ROSSerial/ros/node_handle.h ****   };
 1161              		.loc 9 406 0
 1162 0000 90F81C05 		ldrb	r0, [r0, #1308]	@ zero_extendqisi2
 1163              	.LVL111:
 1164 0004 7047     		bx	lr
 1165              		.cfi_endproc
 1166              	.LFE540:
 1167              		.cantunwind
 1168              		.fnend
 1170              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1171              		.align	1
 1172              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1179              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 42


 1180              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1181              		.loc 4 113 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              	.LVL112:
 1186 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1187              	.LCFI8:
 1188              		.cfi_def_cfa_offset 24
 1189              		.cfi_offset 3, -24
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 0646     		mov	r6, r0
 1196 0004 0D46     		mov	r5, r1
 1197              	.LVL113:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1198              		.loc 4 116 0
 1199 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1200              	.LVL114:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1201              		.loc 4 117 0
 1202 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1203 000a A342     		cmp	r3, r4
 1204 000c 1AD3     		bcc	.L92
 1205              	.LVL115:
 1206              	.L80:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1207              		.loc 4 120 0
 1208 000e 3471     		strb	r4, [r6, #4]
 1209              	.LVL116:
 1210              	.LBB199:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1211              		.loc 4 121 0
 1212 0010 0022     		movs	r2, #0
 1213              	.LBE199:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1214              		.loc 4 119 0
 1215 0012 0424     		movs	r4, #4
 1216              	.LVL117:
 1217              	.L82:
 1218              	.LBB201:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1219              		.loc 4 121 0 discriminator 3
 1220 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1221 0016 9342     		cmp	r3, r2
 1222 0018 1AD9     		bls	.L81
 1223              	.LBB200:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1224              		.loc 4 127 0 discriminator 2
 1225 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1226              		.loc 4 128 0 discriminator 2
 1227 001c 611C     		adds	r1, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 43


 1228 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1229 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1230              		.loc 4 129 0 discriminator 2
 1231 0024 A11C     		adds	r1, r4, #2
 1232 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1233 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1234              		.loc 4 130 0 discriminator 2
 1235 002c E11C     		adds	r1, r4, #3
 1236 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1237 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1238              		.loc 4 131 0 discriminator 2
 1239 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1240              		.loc 4 132 0 discriminator 2
 1241 0036 0434     		adds	r4, r4, #4
 1242              	.LVL118:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1243              		.loc 4 133 0 discriminator 2
 1244 0038 F168     		ldr	r1, [r6, #12]
 1245 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1246              	.LBE200:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1247              		.loc 4 121 0 discriminator 2
 1248 003e 0132     		adds	r2, r2, #1
 1249              	.LVL119:
 1250 0040 D2B2     		uxtb	r2, r2
 1251              	.LVL120:
 1252 0042 E7E7     		b	.L82
 1253              	.LVL121:
 1254              	.L92:
 1255              	.LBE201:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1256              		.loc 4 118 0
 1257 0044 A100     		lsls	r1, r4, #2
 1258              	.LVL122:
 1259 0046 C068     		ldr	r0, [r0, #12]
 1260              	.LVL123:
 1261 0048 FFF7FEFF 		bl	realloc
 1262              	.LVL124:
 1263 004c F060     		str	r0, [r6, #12]
 1264 004e DEE7     		b	.L80
 1265              	.LVL125:
 1266              	.L81:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1267              		.loc 4 135 0
 1268 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1269              	.LVL126:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1270              		.loc 4 136 0
 1271 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1272 0054 BB42     		cmp	r3, r7
 1273 0056 1AD3     		bcc	.L93
 1274              	.LVL127:
 1275              	.L83:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 44


 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1276              		.loc 4 138 0
 1277 0058 0434     		adds	r4, r4, #4
 1278              	.LVL128:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1279              		.loc 4 139 0
 1280 005a 3774     		strb	r7, [r6, #16]
 1281              	.LVL129:
 1282              	.LBB202:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1283              		.loc 4 140 0
 1284 005c 0022     		movs	r2, #0
 1285              	.LVL130:
 1286              	.L85:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1287              		.loc 4 140 0 is_stmt 0 discriminator 3
 1288 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1289 0060 9342     		cmp	r3, r2
 1290 0062 1AD9     		bls	.L84
 1291              	.LBB203:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1292              		.loc 4 146 0 is_stmt 1 discriminator 2
 1293 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1294              		.loc 4 147 0 discriminator 2
 1295 0066 611C     		adds	r1, r4, #1
 1296 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1297 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1298              		.loc 4 148 0 discriminator 2
 1299 006e A11C     		adds	r1, r4, #2
 1300 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1301 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1302              		.loc 4 149 0 discriminator 2
 1303 0076 E11C     		adds	r1, r4, #3
 1304 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1305 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1306              		.loc 4 150 0 discriminator 2
 1307 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1308              		.loc 4 151 0 discriminator 2
 1309 0080 0434     		adds	r4, r4, #4
 1310              	.LVL131:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1311              		.loc 4 152 0 discriminator 2
 1312 0082 B169     		ldr	r1, [r6, #24]
 1313 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1314              	.LBE203:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1315              		.loc 4 140 0 discriminator 2
 1316 0088 0132     		adds	r2, r2, #1
 1317              	.LVL132:
 1318 008a D2B2     		uxtb	r2, r2
 1319              	.LVL133:
 1320 008c E7E7     		b	.L85
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 45


 1321              	.LVL134:
 1322              	.L93:
 1323              	.LBE202:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1324              		.loc 4 137 0
 1325 008e B900     		lsls	r1, r7, #2
 1326 0090 B069     		ldr	r0, [r6, #24]
 1327 0092 FFF7FEFF 		bl	realloc
 1328              	.LVL135:
 1329 0096 B061     		str	r0, [r6, #24]
 1330 0098 DEE7     		b	.L83
 1331              	.LVL136:
 1332              	.L84:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1333              		.loc 4 154 0
 1334 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1335              	.LVL137:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1336              		.loc 4 155 0
 1337 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1338 009e BB42     		cmp	r3, r7
 1339 00a0 04D3     		bcc	.L94
 1340              	.LVL138:
 1341              	.L86:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1342              		.loc 4 157 0
 1343 00a2 201D     		adds	r0, r4, #4
 1344              	.LVL139:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1345              		.loc 4 158 0
 1346 00a4 3777     		strb	r7, [r6, #28]
 1347              	.LVL140:
 1348              	.LBB204:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1349              		.loc 4 159 0
 1350 00a6 4FF0000C 		mov	ip, #0
 1351 00aa 12E0     		b	.L90
 1352              	.LVL141:
 1353              	.L94:
 1354              	.LBE204:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1355              		.loc 4 156 0
 1356 00ac B900     		lsls	r1, r7, #2
 1357 00ae 706A     		ldr	r0, [r6, #36]
 1358 00b0 FFF7FEFF 		bl	realloc
 1359              	.LVL142:
 1360 00b4 7062     		str	r0, [r6, #36]
 1361 00b6 F4E7     		b	.L86
 1362              	.LVL143:
 1363              	.L88:
 1364              	.LBB208:
 1365              	.LBB205:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1366              		.loc 4 166 0 discriminator 2
 1367 00b8 431E     		subs	r3, r0, #1
 1368              	.LVL144:
 1369 00ba 0022     		movs	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 46


 1370 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1371              		.loc 4 167 0 discriminator 2
 1372 00be 013C     		subs	r4, r4, #1
 1373 00c0 2C44     		add	r4, r4, r5
 1374 00c2 3462     		str	r4, [r6, #32]
 1375              	.LVL145:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1376              		.loc 4 169 0 discriminator 2
 1377 00c4 736A     		ldr	r3, [r6, #36]
 1378 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1379              	.LVL146:
 1380              	.LBE205:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1381              		.loc 4 159 0 discriminator 2
 1382 00ca 0CF1010C 		add	ip, ip, #1
 1383              	.LVL147:
 1384 00ce 5FFA8CFC 		uxtb	ip, ip
 1385              	.LVL148:
 1386              	.L90:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1387              		.loc 4 159 0 is_stmt 0 discriminator 1
 1388 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1389 00d4 6345     		cmp	r3, ip
 1390 00d6 0AD9     		bls	.L79
 1391              	.LBB207:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1392              		.loc 4 161 0 is_stmt 1
 1393 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1394              	.LVL149:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1395              		.loc 4 162 0
 1396 00da 041D     		adds	r4, r0, #4
 1397              	.LVL150:
 1398              	.LBB206:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1399              		.loc 4 163 0
 1400 00dc 2346     		mov	r3, r4
 1401              	.LVL151:
 1402              	.L89:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1403              		.loc 4 163 0 is_stmt 0 discriminator 3
 1404 00de 3819     		adds	r0, r7, r4
 1405 00e0 9842     		cmp	r0, r3
 1406 00e2 E9D9     		bls	.L88
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1407              		.loc 4 164 0 is_stmt 1 discriminator 2
 1408 00e4 5A1E     		subs	r2, r3, #1
 1409 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1410 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1411              		.loc 4 163 0 discriminator 2
 1412 00ea 0133     		adds	r3, r3, #1
 1413              	.LVL152:
 1414 00ec F7E7     		b	.L89
 1415              	.LVL153:
 1416              	.L79:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 47


 1417              	.LBE206:
 1418              	.LBE207:
 1419              	.LBE208:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1420              		.loc 4 172 0
 1421 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE395:
 1424              		.cantunwind
 1425              		.fnend
 1427              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1428              		.align	1
 1429              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	_ZNK8std_msgs6Header9serializeEPh:
 1436              		.fnstart
 1437              	.LFB474:
  20:ROSSerial/std_msgs/Header.h ****     {
 1438              		.loc 6 20 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              	.LVL154:
 1443 0000 70B5     		push	{r4, r5, r6, lr}
 1444              	.LCFI9:
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0546     		mov	r5, r0
 1451 0004 0C46     		mov	r4, r1
 1452              	.LVL155:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1453              		.loc 6 23 0
 1454 0006 4368     		ldr	r3, [r0, #4]
 1455 0008 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1456              		.loc 6 24 0
 1457 000a 4368     		ldr	r3, [r0, #4]
 1458 000c 1B0A     		lsrs	r3, r3, #8
 1459 000e 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1460              		.loc 6 25 0
 1461 0010 C388     		ldrh	r3, [r0, #6]
 1462 0012 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1463              		.loc 6 26 0
 1464 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1465 0016 CB70     		strb	r3, [r1, #3]
 1466              	.LVL156:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1467              		.loc 6 28 0
 1468 0018 8368     		ldr	r3, [r0, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 48


 1469 001a 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1470              		.loc 6 29 0
 1471 001c 8368     		ldr	r3, [r0, #8]
 1472 001e 1B0A     		lsrs	r3, r3, #8
 1473 0020 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1474              		.loc 6 30 0
 1475 0022 4389     		ldrh	r3, [r0, #10]
 1476 0024 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1477              		.loc 6 31 0
 1478 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1479 0028 CB71     		strb	r3, [r1, #7]
 1480              	.LVL157:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1481              		.loc 6 33 0
 1482 002a C368     		ldr	r3, [r0, #12]
 1483 002c 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1484              		.loc 6 34 0
 1485 002e C368     		ldr	r3, [r0, #12]
 1486 0030 1B0A     		lsrs	r3, r3, #8
 1487 0032 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1488              		.loc 6 35 0
 1489 0034 C389     		ldrh	r3, [r0, #14]
 1490 0036 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1491              		.loc 6 36 0
 1492 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1493 003a CB72     		strb	r3, [r1, #11]
 1494              	.LVL158:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1495              		.loc 6 38 0
 1496 003c 0069     		ldr	r0, [r0, #16]
 1497              	.LVL159:
 1498 003e FFF7FEFF 		bl	strlen
 1499              	.LVL160:
 1500 0042 0646     		mov	r6, r0
 1501              	.LVL161:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 1502              		.loc 6 39 0
 1503 0044 E060     		str	r0, [r4, #12]	@ unaligned
 1504              	.LVL162:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 1505              		.loc 6 41 0
 1506 0046 0246     		mov	r2, r0
 1507 0048 2969     		ldr	r1, [r5, #16]
 1508 004a 04F11000 		add	r0, r4, #16
 1509              	.LVL163:
 1510 004e FFF7FEFF 		bl	memcpy
 1511              	.LVL164:
  44:ROSSerial/std_msgs/Header.h **** 
 1512              		.loc 6 44 0
 1513 0052 06F11000 		add	r0, r6, #16
 1514              	.LVL165:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 49


 1515 0056 70BD     		pop	{r4, r5, r6, pc}
 1516              		.cfi_endproc
 1517              	.LFE474:
 1518              		.cantunwind
 1519              		.fnend
 1521              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 1522              		.align	1
 1523              		.weak	_ZNK8std_msgs6String9serializeEPh
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	_ZNK8std_msgs6String9serializeEPh:
 1530              		.fnstart
 1531              	.LFB403:
  18:ROSSerial/std_msgs/ROSString.h ****     {
 1532              		.loc 5 18 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL166:
 1537 0000 70B5     		push	{r4, r5, r6, lr}
 1538              	.LCFI10:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 4, -16
 1541              		.cfi_offset 5, -12
 1542              		.cfi_offset 6, -8
 1543              		.cfi_offset 14, -4
 1544 0002 0646     		mov	r6, r0
 1545 0004 0C46     		mov	r4, r1
 1546              	.LVL167:
  21:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 1547              		.loc 5 21 0
 1548 0006 4068     		ldr	r0, [r0, #4]
 1549              	.LVL168:
 1550 0008 FFF7FEFF 		bl	strlen
 1551              	.LVL169:
 1552 000c 0546     		mov	r5, r0
 1553              	.LVL170:
  22:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
 1554              		.loc 5 22 0
 1555 000e 2046     		mov	r0, r4
 1556              	.LVL171:
 1557 0010 40F8045B 		str	r5, [r0], #4	@ unaligned
 1558              	.LVL172:
  24:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
 1559              		.loc 5 24 0
 1560 0014 2A46     		mov	r2, r5
 1561 0016 7168     		ldr	r1, [r6, #4]
 1562 0018 FFF7FEFF 		bl	memcpy
 1563              	.LVL173:
  27:ROSSerial/std_msgs/ROSString.h **** 
 1564              		.loc 5 27 0
 1565 001c 281D     		adds	r0, r5, #4
 1566              	.LVL174:
 1567 001e 70BD     		pop	{r4, r5, r6, pc}
 1568              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 50


 1569              	.LFE403:
 1570              		.cantunwind
 1571              		.fnend
 1573              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1574              		.align	1
 1575              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv4-sp-d16
 1581              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1582              		.fnstart
 1583              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 1584              		.loc 3 24 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL175:
 1589 0000 70B5     		push	{r4, r5, r6, lr}
 1590              	.LCFI11:
 1591              		.cfi_def_cfa_offset 16
 1592              		.cfi_offset 4, -16
 1593              		.cfi_offset 5, -12
 1594              		.cfi_offset 6, -8
 1595              		.cfi_offset 14, -4
 1596 0002 0646     		mov	r6, r0
 1597 0004 0D46     		mov	r5, r1
 1598              	.LVL176:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1599              		.loc 3 27 0
 1600 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1601 0008 0B70     		strb	r3, [r1]
 1602              	.LVL177:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1603              		.loc 3 29 0
 1604 000a 8068     		ldr	r0, [r0, #8]
 1605              	.LVL178:
 1606 000c FFF7FEFF 		bl	strlen
 1607              	.LVL179:
 1608 0010 0446     		mov	r4, r0
 1609              	.LVL180:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 1610              		.loc 3 30 0
 1611 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1612              	.LVL181:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 1613              		.loc 3 32 0
 1614 0016 0246     		mov	r2, r0
 1615 0018 B168     		ldr	r1, [r6, #8]
 1616 001a 681D     		adds	r0, r5, #5
 1617              	.LVL182:
 1618 001c FFF7FEFF 		bl	memcpy
 1619              	.LVL183:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1620              		.loc 3 35 0
 1621 0020 601D     		adds	r0, r4, #5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 51


 1622              	.LVL184:
 1623 0022 70BD     		pop	{r4, r5, r6, pc}
 1624              		.cfi_endproc
 1625              	.LFE386:
 1626              		.cantunwind
 1627              		.fnend
 1629              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1630              		.align	1
 1631              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1638              		.fnstart
 1639              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 1640              		.loc 2 29 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              	.LVL185:
 1645 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1646              	.LCFI12:
 1647              		.cfi_def_cfa_offset 24
 1648              		.cfi_offset 4, -24
 1649              		.cfi_offset 5, -20
 1650              		.cfi_offset 6, -16
 1651              		.cfi_offset 7, -12
 1652              		.cfi_offset 8, -8
 1653              		.cfi_offset 14, -4
 1654 0004 0646     		mov	r6, r0
 1655 0006 0C46     		mov	r4, r1
 1656              	.LVL186:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1657              		.loc 2 32 0
 1658 0008 8388     		ldrh	r3, [r0, #4]
 1659 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1660              		.loc 2 33 0
 1661 000c 8388     		ldrh	r3, [r0, #4]
 1662 000e 1B0A     		lsrs	r3, r3, #8
 1663 0010 4B70     		strb	r3, [r1, #1]
 1664              	.LVL187:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1665              		.loc 2 35 0
 1666 0012 8068     		ldr	r0, [r0, #8]
 1667              	.LVL188:
 1668 0014 FFF7FEFF 		bl	strlen
 1669              	.LVL189:
 1670 0018 0746     		mov	r7, r0
 1671              	.LVL190:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1672              		.loc 2 36 0
 1673 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 1674              	.LVL191:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 52


 1675              		.loc 2 38 0
 1676 001e 0246     		mov	r2, r0
 1677 0020 B168     		ldr	r1, [r6, #8]
 1678 0022 A01D     		adds	r0, r4, #6
 1679              	.LVL192:
 1680 0024 FFF7FEFF 		bl	memcpy
 1681              	.LVL193:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1682              		.loc 2 39 0
 1683 0028 07F10608 		add	r8, r7, #6
 1684              	.LVL194:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1685              		.loc 2 40 0
 1686 002c F068     		ldr	r0, [r6, #12]
 1687 002e FFF7FEFF 		bl	strlen
 1688              	.LVL195:
 1689 0032 0546     		mov	r5, r0
 1690              	.LVL196:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1691              		.loc 2 41 0
 1692 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1693              		.loc 2 42 0
 1694 0038 0A37     		adds	r7, r7, #10
 1695              	.LVL197:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1696              		.loc 2 43 0
 1697 003a 0246     		mov	r2, r0
 1698 003c F168     		ldr	r1, [r6, #12]
 1699 003e E019     		adds	r0, r4, r7
 1700              	.LVL198:
 1701 0040 FFF7FEFF 		bl	memcpy
 1702              	.LVL199:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1703              		.loc 2 44 0
 1704 0044 2F44     		add	r7, r7, r5
 1705              	.LVL200:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1706              		.loc 2 45 0
 1707 0046 3069     		ldr	r0, [r6, #16]
 1708 0048 FFF7FEFF 		bl	strlen
 1709              	.LVL201:
 1710 004c 0546     		mov	r5, r0
 1711              	.LVL202:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1712              		.loc 2 46 0
 1713 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 1714              		.loc 2 47 0
 1715 0050 0437     		adds	r7, r7, #4
 1716              	.LVL203:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1717              		.loc 2 48 0
 1718 0052 0246     		mov	r2, r0
 1719 0054 3169     		ldr	r1, [r6, #16]
 1720 0056 E019     		adds	r0, r4, r7
 1721              	.LVL204:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 53


 1722 0058 FFF7FEFF 		bl	memcpy
 1723              	.LVL205:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 1724              		.loc 2 49 0
 1725 005c E819     		adds	r0, r5, r7
 1726              	.LVL206:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1727              		.loc 2 54 0
 1728 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1729              		.loc 2 55 0
 1730 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1731              		.loc 2 56 0
 1732 0062 190A     		lsrs	r1, r3, #8
 1733 0064 421C     		adds	r2, r0, #1
 1734 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1735              		.loc 2 57 0
 1736 0068 190C     		lsrs	r1, r3, #16
 1737 006a 821C     		adds	r2, r0, #2
 1738 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1739              		.loc 2 58 0
 1740 006e 1B0E     		lsrs	r3, r3, #24
 1741 0070 C21C     		adds	r2, r0, #3
 1742 0072 A354     		strb	r3, [r4, r2]
 1743              	.LVL207:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 1744              		.loc 2 61 0
 1745 0074 0430     		adds	r0, r0, #4
 1746              	.LVL208:
 1747 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1748              		.cfi_endproc
 1749              	.LFE382:
 1750              		.cantunwind
 1751              		.fnend
 1753              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1754              		.align	1
 1755              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1759              		.fpu fpv4-sp-d16
 1761              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1762              		.fnstart
 1763              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1764              		.loc 4 64 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL209:
 1769 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1770              	.LCFI13:
 1771              		.cfi_def_cfa_offset 24
 1772              		.cfi_offset 4, -24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 54


 1773              		.cfi_offset 5, -20
 1774              		.cfi_offset 6, -16
 1775              		.cfi_offset 7, -12
 1776              		.cfi_offset 8, -8
 1777              		.cfi_offset 14, -4
 1778 0004 0546     		mov	r5, r0
 1779 0006 0C46     		mov	r4, r1
 1780              	.LVL210:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1781              		.loc 4 67 0
 1782 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1783 000a 0B70     		strb	r3, [r1]
 1784              	.LVL211:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1785              		.loc 4 68 0
 1786 000c 0022     		movs	r2, #0
 1787 000e 4A70     		strb	r2, [r1, #1]
 1788              	.LVL212:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1789              		.loc 4 69 0
 1790 0010 8A70     		strb	r2, [r1, #2]
 1791              	.LVL213:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1792              		.loc 4 70 0
 1793 0012 CA70     		strb	r2, [r1, #3]
 1794              	.LVL214:
 1795 0014 0423     		movs	r3, #4
 1796              	.LVL215:
 1797              	.L105:
 1798              	.LBB209:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1799              		.loc 4 71 0 discriminator 3
 1800 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1801 0018 9142     		cmp	r1, r2
 1802 001a 10D9     		bls	.L104
 1803              	.LBB210:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1804              		.loc 4 76 0 discriminator 2
 1805 001c E968     		ldr	r1, [r5, #12]
 1806 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1807              		.loc 4 77 0 discriminator 2
 1808 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1809              		.loc 4 78 0 discriminator 2
 1810 0024 0E0A     		lsrs	r6, r1, #8
 1811 0026 581C     		adds	r0, r3, #1
 1812 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1813              		.loc 4 79 0 discriminator 2
 1814 002a 0E0C     		lsrs	r6, r1, #16
 1815 002c 981C     		adds	r0, r3, #2
 1816 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1817              		.loc 4 80 0 discriminator 2
 1818 0030 090E     		lsrs	r1, r1, #24
 1819 0032 D81C     		adds	r0, r3, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 55


 1820 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1821              		.loc 4 81 0 discriminator 2
 1822 0036 0433     		adds	r3, r3, #4
 1823              	.LVL216:
 1824              	.LBE210:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1825              		.loc 4 71 0 discriminator 2
 1826 0038 0132     		adds	r2, r2, #1
 1827              	.LVL217:
 1828 003a D2B2     		uxtb	r2, r2
 1829              	.LVL218:
 1830 003c EBE7     		b	.L105
 1831              	.L104:
 1832              	.LBE209:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1833              		.loc 4 83 0
 1834 003e 591C     		adds	r1, r3, #1
 1835              	.LVL219:
 1836 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1837              	.LVL220:
 1838 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1839              		.loc 4 84 0
 1840 0044 981C     		adds	r0, r3, #2
 1841              	.LVL221:
 1842 0046 0022     		movs	r2, #0
 1843 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1844              		.loc 4 85 0
 1845 004a D91C     		adds	r1, r3, #3
 1846              	.LVL222:
 1847 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1848              		.loc 4 86 0
 1849 004e 0433     		adds	r3, r3, #4
 1850              	.LVL223:
 1851 0050 6254     		strb	r2, [r4, r1]
 1852              	.LVL224:
 1853              	.L107:
 1854              	.LBB211:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1855              		.loc 4 87 0 discriminator 3
 1856 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1857 0054 9142     		cmp	r1, r2
 1858 0056 10D9     		bls	.L106
 1859              	.LBB212:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1860              		.loc 4 92 0 discriminator 2
 1861 0058 A969     		ldr	r1, [r5, #24]
 1862 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1863              		.loc 4 93 0 discriminator 2
 1864 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1865              		.loc 4 94 0 discriminator 2
 1866 0060 0E0A     		lsrs	r6, r1, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 56


 1867 0062 581C     		adds	r0, r3, #1
 1868 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1869              		.loc 4 95 0 discriminator 2
 1870 0066 0E0C     		lsrs	r6, r1, #16
 1871 0068 981C     		adds	r0, r3, #2
 1872 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1873              		.loc 4 96 0 discriminator 2
 1874 006c 090E     		lsrs	r1, r1, #24
 1875 006e D81C     		adds	r0, r3, #3
 1876 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1877              		.loc 4 97 0 discriminator 2
 1878 0072 0433     		adds	r3, r3, #4
 1879              	.LVL225:
 1880              	.LBE212:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1881              		.loc 4 87 0 discriminator 2
 1882 0074 0132     		adds	r2, r2, #1
 1883              	.LVL226:
 1884 0076 D2B2     		uxtb	r2, r2
 1885              	.LVL227:
 1886 0078 EBE7     		b	.L107
 1887              	.L106:
 1888              	.LBE211:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1889              		.loc 4 99 0
 1890 007a 5A1C     		adds	r2, r3, #1
 1891              	.LVL228:
 1892 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1893 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1894              		.loc 4 100 0
 1895 0080 991C     		adds	r1, r3, #2
 1896              	.LVL229:
 1897 0082 4FF00008 		mov	r8, #0
 1898 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1899              		.loc 4 101 0
 1900 008a DA1C     		adds	r2, r3, #3
 1901              	.LVL230:
 1902 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1903              		.loc 4 102 0
 1904 0090 1E1D     		adds	r6, r3, #4
 1905              	.LVL231:
 1906 0092 04F80280 		strb	r8, [r4, r2]
 1907              	.LVL232:
 1908              	.L109:
 1909              	.LBB213:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1910              		.loc 4 103 0 discriminator 3
 1911 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1912 0098 4345     		cmp	r3, r8
 1913 009a 14D9     		bls	.L103
 1914              	.LBB214:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 57


 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1915              		.loc 4 104 0 discriminator 2
 1916 009c 6B6A     		ldr	r3, [r5, #36]
 1917 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1918 00a2 FFF7FEFF 		bl	strlen
 1919              	.LVL233:
 1920 00a6 0746     		mov	r7, r0
 1921              	.LVL234:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1922              		.loc 4 105 0 discriminator 2
 1923 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1924              		.loc 4 106 0 discriminator 2
 1925 00aa 0436     		adds	r6, r6, #4
 1926              	.LVL235:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1927              		.loc 4 107 0 discriminator 2
 1928 00ac 6B6A     		ldr	r3, [r5, #36]
 1929 00ae 0246     		mov	r2, r0
 1930 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1931 00b4 A019     		adds	r0, r4, r6
 1932              	.LVL236:
 1933 00b6 FFF7FEFF 		bl	memcpy
 1934              	.LVL237:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1935              		.loc 4 108 0 discriminator 2
 1936 00ba 3E44     		add	r6, r6, r7
 1937              	.LVL238:
 1938              	.LBE214:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1939              		.loc 4 103 0 discriminator 2
 1940 00bc 08F10108 		add	r8, r8, #1
 1941              	.LVL239:
 1942 00c0 5FFA88F8 		uxtb	r8, r8
 1943              	.LVL240:
 1944 00c4 E7E7     		b	.L109
 1945              	.L103:
 1946              	.LBE213:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1947              		.loc 4 111 0
 1948 00c6 3046     		mov	r0, r6
 1949 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1950              		.cfi_endproc
 1951              	.LFE394:
 1952              		.cantunwind
 1953              		.fnend
 1955              		.section	.text._ZNK11sensor_msgs10JointState9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs10Joint
 1956              		.align	1
 1957              		.weak	_ZNK11sensor_msgs10JointState9serializeEPh
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1961              		.fpu fpv4-sp-d16
 1963              	_ZNK11sensor_msgs10JointState9serializeEPh:
 1964              		.fnstart
 1965              	.LFB487:
  44:ROSSerial/sensor_msgs/JointState.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 58


 1966              		.loc 7 44 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              	.LVL241:
 1971 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1972              	.LCFI14:
 1973              		.cfi_def_cfa_offset 32
 1974              		.cfi_offset 3, -32
 1975              		.cfi_offset 4, -28
 1976              		.cfi_offset 5, -24
 1977              		.cfi_offset 6, -20
 1978              		.cfi_offset 7, -16
 1979              		.cfi_offset 8, -12
 1980              		.cfi_offset 9, -8
 1981              		.cfi_offset 14, -4
 1982 0004 0646     		mov	r6, r0
 1983 0006 0D46     		mov	r5, r1
 1984              	.LVL242:
 1985              	.LBB230:
 1986              	.LBB231:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1987              		.loc 6 23 0
 1988 0008 8368     		ldr	r3, [r0, #8]
 1989 000a 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1990              		.loc 6 24 0
 1991 000c 8368     		ldr	r3, [r0, #8]
 1992 000e 1B0A     		lsrs	r3, r3, #8
 1993 0010 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1994              		.loc 6 25 0
 1995 0012 4389     		ldrh	r3, [r0, #10]
 1996 0014 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1997              		.loc 6 26 0
 1998 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1999 0018 CB70     		strb	r3, [r1, #3]
 2000              	.LVL243:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 2001              		.loc 6 28 0
 2002 001a C368     		ldr	r3, [r0, #12]
 2003 001c 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 2004              		.loc 6 29 0
 2005 001e C368     		ldr	r3, [r0, #12]
 2006 0020 1B0A     		lsrs	r3, r3, #8
 2007 0022 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 2008              		.loc 6 30 0
 2009 0024 C389     		ldrh	r3, [r0, #14]
 2010 0026 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2011              		.loc 6 31 0
 2012 0028 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 2013 002a CB71     		strb	r3, [r1, #7]
 2014              	.LVL244:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 59


  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 2015              		.loc 6 33 0
 2016 002c 0369     		ldr	r3, [r0, #16]
 2017 002e 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 2018              		.loc 6 34 0
 2019 0030 0369     		ldr	r3, [r0, #16]
 2020 0032 1B0A     		lsrs	r3, r3, #8
 2021 0034 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 2022              		.loc 6 35 0
 2023 0036 438A     		ldrh	r3, [r0, #18]
 2024 0038 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2025              		.loc 6 36 0
 2026 003a C37C     		ldrb	r3, [r0, #19]	@ zero_extendqisi2
 2027 003c CB72     		strb	r3, [r1, #11]
 2028              	.LVL245:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 2029              		.loc 6 38 0
 2030 003e 4069     		ldr	r0, [r0, #20]
 2031              	.LVL246:
 2032 0040 FFF7FEFF 		bl	strlen
 2033              	.LVL247:
 2034 0044 0446     		mov	r4, r0
 2035              	.LVL248:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2036              		.loc 6 39 0
 2037 0046 E860     		str	r0, [r5, #12]	@ unaligned
 2038              	.LVL249:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2039              		.loc 6 41 0
 2040 0048 0246     		mov	r2, r0
 2041 004a 7169     		ldr	r1, [r6, #20]
 2042 004c 05F11000 		add	r0, r5, #16
 2043              	.LVL250:
 2044 0050 FFF7FEFF 		bl	memcpy
 2045              	.LVL251:
  42:ROSSerial/std_msgs/Header.h ****       return offset;
 2046              		.loc 6 42 0
 2047 0054 04F11003 		add	r3, r4, #16
 2048              	.LVL252:
 2049              	.LBE231:
 2050              	.LBE230:
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
 2051              		.loc 7 48 0
 2052 0058 B269     		ldr	r2, [r6, #24]
 2053 005a EA54     		strb	r2, [r5, r3]
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
 2054              		.loc 7 49 0
 2055 005c B369     		ldr	r3, [r6, #24]
 2056 005e 1B0A     		lsrs	r3, r3, #8
 2057 0060 04F11102 		add	r2, r4, #17
 2058 0064 AB54     		strb	r3, [r5, r2]
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
 2059              		.loc 7 50 0
 2060 0066 728B     		ldrh	r2, [r6, #26]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 60


 2061 0068 04F11203 		add	r3, r4, #18
 2062 006c EA54     		strb	r2, [r5, r3]
  51:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2063              		.loc 7 51 0
 2064 006e F27E     		ldrb	r2, [r6, #27]	@ zero_extendqisi2
 2065 0070 04F11303 		add	r3, r4, #19
 2066 0074 EA54     		strb	r2, [r5, r3]
  52:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2067              		.loc 7 52 0
 2068 0076 1434     		adds	r4, r4, #20
 2069              	.LVL253:
 2070              	.LBB232:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2071              		.loc 7 53 0
 2072 0078 4FF00008 		mov	r8, #0
 2073 007c 0AE0     		b	.L115
 2074              	.LVL254:
 2075              	.L113:
 2076              	.LBB233:
  56:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
 2077              		.loc 7 56 0 discriminator 2
 2078 007e 0434     		adds	r4, r4, #4
 2079              	.LVL255:
  57:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
 2080              		.loc 7 57 0 discriminator 2
 2081 0080 336A     		ldr	r3, [r6, #32]
 2082 0082 3A46     		mov	r2, r7
 2083 0084 53F80910 		ldr	r1, [r3, r9]
 2084 0088 2819     		adds	r0, r5, r4
 2085 008a FFF7FEFF 		bl	memcpy
 2086              	.LVL256:
  58:ROSSerial/sensor_msgs/JointState.h ****       }
 2087              		.loc 7 58 0 discriminator 2
 2088 008e 3C44     		add	r4, r4, r7
 2089              	.LVL257:
 2090              	.LBE233:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2091              		.loc 7 53 0 discriminator 2
 2092 0090 08F10108 		add	r8, r8, #1
 2093              	.LVL258:
 2094              	.L115:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2095              		.loc 7 53 0 is_stmt 0 discriminator 3
 2096 0094 B369     		ldr	r3, [r6, #24]
 2097 0096 4345     		cmp	r3, r8
 2098 0098 12D9     		bls	.L112
 2099              	.LBB236:
  54:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
 2100              		.loc 7 54 0 is_stmt 1 discriminator 2
 2101 009a 336A     		ldr	r3, [r6, #32]
 2102 009c 4FEA8809 		lsl	r9, r8, #2
 2103 00a0 53F82800 		ldr	r0, [r3, r8, lsl #2]
 2104 00a4 FFF7FEFF 		bl	strlen
 2105              	.LVL259:
 2106 00a8 0746     		mov	r7, r0
 2107              	.LVL260:
  55:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 61


 2108              		.loc 7 55 0 discriminator 2
 2109 00aa 2046     		mov	r0, r4
 2110              	.LVL261:
 2111              	.LBB234:
 2112              	.LBB235:
 2113              		.file 10 "ROSSerial/ros/msg.h"
   1:ROSSerial/ros/msg.h **** /*
   2:ROSSerial/ros/msg.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/msg.h ****  *
   4:ROSSerial/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/msg.h ****  * All rights reserved.
   6:ROSSerial/ros/msg.h ****  *
   7:ROSSerial/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/msg.h ****  * are met:
  10:ROSSerial/ros/msg.h ****  *
  11:ROSSerial/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/msg.h ****  *    with the distribution.
  17:ROSSerial/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/msg.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/msg.h ****  *
  21:ROSSerial/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/msg.h ****  */
  34:ROSSerial/ros/msg.h **** 
  35:ROSSerial/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:ROSSerial/ros/msg.h **** #define _ROS_MSG_H_
  37:ROSSerial/ros/msg.h **** 
  38:ROSSerial/ros/msg.h **** #include <stdint.h>
  39:ROSSerial/ros/msg.h **** #include <stddef.h>
  40:ROSSerial/ros/msg.h **** 
  41:ROSSerial/ros/msg.h **** namespace ros
  42:ROSSerial/ros/msg.h **** {
  43:ROSSerial/ros/msg.h **** 
  44:ROSSerial/ros/msg.h **** /* Base Message Type */
  45:ROSSerial/ros/msg.h **** class Msg
  46:ROSSerial/ros/msg.h **** {
  47:ROSSerial/ros/msg.h **** public:
  48:ROSSerial/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  49:ROSSerial/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  50:ROSSerial/ros/msg.h ****   virtual const char * getType() = 0;
  51:ROSSerial/ros/msg.h ****   virtual const char * getMD5() = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 62


  52:ROSSerial/ros/msg.h **** 
  53:ROSSerial/ros/msg.h ****   /**
  54:ROSSerial/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  55:ROSSerial/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  56:ROSSerial/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  57:ROSSerial/ros/msg.h ****    *
  58:ROSSerial/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  59:ROSSerial/ros/msg.h ****    * @param[in] f value to serialize.
  60:ROSSerial/ros/msg.h ****    *
  61:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  62:ROSSerial/ros/msg.h ****    *
  63:ROSSerial/ros/msg.h ****    */
  64:ROSSerial/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  65:ROSSerial/ros/msg.h ****   {
  66:ROSSerial/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  67:ROSSerial/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
  68:ROSSerial/ros/msg.h ****     if (exp != 0)
  69:ROSSerial/ros/msg.h ****     {
  70:ROSSerial/ros/msg.h ****       exp += 1023 - 127;
  71:ROSSerial/ros/msg.h ****     }
  72:ROSSerial/ros/msg.h **** 
  73:ROSSerial/ros/msg.h ****     int32_t sig = *val;
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
  81:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  82:ROSSerial/ros/msg.h **** 
  83:ROSSerial/ros/msg.h ****     // Mark negative bit as necessary.
  84:ROSSerial/ros/msg.h ****     if (f < 0)
  85:ROSSerial/ros/msg.h ****     {
  86:ROSSerial/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
  87:ROSSerial/ros/msg.h ****     }
  88:ROSSerial/ros/msg.h **** 
  89:ROSSerial/ros/msg.h ****     return 8;
  90:ROSSerial/ros/msg.h ****   }
  91:ROSSerial/ros/msg.h **** 
  92:ROSSerial/ros/msg.h ****   /**
  93:ROSSerial/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  94:ROSSerial/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  95:ROSSerial/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  96:ROSSerial/ros/msg.h ****    *
  97:ROSSerial/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  98:ROSSerial/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  99:ROSSerial/ros/msg.h ****    *
 100:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 101:ROSSerial/ros/msg.h ****    */
 102:ROSSerial/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 103:ROSSerial/ros/msg.h ****   {
 104:ROSSerial/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 105:ROSSerial/ros/msg.h ****     inbuffer += 3;
 106:ROSSerial/ros/msg.h **** 
 107:ROSSerial/ros/msg.h ****     // Copy truncated mantissa.
 108:ROSSerial/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 63


 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 111:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 112:ROSSerial/ros/msg.h **** 
 113:ROSSerial/ros/msg.h ****     // Copy truncated exponent.
 114:ROSSerial/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 115:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 116:ROSSerial/ros/msg.h ****     if (exp != 0)
 117:ROSSerial/ros/msg.h ****     {
 118:ROSSerial/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 119:ROSSerial/ros/msg.h ****     }
 120:ROSSerial/ros/msg.h **** 
 121:ROSSerial/ros/msg.h ****     // Copy negative sign.
 122:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 123:ROSSerial/ros/msg.h **** 
 124:ROSSerial/ros/msg.h ****     return 8;
 125:ROSSerial/ros/msg.h ****   }
 126:ROSSerial/ros/msg.h **** 
 127:ROSSerial/ros/msg.h ****   // Copy data from variable into a byte array
 128:ROSSerial/ros/msg.h ****   template<typename A, typename V>
 129:ROSSerial/ros/msg.h ****   static void varToArr(A arr, const V var)
 130:ROSSerial/ros/msg.h ****   {
 131:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2114              		.loc 10 131 0 discriminator 2
 2115 00ac 0023     		movs	r3, #0
 2116              	.LVL262:
 2117              	.L114:
 2118              		.loc 10 131 0 is_stmt 0
 2119 00ae 032B     		cmp	r3, #3
 2120 00b0 E5D8     		bhi	.L113
 132:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2121              		.loc 10 132 0 is_stmt 1
 2122 00b2 DA00     		lsls	r2, r3, #3
 2123 00b4 27FA02F2 		lsr	r2, r7, r2
 2124 00b8 C118     		adds	r1, r0, r3
 2125 00ba 6A54     		strb	r2, [r5, r1]
 131:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2126              		.loc 10 131 0
 2127 00bc 0133     		adds	r3, r3, #1
 2128              	.LVL263:
 2129 00be F6E7     		b	.L114
 2130              	.LVL264:
 2131              	.L112:
 2132              	.LBE235:
 2133              	.LBE234:
 2134              	.LBE236:
 2135              	.LBE232:
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
 2136              		.loc 7 60 0
 2137 00c0 736A     		ldr	r3, [r6, #36]
 2138 00c2 2B55     		strb	r3, [r5, r4]
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
 2139              		.loc 7 61 0
 2140 00c4 736A     		ldr	r3, [r6, #36]
 2141 00c6 1B0A     		lsrs	r3, r3, #8
 2142 00c8 621C     		adds	r2, r4, #1
 2143 00ca AB54     		strb	r3, [r5, r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 64


  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
 2144              		.loc 7 62 0
 2145 00cc F28C     		ldrh	r2, [r6, #38]
 2146 00ce A31C     		adds	r3, r4, #2
 2147 00d0 EA54     		strb	r2, [r5, r3]
  63:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2148              		.loc 7 63 0
 2149 00d2 96F82720 		ldrb	r2, [r6, #39]	@ zero_extendqisi2
 2150 00d6 E31C     		adds	r3, r4, #3
 2151 00d8 EA54     		strb	r2, [r5, r3]
  64:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2152              		.loc 7 64 0
 2153 00da 201D     		adds	r0, r4, #4
 2154              	.LVL265:
 2155              	.LBB237:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2156              		.loc 7 65 0
 2157 00dc 0027     		movs	r7, #0
 2158 00de 17E0     		b	.L120
 2159              	.LVL266:
 2160              	.L117:
 2161              	.LBB238:
 2162              	.LBB239:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2163              		.loc 10 74 0
 2164 00e0 0024     		movs	r4, #0
 2165 00e2 1470     		strb	r4, [r2]
 2166              	.LVL267:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2167              		.loc 10 75 0
 2168 00e4 5470     		strb	r4, [r2, #1]
 2169              	.LVL268:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2170              		.loc 10 76 0
 2171 00e6 9470     		strb	r4, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2172              		.loc 10 77 0
 2173 00e8 5C01     		lsls	r4, r3, #5
 2174              	.LVL269:
 2175 00ea D470     		strb	r4, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2176              		.loc 10 78 0
 2177 00ec DC10     		asrs	r4, r3, #3
 2178              	.LVL270:
 2179 00ee 1471     		strb	r4, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2180              		.loc 10 79 0
 2181 00f0 DC12     		asrs	r4, r3, #11
 2182              	.LVL271:
 2183 00f2 5471     		strb	r4, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2184              		.loc 10 80 0
 2185 00f4 C3F3C343 		ubfx	r3, r3, #19, #4
 2186              	.LVL272:
 2187 00f8 43EA0113 		orr	r3, r3, r1, lsl #4
 2188 00fc 9371     		strb	r3, [r2, #6]
 2189              	.LVL273:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 65


  81:ROSSerial/ros/msg.h **** 
 2190              		.loc 10 81 0
 2191 00fe 0909     		lsrs	r1, r1, #4
 2192              	.LVL274:
 2193 0100 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2194              		.loc 10 84 0
 2195 0102 F5EEC07A 		vcmpe.f32	s15, #0
 2196 0106 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2197 010a 13D4     		bmi	.L135
 2198              	.L118:
 2199              	.LVL275:
 2200              	.LBE239:
 2201              	.LBE238:
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2202              		.loc 7 66 0
 2203 010c 0830     		adds	r0, r0, #8
 2204              	.LVL276:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2205              		.loc 7 65 0
 2206 010e 0137     		adds	r7, r7, #1
 2207              	.LVL277:
 2208              	.L120:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2209              		.loc 7 65 0 is_stmt 0 discriminator 3
 2210 0110 736A     		ldr	r3, [r6, #36]
 2211 0112 BB42     		cmp	r3, r7
 2212 0114 12D9     		bls	.L116
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2213              		.loc 7 66 0 is_stmt 1 discriminator 2
 2214 0116 2A18     		adds	r2, r5, r0
 2215 0118 F36A     		ldr	r3, [r6, #44]
 2216 011a 03EB8703 		add	r3, r3, r7, lsl #2
 2217 011e D3ED007A 		vldr.32	s15, [r3]
 2218              	.LVL278:
 2219              	.LBB241:
 2220              	.LBB240:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2221              		.loc 10 67 0 discriminator 2
 2222 0122 17EE903A 		vmov	r3, s15	@ int
 2223 0126 C3F3C751 		ubfx	r1, r3, #23, #8
 2224              	.LVL279:
  68:ROSSerial/ros/msg.h ****     {
 2225              		.loc 10 68 0 discriminator 2
 2226 012a 0029     		cmp	r1, #0
 2227 012c D8D0     		beq	.L117
  70:ROSSerial/ros/msg.h ****     }
 2228              		.loc 10 70 0
 2229 012e 01F56071 		add	r1, r1, #896
 2230              	.LVL280:
 2231 0132 D5E7     		b	.L117
 2232              	.LVL281:
 2233              	.L135:
  86:ROSSerial/ros/msg.h ****     }
 2234              		.loc 10 86 0
 2235 0134 61F07F01 		orn	r1, r1, #127
 2236 0138 D171     		strb	r1, [r2, #7]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 66


 2237 013a E7E7     		b	.L118
 2238              	.LVL282:
 2239              	.L116:
 2240              	.LBE240:
 2241              	.LBE241:
 2242              	.LBE237:
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
 2243              		.loc 7 68 0
 2244 013c 336B     		ldr	r3, [r6, #48]
 2245 013e 2B54     		strb	r3, [r5, r0]
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
 2246              		.loc 7 69 0
 2247 0140 336B     		ldr	r3, [r6, #48]
 2248 0142 1B0A     		lsrs	r3, r3, #8
 2249 0144 421C     		adds	r2, r0, #1
 2250 0146 AB54     		strb	r3, [r5, r2]
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
 2251              		.loc 7 70 0
 2252 0148 728E     		ldrh	r2, [r6, #50]
 2253 014a 831C     		adds	r3, r0, #2
 2254 014c EA54     		strb	r2, [r5, r3]
  71:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2255              		.loc 7 71 0
 2256 014e 96F83320 		ldrb	r2, [r6, #51]	@ zero_extendqisi2
 2257 0152 C31C     		adds	r3, r0, #3
 2258 0154 EA54     		strb	r2, [r5, r3]
  72:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2259              		.loc 7 72 0
 2260 0156 0430     		adds	r0, r0, #4
 2261              	.LVL283:
 2262              	.LBB242:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2263              		.loc 7 73 0
 2264 0158 0024     		movs	r4, #0
 2265 015a 17E0     		b	.L125
 2266              	.LVL284:
 2267              	.L122:
 2268              	.LBB243:
 2269              	.LBB244:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2270              		.loc 10 74 0
 2271 015c 0027     		movs	r7, #0
 2272 015e 1770     		strb	r7, [r2]
 2273              	.LVL285:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2274              		.loc 10 75 0
 2275 0160 5770     		strb	r7, [r2, #1]
 2276              	.LVL286:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2277              		.loc 10 76 0
 2278 0162 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2279              		.loc 10 77 0
 2280 0164 5F01     		lsls	r7, r3, #5
 2281              	.LVL287:
 2282 0166 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 67


 2283              		.loc 10 78 0
 2284 0168 DF10     		asrs	r7, r3, #3
 2285              	.LVL288:
 2286 016a 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2287              		.loc 10 79 0
 2288 016c DF12     		asrs	r7, r3, #11
 2289              	.LVL289:
 2290 016e 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2291              		.loc 10 80 0
 2292 0170 C3F3C343 		ubfx	r3, r3, #19, #4
 2293              	.LVL290:
 2294 0174 43EA0113 		orr	r3, r3, r1, lsl #4
 2295 0178 9371     		strb	r3, [r2, #6]
 2296              	.LVL291:
  81:ROSSerial/ros/msg.h **** 
 2297              		.loc 10 81 0
 2298 017a 0909     		lsrs	r1, r1, #4
 2299              	.LVL292:
 2300 017c D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2301              		.loc 10 84 0
 2302 017e F5EEC07A 		vcmpe.f32	s15, #0
 2303 0182 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2304 0186 13D4     		bmi	.L136
 2305              	.L123:
 2306              	.LVL293:
 2307              	.LBE244:
 2308              	.LBE243:
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2309              		.loc 7 74 0
 2310 0188 0830     		adds	r0, r0, #8
 2311              	.LVL294:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2312              		.loc 7 73 0
 2313 018a 0134     		adds	r4, r4, #1
 2314              	.LVL295:
 2315              	.L125:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2316              		.loc 7 73 0 is_stmt 0 discriminator 3
 2317 018c 336B     		ldr	r3, [r6, #48]
 2318 018e A342     		cmp	r3, r4
 2319 0190 12D9     		bls	.L121
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2320              		.loc 7 74 0 is_stmt 1 discriminator 2
 2321 0192 2A18     		adds	r2, r5, r0
 2322 0194 B36B     		ldr	r3, [r6, #56]
 2323 0196 03EB8403 		add	r3, r3, r4, lsl #2
 2324 019a D3ED007A 		vldr.32	s15, [r3]
 2325              	.LVL296:
 2326              	.LBB246:
 2327              	.LBB245:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2328              		.loc 10 67 0 discriminator 2
 2329 019e 17EE903A 		vmov	r3, s15	@ int
 2330 01a2 C3F3C751 		ubfx	r1, r3, #23, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 68


 2331              	.LVL297:
  68:ROSSerial/ros/msg.h ****     {
 2332              		.loc 10 68 0 discriminator 2
 2333 01a6 0029     		cmp	r1, #0
 2334 01a8 D8D0     		beq	.L122
  70:ROSSerial/ros/msg.h ****     }
 2335              		.loc 10 70 0
 2336 01aa 01F56071 		add	r1, r1, #896
 2337              	.LVL298:
 2338 01ae D5E7     		b	.L122
 2339              	.LVL299:
 2340              	.L136:
  86:ROSSerial/ros/msg.h ****     }
 2341              		.loc 10 86 0
 2342 01b0 61F07F01 		orn	r1, r1, #127
 2343 01b4 D171     		strb	r1, [r2, #7]
 2344 01b6 E7E7     		b	.L123
 2345              	.LVL300:
 2346              	.L121:
 2347              	.LBE245:
 2348              	.LBE246:
 2349              	.LBE242:
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
 2350              		.loc 7 76 0
 2351 01b8 F36B     		ldr	r3, [r6, #60]
 2352 01ba 2B54     		strb	r3, [r5, r0]
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
 2353              		.loc 7 77 0
 2354 01bc F36B     		ldr	r3, [r6, #60]
 2355 01be 1B0A     		lsrs	r3, r3, #8
 2356 01c0 421C     		adds	r2, r0, #1
 2357 01c2 AB54     		strb	r3, [r5, r2]
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
 2358              		.loc 7 78 0
 2359 01c4 F28F     		ldrh	r2, [r6, #62]
 2360 01c6 831C     		adds	r3, r0, #2
 2361 01c8 EA54     		strb	r2, [r5, r3]
  79:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2362              		.loc 7 79 0
 2363 01ca 96F83F20 		ldrb	r2, [r6, #63]	@ zero_extendqisi2
 2364 01ce C31C     		adds	r3, r0, #3
 2365 01d0 EA54     		strb	r2, [r5, r3]
  80:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2366              		.loc 7 80 0
 2367 01d2 0430     		adds	r0, r0, #4
 2368              	.LVL301:
 2369              	.LBB247:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2370              		.loc 7 81 0
 2371 01d4 0024     		movs	r4, #0
 2372              	.LVL302:
 2373 01d6 17E0     		b	.L130
 2374              	.LVL303:
 2375              	.L127:
 2376              	.LBB248:
 2377              	.LBB249:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 69


 2378              		.loc 10 74 0
 2379 01d8 0027     		movs	r7, #0
 2380 01da 1770     		strb	r7, [r2]
 2381              	.LVL304:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2382              		.loc 10 75 0
 2383 01dc 5770     		strb	r7, [r2, #1]
 2384              	.LVL305:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2385              		.loc 10 76 0
 2386 01de 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2387              		.loc 10 77 0
 2388 01e0 5F01     		lsls	r7, r3, #5
 2389              	.LVL306:
 2390 01e2 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2391              		.loc 10 78 0
 2392 01e4 DF10     		asrs	r7, r3, #3
 2393              	.LVL307:
 2394 01e6 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2395              		.loc 10 79 0
 2396 01e8 DF12     		asrs	r7, r3, #11
 2397              	.LVL308:
 2398 01ea 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2399              		.loc 10 80 0
 2400 01ec C3F3C343 		ubfx	r3, r3, #19, #4
 2401              	.LVL309:
 2402 01f0 43EA0113 		orr	r3, r3, r1, lsl #4
 2403 01f4 9371     		strb	r3, [r2, #6]
 2404              	.LVL310:
  81:ROSSerial/ros/msg.h **** 
 2405              		.loc 10 81 0
 2406 01f6 0909     		lsrs	r1, r1, #4
 2407              	.LVL311:
 2408 01f8 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2409              		.loc 10 84 0
 2410 01fa F5EEC07A 		vcmpe.f32	s15, #0
 2411 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2412 0202 13D4     		bmi	.L137
 2413              	.L128:
 2414              	.LVL312:
 2415              	.LBE249:
 2416              	.LBE248:
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2417              		.loc 7 82 0
 2418 0204 0830     		adds	r0, r0, #8
 2419              	.LVL313:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2420              		.loc 7 81 0
 2421 0206 0134     		adds	r4, r4, #1
 2422              	.LVL314:
 2423              	.L130:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 70


 2424              		.loc 7 81 0 is_stmt 0 discriminator 3
 2425 0208 F36B     		ldr	r3, [r6, #60]
 2426 020a A342     		cmp	r3, r4
 2427 020c 12D9     		bls	.L111
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2428              		.loc 7 82 0 is_stmt 1 discriminator 2
 2429 020e 2A18     		adds	r2, r5, r0
 2430 0210 736C     		ldr	r3, [r6, #68]
 2431 0212 03EB8403 		add	r3, r3, r4, lsl #2
 2432 0216 D3ED007A 		vldr.32	s15, [r3]
 2433              	.LVL315:
 2434              	.LBB251:
 2435              	.LBB250:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2436              		.loc 10 67 0 discriminator 2
 2437 021a 17EE903A 		vmov	r3, s15	@ int
 2438 021e C3F3C751 		ubfx	r1, r3, #23, #8
 2439              	.LVL316:
  68:ROSSerial/ros/msg.h ****     {
 2440              		.loc 10 68 0 discriminator 2
 2441 0222 0029     		cmp	r1, #0
 2442 0224 D8D0     		beq	.L127
  70:ROSSerial/ros/msg.h ****     }
 2443              		.loc 10 70 0
 2444 0226 01F56071 		add	r1, r1, #896
 2445              	.LVL317:
 2446 022a D5E7     		b	.L127
 2447              	.LVL318:
 2448              	.L137:
  86:ROSSerial/ros/msg.h ****     }
 2449              		.loc 10 86 0
 2450 022c 61F07F01 		orn	r1, r1, #127
 2451 0230 D171     		strb	r1, [r2, #7]
 2452 0232 E7E7     		b	.L128
 2453              	.LVL319:
 2454              	.L111:
 2455              	.LBE250:
 2456              	.LBE251:
 2457              	.LBE247:
  85:ROSSerial/sensor_msgs/JointState.h **** 
 2458              		.loc 7 85 0
 2459 0234 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2460              		.cfi_endproc
 2461              	.LFE487:
 2462              		.cantunwind
 2463              		.fnend
 2465              		.section	.text._ZN11sensor_msgs10JointState11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs10Join
 2466              		.align	1
 2467              		.weak	_ZN11sensor_msgs10JointState11deserializeEPh
 2468              		.syntax unified
 2469              		.thumb
 2470              		.thumb_func
 2471              		.fpu fpv4-sp-d16
 2473              	_ZN11sensor_msgs10JointState11deserializeEPh:
 2474              		.fnstart
 2475              	.LFB488:
  87:ROSSerial/sensor_msgs/JointState.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 71


 2476              		.loc 7 87 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
 2480              	.LVL320:
 2481 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2482              	.LCFI15:
 2483              		.cfi_def_cfa_offset 24
 2484              		.cfi_offset 3, -24
 2485              		.cfi_offset 4, -20
 2486              		.cfi_offset 5, -16
 2487              		.cfi_offset 6, -12
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 0446     		mov	r4, r0
 2491 0004 0D46     		mov	r5, r1
 2492              	.LVL321:
  90:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 2493              		.loc 7 90 0
 2494 0006 021D     		adds	r2, r0, #4
 2495              	.LVL322:
 2496              	.LBB270:
 2497              	.LBB271:
  49:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2498              		.loc 6 49 0
 2499 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2500 000a 5360     		str	r3, [r2, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2501              		.loc 6 50 0
 2502 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 2503              	.LVL323:
 2504 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 2505 0012 5360     		str	r3, [r2, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2506              		.loc 6 51 0
 2507 0014 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2508 0016 43EA0143 		orr	r3, r3, r1, lsl #16
 2509 001a 5360     		str	r3, [r2, #4]
  52:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2510              		.loc 6 52 0
 2511 001c E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 2512 001e 43EA0163 		orr	r3, r3, r1, lsl #24
 2513 0022 5360     		str	r3, [r2, #4]
 2514              	.LVL324:
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2515              		.loc 6 54 0
 2516 0024 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2517 0026 9360     		str	r3, [r2, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2518              		.loc 6 55 0
 2519 0028 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 2520 002a 43EA0123 		orr	r3, r3, r1, lsl #8
 2521 002e 9360     		str	r3, [r2, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2522              		.loc 6 56 0
 2523 0030 A979     		ldrb	r1, [r5, #6]	@ zero_extendqisi2
 2524 0032 43EA0143 		orr	r3, r3, r1, lsl #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 72


 2525 0036 9360     		str	r3, [r2, #8]
  57:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2526              		.loc 6 57 0
 2527 0038 E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 2528 003a 43EA0163 		orr	r3, r3, r1, lsl #24
 2529 003e 9360     		str	r3, [r2, #8]
 2530              	.LVL325:
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2531              		.loc 6 59 0
 2532 0040 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2533 0042 D360     		str	r3, [r2, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2534              		.loc 6 60 0
 2535 0044 697A     		ldrb	r1, [r5, #9]	@ zero_extendqisi2
 2536 0046 43EA0123 		orr	r3, r3, r1, lsl #8
 2537 004a D360     		str	r3, [r2, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2538              		.loc 6 61 0
 2539 004c A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 2540 004e 43EA0143 		orr	r3, r3, r1, lsl #16
 2541 0052 D360     		str	r3, [r2, #12]
  62:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2542              		.loc 6 62 0
 2543 0054 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 2544 0056 43EA0163 		orr	r3, r3, r1, lsl #24
 2545 005a D360     		str	r3, [r2, #12]
 2546              	.LVL326:
  65:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2547              		.loc 6 65 0
 2548 005c EF68     		ldr	r7, [r5, #12]	@ unaligned
 2549              	.LVL327:
 2550              	.LBB272:
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2551              		.loc 6 67 0
 2552 005e 1023     		movs	r3, #16
 2553              	.LVL328:
 2554              	.L140:
 2555 0060 07F11006 		add	r6, r7, #16
 2556 0064 9E42     		cmp	r6, r3
 2557 0066 04D9     		bls	.L139
  68:ROSSerial/std_msgs/Header.h ****       }
 2558              		.loc 6 68 0
 2559 0068 591E     		subs	r1, r3, #1
 2560 006a E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 2561 006c 6854     		strb	r0, [r5, r1]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2562              		.loc 6 67 0
 2563 006e 0133     		adds	r3, r3, #1
 2564              	.LVL329:
 2565 0070 F6E7     		b	.L140
 2566              	.L139:
 2567              	.LBE272:
  70:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2568              		.loc 6 70 0
 2569 0072 0F37     		adds	r7, r7, #15
 2570              	.LVL330:
 2571 0074 0023     		movs	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 73


 2572              	.LVL331:
 2573 0076 EB55     		strb	r3, [r5, r7]
  71:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2574              		.loc 6 71 0
 2575 0078 05F10F03 		add	r3, r5, #15
 2576 007c 1361     		str	r3, [r2, #16]
 2577              	.LVL332:
 2578              	.LBE271:
 2579              	.LBE270:
  91:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2580              		.loc 7 91 0
 2581 007e AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2582              	.LVL333:
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2583              		.loc 7 92 0
 2584 0080 731C     		adds	r3, r6, #1
 2585 0082 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2586 0084 47EA0327 		orr	r7, r7, r3, lsl #8
 2587              	.LVL334:
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2588              		.loc 7 93 0
 2589 0088 B31C     		adds	r3, r6, #2
 2590 008a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2591 008c 47EA0347 		orr	r7, r7, r3, lsl #16
 2592              	.LVL335:
  94:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2593              		.loc 7 94 0
 2594 0090 F31C     		adds	r3, r6, #3
 2595 0092 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2596 0094 47EA0367 		orr	r7, r7, r3, lsl #24
 2597              	.LVL336:
  95:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
 2598              		.loc 7 95 0
 2599 0098 0436     		adds	r6, r6, #4
 2600              	.LVL337:
  96:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
 2601              		.loc 7 96 0
 2602 009a A369     		ldr	r3, [r4, #24]
 2603 009c BB42     		cmp	r3, r7
 2604 009e 02D3     		bcc	.L161
 2605              	.L141:
  98:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2606              		.loc 7 98 0
 2607 00a0 A761     		str	r7, [r4, #24]
 2608              	.LVL338:
 2609              	.LBB273:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2610              		.loc 7 99 0
 2611 00a2 0020     		movs	r0, #0
 2612 00a4 1AE0     		b	.L147
 2613              	.LVL339:
 2614              	.L161:
 2615              	.LBE273:
  97:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
 2616              		.loc 7 97 0
 2617 00a6 B900     		lsls	r1, r7, #2
 2618 00a8 206A     		ldr	r0, [r4, #32]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 74


 2619 00aa FFF7FEFF 		bl	realloc
 2620              	.LVL340:
 2621 00ae 2062     		str	r0, [r4, #32]
 2622 00b0 F6E7     		b	.L141
 2623              	.LVL341:
 2624              	.L143:
 2625              	.LBB280:
 2626              	.LBB274:
 102:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 2627              		.loc 7 102 0
 2628 00b2 0436     		adds	r6, r6, #4
 2629              	.LVL342:
 2630              	.LBB275:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2631              		.loc 7 103 0
 2632 00b4 3346     		mov	r3, r6
 2633              	.LVL343:
 2634              	.L146:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2635              		.loc 7 103 0 is_stmt 0 discriminator 3
 2636 00b6 B118     		adds	r1, r6, r2
 2637 00b8 9942     		cmp	r1, r3
 2638 00ba 04D9     		bls	.L145
 104:ROSSerial/sensor_msgs/JointState.h ****       }
 2639              		.loc 7 104 0 is_stmt 1 discriminator 2
 2640 00bc 591E     		subs	r1, r3, #1
 2641 00be EF5C     		ldrb	r7, [r5, r3]	@ zero_extendqisi2
 2642 00c0 6F54     		strb	r7, [r5, r1]
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2643              		.loc 7 103 0 discriminator 2
 2644 00c2 0133     		adds	r3, r3, #1
 2645              	.LVL344:
 2646 00c4 F7E7     		b	.L146
 2647              	.L145:
 2648              	.LBE275:
 106:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 2649              		.loc 7 106 0 discriminator 2
 2650 00c6 4B1E     		subs	r3, r1, #1
 2651              	.LVL345:
 2652 00c8 0022     		movs	r2, #0
 2653              	.LVL346:
 2654 00ca EA54     		strb	r2, [r5, r3]
 107:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 2655              		.loc 7 107 0 discriminator 2
 2656 00cc 013E     		subs	r6, r6, #1
 2657 00ce AB19     		adds	r3, r5, r6
 2658 00d0 E361     		str	r3, [r4, #28]
 108:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 2659              		.loc 7 108 0 discriminator 2
 2660 00d2 0E46     		mov	r6, r1
 2661              	.LVL347:
 109:ROSSerial/sensor_msgs/JointState.h ****       }
 2662              		.loc 7 109 0 discriminator 2
 2663 00d4 226A     		ldr	r2, [r4, #32]
 2664 00d6 42F82030 		str	r3, [r2, r0, lsl #2]	@ unaligned
 2665              	.LBE274:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 75


 2666              		.loc 7 99 0 discriminator 2
 2667 00da 0130     		adds	r0, r0, #1
 2668              	.LVL348:
 2669              	.L147:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2670              		.loc 7 99 0 is_stmt 0 discriminator 1
 2671 00dc A369     		ldr	r3, [r4, #24]
 2672 00de 8342     		cmp	r3, r0
 2673 00e0 0CD9     		bls	.L142
 2674              	.LBB279:
 101:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2675              		.loc 7 101 0 is_stmt 1
 2676 00e2 B446     		mov	ip, r6
 2677              	.LVL349:
 2678              	.LBB276:
 2679              	.LBB277:
 133:ROSSerial/ros/msg.h ****   }
 134:ROSSerial/ros/msg.h **** 
 135:ROSSerial/ros/msg.h ****   // Copy data from a byte array into variable
 136:ROSSerial/ros/msg.h ****   template<typename V, typename A>
 137:ROSSerial/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 138:ROSSerial/ros/msg.h ****   {
 139:ROSSerial/ros/msg.h ****     var = 0;
 2680              		.loc 10 139 0
 2681 00e4 0022     		movs	r2, #0
 2682              	.LBB278:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2683              		.loc 10 140 0
 2684 00e6 1346     		mov	r3, r2
 2685              	.LVL350:
 2686              	.L144:
 2687 00e8 032B     		cmp	r3, #3
 2688 00ea E2D8     		bhi	.L143
 141:ROSSerial/ros/msg.h ****       var |= (arr[i] << (8 * i));
 2689              		.loc 10 141 0
 2690 00ec 05EB0C01 		add	r1, r5, ip
 2691 00f0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 2692 00f2 DF00     		lsls	r7, r3, #3
 2693 00f4 B940     		lsls	r1, r1, r7
 2694 00f6 0A43     		orrs	r2, r2, r1
 2695              	.LVL351:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2696              		.loc 10 140 0
 2697 00f8 0133     		adds	r3, r3, #1
 2698              	.LVL352:
 2699 00fa F5E7     		b	.L144
 2700              	.LVL353:
 2701              	.L142:
 2702              	.LBE278:
 2703              	.LBE277:
 2704              	.LBE276:
 2705              	.LBE279:
 2706              	.LBE280:
 111:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2707              		.loc 7 111 0
 2708 00fc AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2709              	.LVL354:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 76


 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2710              		.loc 7 112 0
 2711 00fe 731C     		adds	r3, r6, #1
 2712 0100 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2713 0102 47EA0327 		orr	r7, r7, r3, lsl #8
 2714              	.LVL355:
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2715              		.loc 7 113 0
 2716 0106 B31C     		adds	r3, r6, #2
 2717 0108 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2718 010a 47EA0347 		orr	r7, r7, r3, lsl #16
 2719              	.LVL356:
 114:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2720              		.loc 7 114 0
 2721 010e F31C     		adds	r3, r6, #3
 2722 0110 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2723 0112 47EA0367 		orr	r7, r7, r3, lsl #24
 2724              	.LVL357:
 115:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 2725              		.loc 7 115 0
 2726 0116 0436     		adds	r6, r6, #4
 2727              	.LVL358:
 116:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 2728              		.loc 7 116 0
 2729 0118 636A     		ldr	r3, [r4, #36]
 2730 011a BB42     		cmp	r3, r7
 2731 011c 02D3     		bcc	.L162
 2732              	.LVL359:
 2733              	.L148:
 118:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2734              		.loc 7 118 0
 2735 011e 6762     		str	r7, [r4, #36]
 2736              	.LVL360:
 2737              	.LBB281:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2738              		.loc 7 119 0
 2739 0120 0020     		movs	r0, #0
 2740 0122 12E0     		b	.L151
 2741              	.LVL361:
 2742              	.L162:
 2743              	.LBE281:
 117:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 2744              		.loc 7 117 0
 2745 0124 B900     		lsls	r1, r7, #2
 2746 0126 E06A     		ldr	r0, [r4, #44]
 2747              	.LVL362:
 2748 0128 FFF7FEFF 		bl	realloc
 2749              	.LVL363:
 2750 012c E062     		str	r0, [r4, #44]
 2751 012e F6E7     		b	.L148
 2752              	.LVL364:
 2753              	.L150:
 2754              	.LBB286:
 2755              	.LBB282:
 2756              	.LBB283:
 122:ROSSerial/ros/msg.h **** 
 2757              		.loc 10 122 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 77


 2758 0130 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2759 0132 1B06     		lsls	r3, r3, #24
 2760 0134 03F00043 		and	r3, r3, #-2147483648
 2761 0138 A26A     		ldr	r2, [r4, #40]
 2762 013a 1343     		orrs	r3, r3, r2
 2763 013c A362     		str	r3, [r4, #40]
 2764              	.LVL365:
 2765              	.LBE283:
 2766              	.LBE282:
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2767              		.loc 7 120 0
 2768 013e 0836     		adds	r6, r6, #8
 2769              	.LVL366:
 121:ROSSerial/sensor_msgs/JointState.h ****       }
 2770              		.loc 7 121 0
 2771 0140 E36A     		ldr	r3, [r4, #44]
 2772 0142 A26A     		ldr	r2, [r4, #40]	@ unaligned
 2773 0144 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2774              		.loc 7 119 0
 2775 0148 0130     		adds	r0, r0, #1
 2776              	.LVL367:
 2777              	.L151:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2778              		.loc 7 119 0 is_stmt 0 discriminator 3
 2779 014a 636A     		ldr	r3, [r4, #36]
 2780 014c 8342     		cmp	r3, r0
 2781 014e 1FD9     		bls	.L149
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2782              		.loc 7 120 0 is_stmt 1 discriminator 2
 2783 0150 A919     		adds	r1, r5, r6
 2784              	.LVL368:
 2785              	.LBB285:
 2786              	.LBB284:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2787              		.loc 10 108 0 discriminator 2
 2788 0152 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2789 0154 5B09     		lsrs	r3, r3, #5
 2790 0156 A362     		str	r3, [r4, #40]
 2791              	.LVL369:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2792              		.loc 10 109 0 discriminator 2
 2793 0158 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2794 015a 43EAC203 		orr	r3, r3, r2, lsl #3
 2795 015e A362     		str	r3, [r4, #40]
 2796              	.LVL370:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2797              		.loc 10 110 0 discriminator 2
 2798 0160 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2799 0162 43EAC223 		orr	r3, r3, r2, lsl #11
 2800 0166 A362     		str	r3, [r4, #40]
 111:ROSSerial/ros/msg.h **** 
 2801              		.loc 10 111 0 discriminator 2
 2802 0168 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2803 016a D204     		lsls	r2, r2, #19
 2804 016c 02F4F002 		and	r2, r2, #7864320
 2805 0170 1343     		orrs	r3, r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 78


 2806 0172 A362     		str	r3, [r4, #40]
 2807              	.LVL371:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2808              		.loc 10 114 0 discriminator 2
 2809 0174 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2810              	.LVL372:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2811              		.loc 10 115 0 discriminator 2
 2812 0176 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2813 0178 1201     		lsls	r2, r2, #4
 2814 017a 02F4FE62 		and	r2, r2, #2032
 2815              	.LVL373:
 116:ROSSerial/ros/msg.h ****     {
 2816              		.loc 10 116 0 discriminator 2
 2817 017e 52EA1712 		orrs	r2, r2, r7, lsr #4
 2818              	.LVL374:
 2819 0182 D5D0     		beq	.L150
 118:ROSSerial/ros/msg.h ****     }
 2820              		.loc 10 118 0
 2821 0184 A2F56072 		sub	r2, r2, #896
 2822              	.LVL375:
 2823 0188 43EAC253 		orr	r3, r3, r2, lsl #23
 2824 018c A362     		str	r3, [r4, #40]
 2825 018e CFE7     		b	.L150
 2826              	.LVL376:
 2827              	.L149:
 2828              	.LBE284:
 2829              	.LBE285:
 2830              	.LBE286:
 123:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2831              		.loc 7 123 0
 2832 0190 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2833              	.LVL377:
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2834              		.loc 7 124 0
 2835 0192 731C     		adds	r3, r6, #1
 2836 0194 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2837 0196 47EA0327 		orr	r7, r7, r3, lsl #8
 2838              	.LVL378:
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2839              		.loc 7 125 0
 2840 019a B31C     		adds	r3, r6, #2
 2841 019c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2842 019e 47EA0347 		orr	r7, r7, r3, lsl #16
 2843              	.LVL379:
 126:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2844              		.loc 7 126 0
 2845 01a2 F31C     		adds	r3, r6, #3
 2846 01a4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2847 01a6 47EA0367 		orr	r7, r7, r3, lsl #24
 2848              	.LVL380:
 127:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 2849              		.loc 7 127 0
 2850 01aa 0436     		adds	r6, r6, #4
 2851              	.LVL381:
 128:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 2852              		.loc 7 128 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 79


 2853 01ac 236B     		ldr	r3, [r4, #48]
 2854 01ae BB42     		cmp	r3, r7
 2855 01b0 02D3     		bcc	.L163
 2856              	.LVL382:
 2857              	.L152:
 130:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2858              		.loc 7 130 0
 2859 01b2 2763     		str	r7, [r4, #48]
 2860              	.LVL383:
 2861              	.LBB287:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2862              		.loc 7 131 0
 2863 01b4 0020     		movs	r0, #0
 2864 01b6 12E0     		b	.L155
 2865              	.LVL384:
 2866              	.L163:
 2867              	.LBE287:
 129:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 2868              		.loc 7 129 0
 2869 01b8 B900     		lsls	r1, r7, #2
 2870 01ba A06B     		ldr	r0, [r4, #56]
 2871              	.LVL385:
 2872 01bc FFF7FEFF 		bl	realloc
 2873              	.LVL386:
 2874 01c0 A063     		str	r0, [r4, #56]
 2875 01c2 F6E7     		b	.L152
 2876              	.LVL387:
 2877              	.L154:
 2878              	.LBB292:
 2879              	.LBB288:
 2880              	.LBB289:
 122:ROSSerial/ros/msg.h **** 
 2881              		.loc 10 122 0
 2882 01c4 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2883 01c6 1B06     		lsls	r3, r3, #24
 2884 01c8 03F00043 		and	r3, r3, #-2147483648
 2885 01cc 626B     		ldr	r2, [r4, #52]
 2886 01ce 1343     		orrs	r3, r3, r2
 2887 01d0 6363     		str	r3, [r4, #52]
 2888              	.LVL388:
 2889              	.LBE289:
 2890              	.LBE288:
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2891              		.loc 7 132 0
 2892 01d2 0836     		adds	r6, r6, #8
 2893              	.LVL389:
 133:ROSSerial/sensor_msgs/JointState.h ****       }
 2894              		.loc 7 133 0
 2895 01d4 A36B     		ldr	r3, [r4, #56]
 2896 01d6 626B     		ldr	r2, [r4, #52]	@ unaligned
 2897 01d8 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2898              		.loc 7 131 0
 2899 01dc 0130     		adds	r0, r0, #1
 2900              	.LVL390:
 2901              	.L155:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 80


 2902              		.loc 7 131 0 is_stmt 0 discriminator 3
 2903 01de 236B     		ldr	r3, [r4, #48]
 2904 01e0 8342     		cmp	r3, r0
 2905 01e2 1FD9     		bls	.L153
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2906              		.loc 7 132 0 is_stmt 1 discriminator 2
 2907 01e4 A919     		adds	r1, r5, r6
 2908              	.LVL391:
 2909              	.LBB291:
 2910              	.LBB290:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2911              		.loc 10 108 0 discriminator 2
 2912 01e6 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2913 01e8 5B09     		lsrs	r3, r3, #5
 2914 01ea 6363     		str	r3, [r4, #52]
 2915              	.LVL392:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2916              		.loc 10 109 0 discriminator 2
 2917 01ec 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2918 01ee 43EAC203 		orr	r3, r3, r2, lsl #3
 2919 01f2 6363     		str	r3, [r4, #52]
 2920              	.LVL393:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2921              		.loc 10 110 0 discriminator 2
 2922 01f4 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2923 01f6 43EAC223 		orr	r3, r3, r2, lsl #11
 2924 01fa 6363     		str	r3, [r4, #52]
 111:ROSSerial/ros/msg.h **** 
 2925              		.loc 10 111 0 discriminator 2
 2926 01fc 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2927 01fe D204     		lsls	r2, r2, #19
 2928 0200 02F4F002 		and	r2, r2, #7864320
 2929 0204 1343     		orrs	r3, r3, r2
 2930 0206 6363     		str	r3, [r4, #52]
 2931              	.LVL394:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2932              		.loc 10 114 0 discriminator 2
 2933 0208 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2934              	.LVL395:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2935              		.loc 10 115 0 discriminator 2
 2936 020a CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2937 020c 1201     		lsls	r2, r2, #4
 2938 020e 02F4FE62 		and	r2, r2, #2032
 2939              	.LVL396:
 116:ROSSerial/ros/msg.h ****     {
 2940              		.loc 10 116 0 discriminator 2
 2941 0212 52EA1712 		orrs	r2, r2, r7, lsr #4
 2942              	.LVL397:
 2943 0216 D5D0     		beq	.L154
 118:ROSSerial/ros/msg.h ****     }
 2944              		.loc 10 118 0
 2945 0218 A2F56072 		sub	r2, r2, #896
 2946              	.LVL398:
 2947 021c 43EAC253 		orr	r3, r3, r2, lsl #23
 2948 0220 6363     		str	r3, [r4, #52]
 2949 0222 CFE7     		b	.L154
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 81


 2950              	.LVL399:
 2951              	.L153:
 2952              	.LBE290:
 2953              	.LBE291:
 2954              	.LBE292:
 135:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2955              		.loc 7 135 0
 2956 0224 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2957              	.LVL400:
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2958              		.loc 7 136 0
 2959 0226 731C     		adds	r3, r6, #1
 2960 0228 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2961 022a 47EA0327 		orr	r7, r7, r3, lsl #8
 2962              	.LVL401:
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2963              		.loc 7 137 0
 2964 022e B31C     		adds	r3, r6, #2
 2965 0230 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2966 0232 47EA0347 		orr	r7, r7, r3, lsl #16
 2967              	.LVL402:
 138:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2968              		.loc 7 138 0
 2969 0236 F31C     		adds	r3, r6, #3
 2970 0238 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2971 023a 47EA0367 		orr	r7, r7, r3, lsl #24
 2972              	.LVL403:
 139:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 2973              		.loc 7 139 0
 2974 023e 0436     		adds	r6, r6, #4
 2975              	.LVL404:
 140:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 2976              		.loc 7 140 0
 2977 0240 E36B     		ldr	r3, [r4, #60]
 2978 0242 BB42     		cmp	r3, r7
 2979 0244 02D3     		bcc	.L164
 2980              	.LVL405:
 2981              	.L156:
 142:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2982              		.loc 7 142 0
 2983 0246 E763     		str	r7, [r4, #60]
 2984              	.LVL406:
 2985              	.LBB293:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2986              		.loc 7 143 0
 2987 0248 0020     		movs	r0, #0
 2988 024a 12E0     		b	.L159
 2989              	.LVL407:
 2990              	.L164:
 2991              	.LBE293:
 141:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 2992              		.loc 7 141 0
 2993 024c B900     		lsls	r1, r7, #2
 2994 024e 606C     		ldr	r0, [r4, #68]
 2995              	.LVL408:
 2996 0250 FFF7FEFF 		bl	realloc
 2997              	.LVL409:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 82


 2998 0254 6064     		str	r0, [r4, #68]
 2999 0256 F6E7     		b	.L156
 3000              	.LVL410:
 3001              	.L158:
 3002              	.LBB298:
 3003              	.LBB294:
 3004              	.LBB295:
 122:ROSSerial/ros/msg.h **** 
 3005              		.loc 10 122 0
 3006 0258 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 3007 025a 1B06     		lsls	r3, r3, #24
 3008 025c 03F00043 		and	r3, r3, #-2147483648
 3009 0260 226C     		ldr	r2, [r4, #64]
 3010 0262 1343     		orrs	r3, r3, r2
 3011 0264 2364     		str	r3, [r4, #64]
 3012              	.LVL411:
 3013              	.LBE295:
 3014              	.LBE294:
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3015              		.loc 7 144 0
 3016 0266 0836     		adds	r6, r6, #8
 3017              	.LVL412:
 145:ROSSerial/sensor_msgs/JointState.h ****       }
 3018              		.loc 7 145 0
 3019 0268 636C     		ldr	r3, [r4, #68]
 3020 026a 226C     		ldr	r2, [r4, #64]	@ unaligned
 3021 026c 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3022              		.loc 7 143 0
 3023 0270 0130     		adds	r0, r0, #1
 3024              	.LVL413:
 3025              	.L159:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3026              		.loc 7 143 0 is_stmt 0 discriminator 3
 3027 0272 E36B     		ldr	r3, [r4, #60]
 3028 0274 8342     		cmp	r3, r0
 3029 0276 1FD9     		bls	.L138
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3030              		.loc 7 144 0 is_stmt 1 discriminator 2
 3031 0278 A919     		adds	r1, r5, r6
 3032              	.LVL414:
 3033              	.LBB297:
 3034              	.LBB296:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3035              		.loc 10 108 0 discriminator 2
 3036 027a CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 3037 027c 5B09     		lsrs	r3, r3, #5
 3038 027e 2364     		str	r3, [r4, #64]
 3039              	.LVL415:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3040              		.loc 10 109 0 discriminator 2
 3041 0280 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 3042 0282 43EAC203 		orr	r3, r3, r2, lsl #3
 3043 0286 2364     		str	r3, [r4, #64]
 3044              	.LVL416:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3045              		.loc 10 110 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 83


 3046 0288 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 3047 028a 43EAC223 		orr	r3, r3, r2, lsl #11
 3048 028e 2364     		str	r3, [r4, #64]
 111:ROSSerial/ros/msg.h **** 
 3049              		.loc 10 111 0 discriminator 2
 3050 0290 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 3051 0292 D204     		lsls	r2, r2, #19
 3052 0294 02F4F002 		and	r2, r2, #7864320
 3053 0298 1343     		orrs	r3, r3, r2
 3054 029a 2364     		str	r3, [r4, #64]
 3055              	.LVL417:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3056              		.loc 10 114 0 discriminator 2
 3057 029c 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 3058              	.LVL418:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 3059              		.loc 10 115 0 discriminator 2
 3060 029e CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 3061 02a0 1201     		lsls	r2, r2, #4
 3062 02a2 02F4FE62 		and	r2, r2, #2032
 3063              	.LVL419:
 116:ROSSerial/ros/msg.h ****     {
 3064              		.loc 10 116 0 discriminator 2
 3065 02a6 52EA1712 		orrs	r2, r2, r7, lsr #4
 3066              	.LVL420:
 3067 02aa D5D0     		beq	.L158
 118:ROSSerial/ros/msg.h ****     }
 3068              		.loc 10 118 0
 3069 02ac A2F56072 		sub	r2, r2, #896
 3070              	.LVL421:
 3071 02b0 43EAC253 		orr	r3, r3, r2, lsl #23
 3072 02b4 2364     		str	r3, [r4, #64]
 3073 02b6 CFE7     		b	.L158
 3074              	.LVL422:
 3075              	.L138:
 3076              	.LBE296:
 3077              	.LBE297:
 3078              	.LBE298:
 148:ROSSerial/sensor_msgs/JointState.h **** 
 3079              		.loc 7 148 0
 3080 02b8 3046     		mov	r0, r6
 3081              	.LVL423:
 3082 02ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3083              		.cfi_endproc
 3084              	.LFE488:
 3085              		.cantunwind
 3086              		.fnend
 3088              		.section	.text.ros_init,"ax",%progbits
 3089              		.align	1
 3090              		.global	ros_init
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv4-sp-d16
 3096              	ros_init:
 3097              		.fnstart
 3098              	.LFB491:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 84


  35:./Src/ROS_main.cpp ****     nh.initNode();
 3099              		.loc 8 35 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 80
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3104              		.save {r4, r5, r6, r7, r8, lr}
 3105              	.LCFI16:
 3106              		.cfi_def_cfa_offset 24
 3107              		.cfi_offset 4, -24
 3108              		.cfi_offset 5, -20
 3109              		.cfi_offset 6, -16
 3110              		.cfi_offset 7, -12
 3111              		.cfi_offset 8, -8
 3112              		.cfi_offset 14, -4
 3113              		.pad #80
 3114 0004 94B0     		sub	sp, sp, #80
 3115              	.LCFI17:
 3116              		.cfi_def_cfa_offset 104
 3117              	.LVL424:
 3118              	.LBB322:
 3119              	.LBB323:
 3120              	.LBB324:
 3121              	.LBB325:
 3122              		.file 11 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 85


  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "stm32f1xx_hal.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** #include "setup.h"
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern UART_HandleTypeDef huart2; 
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** extern uint8_t g_RxBuf[];
  45:ROSSerial/AT32hardware.h **** extern uint8_t byte;		/* receive byte */
  46:ROSSerial/AT32hardware.h **** extern uint8_t g_RxRead;
  47:ROSSerial/AT32hardware.h **** extern uint8_t g_RxWritten;
  48:ROSSerial/AT32hardware.h **** 
  49:ROSSerial/AT32hardware.h **** class STM32Hardware
  50:ROSSerial/AT32hardware.h **** {
  51:ROSSerial/AT32hardware.h **** public:
  52:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  53:ROSSerial/AT32hardware.h **** 	{
  54:ROSSerial/AT32hardware.h **** 	}
  55:ROSSerial/AT32hardware.h **** 
  56:ROSSerial/AT32hardware.h **** 	/*
  57:ROSSerial/AT32hardware.h **** 	 * Method: init
  58:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  59:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  60:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  61:ROSSerial/AT32hardware.h **** 	 *   returns: none
  62:ROSSerial/AT32hardware.h **** 	 */
  63:ROSSerial/AT32hardware.h **** 	void init(void)
  64:ROSSerial/AT32hardware.h **** 	{
  65:ROSSerial/AT32hardware.h **** 		if(HAL_UART_Receive_IT(&huart2, &byte, 1) != 0)
 3123              		.loc 11 65 0
 3124 0006 0122     		movs	r2, #1
 3125 0008 4549     		ldr	r1, .L177
 3126 000a 4648     		ldr	r0, .L177+4
 3127 000c FFF7FEFF 		bl	HAL_UART_Receive_IT
 3128              	.LVL425:
 3129              	.LBE325:
 3130              	.LBE324:
 188:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 3131              		.loc 9 188 0
 3132 0010 454B     		ldr	r3, .L177+8
 3133 0012 0024     		movs	r4, #0
 3134 0014 C3F80845 		str	r4, [r3, #1288]
 189:ROSSerial/ros/node_handle.h ****     index_ = 0;
 3135              		.loc 9 189 0
 3136 0018 C3F80C45 		str	r4, [r3, #1292]
 190:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 3137              		.loc 9 190 0
 3138 001c C3F81445 		str	r4, [r3, #1300]
 191:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 3139              		.loc 9 191 0
 3140 0020 C3F81045 		str	r4, [r3, #1296]
 192:ROSSerial/ros/node_handle.h ****   };
 3141              		.loc 9 192 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 86


 3142 0024 4148     		ldr	r0, .L177+12
 3143 0026 FFF7FEFF 		bl	puts
 3144              	.LVL426:
 3145              	.LBE323:
 3146              	.LBE322:
 3147              	.LBB326:
 3148              	.LBB327:
 3149              	.LBB328:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3150              		.loc 7 40 0
 3151 002a 414B     		ldr	r3, .L177+16
 3152 002c 0293     		str	r3, [sp, #8]
 3153 002e 0494     		str	r4, [sp, #16]
 3154 0030 0794     		str	r4, [sp, #28]
 3155              	.LVL427:
 3156              	.LBB329:
 3157              	.LBB330:
  13:ROSSerial/std_msgs/Header.h ****   {
 3158              		.loc 6 13 0
 3159 0032 404B     		ldr	r3, .L177+20
 3160 0034 0393     		str	r3, [sp, #12]
 3161              	.LVL428:
 3162              	.LBB331:
 3163              	.LBB332:
 3164              	.LBB333:
 3165              		.file 12 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 87


  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 3166              		.loc 12 51 0
 3167 0036 0594     		str	r4, [sp, #20]
 3168 0038 0694     		str	r4, [sp, #24]
 3169              	.LVL429:
 3170              	.LBE333:
 3171              	.LBE332:
 3172              	.LBE331:
 3173              	.LBE330:
 3174              	.LBE329:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3175              		.loc 7 40 0
 3176 003a 0894     		str	r4, [sp, #32]
 3177 003c 0A94     		str	r4, [sp, #40]
 3178 003e 0B94     		str	r4, [sp, #44]
 3179 0040 0D94     		str	r4, [sp, #52]
 3180 0042 0E94     		str	r4, [sp, #56]
 3181 0044 1094     		str	r4, [sp, #64]
 3182 0046 1194     		str	r4, [sp, #68]
 3183 0048 1394     		str	r4, [sp, #76]
 3184              	.LVL430:
 3185              	.L168:
 3186              	.LBE328:
 3187              	.LBE327:
 3188              	.LBE326:
 3189              	.LBB334:
 3190              	.LBB335:
 3191              	.LBB336:
 407:ROSSerial/ros/node_handle.h **** 
 408:ROSSerial/ros/node_handle.h ****   /********************************************************************
 409:ROSSerial/ros/node_handle.h ****    * Time functions
 410:ROSSerial/ros/node_handle.h ****    */
 411:ROSSerial/ros/node_handle.h **** 
 412:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 413:ROSSerial/ros/node_handle.h ****   {
 414:ROSSerial/ros/node_handle.h ****     if(last_sync_receive_time < rt_time)
 415:ROSSerial/ros/node_handle.h ****     {
 416:ROSSerial/ros/node_handle.h ****       printf("skip requestSyncTime as one is pending %lu\n",hardware_.time());
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 88


 417:ROSSerial/ros/node_handle.h ****       return;
 418:ROSSerial/ros/node_handle.h ****     }
 419:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 420:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 421:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 422:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 423:ROSSerial/ros/node_handle.h ****     //printf("end requestSyncTime  rt_time=%lu\n",hardware_.time());
 424:ROSSerial/ros/node_handle.h ****   }
 425:ROSSerial/ros/node_handle.h **** 
 426:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 427:ROSSerial/ros/node_handle.h ****   {
 428:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 429:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 430:ROSSerial/ros/node_handle.h **** 
 431:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 432:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 433:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 434:ROSSerial/ros/node_handle.h **** 
 435:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 436:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     printf("syncTime c_time=%lu, offset=%ld\n",c_time,offset);
 438:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = c_time;
 439:ROSSerial/ros/node_handle.h ****   }
 440:ROSSerial/ros/node_handle.h **** 
 441:ROSSerial/ros/node_handle.h ****   Time now()
 442:ROSSerial/ros/node_handle.h ****   {
 443:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 444:ROSSerial/ros/node_handle.h ****     Time current_time;
 445:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 446:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 447:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 448:ROSSerial/ros/node_handle.h ****     return current_time;
 449:ROSSerial/ros/node_handle.h ****   }
 450:ROSSerial/ros/node_handle.h **** 
 451:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 452:ROSSerial/ros/node_handle.h ****   {
 453:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 454:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 455:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 456:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 457:ROSSerial/ros/node_handle.h ****   }
 458:ROSSerial/ros/node_handle.h **** 
 459:ROSSerial/ros/node_handle.h ****   /********************************************************************
 460:ROSSerial/ros/node_handle.h ****    * Topic Management
 461:ROSSerial/ros/node_handle.h ****    */
 462:ROSSerial/ros/node_handle.h **** 
 463:ROSSerial/ros/node_handle.h ****    /* Register a new publisher without C++ template */
 464:ROSSerial/ros/node_handle.h ****   PublisherType* addPublisher(char * topic_name, Msg * msg)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 3192              		.loc 9 466 0
 3193 004a 042C     		cmp	r4, #4
 3194 004c 2CDC     		bgt	.L172
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id == 0) {// empty slot}
 3195              		.loc 9 468 0
 3196 004e 04EB8403 		add	r3, r4, r4, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 89


 3197 0052 354A     		ldr	r2, .L177+8
 3198 0054 02EB8303 		add	r3, r2, r3, lsl #2
 3199 0058 B3F82C34 		ldrh	r3, [r3, #1068]
 3200 005c 0BB1     		cbz	r3, .L175
 466:ROSSerial/ros/node_handle.h ****     {
 3201              		.loc 9 466 0
 3202 005e 0134     		adds	r4, r4, #1
 3203              	.LVL431:
 3204 0060 F3E7     		b	.L168
 3205              	.L175:
 469:ROSSerial/ros/node_handle.h **** 
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_id = i + 100 + MAX_SUBSCRIBERS;
 3206              		.loc 9 470 0
 3207 0062 04F16903 		add	r3, r4, #105
 3208 0066 1546     		mov	r5, r2
 3209 0068 A600     		lsls	r6, r4, #2
 3210 006a 3719     		adds	r7, r6, r4
 3211 006c 02EB8707 		add	r7, r2, r7, lsl #2
 3212 0070 A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3213              		.loc 9 471 0
 3214 0074 304B     		ldr	r3, .L177+24
 3215 0076 C7F83034 		str	r3, [r7, #1072]
 472:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3216              		.loc 9 472 0
 3217 007a 0DF10808 		add	r8, sp, #8
 3218              	.LVL432:
 3219 007e C7F83484 		str	r8, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3220              		.loc 9 473 0
 3221 0082 029B     		ldr	r3, [sp, #8]
 3222 0084 9B68     		ldr	r3, [r3, #8]
 3223 0086 4046     		mov	r0, r8
 3224 0088 9847     		blx	r3
 3225              	.LVL433:
 3226 008a C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3227              		.loc 9 474 0
 3228 008e 029B     		ldr	r3, [sp, #8]
 3229 0090 DB68     		ldr	r3, [r3, #12]
 3230 0092 4046     		mov	r0, r8
 3231 0094 9847     		blx	r3
 3232              	.LVL434:
 3233 0096 C7F83C04 		str	r0, [r7, #1084]
 475:ROSSerial/ros/node_handle.h **** 
 476:ROSSerial/ros/node_handle.h ****         return &publishers2[i];
 3234              		.loc 9 476 0
 3235 009a 3319     		adds	r3, r6, r4
 3236 009c 9B00     		lsls	r3, r3, #2
 3237 009e 03F58563 		add	r3, r3, #1064
 3238 00a2 2B44     		add	r3, r3, r5
 3239 00a4 0433     		adds	r3, r3, #4
 3240 00a6 00E0     		b	.L166
 3241              	.LVL435:
 3242              	.L172:
 3243              	.LBE336:
 477:ROSSerial/ros/node_handle.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 90


 478:ROSSerial/ros/node_handle.h ****     }
 479:ROSSerial/ros/node_handle.h ****     return nullptr;
 3244              		.loc 9 479 0
 3245 00a8 0023     		movs	r3, #0
 3246              	.L166:
 3247              	.LVL436:
 3248              	.LBE335:
 3249              	.LBE334:
  41:./Src/ROS_main.cpp **** 
 3250              		.loc 8 41 0
 3251 00aa 244A     		ldr	r2, .L177+28
 3252 00ac 1360     		str	r3, [r2]
 3253              	.LVL437:
 3254              	.LBB337:
 3255              	.LBB338:
  13:ROSSerial/std_msgs/ROSString.h ****   {
 3256              		.loc 5 13 0
 3257 00ae 244B     		ldr	r3, .L177+32
 3258 00b0 0093     		str	r3, [sp]
 3259              	.LVL438:
 3260              	.LBE338:
 3261              	.LBE337:
 3262              	.LBB339:
 3263              	.LBB340:
 3264              	.LBB341:
 466:ROSSerial/ros/node_handle.h ****     {
 3265              		.loc 9 466 0
 3266 00b2 0024     		movs	r4, #0
 3267              	.L171:
 3268              	.LVL439:
 3269 00b4 042C     		cmp	r4, #4
 3270 00b6 2ADC     		bgt	.L173
 468:ROSSerial/ros/node_handle.h **** 
 3271              		.loc 9 468 0
 3272 00b8 04EB8403 		add	r3, r4, r4, lsl #2
 3273 00bc 1A4A     		ldr	r2, .L177+8
 3274 00be 02EB8303 		add	r3, r2, r3, lsl #2
 3275 00c2 B3F82C34 		ldrh	r3, [r3, #1068]
 3276 00c6 0BB1     		cbz	r3, .L176
 466:ROSSerial/ros/node_handle.h ****     {
 3277              		.loc 9 466 0
 3278 00c8 0134     		adds	r4, r4, #1
 3279              	.LVL440:
 3280 00ca F3E7     		b	.L171
 3281              	.L176:
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3282              		.loc 9 470 0
 3283 00cc 04F16903 		add	r3, r4, #105
 3284 00d0 1546     		mov	r5, r2
 3285 00d2 A600     		lsls	r6, r4, #2
 3286 00d4 3719     		adds	r7, r6, r4
 3287 00d6 02EB8707 		add	r7, r2, r7, lsl #2
 3288 00da A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3289              		.loc 9 471 0
 3290 00de 194B     		ldr	r3, .L177+36
 3291 00e0 C7F83034 		str	r3, [r7, #1072]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 91


 472:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3292              		.loc 9 472 0
 3293 00e4 C7F834D4 		str	sp, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3294              		.loc 9 473 0
 3295 00e8 009B     		ldr	r3, [sp]
 3296 00ea 9B68     		ldr	r3, [r3, #8]
 3297 00ec 6846     		mov	r0, sp
 3298 00ee 9847     		blx	r3
 3299              	.LVL441:
 3300 00f0 C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h **** 
 3301              		.loc 9 474 0
 3302 00f4 009B     		ldr	r3, [sp]
 3303 00f6 DB68     		ldr	r3, [r3, #12]
 3304 00f8 6846     		mov	r0, sp
 3305 00fa 9847     		blx	r3
 3306              	.LVL442:
 3307 00fc C7F83C04 		str	r0, [r7, #1084]
 476:ROSSerial/ros/node_handle.h ****       }
 3308              		.loc 9 476 0
 3309 0100 3319     		adds	r3, r6, r4
 3310 0102 9B00     		lsls	r3, r3, #2
 3311 0104 03F58563 		add	r3, r3, #1064
 3312 0108 2B44     		add	r3, r3, r5
 3313 010a 0433     		adds	r3, r3, #4
 3314 010c 00E0     		b	.L169
 3315              	.L173:
 3316              	.LBE341:
 3317              		.loc 9 479 0
 3318 010e 0023     		movs	r3, #0
 3319              	.L169:
 3320              	.LVL443:
 3321              	.LBE340:
 3322              	.LBE339:
  45:./Src/ROS_main.cpp **** 
 3323              		.loc 8 45 0
 3324 0110 0D4A     		ldr	r2, .L177+40
 3325 0112 1360     		str	r3, [r2]
  48:./Src/ROS_main.cpp **** }
 3326              		.loc 8 48 0
 3327 0114 0448     		ldr	r0, .L177+8
 3328 0116 FFF7FEFF 		bl	_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 3329              	.LVL444:
  49:./Src/ROS_main.cpp **** 
 3330              		.loc 8 49 0
 3331 011a 14B0     		add	sp, sp, #80
 3332              	.LCFI18:
 3333              		.cfi_def_cfa_offset 24
 3334              		@ sp needed
 3335 011c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3336              	.L178:
 3337              		.align	2
 3338              	.L177:
 3339 0120 00000000 		.word	byte
 3340 0124 00000000 		.word	huart2
 3341 0128 00000000 		.word	.LANCHOR1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 92


 3342 012c 00000000 		.word	.LC16
 3343 0130 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 3344 0134 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 3345 0138 0C000000 		.word	.LC17
 3346 013c 00000000 		.word	.LANCHOR2
 3347 0140 08000000 		.word	_ZTVN8std_msgs6StringE+8
 3348 0144 1C000000 		.word	.LC18
 3349 0148 00000000 		.word	.LANCHOR3
 3350              		.cfi_endproc
 3351              	.LFE491:
 3352              		.fnend
 3354              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE,"axG"
 3355              		.align	1
 3356              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3357              		.syntax unified
 3358              		.thumb
 3359              		.thumb_func
 3360              		.fpu fpv4-sp-d16
 3362              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:
 3363              		.fnstart
 3364              	.LFB520:
 480:ROSSerial/ros/node_handle.h ****   }
 481:ROSSerial/ros/node_handle.h **** 
 482:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 483:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 484:ROSSerial/ros/node_handle.h ****   {
 485:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 486:ROSSerial/ros/node_handle.h ****     {
 487:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 488:ROSSerial/ros/node_handle.h ****       {
 489:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 490:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 491:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 492:ROSSerial/ros/node_handle.h ****         return true;
 493:ROSSerial/ros/node_handle.h ****       }
 494:ROSSerial/ros/node_handle.h ****     }
 495:ROSSerial/ros/node_handle.h ****     return false;
 496:ROSSerial/ros/node_handle.h ****   }
 497:ROSSerial/ros/node_handle.h **** 
 498:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 499:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 500:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 501:ROSSerial/ros/node_handle.h ****   {
 502:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 503:ROSSerial/ros/node_handle.h ****     {
 504:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 505:ROSSerial/ros/node_handle.h ****       {
 506:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 507:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 508:ROSSerial/ros/node_handle.h ****         return true;
 509:ROSSerial/ros/node_handle.h ****       }
 510:ROSSerial/ros/node_handle.h ****     }
 511:ROSSerial/ros/node_handle.h ****     return false;
 512:ROSSerial/ros/node_handle.h ****   }
 513:ROSSerial/ros/node_handle.h **** 
 514:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 515:ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 93


 516:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 517:ROSSerial/ros/node_handle.h ****     {
 518:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 519:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 520:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 521:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 522:ROSSerial/ros/node_handle.h ****         printf("Registered %s with id %d\n", \
 523:ROSSerial/ros/node_handle.h ****           subscribers2[i].topic_name,subscribers2[i].topic_id);
 524:ROSSerial/ros/node_handle.h ****         return true;
 525:ROSSerial/ros/node_handle.h ****       }
 526:ROSSerial/ros/node_handle.h ****     }
 527:ROSSerial/ros/node_handle.h ****     return false;
 528:ROSSerial/ros/node_handle.h ****   }
 529:ROSSerial/ros/node_handle.h **** 
 530:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 531:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 532:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 533:ROSSerial/ros/node_handle.h ****   {
 534:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 535:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 536:ROSSerial/ros/node_handle.h ****     {
 537:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 538:ROSSerial/ros/node_handle.h ****       {
 539:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 540:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 541:ROSSerial/ros/node_handle.h ****         return v;
 542:ROSSerial/ros/node_handle.h ****       }
 543:ROSSerial/ros/node_handle.h ****     }
 544:ROSSerial/ros/node_handle.h ****     return false;
 545:ROSSerial/ros/node_handle.h ****   }
 546:ROSSerial/ros/node_handle.h **** 
 547:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 548:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 549:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 550:ROSSerial/ros/node_handle.h ****   {
 551:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 552:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 553:ROSSerial/ros/node_handle.h ****     {
 554:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 555:ROSSerial/ros/node_handle.h ****       {
 556:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 557:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 558:ROSSerial/ros/node_handle.h ****         return v;
 559:ROSSerial/ros/node_handle.h ****       }
 560:ROSSerial/ros/node_handle.h ****     }
 561:ROSSerial/ros/node_handle.h ****     return false;
 562:ROSSerial/ros/node_handle.h ****   }
 563:ROSSerial/ros/node_handle.h **** 
 564:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 565:ROSSerial/ros/node_handle.h ****   {
 566:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 567:ROSSerial/ros/node_handle.h ****     int i;
 568:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 569:ROSSerial/ros/node_handle.h ****     {
 570:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id != 0) // non-empty slot
 571:ROSSerial/ros/node_handle.h ****       {
 572:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers2[i].topic_id;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 94


 573:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 574:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 575:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 576:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 577:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 578:ROSSerial/ros/node_handle.h ****       }
 579:ROSSerial/ros/node_handle.h ****     }
 580:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 581:ROSSerial/ros/node_handle.h ****     {
 582:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 583:ROSSerial/ros/node_handle.h ****       {
 584:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 585:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 586:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 587:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 588:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 589:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 590:ROSSerial/ros/node_handle.h ****       }
 591:ROSSerial/ros/node_handle.h ****     }
 592:ROSSerial/ros/node_handle.h ****     configured_ = true;
 593:ROSSerial/ros/node_handle.h ****   }
 594:ROSSerial/ros/node_handle.h **** 
 595:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 596:ROSSerial/ros/node_handle.h ****   {
 597:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 598:ROSSerial/ros/node_handle.h ****   }
 599:ROSSerial/ros/node_handle.h **** 
 600:ROSSerial/ros/node_handle.h ****   int publish1(int id, Msg * msg)
 3365              		.loc 9 600 0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 16
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 3369              	.LVL445:
 3370 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3371              		.save {r4, r5, r6, r7, r8, lr}
 3372              	.LCFI19:
 3373              		.cfi_def_cfa_offset 24
 3374              		.cfi_offset 4, -24
 3375              		.cfi_offset 5, -20
 3376              		.cfi_offset 6, -16
 3377              		.cfi_offset 7, -12
 3378              		.cfi_offset 8, -8
 3379              		.cfi_offset 14, -4
 3380              		.pad #16
 3381 0004 84B0     		sub	sp, sp, #16
 3382              	.LCFI20:
 3383              		.cfi_def_cfa_offset 40
 3384 0006 0546     		mov	r5, r0
 3385 0008 0E46     		mov	r6, r1
 3386 000a 1746     		mov	r7, r2
 601:ROSSerial/ros/node_handle.h ****   {
 602:ROSSerial/ros/node_handle.h ****     if(id == TopicInfo::ID_TIME)
 3387              		.loc 9 602 0
 3388 000c 0A29     		cmp	r1, #10
 3389 000e 2ED0     		beq	.L189
 3390              	.LVL446:
 3391              	.L180:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 95


 603:ROSSerial/ros/node_handle.h ****       printf("time=%lu, in nh.publsh %d %x\n",hardware_.time(), id, msg);
 604:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 3392              		.loc 9 604 0
 3393 0010 632E     		cmp	r6, #99
 3394 0012 03DD     		ble	.L181
 3395              		.loc 9 604 0 is_stmt 0 discriminator 1
 3396 0014 95F81C35 		ldrb	r3, [r5, #1308]	@ zero_extendqisi2
 3397 0018 002B     		cmp	r3, #0
 3398 001a 76D0     		beq	.L187
 3399              	.L181:
 605:ROSSerial/ros/node_handle.h ****       return 0;
 606:ROSSerial/ros/node_handle.h ****     }
 607:ROSSerial/ros/node_handle.h ****     // if(id == TopicInfo::ID_TIME)
 608:ROSSerial/ros/node_handle.h ****     //   printf("in nh.publsh %s\n",msg->getType());
 609:ROSSerial/ros/node_handle.h ****     /* serialize message */
 610:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 3400              		.loc 9 610 0 is_stmt 1
 3401 001c 3B68     		ldr	r3, [r7]
 3402 001e 1B68     		ldr	r3, [r3]
 3403 0020 05F21F21 		addw	r1, r5, #543
 3404 0024 3846     		mov	r0, r7
 3405 0026 9847     		blx	r3
 3406              	.LVL447:
 611:ROSSerial/ros/node_handle.h **** 
 612:ROSSerial/ros/node_handle.h ****     /* setup the header */
 613:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 3407              		.loc 9 613 0
 3408 0028 FF23     		movs	r3, #255
 3409 002a 85F81832 		strb	r3, [r5, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3410              		.loc 9 614 0
 3411 002e FE23     		movs	r3, #254
 3412 0030 85F81932 		strb	r3, [r5, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3413              		.loc 9 615 0
 3414 0034 C3B2     		uxtb	r3, r0
 3415 0036 85F81A32 		strb	r3, [r5, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3416              		.loc 9 616 0
 3417 003a C0F30722 		ubfx	r2, r0, #8, #8
 3418 003e 85F81B22 		strb	r2, [r5, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3419              		.loc 9 617 0
 3420 0042 1344     		add	r3, r3, r2
 3421 0044 DBB2     		uxtb	r3, r3
 3422 0046 DB43     		mvns	r3, r3
 3423 0048 85F81C32 		strb	r3, [r5, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3424              		.loc 9 618 0
 3425 004c 85F81D62 		strb	r6, [r5, #541]
 619:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3426              		.loc 9 619 0
 3427 0050 46F30723 		sbfx	r3, r6, #8, #8
 3428 0054 85F81E32 		strb	r3, [r5, #542]
 3429              	.LVL448:
 3430              	.LBB366:
 620:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 96


 621:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 622:ROSSerial/ros/node_handle.h ****     int chk = 0;
 623:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3431              		.loc 9 623 0
 3432 0058 0522     		movs	r2, #5
 3433              	.LBE366:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3434              		.loc 9 622 0
 3435 005a 0024     		movs	r4, #0
 3436              	.LVL449:
 3437              	.L184:
 3438              	.LBB367:
 3439              		.loc 9 623 0 discriminator 3
 3440 005c C31D     		adds	r3, r0, #7
 3441 005e 9342     		cmp	r3, r2
 3442 0060 0EDD     		ble	.L183
 624:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3443              		.loc 9 624 0 discriminator 2
 3444 0062 AB18     		adds	r3, r5, r2
 3445 0064 93F81832 		ldrb	r3, [r3, #536]	@ zero_extendqisi2
 3446 0068 1C44     		add	r4, r4, r3
 3447              	.LVL450:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3448              		.loc 9 623 0 discriminator 2
 3449 006a 0132     		adds	r2, r2, #1
 3450              	.LVL451:
 3451 006c F6E7     		b	.L184
 3452              	.LVL452:
 3453              	.L189:
 3454              	.LBE367:
 3455              	.LBB368:
 3456              	.LBB369:
  66:ROSSerial/AT32hardware.h **** 		{
  67:ROSSerial/AT32hardware.h **** 			return ;
  68:ROSSerial/AT32hardware.h **** 		}
  69:ROSSerial/AT32hardware.h **** 	}
  70:ROSSerial/AT32hardware.h **** 
  71:ROSSerial/AT32hardware.h **** 	/*
  72:ROSSerial/AT32hardware.h ****      * Method: read
  73:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  74:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  75:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  76:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  77:ROSSerial/AT32hardware.h **** 	 */
  78:ROSSerial/AT32hardware.h **** 	int read(void)
  79:ROSSerial/AT32hardware.h **** 	{
  80:ROSSerial/AT32hardware.h **** 		int ucData = -1;
  81:ROSSerial/AT32hardware.h **** 		
  82:ROSSerial/AT32hardware.h **** 		if(g_RxRead < g_RxWritten)
  83:ROSSerial/AT32hardware.h **** 		{
  84:ROSSerial/AT32hardware.h **** 			ucData = g_RxBuf[g_RxRead++];
  85:ROSSerial/AT32hardware.h **** 		}
  86:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE &&  g_RxRead == g_RxWritten )
  87:ROSSerial/AT32hardware.h **** 		{
  88:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
  89:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
  90:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 97


  91:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
  92:ROSSerial/AT32hardware.h **** 		}
  93:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE && g_RxWritten > g_RxRead)
  94:ROSSerial/AT32hardware.h **** 		{
  95:ROSSerial/AT32hardware.h **** 			printf("How did this happen? %d %d\n",g_RxRead,g_RxWritten);
  96:ROSSerial/AT32hardware.h **** 		}
  97:ROSSerial/AT32hardware.h **** 		
  98:ROSSerial/AT32hardware.h **** 		
  99:ROSSerial/AT32hardware.h **** 		if(g_RxRead == RX_BUF_SIZE )
 100:ROSSerial/AT32hardware.h **** 		{
 101:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
 102:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 103:ROSSerial/AT32hardware.h **** 			//Enable the interrupt so we can read again.
 104:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 105:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 106:ROSSerial/AT32hardware.h **** 		}
 107:ROSSerial/AT32hardware.h **** 		return ucData;
 108:ROSSerial/AT32hardware.h **** 	}
 109:ROSSerial/AT32hardware.h **** 
 110:ROSSerial/AT32hardware.h **** 	/*
 111:ROSSerial/AT32hardware.h **** 	 * Method: write
 112:ROSSerial/AT32hardware.h ****      * ----------------------------
 113:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
 114:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
 115:ROSSerial/AT32hardware.h **** 	 *   returns: none
 116:ROSSerial/AT32hardware.h **** 	 */
 117:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
 118:ROSSerial/AT32hardware.h **** 	{
 119:ROSSerial/AT32hardware.h **** 		// printf("printing %d\n",length);
 120:ROSSerial/AT32hardware.h **** 		/* Without Interrupt we can still publish chatter at 111.6Hz or 9ms per message */
 121:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 20);
 122:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 123:ROSSerial/AT32hardware.h **** 		{
 124:ROSSerial/AT32hardware.h **** 			printf("HAL write error %d %lu - %s\n",ret,length, data);
 125:ROSSerial/AT32hardware.h **** 		}
 126:ROSSerial/AT32hardware.h **** 		
 127:ROSSerial/AT32hardware.h **** 		// /* Try Interrupt - Has delayed byte problem. */
 128:ROSSerial/AT32hardware.h **** 		// if(HAL_UART_Transmit_IT(&huart2, (uint8_t *)data, length)!= HAL_OK)
 129:ROSSerial/AT32hardware.h ****   		// {
 130:ROSSerial/AT32hardware.h **** 		// 	HAL_Delay(10); 
 131:ROSSerial/AT32hardware.h **** 		// 	printf("delayed bytes %d\n",length); 
 132:ROSSerial/AT32hardware.h **** 		// }
 133:ROSSerial/AT32hardware.h **** 
 134:ROSSerial/AT32hardware.h **** 		// else
 135:ROSSerial/AT32hardware.h **** 		// {
 136:ROSSerial/AT32hardware.h **** 		// 	printf("sent %d bytes over Interrupt\n",length);
 137:ROSSerial/AT32hardware.h **** 		// }
 138:ROSSerial/AT32hardware.h **** 		
 139:ROSSerial/AT32hardware.h **** 	}
 140:ROSSerial/AT32hardware.h **** 
 141:ROSSerial/AT32hardware.h **** 	/*
 142:ROSSerial/AT32hardware.h **** 	 * Method: time
 143:ROSSerial/AT32hardware.h **** 	 * ----------------------------
 144:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
 145:ROSSerial/AT32hardware.h **** 	 *   parameters: none
 146:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
 147:ROSSerial/AT32hardware.h **** 	 */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 98


 148:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 149:ROSSerial/AT32hardware.h **** 	{
 150:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 151:ROSSerial/AT32hardware.h **** 		return HAL_GetTick();
 3457              		.loc 11 151 0
 3458 006e FFF7FEFF 		bl	HAL_GetTick
 3459              	.LVL453:
 3460              	.LBE369:
 3461              	.LBE368:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 3462              		.loc 9 603 0
 3463 0072 3B46     		mov	r3, r7
 3464 0074 3246     		mov	r2, r6
 3465 0076 0146     		mov	r1, r0
 3466 0078 2548     		ldr	r0, .L192
 3467 007a FFF7FEFF 		bl	printf
 3468              	.LVL454:
 3469 007e C7E7     		b	.L180
 3470              	.LVL455:
 3471              	.L183:
 625:ROSSerial/ros/node_handle.h ****     l += 7;
 626:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 3472              		.loc 9 626 0
 3473 0080 6242     		rsbs	r2, r4, #0
 3474              	.LVL456:
 3475 0082 E4B2     		uxtb	r4, r4
 3476              	.LVL457:
 3477 0084 D2B2     		uxtb	r2, r2
 3478 0086 58BF     		it	pl
 3479 0088 5442     		rsbpl	r4, r2, #0
 3480 008a 00F10808 		add	r8, r0, #8
 3481              	.LVL458:
 3482 008e E443     		mvns	r4, r4
 3483 0090 2B44     		add	r3, r3, r5
 3484 0092 83F81842 		strb	r4, [r3, #536]
 627:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 628:ROSSerial/ros/node_handle.h ****     //  printf("Sending message - %s, length %d\n",msg->getType(), l);
 629:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3485              		.loc 9 629 0
 3486 0096 B8F5007F 		cmp	r8, #512
 3487 009a 24DC     		bgt	.L185
 630:ROSSerial/ros/node_handle.h ****     {
 631:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 3488              		.loc 9 631 0
 3489 009c 05F50675 		add	r5, r5, #536
 3490              	.LVL459:
 3491              	.LBB370:
 3492              	.LBB371:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3493              		.loc 11 121 0
 3494 00a0 1423     		movs	r3, #20
 3495 00a2 1FFA88F2 		uxth	r2, r8
 3496 00a6 2946     		mov	r1, r5
 3497 00a8 1A48     		ldr	r0, .L192+4
 3498 00aa FFF7FEFF 		bl	HAL_UART_Transmit
 3499              	.LVL460:
 122:ROSSerial/AT32hardware.h **** 		{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 99


 3500              		.loc 11 122 0
 3501 00ae 0146     		mov	r1, r0
 3502 00b0 28B9     		cbnz	r0, .L190
 3503              	.LVL461:
 3504              	.L186:
 3505              	.LBE371:
 3506              	.LBE370:
 632:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 3507              		.loc 9 632 0
 3508 00b2 0A2E     		cmp	r6, #10
 3509 00b4 09D0     		beq	.L191
 3510              	.LVL462:
 3511              	.L179:
 633:ROSSerial/ros/node_handle.h ****         printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 634:ROSSerial/ros/node_handle.h ****       return l;
 635:ROSSerial/ros/node_handle.h ****     }
 636:ROSSerial/ros/node_handle.h ****     else
 637:ROSSerial/ros/node_handle.h ****     {
 638:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 639:ROSSerial/ros/node_handle.h ****       printf("Message from device dropped: message larger than buffer.");
 640:ROSSerial/ros/node_handle.h ****       return -1;
 641:ROSSerial/ros/node_handle.h ****     }
 642:ROSSerial/ros/node_handle.h ****   }
 3512              		.loc 9 642 0
 3513 00b6 4046     		mov	r0, r8
 3514 00b8 04B0     		add	sp, sp, #16
 3515              	.LCFI21:
 3516              		.cfi_remember_state
 3517              		.cfi_def_cfa_offset 24
 3518              		@ sp needed
 3519 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3520              	.LVL463:
 3521              	.L190:
 3522              	.LCFI22:
 3523              		.cfi_restore_state
 3524              	.LBB373:
 3525              	.LBB372:
 124:ROSSerial/AT32hardware.h **** 		}
 3526              		.loc 11 124 0
 3527 00be 2B46     		mov	r3, r5
 3528 00c0 4246     		mov	r2, r8
 3529 00c2 1548     		ldr	r0, .L192+8
 3530              	.LVL464:
 3531 00c4 FFF7FEFF 		bl	printf
 3532              	.LVL465:
 3533 00c8 F3E7     		b	.L186
 3534              	.LVL466:
 3535              	.L191:
 3536              	.LBE372:
 3537              	.LBE373:
 3538              	.LBB374:
 3539              	.LBB375:
 3540              		.loc 11 151 0
 3541 00ca FFF7FEFF 		bl	HAL_GetTick
 3542              	.LVL467:
 3543 00ce 0446     		mov	r4, r0
 3544              	.LVL468:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 100


 3545              	.LBE375:
 3546              	.LBE374:
 633:ROSSerial/ros/node_handle.h ****         printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 3547              		.loc 9 633 0
 3548 00d0 3B68     		ldr	r3, [r7]
 3549 00d2 9B68     		ldr	r3, [r3, #8]
 3550 00d4 3846     		mov	r0, r7
 3551 00d6 9847     		blx	r3
 3552              	.LVL469:
 3553 00d8 4346     		mov	r3, r8
 3554 00da 0246     		mov	r2, r0
 3555 00dc 2146     		mov	r1, r4
 3556 00de 0F48     		ldr	r0, .L192+12
 3557 00e0 FFF7FEFF 		bl	printf
 3558              	.LVL470:
 3559 00e4 E7E7     		b	.L179
 3560              	.LVL471:
 3561              	.L185:
 3562              	.LBB376:
 3563              	.LBB377:
 3564              	.LBB378:
 3565              	.LBB379:
 3566              	.LBB380:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3567              		.loc 3 13 0
 3568 00e6 0E4B     		ldr	r3, .L192+16
 3569 00e8 0193     		str	r3, [sp, #4]
 3570              	.LVL472:
 3571              	.LBE380:
 3572              	.LBE379:
 643:ROSSerial/ros/node_handle.h **** 
 644:ROSSerial/ros/node_handle.h ****   /********************************************************************
 645:ROSSerial/ros/node_handle.h ****    * Logging
 646:ROSSerial/ros/node_handle.h ****    */
 647:ROSSerial/ros/node_handle.h **** 
 648:ROSSerial/ros/node_handle.h **** private:
 649:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 650:ROSSerial/ros/node_handle.h ****   {
 651:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 652:ROSSerial/ros/node_handle.h ****     l.level = byte;
 3573              		.loc 9 652 0
 3574 00ea 0323     		movs	r3, #3
 3575 00ec 8DF80830 		strb	r3, [sp, #8]
 653:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3576              		.loc 9 653 0
 3577 00f0 0C4C     		ldr	r4, .L192+20
 3578 00f2 0394     		str	r4, [sp, #12]
 654:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3579              		.loc 9 654 0
 3580 00f4 01AA     		add	r2, sp, #4
 3581 00f6 0721     		movs	r1, #7
 3582 00f8 2846     		mov	r0, r5
 3583 00fa FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3584              	.LVL473:
 3585              	.LBE378:
 3586              	.LBE377:
 3587              	.LBE376:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 101


 639:ROSSerial/ros/node_handle.h ****       return -1;
 3588              		.loc 9 639 0
 3589 00fe 2046     		mov	r0, r4
 3590 0100 FFF7FEFF 		bl	printf
 3591              	.LVL474:
 640:ROSSerial/ros/node_handle.h ****     }
 3592              		.loc 9 640 0
 3593 0104 4FF0FF38 		mov	r8, #-1
 3594              	.LVL475:
 3595 0108 D5E7     		b	.L179
 3596              	.L187:
 605:ROSSerial/ros/node_handle.h ****     }
 3597              		.loc 9 605 0
 3598 010a 4FF00008 		mov	r8, #0
 3599 010e D2E7     		b	.L179
 3600              	.L193:
 3601              		.align	2
 3602              	.L192:
 3603 0110 00000000 		.word	.LC19
 3604 0114 00000000 		.word	huart2
 3605 0118 20000000 		.word	.LC20
 3606 011c 40000000 		.word	.LC21
 3607 0120 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3608 0124 68000000 		.word	.LC22
 3609              		.cfi_endproc
 3610              	.LFE520:
 3611              		.fnend
 3613              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3614              		.align	1
 3615              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3619              		.fpu fpv4-sp-d16
 3621              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3622              		.fnstart
 3623              	.LFB538:
 595:ROSSerial/ros/node_handle.h ****   {
 3624              		.loc 9 595 0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 24
 3627              		@ frame_needed = 0, uses_anonymous_args = 0
 3628              	.LVL476:
 3629 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3630              		.save {r4, r5, r6, r7, r8, lr}
 3631              	.LCFI23:
 3632              		.cfi_def_cfa_offset 24
 3633              		.cfi_offset 4, -24
 3634              		.cfi_offset 5, -20
 3635              		.cfi_offset 6, -16
 3636              		.cfi_offset 7, -12
 3637              		.cfi_offset 8, -8
 3638              		.cfi_offset 14, -4
 3639              		.pad #24
 3640 0004 86B0     		sub	sp, sp, #24
 3641              	.LCFI24:
 3642              		.cfi_def_cfa_offset 48
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 102


 3643 0006 0546     		mov	r5, r0
 3644 0008 0E46     		mov	r6, r1
 3645 000a 1746     		mov	r7, r2
 3646              	.LVL477:
 3647              	.LBB411:
 3648              	.LBB412:
 602:ROSSerial/ros/node_handle.h ****       printf("time=%lu, in nh.publsh %d %x\n",hardware_.time(), id, msg);
 3649              		.loc 9 602 0
 3650 000c 0A29     		cmp	r1, #10
 3651 000e 2FD0     		beq	.L208
 3652              	.LVL478:
 3653              	.L195:
 604:ROSSerial/ros/node_handle.h ****       return 0;
 3654              		.loc 9 604 0
 3655 0010 632E     		cmp	r6, #99
 3656 0012 04DD     		ble	.L196
 3657 0014 95F81C35 		ldrb	r3, [r5, #1308]	@ zero_extendqisi2
 3658 0018 002B     		cmp	r3, #0
 3659 001a 00F0C780 		beq	.L206
 3660              	.L196:
 610:ROSSerial/ros/node_handle.h **** 
 3661              		.loc 9 610 0
 3662 001e 3B68     		ldr	r3, [r7]
 3663 0020 1B68     		ldr	r3, [r3]
 3664 0022 05F21F21 		addw	r1, r5, #543
 3665 0026 3846     		mov	r0, r7
 3666 0028 9847     		blx	r3
 3667              	.LVL479:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3668              		.loc 9 613 0
 3669 002a FF23     		movs	r3, #255
 3670 002c 85F81832 		strb	r3, [r5, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3671              		.loc 9 614 0
 3672 0030 FE23     		movs	r3, #254
 3673 0032 85F81932 		strb	r3, [r5, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3674              		.loc 9 615 0
 3675 0036 C3B2     		uxtb	r3, r0
 3676 0038 85F81A32 		strb	r3, [r5, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3677              		.loc 9 616 0
 3678 003c C0F30722 		ubfx	r2, r0, #8, #8
 3679 0040 85F81B22 		strb	r2, [r5, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3680              		.loc 9 617 0
 3681 0044 1344     		add	r3, r3, r2
 3682 0046 DBB2     		uxtb	r3, r3
 3683 0048 DB43     		mvns	r3, r3
 3684 004a 85F81C32 		strb	r3, [r5, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3685              		.loc 9 618 0
 3686 004e 85F81D62 		strb	r6, [r5, #541]
 619:ROSSerial/ros/node_handle.h **** 
 3687              		.loc 9 619 0
 3688 0052 46F30723 		sbfx	r3, r6, #8, #8
 3689 0056 85F81E32 		strb	r3, [r5, #542]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 103


 3690              	.LVL480:
 3691              	.LBB413:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3692              		.loc 9 623 0
 3693 005a 0522     		movs	r2, #5
 3694              	.LBE413:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3695              		.loc 9 622 0
 3696 005c 0024     		movs	r4, #0
 3697              	.LVL481:
 3698              	.L199:
 3699              	.LBB414:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3700              		.loc 9 623 0
 3701 005e C31D     		adds	r3, r0, #7
 3702 0060 9342     		cmp	r3, r2
 3703 0062 0EDD     		ble	.L198
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 3704              		.loc 9 624 0
 3705 0064 AB18     		adds	r3, r5, r2
 3706 0066 93F81832 		ldrb	r3, [r3, #536]	@ zero_extendqisi2
 3707 006a 1C44     		add	r4, r4, r3
 3708              	.LVL482:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3709              		.loc 9 623 0
 3710 006c 0132     		adds	r2, r2, #1
 3711              	.LVL483:
 3712 006e F6E7     		b	.L199
 3713              	.LVL484:
 3714              	.L208:
 3715              	.LBE414:
 3716              	.LBB415:
 3717              	.LBB416:
 3718              		.loc 11 151 0
 3719 0070 FFF7FEFF 		bl	HAL_GetTick
 3720              	.LVL485:
 3721              	.LBE416:
 3722              	.LBE415:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 3723              		.loc 9 603 0
 3724 0074 3B46     		mov	r3, r7
 3725 0076 3246     		mov	r2, r6
 3726 0078 0146     		mov	r1, r0
 3727 007a 4E48     		ldr	r0, .L212
 3728 007c FFF7FEFF 		bl	printf
 3729              	.LVL486:
 3730 0080 C6E7     		b	.L195
 3731              	.LVL487:
 3732              	.L198:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3733              		.loc 9 626 0
 3734 0082 6242     		rsbs	r2, r4, #0
 3735              	.LVL488:
 3736 0084 E4B2     		uxtb	r4, r4
 3737              	.LVL489:
 3738 0086 D2B2     		uxtb	r2, r2
 3739 0088 58BF     		it	pl
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 104


 3740 008a 5442     		rsbpl	r4, r2, #0
 3741 008c 00F10808 		add	r8, r0, #8
 3742              	.LVL490:
 3743 0090 E443     		mvns	r4, r4
 3744 0092 2B44     		add	r3, r3, r5
 3745 0094 83F81842 		strb	r4, [r3, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 3746              		.loc 9 629 0
 3747 0098 B8F5007F 		cmp	r8, #512
 3748 009c 24DC     		bgt	.L200
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 3749              		.loc 9 631 0
 3750 009e 05F50675 		add	r5, r5, #536
 3751              	.LVL491:
 3752              	.LBB417:
 3753              	.LBB418:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3754              		.loc 11 121 0
 3755 00a2 1423     		movs	r3, #20
 3756 00a4 1FFA88F2 		uxth	r2, r8
 3757 00a8 2946     		mov	r1, r5
 3758 00aa 4348     		ldr	r0, .L212+4
 3759 00ac FFF7FEFF 		bl	HAL_UART_Transmit
 3760              	.LVL492:
 122:ROSSerial/AT32hardware.h **** 		{
 3761              		.loc 11 122 0
 3762 00b0 0146     		mov	r1, r0
 3763 00b2 28B9     		cbnz	r0, .L209
 3764              	.LVL493:
 3765              	.L201:
 3766              	.LBE418:
 3767              	.LBE417:
 632:ROSSerial/ros/node_handle.h ****         printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 3768              		.loc 9 632 0
 3769 00b4 0A2E     		cmp	r6, #10
 3770 00b6 09D0     		beq	.L210
 3771              	.LVL494:
 3772              	.L194:
 3773              	.LBE412:
 3774              	.LBE411:
 598:ROSSerial/ros/node_handle.h **** 
 3775              		.loc 9 598 0
 3776 00b8 4046     		mov	r0, r8
 3777 00ba 06B0     		add	sp, sp, #24
 3778              	.LCFI25:
 3779              		.cfi_remember_state
 3780              		.cfi_def_cfa_offset 24
 3781              		@ sp needed
 3782 00bc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3783              	.LVL495:
 3784              	.L209:
 3785              	.LCFI26:
 3786              		.cfi_restore_state
 3787              	.LBB446:
 3788              	.LBB445:
 3789              	.LBB420:
 3790              	.LBB419:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 105


 124:ROSSerial/AT32hardware.h **** 		}
 3791              		.loc 11 124 0
 3792 00c0 2B46     		mov	r3, r5
 3793 00c2 4246     		mov	r2, r8
 3794 00c4 3D48     		ldr	r0, .L212+8
 3795              	.LVL496:
 3796 00c6 FFF7FEFF 		bl	printf
 3797              	.LVL497:
 3798 00ca F3E7     		b	.L201
 3799              	.LVL498:
 3800              	.L210:
 3801              	.LBE419:
 3802              	.LBE420:
 3803              	.LBB421:
 3804              	.LBB422:
 3805              		.loc 11 151 0
 3806 00cc FFF7FEFF 		bl	HAL_GetTick
 3807              	.LVL499:
 3808 00d0 0446     		mov	r4, r0
 3809              	.LVL500:
 3810              	.LBE422:
 3811              	.LBE421:
 633:ROSSerial/ros/node_handle.h ****       return l;
 3812              		.loc 9 633 0
 3813 00d2 3B68     		ldr	r3, [r7]
 3814 00d4 9B68     		ldr	r3, [r3, #8]
 3815 00d6 3846     		mov	r0, r7
 3816 00d8 9847     		blx	r3
 3817              	.LVL501:
 3818 00da 4346     		mov	r3, r8
 3819 00dc 0246     		mov	r2, r0
 3820 00de 2146     		mov	r1, r4
 3821 00e0 3748     		ldr	r0, .L212+12
 3822 00e2 FFF7FEFF 		bl	printf
 3823              	.LVL502:
 3824 00e6 E7E7     		b	.L194
 3825              	.LVL503:
 3826              	.L200:
 3827              	.LBB423:
 3828              	.LBB424:
 3829              	.LBB425:
 3830              	.LBB426:
 3831              	.LBB427:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3832              		.loc 3 13 0
 3833 00e8 364B     		ldr	r3, .L212+16
 3834 00ea 0093     		str	r3, [sp]
 3835              	.LVL504:
 3836              	.LBE427:
 3837              	.LBE426:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3838              		.loc 9 652 0
 3839 00ec 0322     		movs	r2, #3
 3840 00ee 8DF80420 		strb	r2, [sp, #4]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3841              		.loc 9 653 0
 3842 00f2 354A     		ldr	r2, .L212+20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 106


 3843 00f4 0292     		str	r2, [sp, #8]
 3844              	.LVL505:
 3845              	.LBB428:
 3846              	.LBB429:
 610:ROSSerial/ros/node_handle.h **** 
 3847              		.loc 9 610 0
 3848 00f6 1B68     		ldr	r3, [r3]
 3849 00f8 05F21F21 		addw	r1, r5, #543
 3850 00fc 6846     		mov	r0, sp
 3851 00fe 9847     		blx	r3
 3852              	.LVL506:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3853              		.loc 9 613 0
 3854 0100 FF23     		movs	r3, #255
 3855 0102 85F81832 		strb	r3, [r5, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3856              		.loc 9 614 0
 3857 0106 FE23     		movs	r3, #254
 3858 0108 85F81932 		strb	r3, [r5, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3859              		.loc 9 615 0
 3860 010c C3B2     		uxtb	r3, r0
 3861 010e 85F81A32 		strb	r3, [r5, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3862              		.loc 9 616 0
 3863 0112 C0F30722 		ubfx	r2, r0, #8, #8
 3864 0116 85F81B22 		strb	r2, [r5, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3865              		.loc 9 617 0
 3866 011a 1344     		add	r3, r3, r2
 3867 011c DBB2     		uxtb	r3, r3
 3868 011e DB43     		mvns	r3, r3
 3869 0120 85F81C32 		strb	r3, [r5, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3870              		.loc 9 618 0
 3871 0124 0723     		movs	r3, #7
 3872 0126 85F81D32 		strb	r3, [r5, #541]
 619:ROSSerial/ros/node_handle.h **** 
 3873              		.loc 9 619 0
 3874 012a 0023     		movs	r3, #0
 3875 012c 85F81E32 		strb	r3, [r5, #542]
 3876              	.LVL507:
 3877              	.LBB430:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3878              		.loc 9 623 0
 3879 0130 0522     		movs	r2, #5
 3880              	.LVL508:
 3881              	.L203:
 3882 0132 C11D     		adds	r1, r0, #7
 3883 0134 9142     		cmp	r1, r2
 3884 0136 05DD     		ble	.L202
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 3885              		.loc 9 624 0
 3886 0138 A918     		adds	r1, r5, r2
 3887 013a 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3888 013e 0B44     		add	r3, r3, r1
 3889              	.LVL509:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 107


 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3890              		.loc 9 623 0
 3891 0140 0132     		adds	r2, r2, #1
 3892              	.LVL510:
 3893 0142 F6E7     		b	.L203
 3894              	.L202:
 3895              	.LVL511:
 3896              	.LBE430:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3897              		.loc 9 626 0
 3898 0144 5A42     		rsbs	r2, r3, #0
 3899              	.LVL512:
 3900 0146 DBB2     		uxtb	r3, r3
 3901              	.LVL513:
 3902 0148 D2B2     		uxtb	r2, r2
 3903 014a 58BF     		it	pl
 3904 014c 5342     		rsbpl	r3, r2, #0
 3905 014e 00F10804 		add	r4, r0, #8
 3906              	.LVL514:
 3907 0152 DB43     		mvns	r3, r3
 3908 0154 2944     		add	r1, r1, r5
 3909 0156 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 3910              		.loc 9 629 0
 3911 015a B4F5007F 		cmp	r4, #512
 3912 015e 15DC     		bgt	.L204
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 3913              		.loc 9 631 0
 3914 0160 05F50675 		add	r5, r5, #536
 3915              	.LVL515:
 3916              	.LBB431:
 3917              	.LBB432:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3918              		.loc 11 121 0
 3919 0164 1423     		movs	r3, #20
 3920 0166 A2B2     		uxth	r2, r4
 3921 0168 2946     		mov	r1, r5
 3922 016a 1348     		ldr	r0, .L212+4
 3923 016c FFF7FEFF 		bl	HAL_UART_Transmit
 3924              	.LVL516:
 122:ROSSerial/AT32hardware.h **** 		{
 3925              		.loc 11 122 0
 3926 0170 0146     		mov	r1, r0
 3927 0172 28B9     		cbnz	r0, .L211
 3928              	.LVL517:
 3929              	.L205:
 3930              	.LBE432:
 3931              	.LBE431:
 3932              	.LBE429:
 3933              	.LBE428:
 3934              	.LBE425:
 3935              	.LBE424:
 3936              	.LBE423:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 3937              		.loc 9 639 0
 3938 0174 1448     		ldr	r0, .L212+20
 3939 0176 FFF7FEFF 		bl	printf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 108


 3940              	.LVL518:
 640:ROSSerial/ros/node_handle.h ****     }
 3941              		.loc 9 640 0
 3942 017a 4FF0FF38 		mov	r8, #-1
 3943              	.LVL519:
 3944 017e 9BE7     		b	.L194
 3945              	.LVL520:
 3946              	.L211:
 3947              	.LBB444:
 3948              	.LBB443:
 3949              	.LBB442:
 3950              	.LBB441:
 3951              	.LBB440:
 3952              	.LBB434:
 3953              	.LBB433:
 124:ROSSerial/AT32hardware.h **** 		}
 3954              		.loc 11 124 0
 3955 0180 2B46     		mov	r3, r5
 3956 0182 2246     		mov	r2, r4
 3957 0184 0D48     		ldr	r0, .L212+8
 3958              	.LVL521:
 3959 0186 FFF7FEFF 		bl	printf
 3960              	.LVL522:
 3961 018a F3E7     		b	.L205
 3962              	.LVL523:
 3963              	.L204:
 3964              	.LBE433:
 3965              	.LBE434:
 3966              	.LBB435:
 3967              	.LBB436:
 3968              	.LBB437:
 3969              	.LBB438:
 3970              	.LBB439:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3971              		.loc 3 13 0
 3972 018c 0D4B     		ldr	r3, .L212+16
 3973 018e 0393     		str	r3, [sp, #12]
 3974              	.LVL524:
 3975              	.LBE439:
 3976              	.LBE438:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3977              		.loc 9 652 0
 3978 0190 0323     		movs	r3, #3
 3979 0192 8DF81030 		strb	r3, [sp, #16]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3980              		.loc 9 653 0
 3981 0196 0C4C     		ldr	r4, .L212+20
 3982              	.LVL525:
 3983 0198 0594     		str	r4, [sp, #20]
 3984              		.loc 9 654 0
 3985 019a 03AA     		add	r2, sp, #12
 3986 019c 0721     		movs	r1, #7
 3987 019e 2846     		mov	r0, r5
 3988              	.LVL526:
 3989 01a0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3990              	.LVL527:
 3991              	.LBE437:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 109


 3992              	.LBE436:
 3993              	.LBE435:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 3994              		.loc 9 639 0
 3995 01a4 2046     		mov	r0, r4
 3996 01a6 FFF7FEFF 		bl	printf
 3997              	.LVL528:
 3998 01aa E3E7     		b	.L205
 3999              	.LVL529:
 4000              	.L206:
 4001              	.LBE440:
 4002              	.LBE441:
 4003              	.LBE442:
 4004              	.LBE443:
 4005              	.LBE444:
 605:ROSSerial/ros/node_handle.h ****     }
 4006              		.loc 9 605 0
 4007 01ac 4FF00008 		mov	r8, #0
 4008              	.LVL530:
 4009              	.LBE445:
 4010              	.LBE446:
 597:ROSSerial/ros/node_handle.h ****   }
 4011              		.loc 9 597 0
 4012 01b0 82E7     		b	.L194
 4013              	.L213:
 4014 01b2 00BF     		.align	2
 4015              	.L212:
 4016 01b4 00000000 		.word	.LC19
 4017 01b8 00000000 		.word	huart2
 4018 01bc 20000000 		.word	.LC20
 4019 01c0 40000000 		.word	.LC21
 4020 01c4 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4021 01c8 68000000 		.word	.LC22
 4022              		.cfi_endproc
 4023              	.LFE538:
 4024              		.fnend
 4026              		.section	.text.publish_hovebot_state,"ax",%progbits
 4027              		.align	1
 4028              		.global	publish_hovebot_state
 4029              		.syntax unified
 4030              		.thumb
 4031              		.thumb_func
 4032              		.fpu fpv4-sp-d16
 4034              	publish_hovebot_state:
 4035              		.fnstart
 4036              	.LFB495:
  52:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
 4037              		.loc 8 52 0
 4038              		.cfi_startproc
 4039              		@ args = 0, pretend = 0, frame = 136
 4040              		@ frame_needed = 0, uses_anonymous_args = 0
 4041 0000 70B5     		push	{r4, r5, r6, lr}
 4042              		.save {r4, r5, r6, lr}
 4043              	.LCFI27:
 4044              		.cfi_def_cfa_offset 16
 4045              		.cfi_offset 4, -16
 4046              		.cfi_offset 5, -12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 110


 4047              		.cfi_offset 6, -8
 4048              		.cfi_offset 14, -4
 4049              		.pad #136
 4050 0002 A2B0     		sub	sp, sp, #136
 4051              	.LCFI28:
 4052              		.cfi_def_cfa_offset 152
 4053              	.LVL531:
 4054              	.LBB493:
 4055              	.LBB494:
 4056              	.LBB495:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 4057              		.loc 7 40 0
 4058 0004 994B     		ldr	r3, .L234
 4059 0006 0E93     		str	r3, [sp, #56]
 4060 0008 0023     		movs	r3, #0
 4061 000a 1093     		str	r3, [sp, #64]
 4062 000c 1393     		str	r3, [sp, #76]
 4063              	.LVL532:
 4064              	.LBB496:
 4065              	.LBB497:
  13:ROSSerial/std_msgs/Header.h ****   {
 4066              		.loc 6 13 0
 4067 000e 984A     		ldr	r2, .L234+4
 4068 0010 0F92     		str	r2, [sp, #60]
 4069              	.LVL533:
 4070              	.LBB498:
 4071              	.LBB499:
 4072              	.LBB500:
 4073              		.loc 12 51 0
 4074 0012 1193     		str	r3, [sp, #68]
 4075 0014 1293     		str	r3, [sp, #72]
 4076              	.LVL534:
 4077              	.LBE500:
 4078              	.LBE499:
 4079              	.LBE498:
 4080              	.LBE497:
 4081              	.LBE496:
 4082              	.LBE495:
 4083              	.LBE494:
 4084              	.LBE493:
  54:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[0].ticks,wheel_posn[1].ticks};
 4085              		.loc 8 54 0
 4086 0016 974B     		ldr	r3, .L234+8
 4087 0018 0CAA     		add	r2, sp, #48
 4088 001a 93E80300 		ldm	r3, {r0, r1}
 4089 001e 82E80300 		stm	r2, {r0, r1}
  55:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[0].rpm, wheel_posn[1].rpm};
 4090              		.loc 8 55 0
 4091 0022 954B     		ldr	r3, .L234+12
 4092 0024 D3ED057A 		vldr.32	s15, [r3, #20]	@ int
 4093 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 4094 002c CDED0A7A 		vstr.32	s15, [sp, #40]
 4095 0030 D3ED0F7A 		vldr.32	s15, [r3, #60]	@ int
 4096 0034 F8EEE77A 		vcvt.f32.s32	s15, s15
 4097 0038 CDED0B7A 		vstr.32	s15, [sp, #44]
  56:./Src/ROS_main.cpp ****     float effort[2] = {pwml, pwmr};
 4098              		.loc 8 56 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 111


 4099 003c 1969     		ldr	r1, [r3, #16]	@ float
 4100 003e 0891     		str	r1, [sp, #32]	@ float
 4101 0040 9B6B     		ldr	r3, [r3, #56]	@ float
 4102 0042 0993     		str	r3, [sp, #36]	@ float
  57:./Src/ROS_main.cpp **** 
 4103              		.loc 8 57 0
 4104 0044 8D4B     		ldr	r3, .L234+16
 4105 0046 D3ED007A 		vldr.32	s15, [r3]	@ int
 4106 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 4107 004e CDED067A 		vstr.32	s15, [sp, #24]
 4108 0052 8B4B     		ldr	r3, .L234+20
 4109 0054 D3ED007A 		vldr.32	s15, [r3]	@ int
 4110 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 4111 005c CDED077A 		vstr.32	s15, [sp, #28]
  59:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
 4112              		.loc 8 59 0
 4113 0060 1692     		str	r2, [sp, #88]
  60:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
 4114              		.loc 8 60 0
 4115 0062 0223     		movs	r3, #2
 4116 0064 1493     		str	r3, [sp, #80]
  61:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
 4117              		.loc 8 61 0
 4118 0066 0AAA     		add	r2, sp, #40
 4119 0068 1992     		str	r2, [sp, #100]
  62:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
 4120              		.loc 8 62 0
 4121 006a 1793     		str	r3, [sp, #92]
  63:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
 4122              		.loc 8 63 0
 4123 006c 08AA     		add	r2, sp, #32
 4124 006e 1C92     		str	r2, [sp, #112]
  64:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
 4125              		.loc 8 64 0
 4126 0070 1A93     		str	r3, [sp, #104]
  65:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
 4127              		.loc 8 65 0
 4128 0072 1D93     		str	r3, [sp, #116]
  66:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
 4129              		.loc 8 66 0
 4130 0074 06AB     		add	r3, sp, #24
 4131 0076 1F93     		str	r3, [sp, #124]
 4132              	.LVL535:
 4133              	.LBB501:
 4134              	.LBB502:
 4135              	.LBB503:
 4136              	.LBB504:
 4137              		.loc 11 151 0
 4138 0078 FFF7FEFF 		bl	HAL_GetTick
 4139              	.LVL536:
 4140              	.LBE504:
 4141              	.LBE503:
 445:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 4142              		.loc 9 445 0
 4143 007c 814B     		ldr	r3, .L234+24
 4144 007e A3FB0023 		umull	r2, r3, r3, r0
 4145 0082 9B09     		lsrs	r3, r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 112


 4146 0084 8049     		ldr	r1, .L234+28
 4147 0086 CA68     		ldr	r2, [r1, #12]
 4148 0088 1A44     		add	r2, r2, r3
 4149 008a 2092     		str	r2, [sp, #128]
 446:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 4150              		.loc 9 446 0
 4151 008c 4FF47A72 		mov	r2, #1000
 4152 0090 02FB1303 		mls	r3, r2, r3, r0
 4153 0094 0869     		ldr	r0, [r1, #16]
 4154              	.LVL537:
 4155 0096 7D4A     		ldr	r2, .L234+32
 4156 0098 02FB0303 		mla	r3, r2, r3, r0
 4157 009c 2193     		str	r3, [sp, #132]
 447:ROSSerial/ros/node_handle.h ****     return current_time;
 4158              		.loc 9 447 0
 4159 009e 20AC     		add	r4, sp, #128
 4160 00a0 21A9     		add	r1, sp, #132
 4161 00a2 2046     		mov	r0, r4
 4162 00a4 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4163              	.LVL538:
 4164              	.LBE502:
 4165              	.LBE501:
  67:./Src/ROS_main.cpp **** 
 4166              		.loc 8 67 0
 4167 00a8 11AB     		add	r3, sp, #68
 4168 00aa 94E80300 		ldm	r4, {r0, r1}
 4169 00ae 83E80300 		stm	r3, {r0, r1}
  71:./Src/ROS_main.cpp ****     if(retval < 0)
 4170              		.loc 8 71 0
 4171 00b2 774B     		ldr	r3, .L234+36
 4172 00b4 1B68     		ldr	r3, [r3]
 4173 00b6 1D88     		ldrh	r5, [r3]
 4174              	.LVL539:
 4175              	.LBB505:
 4176              	.LBB506:
 602:ROSSerial/ros/node_handle.h ****       printf("time=%lu, in nh.publsh %d %x\n",hardware_.time(), id, msg);
 4177              		.loc 9 602 0
 4178 00b8 0A2D     		cmp	r5, #10
 4179 00ba 32D0     		beq	.L229
 4180              	.L215:
 604:ROSSerial/ros/node_handle.h ****       return 0;
 4181              		.loc 9 604 0
 4182 00bc 632D     		cmp	r5, #99
 4183 00be 05DD     		ble	.L216
 4184 00c0 714B     		ldr	r3, .L234+28
 4185 00c2 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4186 00c6 002B     		cmp	r3, #0
 4187 00c8 00F0C980 		beq	.L227
 4188              	.L216:
 610:ROSSerial/ros/node_handle.h **** 
 4189              		.loc 9 610 0
 4190 00cc 6E4C     		ldr	r4, .L234+28
 4191 00ce 0E9B     		ldr	r3, [sp, #56]
 4192 00d0 1B68     		ldr	r3, [r3]
 4193 00d2 04F21F21 		addw	r1, r4, #543
 4194 00d6 0EA8     		add	r0, sp, #56
 4195              	.LVL540:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 113


 4196 00d8 9847     		blx	r3
 4197              	.LVL541:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4198              		.loc 9 613 0
 4199 00da FF23     		movs	r3, #255
 4200 00dc 84F81832 		strb	r3, [r4, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4201              		.loc 9 614 0
 4202 00e0 FE23     		movs	r3, #254
 4203 00e2 84F81932 		strb	r3, [r4, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4204              		.loc 9 615 0
 4205 00e6 C3B2     		uxtb	r3, r0
 4206 00e8 84F81A32 		strb	r3, [r4, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4207              		.loc 9 616 0
 4208 00ec C0F30722 		ubfx	r2, r0, #8, #8
 4209 00f0 84F81B22 		strb	r2, [r4, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4210              		.loc 9 617 0
 4211 00f4 1344     		add	r3, r3, r2
 4212 00f6 DBB2     		uxtb	r3, r3
 4213 00f8 DB43     		mvns	r3, r3
 4214 00fa 84F81C32 		strb	r3, [r4, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4215              		.loc 9 618 0
 4216 00fe 84F81D52 		strb	r5, [r4, #541]
 619:ROSSerial/ros/node_handle.h **** 
 4217              		.loc 9 619 0
 4218 0102 45F30723 		sbfx	r3, r5, #8, #8
 4219 0106 84F81E32 		strb	r3, [r4, #542]
 4220              	.LVL542:
 4221              	.LBB507:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4222              		.loc 9 623 0
 4223 010a 0523     		movs	r3, #5
 4224              	.LBE507:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4225              		.loc 9 622 0
 4226 010c 0024     		movs	r4, #0
 4227              	.LVL543:
 4228              	.L219:
 4229              	.LBB508:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4230              		.loc 9 623 0
 4231 010e C21D     		adds	r2, r0, #7
 4232 0110 9A42     		cmp	r2, r3
 4233 0112 0FDD     		ble	.L218
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 4234              		.loc 9 624 0
 4235 0114 5C4A     		ldr	r2, .L234+28
 4236 0116 1A44     		add	r2, r2, r3
 4237 0118 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4238 011c 1444     		add	r4, r4, r2
 4239              	.LVL544:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4240              		.loc 9 623 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 114


 4241 011e 0133     		adds	r3, r3, #1
 4242              	.LVL545:
 4243 0120 F5E7     		b	.L219
 4244              	.LVL546:
 4245              	.L229:
 4246              	.LBE508:
 4247              	.LBB509:
 4248              	.LBB510:
 4249              		.loc 11 151 0
 4250 0122 FFF7FEFF 		bl	HAL_GetTick
 4251              	.LVL547:
 4252              	.LBE510:
 4253              	.LBE509:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 4254              		.loc 9 603 0
 4255 0126 0EAB     		add	r3, sp, #56
 4256              	.LVL548:
 4257 0128 2A46     		mov	r2, r5
 4258 012a 0146     		mov	r1, r0
 4259 012c 5948     		ldr	r0, .L234+40
 4260 012e FFF7FEFF 		bl	printf
 4261              	.LVL549:
 4262 0132 C3E7     		b	.L215
 4263              	.LVL550:
 4264              	.L218:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4265              		.loc 9 626 0
 4266 0134 6342     		rsbs	r3, r4, #0
 4267              	.LVL551:
 4268 0136 E4B2     		uxtb	r4, r4
 4269              	.LVL552:
 4270 0138 DBB2     		uxtb	r3, r3
 4271 013a 58BF     		it	pl
 4272 013c 5C42     		rsbpl	r4, r3, #0
 4273 013e 00F10806 		add	r6, r0, #8
 4274              	.LVL553:
 4275 0142 E443     		mvns	r4, r4
 4276 0144 504B     		ldr	r3, .L234+28
 4277 0146 1A44     		add	r2, r2, r3
 4278 0148 82F81842 		strb	r4, [r2, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 4279              		.loc 9 629 0
 4280 014c B6F5007F 		cmp	r6, #512
 4281 0150 22DC     		bgt	.L220
 4282              	.LVL554:
 4283              	.LBB511:
 4284              	.LBB512:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4285              		.loc 11 121 0
 4286 0152 1423     		movs	r3, #20
 4287 0154 B2B2     		uxth	r2, r6
 4288 0156 5049     		ldr	r1, .L234+44
 4289 0158 5048     		ldr	r0, .L234+48
 4290 015a FFF7FEFF 		bl	HAL_UART_Transmit
 4291              	.LVL555:
 122:ROSSerial/AT32hardware.h **** 		{
 4292              		.loc 11 122 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 115


 4293 015e 0146     		mov	r1, r0
 4294 0160 28B9     		cbnz	r0, .L230
 4295              	.LVL556:
 4296              	.L221:
 4297              	.LBE512:
 4298              	.LBE511:
 632:ROSSerial/ros/node_handle.h ****         printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 4299              		.loc 9 632 0
 4300 0162 0A2D     		cmp	r5, #10
 4301 0164 09D0     		beq	.L231
 4302              	.LVL557:
 4303              	.L217:
 4304              	.LBE506:
 4305              	.LBE505:
  72:./Src/ROS_main.cpp ****     {
 4306              		.loc 8 72 0
 4307 0166 002E     		cmp	r6, #0
 4308 0168 7BDB     		blt	.L232
 4309              	.L214:
  89:./Src/ROS_main.cpp **** 
 4310              		.loc 8 89 0
 4311 016a 22B0     		add	sp, sp, #136
 4312              	.LCFI29:
 4313              		.cfi_remember_state
 4314              		.cfi_def_cfa_offset 16
 4315              		@ sp needed
 4316 016c 70BD     		pop	{r4, r5, r6, pc}
 4317              	.LVL558:
 4318              	.L230:
 4319              	.LCFI30:
 4320              		.cfi_restore_state
 4321              	.LBB540:
 4322              	.LBB539:
 4323              	.LBB514:
 4324              	.LBB513:
 124:ROSSerial/AT32hardware.h **** 		}
 4325              		.loc 11 124 0
 4326 016e 4A4B     		ldr	r3, .L234+44
 4327 0170 3246     		mov	r2, r6
 4328 0172 4B48     		ldr	r0, .L234+52
 4329              	.LVL559:
 4330 0174 FFF7FEFF 		bl	printf
 4331              	.LVL560:
 4332 0178 F3E7     		b	.L221
 4333              	.LVL561:
 4334              	.L231:
 4335              	.LBE513:
 4336              	.LBE514:
 4337              	.LBB515:
 4338              	.LBB516:
 4339              		.loc 11 151 0
 4340 017a FFF7FEFF 		bl	HAL_GetTick
 4341              	.LVL562:
 4342 017e 0446     		mov	r4, r0
 4343              	.LVL563:
 4344              	.LBE516:
 4345              	.LBE515:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 116


 633:ROSSerial/ros/node_handle.h ****       return l;
 4346              		.loc 9 633 0
 4347 0180 22A8     		add	r0, sp, #136
 4348 0182 50F8503D 		ldr	r3, [r0, #-80]!
 4349 0186 9B68     		ldr	r3, [r3, #8]
 4350 0188 9847     		blx	r3
 4351              	.LVL564:
 4352 018a 3346     		mov	r3, r6
 4353 018c 0246     		mov	r2, r0
 4354 018e 2146     		mov	r1, r4
 4355 0190 4448     		ldr	r0, .L234+56
 4356 0192 FFF7FEFF 		bl	printf
 4357              	.LVL565:
 4358 0196 E6E7     		b	.L217
 4359              	.L220:
 4360              	.LVL566:
 4361              	.LBB517:
 4362              	.LBB518:
 4363              	.LBB519:
 4364              	.LBB520:
 4365              	.LBB521:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4366              		.loc 3 13 0
 4367 0198 434B     		ldr	r3, .L234+60
 4368 019a 0093     		str	r3, [sp]
 4369              	.LVL567:
 4370              	.LBE521:
 4371              	.LBE520:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4372              		.loc 9 652 0
 4373 019c 0322     		movs	r2, #3
 4374 019e 8DF80420 		strb	r2, [sp, #4]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4375              		.loc 9 653 0
 4376 01a2 424A     		ldr	r2, .L234+64
 4377 01a4 0292     		str	r2, [sp, #8]
 4378              	.LVL568:
 4379              	.LBB522:
 4380              	.LBB523:
 610:ROSSerial/ros/node_handle.h **** 
 4381              		.loc 9 610 0
 4382 01a6 384C     		ldr	r4, .L234+28
 4383 01a8 1B68     		ldr	r3, [r3]
 4384 01aa 04F21F21 		addw	r1, r4, #543
 4385 01ae 6846     		mov	r0, sp
 4386 01b0 9847     		blx	r3
 4387              	.LVL569:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4388              		.loc 9 613 0
 4389 01b2 FF23     		movs	r3, #255
 4390 01b4 84F81832 		strb	r3, [r4, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4391              		.loc 9 614 0
 4392 01b8 FE23     		movs	r3, #254
 4393 01ba 84F81932 		strb	r3, [r4, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4394              		.loc 9 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 117


 4395 01be C3B2     		uxtb	r3, r0
 4396 01c0 84F81A32 		strb	r3, [r4, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4397              		.loc 9 616 0
 4398 01c4 C0F30722 		ubfx	r2, r0, #8, #8
 4399 01c8 84F81B22 		strb	r2, [r4, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4400              		.loc 9 617 0
 4401 01cc 1344     		add	r3, r3, r2
 4402 01ce DBB2     		uxtb	r3, r3
 4403 01d0 DB43     		mvns	r3, r3
 4404 01d2 84F81C32 		strb	r3, [r4, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4405              		.loc 9 618 0
 4406 01d6 0723     		movs	r3, #7
 4407 01d8 84F81D32 		strb	r3, [r4, #541]
 619:ROSSerial/ros/node_handle.h **** 
 4408              		.loc 9 619 0
 4409 01dc 0023     		movs	r3, #0
 4410 01de 84F81E32 		strb	r3, [r4, #542]
 4411              	.LVL570:
 4412              	.LBB524:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4413              		.loc 9 623 0
 4414 01e2 0522     		movs	r2, #5
 4415              	.LVL571:
 4416              	.L223:
 4417 01e4 C11D     		adds	r1, r0, #7
 4418 01e6 9142     		cmp	r1, r2
 4419 01e8 06DD     		ble	.L222
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 4420              		.loc 9 624 0
 4421 01ea 2749     		ldr	r1, .L234+28
 4422 01ec 1144     		add	r1, r1, r2
 4423 01ee 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4424 01f2 0B44     		add	r3, r3, r1
 4425              	.LVL572:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4426              		.loc 9 623 0
 4427 01f4 0132     		adds	r2, r2, #1
 4428              	.LVL573:
 4429 01f6 F5E7     		b	.L223
 4430              	.L222:
 4431              	.LVL574:
 4432              	.LBE524:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4433              		.loc 9 626 0
 4434 01f8 5A42     		rsbs	r2, r3, #0
 4435              	.LVL575:
 4436 01fa DBB2     		uxtb	r3, r3
 4437              	.LVL576:
 4438 01fc D2B2     		uxtb	r2, r2
 4439 01fe 58BF     		it	pl
 4440 0200 5342     		rsbpl	r3, r2, #0
 4441 0202 00F10804 		add	r4, r0, #8
 4442              	.LVL577:
 4443 0206 DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 118


 4444 0208 1F4A     		ldr	r2, .L234+28
 4445 020a 1144     		add	r1, r1, r2
 4446 020c 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 4447              		.loc 9 629 0
 4448 0210 B4F5007F 		cmp	r4, #512
 4449 0214 13DC     		bgt	.L224
 4450              	.LVL578:
 4451              	.LBB525:
 4452              	.LBB526:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4453              		.loc 11 121 0
 4454 0216 1423     		movs	r3, #20
 4455 0218 A2B2     		uxth	r2, r4
 4456 021a 1F49     		ldr	r1, .L234+44
 4457 021c 1F48     		ldr	r0, .L234+48
 4458 021e FFF7FEFF 		bl	HAL_UART_Transmit
 4459              	.LVL579:
 122:ROSSerial/AT32hardware.h **** 		{
 4460              		.loc 11 122 0
 4461 0222 0146     		mov	r1, r0
 4462 0224 28B9     		cbnz	r0, .L233
 4463              	.LVL580:
 4464              	.L225:
 4465              	.LBE526:
 4466              	.LBE525:
 4467              	.LBE523:
 4468              	.LBE522:
 4469              	.LBE519:
 4470              	.LBE518:
 4471              	.LBE517:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 4472              		.loc 9 639 0
 4473 0226 2148     		ldr	r0, .L234+64
 4474 0228 FFF7FEFF 		bl	printf
 4475              	.LVL581:
 640:ROSSerial/ros/node_handle.h ****     }
 4476              		.loc 9 640 0
 4477 022c 4FF0FF36 		mov	r6, #-1
 4478              	.LVL582:
 4479 0230 99E7     		b	.L217
 4480              	.LVL583:
 4481              	.L233:
 4482              	.LBB538:
 4483              	.LBB537:
 4484              	.LBB536:
 4485              	.LBB535:
 4486              	.LBB534:
 4487              	.LBB528:
 4488              	.LBB527:
 124:ROSSerial/AT32hardware.h **** 		}
 4489              		.loc 11 124 0
 4490 0232 194B     		ldr	r3, .L234+44
 4491 0234 2246     		mov	r2, r4
 4492 0236 1A48     		ldr	r0, .L234+52
 4493              	.LVL584:
 4494 0238 FFF7FEFF 		bl	printf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 119


 4495              	.LVL585:
 4496 023c F3E7     		b	.L225
 4497              	.LVL586:
 4498              	.L224:
 4499              	.LBE527:
 4500              	.LBE528:
 4501              	.LBB529:
 4502              	.LBB530:
 4503              	.LBB531:
 4504              	.LBB532:
 4505              	.LBB533:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4506              		.loc 3 13 0
 4507 023e 1A4B     		ldr	r3, .L234+60
 4508 0240 0393     		str	r3, [sp, #12]
 4509              	.LVL587:
 4510              	.LBE533:
 4511              	.LBE532:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4512              		.loc 9 652 0
 4513 0242 0323     		movs	r3, #3
 4514 0244 8DF81030 		strb	r3, [sp, #16]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4515              		.loc 9 653 0
 4516 0248 184C     		ldr	r4, .L234+64
 4517              	.LVL588:
 4518 024a 0594     		str	r4, [sp, #20]
 4519              		.loc 9 654 0
 4520 024c 03AA     		add	r2, sp, #12
 4521 024e 0721     		movs	r1, #7
 4522 0250 0D48     		ldr	r0, .L234+28
 4523              	.LVL589:
 4524 0252 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4525              	.LVL590:
 4526              	.LBE531:
 4527              	.LBE530:
 4528              	.LBE529:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 4529              		.loc 9 639 0
 4530 0256 2046     		mov	r0, r4
 4531 0258 FFF7FEFF 		bl	printf
 4532              	.LVL591:
 4533 025c E3E7     		b	.L225
 4534              	.LVL592:
 4535              	.L227:
 4536              	.LBE534:
 4537              	.LBE535:
 4538              	.LBE536:
 4539              	.LBE537:
 4540              	.LBE538:
 605:ROSSerial/ros/node_handle.h ****     }
 4541              		.loc 9 605 0
 4542 025e 0026     		movs	r6, #0
 4543 0260 81E7     		b	.L217
 4544              	.LVL593:
 4545              	.L232:
 4546              	.LBE539:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 120


 4547              	.LBE540:
  74:./Src/ROS_main.cpp ****     }
 4548              		.loc 8 74 0
 4549 0262 3146     		mov	r1, r6
 4550 0264 1248     		ldr	r0, .L234+68
 4551 0266 FFF7FEFF 		bl	printf
 4552              	.LVL594:
  89:./Src/ROS_main.cpp **** 
 4553              		.loc 8 89 0
 4554 026a 7EE7     		b	.L214
 4555              	.L235:
 4556              		.align	2
 4557              	.L234:
 4558 026c 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 4559 0270 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4560 0274 00000000 		.word	.LANCHOR4
 4561 0278 00000000 		.word	wheel_posn
 4562 027c 00000000 		.word	pwml
 4563 0280 00000000 		.word	pwmr
 4564 0284 D34D6210 		.word	274877907
 4565 0288 00000000 		.word	.LANCHOR1
 4566 028c 40420F00 		.word	1000000
 4567 0290 00000000 		.word	.LANCHOR2
 4568 0294 00000000 		.word	.LC19
 4569 0298 18020000 		.word	.LANCHOR1+536
 4570 029c 00000000 		.word	huart2
 4571 02a0 20000000 		.word	.LC20
 4572 02a4 40000000 		.word	.LC21
 4573 02a8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4574 02ac 68000000 		.word	.LC22
 4575 02b0 00000000 		.word	.LC24
 4576              		.cfi_endproc
 4577              	.LFE495:
 4578              		.fnend
 4580              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 4581              		.align	1
 4582              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4583              		.syntax unified
 4584              		.thumb
 4585              		.thumb_func
 4586              		.fpu fpv4-sp-d16
 4588              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 4589              		.fnstart
 4590              	.LFB523:
 412:ROSSerial/ros/node_handle.h ****   {
 4591              		.loc 9 412 0
 4592              		.cfi_startproc
 4593              		@ args = 0, pretend = 0, frame = 40
 4594              		@ frame_needed = 0, uses_anonymous_args = 0
 4595              	.LVL595:
 4596 0000 70B5     		push	{r4, r5, r6, lr}
 4597              		.save {r4, r5, r6, lr}
 4598              	.LCFI31:
 4599              		.cfi_def_cfa_offset 16
 4600              		.cfi_offset 4, -16
 4601              		.cfi_offset 5, -12
 4602              		.cfi_offset 6, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 121


 4603              		.cfi_offset 14, -4
 4604              		.pad #40
 4605 0002 8AB0     		sub	sp, sp, #40
 4606              	.LCFI32:
 4607              		.cfi_def_cfa_offset 56
 414:ROSSerial/ros/node_handle.h ****     {
 4608              		.loc 9 414 0
 4609 0004 D0F82425 		ldr	r2, [r0, #1316]
 4610 0008 8368     		ldr	r3, [r0, #8]
 4611 000a 9A42     		cmp	r2, r3
 4612 000c 3CD3     		bcc	.L249
 4613 000e 0546     		mov	r5, r0
 4614              	.LVL596:
 4615              	.LBB591:
 4616              	.LBB592:
  14:ROSSerial/std_msgs/Time.h ****   {
 4617              		.loc 1 14 0
 4618 0010 684B     		ldr	r3, .L252
 4619 0012 0793     		str	r3, [sp, #28]
 4620              	.LVL597:
 4621              	.LBB593:
 4622              	.LBB594:
 4623              	.LBB595:
 4624              		.loc 12 51 0
 4625 0014 0024     		movs	r4, #0
 4626 0016 0894     		str	r4, [sp, #32]
 4627 0018 0994     		str	r4, [sp, #36]
 4628              	.LVL598:
 4629              	.LBE595:
 4630              	.LBE594:
 4631              	.LBE593:
 4632              	.LBE592:
 4633              	.LBE591:
 4634              	.LBB596:
 4635              	.LBB597:
 4636              		.loc 11 151 0
 4637 001a FFF7FEFF 		bl	HAL_GetTick
 4638              	.LVL599:
 4639 001e 0146     		mov	r1, r0
 4640              	.LVL600:
 4641              	.LBE597:
 4642              	.LBE596:
 420:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 4643              		.loc 9 420 0
 4644 0020 A860     		str	r0, [r5, #8]
 421:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 4645              		.loc 9 421 0
 4646 0022 6548     		ldr	r0, .L252+4
 4647 0024 FFF7FEFF 		bl	printf
 4648              	.LVL601:
 4649              	.LBB598:
 4650              	.LBB599:
 4651              	.LBB600:
 4652              	.LBB601:
 4653              		.loc 11 151 0
 4654 0028 FFF7FEFF 		bl	HAL_GetTick
 4655              	.LVL602:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 122


 4656              	.LBE601:
 4657              	.LBE600:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 4658              		.loc 9 603 0
 4659 002c 07AB     		add	r3, sp, #28
 4660              	.LVL603:
 4661 002e 0A22     		movs	r2, #10
 4662 0030 0146     		mov	r1, r0
 4663 0032 6248     		ldr	r0, .L252+8
 4664 0034 FFF7FEFF 		bl	printf
 4665              	.LVL604:
 610:ROSSerial/ros/node_handle.h **** 
 4666              		.loc 9 610 0
 4667 0038 079B     		ldr	r3, [sp, #28]
 4668 003a 1B68     		ldr	r3, [r3]
 4669 003c 05F21F21 		addw	r1, r5, #543
 4670 0040 07A8     		add	r0, sp, #28
 4671              	.LVL605:
 4672 0042 9847     		blx	r3
 4673              	.LVL606:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4674              		.loc 9 613 0
 4675 0044 FF23     		movs	r3, #255
 4676 0046 85F81832 		strb	r3, [r5, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4677              		.loc 9 614 0
 4678 004a FE23     		movs	r3, #254
 4679 004c 85F81932 		strb	r3, [r5, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4680              		.loc 9 615 0
 4681 0050 C3B2     		uxtb	r3, r0
 4682 0052 85F81A32 		strb	r3, [r5, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4683              		.loc 9 616 0
 4684 0056 C0F30722 		ubfx	r2, r0, #8, #8
 4685 005a 85F81B22 		strb	r2, [r5, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4686              		.loc 9 617 0
 4687 005e 1344     		add	r3, r3, r2
 4688 0060 DBB2     		uxtb	r3, r3
 4689 0062 DB43     		mvns	r3, r3
 4690 0064 85F81C32 		strb	r3, [r5, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4691              		.loc 9 618 0
 4692 0068 0A23     		movs	r3, #10
 4693 006a 85F81D32 		strb	r3, [r5, #541]
 619:ROSSerial/ros/node_handle.h **** 
 4694              		.loc 9 619 0
 4695 006e 85F81E42 		strb	r4, [r5, #542]
 4696              	.LVL607:
 4697              	.LBB602:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4698              		.loc 9 623 0
 4699 0072 0521     		movs	r1, #5
 4700              	.LBE602:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4701              		.loc 9 622 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 123


 4702 0074 2246     		mov	r2, r4
 4703              	.LVL608:
 4704              	.L240:
 4705              	.LBB603:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4706              		.loc 9 623 0
 4707 0076 C41D     		adds	r4, r0, #7
 4708 0078 8C42     		cmp	r4, r1
 4709 007a 0CDD     		ble	.L239
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 4710              		.loc 9 624 0
 4711 007c 6B18     		adds	r3, r5, r1
 4712 007e 93F81832 		ldrb	r3, [r3, #536]	@ zero_extendqisi2
 4713 0082 1A44     		add	r2, r2, r3
 4714              	.LVL609:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4715              		.loc 9 623 0
 4716 0084 0131     		adds	r1, r1, #1
 4717              	.LVL610:
 4718 0086 F6E7     		b	.L240
 4719              	.LVL611:
 4720              	.L249:
 4721              	.LBE603:
 4722              	.LBE599:
 4723              	.LBE598:
 4724              	.LBB634:
 4725              	.LBB635:
 4726              		.loc 11 151 0
 4727 0088 FFF7FEFF 		bl	HAL_GetTick
 4728              	.LVL612:
 4729              	.LBE635:
 4730              	.LBE634:
 416:ROSSerial/ros/node_handle.h ****       return;
 4731              		.loc 9 416 0
 4732 008c 0146     		mov	r1, r0
 4733 008e 4C48     		ldr	r0, .L252+12
 4734 0090 FFF7FEFF 		bl	printf
 4735              	.LVL613:
 4736 0094 25E0     		b	.L236
 4737              	.LVL614:
 4738              	.L239:
 4739              	.LBB636:
 4740              	.LBB632:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4741              		.loc 9 626 0
 4742 0096 5342     		rsbs	r3, r2, #0
 4743 0098 D2B2     		uxtb	r2, r2
 4744              	.LVL615:
 4745 009a DBB2     		uxtb	r3, r3
 4746 009c 58BF     		it	pl
 4747 009e 5A42     		rsbpl	r2, r3, #0
 4748 00a0 00F10806 		add	r6, r0, #8
 4749              	.LVL616:
 4750 00a4 D243     		mvns	r2, r2
 4751 00a6 2C44     		add	r4, r4, r5
 4752 00a8 84F81822 		strb	r2, [r4, #536]
 629:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 124


 4753              		.loc 9 629 0
 4754 00ac B6F5007F 		cmp	r6, #512
 4755 00b0 1FDC     		bgt	.L241
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 4756              		.loc 9 631 0
 4757 00b2 05F50675 		add	r5, r5, #536
 4758              	.LVL617:
 4759              	.LBB604:
 4760              	.LBB605:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4761              		.loc 11 121 0
 4762 00b6 1423     		movs	r3, #20
 4763 00b8 B2B2     		uxth	r2, r6
 4764 00ba 2946     		mov	r1, r5
 4765              	.LVL618:
 4766 00bc 4148     		ldr	r0, .L252+16
 4767 00be FFF7FEFF 		bl	HAL_UART_Transmit
 4768              	.LVL619:
 122:ROSSerial/AT32hardware.h **** 		{
 4769              		.loc 11 122 0
 4770 00c2 0146     		mov	r1, r0
 4771 00c4 78B9     		cbnz	r0, .L250
 4772              	.LVL620:
 4773              	.L242:
 4774              	.LBE605:
 4775              	.LBE604:
 4776              	.LBB607:
 4777              	.LBB608:
 4778              		.loc 11 151 0
 4779 00c6 FFF7FEFF 		bl	HAL_GetTick
 4780              	.LVL621:
 4781 00ca 0446     		mov	r4, r0
 4782              	.LVL622:
 4783              	.LBE608:
 4784              	.LBE607:
 633:ROSSerial/ros/node_handle.h ****       return l;
 4785              		.loc 9 633 0
 4786 00cc 0AA8     		add	r0, sp, #40
 4787 00ce 50F80C3D 		ldr	r3, [r0, #-12]!
 4788 00d2 9B68     		ldr	r3, [r3, #8]
 4789 00d4 9847     		blx	r3
 4790              	.LVL623:
 4791 00d6 3346     		mov	r3, r6
 4792 00d8 0246     		mov	r2, r0
 4793 00da 2146     		mov	r1, r4
 4794 00dc 3A48     		ldr	r0, .L252+20
 4795 00de FFF7FEFF 		bl	printf
 4796              	.LVL624:
 4797              	.L236:
 4798              	.LBE632:
 4799              	.LBE636:
 424:ROSSerial/ros/node_handle.h **** 
 4800              		.loc 9 424 0
 4801 00e2 0AB0     		add	sp, sp, #40
 4802              	.LCFI33:
 4803              		.cfi_remember_state
 4804              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 125


 4805              		@ sp needed
 4806 00e4 70BD     		pop	{r4, r5, r6, pc}
 4807              	.LVL625:
 4808              	.L250:
 4809              	.LCFI34:
 4810              		.cfi_restore_state
 4811              	.LBB637:
 4812              	.LBB633:
 4813              	.LBB609:
 4814              	.LBB606:
 124:ROSSerial/AT32hardware.h **** 		}
 4815              		.loc 11 124 0
 4816 00e6 2B46     		mov	r3, r5
 4817 00e8 3246     		mov	r2, r6
 4818 00ea 3848     		ldr	r0, .L252+24
 4819              	.LVL626:
 4820 00ec FFF7FEFF 		bl	printf
 4821              	.LVL627:
 4822 00f0 E9E7     		b	.L242
 4823              	.LVL628:
 4824              	.L241:
 4825              	.LBE606:
 4826              	.LBE609:
 4827              	.LBB610:
 4828              	.LBB611:
 4829              	.LBB612:
 4830              	.LBB613:
 4831              	.LBB614:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4832              		.loc 3 13 0
 4833 00f2 374B     		ldr	r3, .L252+28
 4834 00f4 0193     		str	r3, [sp, #4]
 4835              	.LVL629:
 4836              	.LBE614:
 4837              	.LBE613:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4838              		.loc 9 652 0
 4839 00f6 0322     		movs	r2, #3
 4840 00f8 8DF80820 		strb	r2, [sp, #8]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4841              		.loc 9 653 0
 4842 00fc 354A     		ldr	r2, .L252+32
 4843 00fe 0392     		str	r2, [sp, #12]
 4844              	.LVL630:
 4845              	.LBB615:
 4846              	.LBB616:
 610:ROSSerial/ros/node_handle.h **** 
 4847              		.loc 9 610 0
 4848 0100 1B68     		ldr	r3, [r3]
 4849 0102 05F21F21 		addw	r1, r5, #543
 4850              	.LVL631:
 4851 0106 01A8     		add	r0, sp, #4
 4852              	.LVL632:
 4853 0108 9847     		blx	r3
 4854              	.LVL633:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4855              		.loc 9 613 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 126


 4856 010a FF23     		movs	r3, #255
 4857 010c 85F81832 		strb	r3, [r5, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4858              		.loc 9 614 0
 4859 0110 FE23     		movs	r3, #254
 4860 0112 85F81932 		strb	r3, [r5, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4861              		.loc 9 615 0
 4862 0116 C3B2     		uxtb	r3, r0
 4863 0118 85F81A32 		strb	r3, [r5, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4864              		.loc 9 616 0
 4865 011c C0F30722 		ubfx	r2, r0, #8, #8
 4866 0120 85F81B22 		strb	r2, [r5, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4867              		.loc 9 617 0
 4868 0124 1344     		add	r3, r3, r2
 4869 0126 DBB2     		uxtb	r3, r3
 4870 0128 DB43     		mvns	r3, r3
 4871 012a 85F81C32 		strb	r3, [r5, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4872              		.loc 9 618 0
 4873 012e 0723     		movs	r3, #7
 4874 0130 85F81D32 		strb	r3, [r5, #541]
 619:ROSSerial/ros/node_handle.h **** 
 4875              		.loc 9 619 0
 4876 0134 0023     		movs	r3, #0
 4877 0136 85F81E32 		strb	r3, [r5, #542]
 4878              	.LVL634:
 4879              	.LBB617:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4880              		.loc 9 623 0
 4881 013a 0522     		movs	r2, #5
 4882              	.LVL635:
 4883              	.L245:
 4884 013c C11D     		adds	r1, r0, #7
 4885 013e 9142     		cmp	r1, r2
 4886 0140 05DD     		ble	.L244
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 4887              		.loc 9 624 0
 4888 0142 A918     		adds	r1, r5, r2
 4889 0144 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4890 0148 0B44     		add	r3, r3, r1
 4891              	.LVL636:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4892              		.loc 9 623 0
 4893 014a 0132     		adds	r2, r2, #1
 4894              	.LVL637:
 4895 014c F6E7     		b	.L245
 4896              	.L244:
 4897              	.LVL638:
 4898              	.LBE617:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4899              		.loc 9 626 0
 4900 014e 5A42     		rsbs	r2, r3, #0
 4901              	.LVL639:
 4902 0150 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 127


 4903              	.LVL640:
 4904 0152 D2B2     		uxtb	r2, r2
 4905 0154 58BF     		it	pl
 4906 0156 5342     		rsbpl	r3, r2, #0
 4907 0158 00F10804 		add	r4, r0, #8
 4908              	.LVL641:
 4909 015c DB43     		mvns	r3, r3
 4910 015e 2944     		add	r1, r1, r5
 4911 0160 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 4912              		.loc 9 629 0
 4913 0164 B4F5007F 		cmp	r4, #512
 4914 0168 13DC     		bgt	.L246
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 4915              		.loc 9 631 0
 4916 016a 05F50675 		add	r5, r5, #536
 4917              	.LVL642:
 4918              	.LBB618:
 4919              	.LBB619:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4920              		.loc 11 121 0
 4921 016e 1423     		movs	r3, #20
 4922 0170 A2B2     		uxth	r2, r4
 4923 0172 2946     		mov	r1, r5
 4924 0174 1348     		ldr	r0, .L252+16
 4925 0176 FFF7FEFF 		bl	HAL_UART_Transmit
 4926              	.LVL643:
 122:ROSSerial/AT32hardware.h **** 		{
 4927              		.loc 11 122 0
 4928 017a 0146     		mov	r1, r0
 4929 017c 18B9     		cbnz	r0, .L251
 4930              	.LVL644:
 4931              	.L247:
 4932              	.LBE619:
 4933              	.LBE618:
 4934              	.LBE616:
 4935              	.LBE615:
 4936              	.LBE612:
 4937              	.LBE611:
 4938              	.LBE610:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 4939              		.loc 9 639 0
 4940 017e 1548     		ldr	r0, .L252+32
 4941 0180 FFF7FEFF 		bl	printf
 4942              	.LVL645:
 4943 0184 ADE7     		b	.L236
 4944              	.LVL646:
 4945              	.L251:
 4946              	.LBB631:
 4947              	.LBB630:
 4948              	.LBB629:
 4949              	.LBB628:
 4950              	.LBB627:
 4951              	.LBB621:
 4952              	.LBB620:
 124:ROSSerial/AT32hardware.h **** 		}
 4953              		.loc 11 124 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 128


 4954 0186 2B46     		mov	r3, r5
 4955 0188 2246     		mov	r2, r4
 4956 018a 1048     		ldr	r0, .L252+24
 4957              	.LVL647:
 4958 018c FFF7FEFF 		bl	printf
 4959              	.LVL648:
 4960 0190 F5E7     		b	.L247
 4961              	.LVL649:
 4962              	.L246:
 4963              	.LBE620:
 4964              	.LBE621:
 4965              	.LBB622:
 4966              	.LBB623:
 4967              	.LBB624:
 4968              	.LBB625:
 4969              	.LBB626:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4970              		.loc 3 13 0
 4971 0192 0F4B     		ldr	r3, .L252+28
 4972 0194 0493     		str	r3, [sp, #16]
 4973              	.LVL650:
 4974              	.LBE626:
 4975              	.LBE625:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4976              		.loc 9 652 0
 4977 0196 0323     		movs	r3, #3
 4978 0198 8DF81430 		strb	r3, [sp, #20]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4979              		.loc 9 653 0
 4980 019c 0D4C     		ldr	r4, .L252+32
 4981              	.LVL651:
 4982 019e 0694     		str	r4, [sp, #24]
 4983              		.loc 9 654 0
 4984 01a0 04AA     		add	r2, sp, #16
 4985 01a2 0721     		movs	r1, #7
 4986 01a4 2846     		mov	r0, r5
 4987              	.LVL652:
 4988 01a6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4989              	.LVL653:
 4990              	.LBE624:
 4991              	.LBE623:
 4992              	.LBE622:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 4993              		.loc 9 639 0
 4994 01aa 2046     		mov	r0, r4
 4995 01ac FFF7FEFF 		bl	printf
 4996              	.LVL654:
 4997 01b0 E5E7     		b	.L247
 4998              	.L253:
 4999 01b2 00BF     		.align	2
 5000              	.L252:
 5001 01b4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5002 01b8 2C000000 		.word	.LC26
 5003 01bc 00000000 		.word	.LC19
 5004 01c0 00000000 		.word	.LC25
 5005 01c4 00000000 		.word	huart2
 5006 01c8 40000000 		.word	.LC21
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 129


 5007 01cc 20000000 		.word	.LC20
 5008 01d0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5009 01d4 68000000 		.word	.LC22
 5010              	.LBE627:
 5011              	.LBE628:
 5012              	.LBE629:
 5013              	.LBE630:
 5014              	.LBE631:
 5015              	.LBE633:
 5016              	.LBE637:
 5017              		.cfi_endproc
 5018              	.LFE523:
 5019              		.fnend
 5021              		.section	.text.ros_run,"ax",%progbits
 5022              		.align	1
 5023              		.global	ros_run
 5024              		.syntax unified
 5025              		.thumb
 5026              		.thumb_func
 5027              		.fpu fpv4-sp-d16
 5029              	ros_run:
 5030              		.fnstart
 5031              	.LFB496:
  92:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
 5032              		.loc 8 92 0
 5033              		.cfi_startproc
 5034              		@ args = 0, pretend = 0, frame = 112
 5035              		@ frame_needed = 0, uses_anonymous_args = 0
 5036 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5037              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 5038              	.LCFI35:
 5039              		.cfi_def_cfa_offset 32
 5040              		.cfi_offset 4, -32
 5041              		.cfi_offset 5, -28
 5042              		.cfi_offset 6, -24
 5043              		.cfi_offset 7, -20
 5044              		.cfi_offset 8, -16
 5045              		.cfi_offset 9, -12
 5046              		.cfi_offset 10, -8
 5047              		.cfi_offset 14, -4
 5048              		.pad #120
 5049 0004 9EB0     		sub	sp, sp, #120
 5050              	.LCFI36:
 5051              		.cfi_def_cfa_offset 152
  93:./Src/ROS_main.cpp **** 
 5052              		.loc 8 93 0
 5053 0006 FFF7FEFF 		bl	HAL_GetTick
 5054              	.LVL655:
 5055 000a 0546     		mov	r5, r0
 5056              	.LVL656:
 5057              	.LBB738:
 5058              	.LBB739:
 5059              	.LBB740:
 5060              	.LBB741:
 5061              		.loc 11 151 0
 5062 000c FFF7FEFF 		bl	HAL_GetTick
 5063              	.LVL657:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 130


 5064 0010 0446     		mov	r4, r0
 5065              	.LVL658:
 5066              	.LBE741:
 5067              	.LBE740:
 250:ROSSerial/ros/node_handle.h ****     {
 5068              		.loc 9 250 0
 5069 0012 B74B     		ldr	r3, .L353
 5070 0014 D3F82435 		ldr	r3, [r3, #1316]
 5071 0018 C31A     		subs	r3, r0, r3
 5072 001a 42F6F822 		movw	r2, #11000
 5073 001e 9342     		cmp	r3, r2
 5074 0020 03D9     		bls	.L255
 254:ROSSerial/ros/node_handle.h ****     }
 5075              		.loc 9 254 0
 5076 0022 B34B     		ldr	r3, .L353
 5077 0024 0022     		movs	r2, #0
 5078 0026 83F81C25 		strb	r2, [r3, #1308]
 5079              	.L255:
 258:ROSSerial/ros/node_handle.h ****     {
 5080              		.loc 9 258 0
 5081 002a B14B     		ldr	r3, .L353
 5082 002c D3F80835 		ldr	r3, [r3, #1288]
 5083 0030 002B     		cmp	r3, #0
 5084 0032 4BD0     		beq	.L257
 260:ROSSerial/ros/node_handle.h ****       {
 5085              		.loc 9 260 0
 5086 0034 AE4B     		ldr	r3, .L353
 5087 0036 D3F82835 		ldr	r3, [r3, #1320]
 5088 003a 9C42     		cmp	r4, r3
 5089 003c 46D9     		bls	.L257
 262:ROSSerial/ros/node_handle.h ****       }
 5090              		.loc 9 262 0
 5091 003e AC4B     		ldr	r3, .L353
 5092 0040 0022     		movs	r2, #0
 5093 0042 C3F80825 		str	r2, [r3, #1288]
 5094 0046 41E0     		b	.L257
 5095              	.LVL659:
 5096              	.L330:
 5097              	.LBB742:
 5098              	.LBB743:
 5099              	.LBB744:
  84:ROSSerial/AT32hardware.h **** 		}
 5100              		.loc 11 84 0
 5101 0048 591C     		adds	r1, r3, #1
 5102 004a AA4A     		ldr	r2, .L353+4
 5103 004c 1170     		strb	r1, [r2]
 5104 004e AA4A     		ldr	r2, .L353+8
 5105 0050 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 5106              	.LVL660:
 5107              	.L261:
 5108              	.LBE744:
 5109              	.LBE743:
 283:ROSSerial/ros/node_handle.h ****         break;
 5110              		.loc 9 283 0
 5111 0052 0028     		cmp	r0, #0
 5112 0054 C0F2EF82 		blt	.L262
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 131


 5113              		.loc 9 285 0
 5114 0058 A54B     		ldr	r3, .L353
 5115 005a D3F81825 		ldr	r2, [r3, #1304]
 5116 005e 0244     		add	r2, r2, r0
 5117 0060 C3F81825 		str	r2, [r3, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 5118              		.loc 9 286 0
 5119 0064 D3F80835 		ldr	r3, [r3, #1288]
 5120 0068 072B     		cmp	r3, #7
 5121 006a 1ED0     		beq	.L329
 293:ROSSerial/ros/node_handle.h ****       {
 5122              		.loc 9 293 0
 5123 006c 002B     		cmp	r3, #0
 5124 006e 51D1     		bne	.L265
 295:ROSSerial/ros/node_handle.h ****         {
 5125              		.loc 9 295 0
 5126 0070 FF28     		cmp	r0, #255
 5127 0072 41D1     		bne	.L266
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 5128              		.loc 9 297 0
 5129 0074 9E4A     		ldr	r2, .L353
 5130 0076 0133     		adds	r3, r3, #1
 5131 0078 C2F80835 		str	r3, [r2, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 5132              		.loc 9 298 0
 5133 007c 04F11403 		add	r3, r4, #20
 5134 0080 C2F82835 		str	r3, [r2, #1320]
 5135 0084 22E0     		b	.L257
 5136              	.LVL661:
 5137              	.L331:
 5138              	.LBB747:
 5139              	.LBB745:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 5140              		.loc 11 88 0
 5141 0086 0023     		movs	r3, #0
 5142 0088 9A4A     		ldr	r2, .L353+4
 5143 008a 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 5144              		.loc 11 89 0
 5145 008c 9B4A     		ldr	r2, .L353+12
 5146 008e 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 5147              		.loc 11 90 0
 5148 0090 9B48     		ldr	r0, .L353+16
 5149 0092 0268     		ldr	r2, [r0]
 5150 0094 D368     		ldr	r3, [r2, #12]
 5151 0096 43F04003 		orr	r3, r3, #64
 5152 009a D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 5153              		.loc 11 91 0
 5154 009c 0122     		movs	r2, #1
 5155 009e 9949     		ldr	r1, .L353+20
 5156 00a0 FFF7FEFF 		bl	HAL_UART_Receive_IT
 5157              	.LVL662:
  80:ROSSerial/AT32hardware.h **** 		
 5158              		.loc 11 80 0
 5159 00a4 4FF0FF30 		mov	r0, #-1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 132


 5160 00a8 D3E7     		b	.L261
 5161              	.LVL663:
 5162              	.L329:
 5163              	.LBE745:
 5164              	.LBE747:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 5165              		.loc 9 288 0
 5166 00aa 914B     		ldr	r3, .L353
 5167 00ac D3F81425 		ldr	r2, [r3, #1300]
 5168 00b0 511C     		adds	r1, r2, #1
 5169 00b2 C3F81415 		str	r1, [r3, #1300]
 5170 00b6 1A44     		add	r2, r2, r3
 5171 00b8 1076     		strb	r0, [r2, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 5172              		.loc 9 289 0
 5173 00ba D3F80C25 		ldr	r2, [r3, #1292]
 5174 00be 013A     		subs	r2, r2, #1
 5175 00c0 C3F80C25 		str	r2, [r3, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5176              		.loc 9 290 0
 5177 00c4 12B9     		cbnz	r2, .L257
 291:ROSSerial/ros/node_handle.h ****       }
 5178              		.loc 9 291 0
 5179 00c6 0822     		movs	r2, #8
 5180 00c8 C3F80825 		str	r2, [r3, #1288]
 5181              	.L257:
 270:ROSSerial/ros/node_handle.h ****       {
 5182              		.loc 9 270 0
 5183 00cc 884B     		ldr	r3, .L353
 5184 00ce 5B69     		ldr	r3, [r3, #20]
 5185 00d0 3BB1     		cbz	r3, .L258
 5186              	.LVL664:
 5187              	.LBB748:
 5188              	.LBB749:
 5189              		.loc 11 151 0
 5190 00d2 FFF7FEFF 		bl	HAL_GetTick
 5191              	.LVL665:
 5192              	.LBE749:
 5193              	.LBE748:
 276:ROSSerial/ros/node_handle.h ****         {
 5194              		.loc 9 276 0
 5195 00d6 001B     		subs	r0, r0, r4
 5196 00d8 854B     		ldr	r3, .L353
 5197 00da 5B69     		ldr	r3, [r3, #20]
 5198 00dc 9842     		cmp	r0, r3
 5199 00de 00F25483 		bhi	.L318
 5200              	.L258:
 5201              	.LVL666:
 5202              	.LBB750:
 5203              	.LBB746:
  82:ROSSerial/AT32hardware.h **** 		{
 5204              		.loc 11 82 0
 5205 00e2 844B     		ldr	r3, .L353+4
 5206 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5207 00e6 854A     		ldr	r2, .L353+12
 5208 00e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5209 00ea 9342     		cmp	r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 133


 5210 00ec ACD3     		bcc	.L330
  86:ROSSerial/AT32hardware.h **** 		{
 5211              		.loc 11 86 0
 5212 00ee 9342     		cmp	r3, r2
 5213 00f0 C9D0     		beq	.L331
  80:ROSSerial/AT32hardware.h **** 		
 5214              		.loc 11 80 0
 5215 00f2 4FF0FF30 		mov	r0, #-1
 5216 00f6 ACE7     		b	.L261
 5217              	.LVL667:
 5218              	.L266:
 5219              	.LBE746:
 5220              	.LBE750:
 5221              	.LBB751:
 5222              	.LBB752:
 5223              		.loc 11 151 0
 5224 00f8 FFF7FEFF 		bl	HAL_GetTick
 5225              	.LVL668:
 5226              	.LBE752:
 5227              	.LBE751:
 300:ROSSerial/ros/node_handle.h ****         {
 5228              		.loc 9 300 0
 5229 00fc 001B     		subs	r0, r0, r4
 5230 00fe 41F28833 		movw	r3, #5000
 5231 0102 9842     		cmp	r0, r3
 5232 0104 E2D9     		bls	.L257
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 5233              		.loc 9 303 0
 5234 0106 7A4B     		ldr	r3, .L353
 5235 0108 0022     		movs	r2, #0
 5236 010a 83F81C25 		strb	r2, [r3, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 5237              		.loc 9 304 0
 5238 010e 6FF00104 		mvn	r4, #1
 5239              	.LVL669:
 5240 0112 3CE3     		b	.L259
 5241              	.LVL670:
 5242              	.L265:
 307:ROSSerial/ros/node_handle.h ****       {
 5243              		.loc 9 307 0
 5244 0114 012B     		cmp	r3, #1
 5245 0116 3ED0     		beq	.L332
 320:ROSSerial/ros/node_handle.h ****       {
 5246              		.loc 9 320 0
 5247 0118 022B     		cmp	r3, #2
 5248 011a 00F0D280 		beq	.L333
 327:ROSSerial/ros/node_handle.h ****       {
 5249              		.loc 9 327 0
 5250 011e 032B     		cmp	r3, #3
 5251 0120 00F0DB80 		beq	.L334
 332:ROSSerial/ros/node_handle.h ****       {
 5252              		.loc 9 332 0
 5253 0124 042B     		cmp	r3, #4
 5254 0126 00F00381 		beq	.L335
 339:ROSSerial/ros/node_handle.h ****       {
 5255              		.loc 9 339 0
 5256 012a 052B     		cmp	r3, #5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 134


 5257 012c 00F01181 		beq	.L336
 345:ROSSerial/ros/node_handle.h ****       {
 5258              		.loc 9 345 0
 5259 0130 062B     		cmp	r3, #6
 5260 0132 00F01781 		beq	.L337
 352:ROSSerial/ros/node_handle.h ****       {
 5261              		.loc 9 352 0
 5262 0136 082B     		cmp	r3, #8
 5263 0138 C8D1     		bne	.L257
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 5264              		.loc 9 354 0
 5265 013a 6D4B     		ldr	r3, .L353
 5266 013c 0021     		movs	r1, #0
 5267 013e C3F80815 		str	r1, [r3, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 5268              		.loc 9 355 0
 5269 0142 8B1A     		subs	r3, r1, r2
 5270 0144 D2B2     		uxtb	r2, r2
 5271 0146 DBB2     		uxtb	r3, r3
 5272 0148 58BF     		it	pl
 5273 014a 5A42     		rsbpl	r2, r3, #0
 5274 014c FF2A     		cmp	r2, #255
 5275 014e BDD1     		bne	.L257
 357:ROSSerial/ros/node_handle.h ****           {
 5276              		.loc 9 357 0
 5277 0150 674B     		ldr	r3, .L353
 5278 0152 D3F81065 		ldr	r6, [r3, #1296]
 5279 0156 002E     		cmp	r6, #0
 5280 0158 00F01881 		beq	.L338
 365:ROSSerial/ros/node_handle.h ****           {
 5281              		.loc 9 365 0
 5282 015c 0A2E     		cmp	r6, #10
 5283 015e 00F06B81 		beq	.L339
 369:ROSSerial/ros/node_handle.h ****           {
 5284              		.loc 9 369 0
 5285 0162 062E     		cmp	r6, #6
 5286 0164 00F0B381 		beq	.L340
 374:ROSSerial/ros/node_handle.h ****           {
 5287              		.loc 9 374 0
 5288 0168 0B2E     		cmp	r6, #11
 5289 016a 00F05F82 		beq	.L341
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 5290              		.loc 9 380 0
 5291 016e 643E     		subs	r6, r6, #100
 5292 0170 06EB8602 		add	r2, r6, r6, lsl #2
 5293 0174 5E4B     		ldr	r3, .L353
 5294 0176 03EB8203 		add	r3, r3, r2, lsl #2
 5295 017a B3F8A434 		ldrh	r3, [r3, #1188]
 5296 017e 002B     		cmp	r3, #0
 5297 0180 A4D0     		beq	.L257
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 5298              		.loc 9 381 0
 5299 0182 5B48     		ldr	r0, .L353
 5300 0184 00EB8206 		add	r6, r0, r2, lsl #2
 5301 0188 D6F8B434 		ldr	r3, [r6, #1204]
 5302 018c 5E4A     		ldr	r2, .L353+24
 5303 018e 1360     		str	r3, [r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 135


 383:ROSSerial/ros/node_handle.h ****             }
 5304              		.loc 9 383 0
 5305 0190 1830     		adds	r0, r0, #24
 5306 0192 9847     		blx	r3
 5307              	.LVL671:
 5308 0194 9AE7     		b	.L257
 5309              	.L332:
 309:ROSSerial/ros/node_handle.h ****         {
 5310              		.loc 9 309 0
 5311 0196 FE28     		cmp	r0, #254
 5312 0198 4BD0     		beq	.L342
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 5313              		.loc 9 315 0
 5314 019a 554B     		ldr	r3, .L353
 5315 019c 0022     		movs	r2, #0
 5316 019e C3F80825 		str	r2, [r3, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 5317              		.loc 9 316 0
 5318 01a2 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 5319 01a6 002B     		cmp	r3, #0
 5320 01a8 90D1     		bne	.L257
 5321              	.LVL672:
 5322              	.LBB753:
 5323              	.LBB754:
 414:ROSSerial/ros/node_handle.h ****     {
 5324              		.loc 9 414 0
 5325 01aa 514B     		ldr	r3, .L353
 5326 01ac D3F82425 		ldr	r2, [r3, #1316]
 5327 01b0 9B68     		ldr	r3, [r3, #8]
 5328 01b2 9A42     		cmp	r2, r3
 5329 01b4 42D3     		bcc	.L343
 5330              	.LVL673:
 5331              	.LBB755:
 5332              	.LBB756:
  14:ROSSerial/std_msgs/Time.h ****   {
 5333              		.loc 1 14 0
 5334 01b6 554B     		ldr	r3, .L353+28
 5335 01b8 0393     		str	r3, [sp, #12]
 5336              	.LVL674:
 5337              	.LBB757:
 5338              	.LBB758:
 5339              	.LBB759:
 5340              		.loc 12 51 0
 5341 01ba 0026     		movs	r6, #0
 5342 01bc 0496     		str	r6, [sp, #16]
 5343 01be 0596     		str	r6, [sp, #20]
 5344              	.LVL675:
 5345              	.LBE759:
 5346              	.LBE758:
 5347              	.LBE757:
 5348              	.LBE756:
 5349              	.LBE755:
 5350              	.LBB760:
 5351              	.LBB761:
 5352              		.loc 11 151 0
 5353 01c0 FFF7FEFF 		bl	HAL_GetTick
 5354              	.LVL676:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 136


 5355 01c4 0146     		mov	r1, r0
 5356              	.LVL677:
 5357              	.LBE761:
 5358              	.LBE760:
 420:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 5359              		.loc 9 420 0
 5360 01c6 4A4F     		ldr	r7, .L353
 5361 01c8 B860     		str	r0, [r7, #8]
 421:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 5362              		.loc 9 421 0
 5363 01ca 5148     		ldr	r0, .L353+32
 5364 01cc FFF7FEFF 		bl	printf
 5365              	.LVL678:
 5366              	.LBB762:
 5367              	.LBB763:
 5368              	.LBB764:
 5369              	.LBB765:
 5370              		.loc 11 151 0
 5371 01d0 FFF7FEFF 		bl	HAL_GetTick
 5372              	.LVL679:
 5373              	.LBE765:
 5374              	.LBE764:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 5375              		.loc 9 603 0
 5376 01d4 03AB     		add	r3, sp, #12
 5377              	.LVL680:
 5378 01d6 0A22     		movs	r2, #10
 5379 01d8 0146     		mov	r1, r0
 5380 01da 4E48     		ldr	r0, .L353+36
 5381 01dc FFF7FEFF 		bl	printf
 5382              	.LVL681:
 610:ROSSerial/ros/node_handle.h **** 
 5383              		.loc 9 610 0
 5384 01e0 039B     		ldr	r3, [sp, #12]
 5385 01e2 1B68     		ldr	r3, [r3]
 5386 01e4 07F21F21 		addw	r1, r7, #543
 5387 01e8 03A8     		add	r0, sp, #12
 5388              	.LVL682:
 5389 01ea 9847     		blx	r3
 5390              	.LVL683:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5391              		.loc 9 613 0
 5392 01ec FF23     		movs	r3, #255
 5393 01ee 87F81832 		strb	r3, [r7, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5394              		.loc 9 614 0
 5395 01f2 FE23     		movs	r3, #254
 5396 01f4 87F81932 		strb	r3, [r7, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5397              		.loc 9 615 0
 5398 01f8 C3B2     		uxtb	r3, r0
 5399 01fa 87F81A32 		strb	r3, [r7, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5400              		.loc 9 616 0
 5401 01fe C0F30722 		ubfx	r2, r0, #8, #8
 5402 0202 87F81B22 		strb	r2, [r7, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 137


 5403              		.loc 9 617 0
 5404 0206 1344     		add	r3, r3, r2
 5405 0208 DBB2     		uxtb	r3, r3
 5406 020a DB43     		mvns	r3, r3
 5407 020c 87F81C32 		strb	r3, [r7, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5408              		.loc 9 618 0
 5409 0210 0A23     		movs	r3, #10
 5410 0212 87F81D32 		strb	r3, [r7, #541]
 619:ROSSerial/ros/node_handle.h **** 
 5411              		.loc 9 619 0
 5412 0216 87F81E62 		strb	r6, [r7, #542]
 5413              	.LVL684:
 5414              	.LBB766:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5415              		.loc 9 623 0
 5416 021a 0522     		movs	r2, #5
 5417              	.LBE766:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5418              		.loc 9 622 0
 5419 021c 3346     		mov	r3, r6
 5420              	.LVL685:
 5421              	.L271:
 5422              	.LBB767:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5423              		.loc 9 623 0
 5424 021e C11D     		adds	r1, r0, #7
 5425 0220 9142     		cmp	r1, r2
 5426 0222 12DD     		ble	.L270
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 5427              		.loc 9 624 0
 5428 0224 3249     		ldr	r1, .L353
 5429 0226 1144     		add	r1, r1, r2
 5430 0228 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5431 022c 0B44     		add	r3, r3, r1
 5432              	.LVL686:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5433              		.loc 9 623 0
 5434 022e 0132     		adds	r2, r2, #1
 5435              	.LVL687:
 5436 0230 F5E7     		b	.L271
 5437              	.LVL688:
 5438              	.L342:
 5439              	.LBE767:
 5440              	.LBE763:
 5441              	.LBE762:
 5442              	.LBE754:
 5443              	.LBE753:
 311:ROSSerial/ros/node_handle.h ****         }
 5444              		.loc 9 311 0
 5445 0232 0133     		adds	r3, r3, #1
 5446 0234 2E4A     		ldr	r2, .L353
 5447 0236 C2F80835 		str	r3, [r2, #1288]
 5448 023a 47E7     		b	.L257
 5449              	.LVL689:
 5450              	.L343:
 5451              	.LBB784:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 138


 5452              	.LBB783:
 5453              	.LBB780:
 5454              	.LBB781:
 5455              		.loc 11 151 0
 5456 023c FFF7FEFF 		bl	HAL_GetTick
 5457              	.LVL690:
 5458              	.LBE781:
 5459              	.LBE780:
 416:ROSSerial/ros/node_handle.h ****       return;
 5460              		.loc 9 416 0
 5461 0240 0146     		mov	r1, r0
 5462 0242 3548     		ldr	r0, .L353+40
 5463 0244 FFF7FEFF 		bl	printf
 5464              	.LVL691:
 5465 0248 40E7     		b	.L257
 5466              	.LVL692:
 5467              	.L270:
 5468              	.LBB782:
 5469              	.LBB779:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 5470              		.loc 9 626 0
 5471 024a 5A42     		rsbs	r2, r3, #0
 5472              	.LVL693:
 5473 024c DBB2     		uxtb	r3, r3
 5474              	.LVL694:
 5475 024e D2B2     		uxtb	r2, r2
 5476 0250 58BF     		it	pl
 5477 0252 5342     		rsbpl	r3, r2, #0
 5478 0254 00F10806 		add	r6, r0, #8
 5479              	.LVL695:
 5480 0258 DB43     		mvns	r3, r3
 5481 025a 254A     		ldr	r2, .L353
 5482 025c 1144     		add	r1, r1, r2
 5483 025e 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 5484              		.loc 9 629 0
 5485 0262 B6F5007F 		cmp	r6, #512
 5486 0266 1CDC     		bgt	.L272
 5487              	.LVL696:
 5488              	.LBB768:
 5489              	.LBB769:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 5490              		.loc 11 121 0
 5491 0268 1423     		movs	r3, #20
 5492 026a B2B2     		uxth	r2, r6
 5493 026c 2B49     		ldr	r1, .L353+44
 5494 026e 2448     		ldr	r0, .L353+16
 5495 0270 FFF7FEFF 		bl	HAL_UART_Transmit
 5496              	.LVL697:
 122:ROSSerial/AT32hardware.h **** 		{
 5497              		.loc 11 122 0
 5498 0274 0146     		mov	r1, r0
 5499 0276 70B9     		cbnz	r0, .L344
 5500              	.LVL698:
 5501              	.L273:
 5502              	.LBE769:
 5503              	.LBE768:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 139


 5504              	.LBB771:
 5505              	.LBB772:
 5506              		.loc 11 151 0
 5507 0278 FFF7FEFF 		bl	HAL_GetTick
 5508              	.LVL699:
 5509 027c 0746     		mov	r7, r0
 5510              	.LVL700:
 5511              	.LBE772:
 5512              	.LBE771:
 633:ROSSerial/ros/node_handle.h ****       return l;
 5513              		.loc 9 633 0
 5514 027e 1EA8     		add	r0, sp, #120
 5515 0280 50F86C3D 		ldr	r3, [r0, #-108]!
 5516 0284 9B68     		ldr	r3, [r3, #8]
 5517 0286 9847     		blx	r3
 5518              	.LVL701:
 5519 0288 3346     		mov	r3, r6
 5520 028a 0246     		mov	r2, r0
 5521 028c 3946     		mov	r1, r7
 5522 028e 2448     		ldr	r0, .L353+48
 5523 0290 FFF7FEFF 		bl	printf
 5524              	.LVL702:
 5525 0294 1AE7     		b	.L257
 5526              	.LVL703:
 5527              	.L344:
 5528              	.LBB773:
 5529              	.LBB770:
 124:ROSSerial/AT32hardware.h **** 		}
 5530              		.loc 11 124 0
 5531 0296 214B     		ldr	r3, .L353+44
 5532 0298 3246     		mov	r2, r6
 5533 029a 2248     		ldr	r0, .L353+52
 5534              	.LVL704:
 5535 029c FFF7FEFF 		bl	printf
 5536              	.LVL705:
 5537 02a0 EAE7     		b	.L273
 5538              	.LVL706:
 5539              	.L272:
 5540              	.LBE770:
 5541              	.LBE773:
 5542              	.LBB774:
 5543              	.LBB775:
 5544              	.LBB776:
 5545              	.LBB777:
 5546              	.LBB778:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5547              		.loc 3 13 0
 5548 02a2 214B     		ldr	r3, .L353+56
 5549 02a4 0693     		str	r3, [sp, #24]
 5550              	.LVL707:
 5551              	.LBE778:
 5552              	.LBE777:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5553              		.loc 9 652 0
 5554 02a6 0323     		movs	r3, #3
 5555 02a8 8DF81C30 		strb	r3, [sp, #28]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 140


 5556              		.loc 9 653 0
 5557 02ac 1F4E     		ldr	r6, .L353+60
 5558              	.LVL708:
 5559 02ae 0896     		str	r6, [sp, #32]
 5560              		.loc 9 654 0
 5561 02b0 06AA     		add	r2, sp, #24
 5562 02b2 0721     		movs	r1, #7
 5563 02b4 0E48     		ldr	r0, .L353
 5564              	.LVL709:
 5565 02b6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5566              	.LVL710:
 5567              	.LBE776:
 5568              	.LBE775:
 5569              	.LBE774:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 5570              		.loc 9 639 0
 5571 02ba 3046     		mov	r0, r6
 5572 02bc FFF7FEFF 		bl	printf
 5573              	.LVL711:
 5574 02c0 04E7     		b	.L257
 5575              	.LVL712:
 5576              	.L333:
 5577              	.LBE779:
 5578              	.LBE782:
 5579              	.LBE783:
 5580              	.LBE784:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5581              		.loc 9 322 0
 5582 02c2 0B4A     		ldr	r2, .L353
 5583 02c4 C2F80C05 		str	r0, [r2, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 5584              		.loc 9 323 0
 5585 02c8 0021     		movs	r1, #0
 5586 02ca C2F81415 		str	r1, [r2, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5587              		.loc 9 324 0
 5588 02ce 0133     		adds	r3, r3, #1
 5589 02d0 C2F80835 		str	r3, [r2, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 5590              		.loc 9 325 0
 5591 02d4 C2F81805 		str	r0, [r2, #1304]
 5592 02d8 F8E6     		b	.L257
 5593              	.L334:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 5594              		.loc 9 329 0
 5595 02da 054A     		ldr	r2, .L353
 5596 02dc D2F80C15 		ldr	r1, [r2, #1292]
 5597 02e0 01EB0020 		add	r0, r1, r0, lsl #8
 5598 02e4 C2F80C05 		str	r0, [r2, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 5599              		.loc 9 330 0
 5600 02e8 0133     		adds	r3, r3, #1
 5601 02ea C2F80835 		str	r3, [r2, #1288]
 5602 02ee EDE6     		b	.L257
 5603              	.L354:
 5604              		.align	2
 5605              	.L353:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 141


 5606 02f0 00000000 		.word	.LANCHOR1
 5607 02f4 00000000 		.word	g_RxRead
 5608 02f8 00000000 		.word	g_RxBuf
 5609 02fc 00000000 		.word	g_RxWritten
 5610 0300 00000000 		.word	huart2
 5611 0304 00000000 		.word	byte
 5612 0308 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5613 030c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5614 0310 2C000000 		.word	.LC26
 5615 0314 00000000 		.word	.LC19
 5616 0318 00000000 		.word	.LC25
 5617 031c 18020000 		.word	.LANCHOR1+536
 5618 0320 40000000 		.word	.LC21
 5619 0324 20000000 		.word	.LC20
 5620 0328 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5621 032c 68000000 		.word	.LC22
 5622              	.L335:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 5623              		.loc 9 334 0
 5624 0330 5142     		rsbs	r1, r2, #0
 5625 0332 D2B2     		uxtb	r2, r2
 5626 0334 C9B2     		uxtb	r1, r1
 5627 0336 58BF     		it	pl
 5628 0338 4A42     		rsbpl	r2, r1, #0
 5629 033a FF2A     		cmp	r2, #255
 5630 033c 04D0     		beq	.L345
 337:ROSSerial/ros/node_handle.h ****       }
 5631              		.loc 9 337 0
 5632 033e C64B     		ldr	r3, .L355
 5633 0340 0022     		movs	r2, #0
 5634 0342 C3F80825 		str	r2, [r3, #1288]
 5635 0346 C1E6     		b	.L257
 5636              	.L345:
 335:ROSSerial/ros/node_handle.h ****         else
 5637              		.loc 9 335 0
 5638 0348 0133     		adds	r3, r3, #1
 5639 034a C34A     		ldr	r2, .L355
 5640 034c C2F80835 		str	r3, [r2, #1288]
 5641 0350 BCE6     		b	.L257
 5642              	.L336:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 5643              		.loc 9 341 0
 5644 0352 C14A     		ldr	r2, .L355
 5645 0354 C2F81005 		str	r0, [r2, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5646              		.loc 9 342 0
 5647 0358 0133     		adds	r3, r3, #1
 5648 035a C2F80835 		str	r3, [r2, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 5649              		.loc 9 343 0
 5650 035e C2F81805 		str	r0, [r2, #1304]
 5651 0362 B3E6     		b	.L257
 5652              	.L337:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5653              		.loc 9 347 0
 5654 0364 BC4B     		ldr	r3, .L355
 5655 0366 D3F81025 		ldr	r2, [r3, #1296]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 142


 5656 036a 02EB0022 		add	r2, r2, r0, lsl #8
 5657 036e C3F81025 		str	r2, [r3, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5658              		.loc 9 348 0
 5659 0372 0722     		movs	r2, #7
 5660 0374 C3F80825 		str	r2, [r3, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5661              		.loc 9 349 0
 5662 0378 D3F80C35 		ldr	r3, [r3, #1292]
 5663 037c 002B     		cmp	r3, #0
 5664 037e 7FF4A5AE 		bne	.L257
 350:ROSSerial/ros/node_handle.h ****       }
 5665              		.loc 9 350 0
 5666 0382 B54B     		ldr	r3, .L355
 5667 0384 0822     		movs	r2, #8
 5668 0386 C3F80825 		str	r2, [r3, #1288]
 5669 038a 9FE6     		b	.L257
 5670              	.L338:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 5671              		.loc 9 359 0
 5672 038c 1846     		mov	r0, r3
 5673 038e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 5674              	.LVL713:
 5675              	.LBB785:
 5676              	.LBB786:
 5677              	.LBB787:
 5678              	.LBB788:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 5679              		.loc 2 12 0
 5680 0392 B24B     		ldr	r3, .L355+4
 5681 0394 0693     		str	r3, [sp, #24]
 5682              	.LVL714:
 5683              	.LBE788:
 5684              	.LBE787:
 568:ROSSerial/ros/node_handle.h ****     {
 5685              		.loc 9 568 0
 5686 0396 3746     		mov	r7, r6
 5687 0398 00E0     		b	.L284
 5688              	.LVL715:
 5689              	.L283:
 5690 039a 0137     		adds	r7, r7, #1
 5691              	.LVL716:
 5692              	.L284:
 5693 039c 042F     		cmp	r7, #4
 5694 039e 1FDC     		bgt	.L282
 570:ROSSerial/ros/node_handle.h ****       {
 5695              		.loc 9 570 0
 5696 03a0 07EB8702 		add	r2, r7, r7, lsl #2
 5697 03a4 AC4B     		ldr	r3, .L355
 5698 03a6 03EB8203 		add	r3, r3, r2, lsl #2
 5699 03aa B3F82C34 		ldrh	r3, [r3, #1068]
 5700 03ae 002B     		cmp	r3, #0
 5701 03b0 F3D0     		beq	.L283
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 5702              		.loc 9 572 0
 5703 03b2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 143


 5704              		.loc 9 573 0
 5705 03b6 A848     		ldr	r0, .L355
 5706 03b8 00EB8203 		add	r3, r0, r2, lsl #2
 5707 03bc D3F83024 		ldr	r2, [r3, #1072]
 5708 03c0 0892     		str	r2, [sp, #32]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 5709              		.loc 9 574 0
 5710 03c2 D3F83824 		ldr	r2, [r3, #1080]
 5711 03c6 0992     		str	r2, [sp, #36]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 5712              		.loc 9 575 0
 5713 03c8 D3F83C34 		ldr	r3, [r3, #1084]
 5714 03cc 0A93     		str	r3, [sp, #40]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 5715              		.loc 9 576 0
 5716 03ce 4FF40073 		mov	r3, #512
 5717 03d2 0B93     		str	r3, [sp, #44]
 577:ROSSerial/ros/node_handle.h ****       }
 5718              		.loc 9 577 0
 5719 03d4 06AA     		add	r2, sp, #24
 5720 03d6 0021     		movs	r1, #0
 5721 03d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5722              	.LVL717:
 5723 03dc DDE7     		b	.L283
 5724              	.LVL718:
 5725              	.L286:
 580:ROSSerial/ros/node_handle.h ****     {
 5726              		.loc 9 580 0
 5727 03de 0136     		adds	r6, r6, #1
 5728              	.LVL719:
 5729              	.L282:
 5730 03e0 042E     		cmp	r6, #4
 5731 03e2 1EDC     		bgt	.L285
 582:ROSSerial/ros/node_handle.h ****       {
 5732              		.loc 9 582 0
 5733 03e4 06EB8602 		add	r2, r6, r6, lsl #2
 5734 03e8 9B4B     		ldr	r3, .L355
 5735 03ea 03EB8203 		add	r3, r3, r2, lsl #2
 5736 03ee B3F8A434 		ldrh	r3, [r3, #1188]
 5737 03f2 002B     		cmp	r3, #0
 5738 03f4 F3D0     		beq	.L286
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 5739              		.loc 9 584 0
 5740 03f6 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 5741              		.loc 9 585 0
 5742 03fa 9748     		ldr	r0, .L355
 5743 03fc 00EB8203 		add	r3, r0, r2, lsl #2
 5744 0400 D3F8A824 		ldr	r2, [r3, #1192]
 5745 0404 0892     		str	r2, [sp, #32]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 5746              		.loc 9 586 0
 5747 0406 D3F8AC24 		ldr	r2, [r3, #1196]
 5748 040a 0992     		str	r2, [sp, #36]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 5749              		.loc 9 587 0
 5750 040c D3F8B034 		ldr	r3, [r3, #1200]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 144


 5751 0410 0A93     		str	r3, [sp, #40]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 5752              		.loc 9 588 0
 5753 0412 4FF40073 		mov	r3, #512
 5754 0416 0B93     		str	r3, [sp, #44]
 589:ROSSerial/ros/node_handle.h ****       }
 5755              		.loc 9 589 0
 5756 0418 06AA     		add	r2, sp, #24
 5757 041a 0121     		movs	r1, #1
 5758 041c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5759              	.LVL720:
 5760 0420 DDE7     		b	.L286
 5761              	.L285:
 592:ROSSerial/ros/node_handle.h ****   }
 5762              		.loc 9 592 0
 5763 0422 8D4B     		ldr	r3, .L355
 5764 0424 0122     		movs	r2, #1
 5765 0426 83F81C25 		strb	r2, [r3, #1308]
 5766              	.LVL721:
 5767              	.LBE786:
 5768              	.LBE785:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 5769              		.loc 9 361 0
 5770 042a C3F82045 		str	r4, [r3, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 5771              		.loc 9 362 0
 5772 042e C3F82445 		str	r4, [r3, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 5773              		.loc 9 363 0
 5774 0432 4FF0FF34 		mov	r4, #-1
 5775              	.LVL722:
 5776 0436 AAE1     		b	.L259
 5777              	.LVL723:
 5778              	.L339:
 5779              	.LBB789:
 5780              	.LBB790:
 5781              	.LBB791:
 5782              	.LBB792:
 5783              		.loc 11 151 0
 5784 0438 FFF7FEFF 		bl	HAL_GetTick
 5785              	.LVL724:
 5786              	.LBE792:
 5787              	.LBE791:
 429:ROSSerial/ros/node_handle.h **** 
 5788              		.loc 9 429 0
 5789 043c 864E     		ldr	r6, .L355
 5790 043e B768     		ldr	r7, [r6, #8]
 5791 0440 C71B     		subs	r7, r0, r7
 5792              	.LVL725:
 5793              	.LBB793:
 5794              	.LBB794:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5795              		.loc 1 38 0
 5796 0442 337E     		ldrb	r3, [r6, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5797              		.loc 1 39 0
 5798 0444 727E     		ldrb	r2, [r6, #25]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 145


 5799 0446 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5800              		.loc 1 40 0
 5801 044a B27E     		ldrb	r2, [r6, #26]	@ zero_extendqisi2
 5802 044c 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 5803              		.loc 1 41 0
 5804 0450 F17E     		ldrb	r1, [r6, #27]	@ zero_extendqisi2
 5805 0452 43EA0161 		orr	r1, r3, r1, lsl #24
 5806              	.LVL726:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5807              		.loc 1 43 0
 5808 0456 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5809              		.loc 1 44 0
 5810 0458 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 5811 045a 43EA0223 		orr	r3, r3, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5812              		.loc 1 45 0
 5813 045e B27F     		ldrb	r2, [r6, #30]	@ zero_extendqisi2
 5814 0460 43EA0243 		orr	r3, r3, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 5815              		.loc 1 46 0
 5816 0464 F27F     		ldrb	r2, [r6, #31]	@ zero_extendqisi2
 5817 0466 43EA0262 		orr	r2, r3, r2, lsl #24
 5818              	.LVL727:
 5819              	.LBE794:
 5820              	.LBE793:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 5821              		.loc 9 432 0
 5822 046a DFF800A2 		ldr	r10, .L355+20
 5823 046e AAFB0703 		umull	r0, r3, r10, r7
 5824 0472 9B09     		lsrs	r3, r3, #6
 5825 0474 1944     		add	r1, r1, r3
 5826 0476 0791     		str	r1, [sp, #28]
 433:ROSSerial/ros/node_handle.h **** 
 5827              		.loc 9 433 0
 5828 0478 4FF47A79 		mov	r9, #1000
 5829 047c 09FB1373 		mls	r3, r9, r3, r7
 5830 0480 DFF8EC81 		ldr	r8, .L355+24
 5831 0484 08FB0323 		mla	r3, r8, r3, r2
 5832 0488 0893     		str	r3, [sp, #32]
 5833              	.LVL728:
 5834              	.LBB795:
 5835              	.LBB796:
 5836              	.LBB797:
 5837              	.LBB798:
 5838              		.loc 11 151 0
 5839 048a FFF7FEFF 		bl	HAL_GetTick
 5840              	.LVL729:
 5841              	.LBE798:
 5842              	.LBE797:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 5843              		.loc 9 454 0
 5844 048e AAFB0023 		umull	r2, r3, r10, r0
 5845 0492 9B09     		lsrs	r3, r3, #6
 5846 0494 079A     		ldr	r2, [sp, #28]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 146


 5847 0496 D21A     		subs	r2, r2, r3
 5848 0498 013A     		subs	r2, r2, #1
 5849 049a F260     		str	r2, [r6, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 5850              		.loc 9 455 0
 5851 049c 09FB1303 		mls	r3, r9, r3, r0
 5852 04a0 089A     		ldr	r2, [sp, #32]
 5853 04a2 08FB1323 		mls	r3, r8, r3, r2
 5854 04a6 6E4A     		ldr	r2, .L355+8
 5855 04a8 1A44     		add	r2, r2, r3
 5856 04aa 3146     		mov	r1, r6
 5857 04ac 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 5858              		.loc 9 456 0
 5859 04b0 06F10C00 		add	r0, r6, #12
 5860              	.LVL730:
 5861 04b4 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 5862              	.LVL731:
 5863              	.LBE796:
 5864              	.LBE795:
 5865              	.LBB799:
 5866              	.LBB800:
 5867              		.loc 11 151 0
 5868 04b8 FFF7FEFF 		bl	HAL_GetTick
 5869              	.LVL732:
 5870 04bc 8046     		mov	r8, r0
 5871              	.LVL733:
 5872              	.LBE800:
 5873              	.LBE799:
 437:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = c_time;
 5874              		.loc 9 437 0
 5875 04be 3A46     		mov	r2, r7
 5876 04c0 0146     		mov	r1, r0
 5877 04c2 6848     		ldr	r0, .L355+12
 5878              	.LVL734:
 5879 04c4 FFF7FEFF 		bl	printf
 5880              	.LVL735:
 438:ROSSerial/ros/node_handle.h ****   }
 5881              		.loc 9 438 0
 5882 04c8 C6F82485 		str	r8, [r6, #1316]
 5883 04cc FEE5     		b	.L257
 5884              	.LVL736:
 5885              	.L340:
 5886              	.LBE790:
 5887              	.LBE789:
 5888              	.LBB801:
 5889              	.LBB802:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 5890              		.loc 4 116 0
 5891 04ce 624B     		ldr	r3, .L355
 5892 04d0 1E7E     		ldrb	r6, [r3, #24]	@ zero_extendqisi2
 5893              	.LVL737:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 5894              		.loc 4 117 0
 5895 04d2 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5896 04d6 9E42     		cmp	r6, r3
 5897 04d8 23D8     		bhi	.L346
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 147


 5898              	.L289:
 5899              	.LVL738:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 5900              		.loc 4 120 0
 5901 04da 5F4B     		ldr	r3, .L355
 5902 04dc 83F83465 		strb	r6, [r3, #1332]
 5903              	.LVL739:
 5904              	.LBB803:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5905              		.loc 4 121 0
 5906 04e0 0022     		movs	r2, #0
 5907              	.LBE803:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 5908              		.loc 4 119 0
 5909 04e2 0426     		movs	r6, #4
 5910              	.LVL740:
 5911              	.L291:
 5912              	.LBB805:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5913              		.loc 4 121 0
 5914 04e4 5C4B     		ldr	r3, .L355
 5915 04e6 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5916 04ea 9342     		cmp	r3, r2
 5917 04ec 22D9     		bls	.L290
 5918              	.LBB804:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5919              		.loc 4 127 0
 5920 04ee 5A48     		ldr	r0, .L355
 5921 04f0 00F11801 		add	r1, r0, #24
 5922 04f4 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5923              		.loc 4 128 0
 5924 04f6 771C     		adds	r7, r6, #1
 5925 04f8 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5926 04fa 43EA0723 		orr	r3, r3, r7, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5927              		.loc 4 129 0
 5928 04fe B71C     		adds	r7, r6, #2
 5929 0500 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5930 0502 43EA0743 		orr	r3, r3, r7, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 5931              		.loc 4 130 0
 5932 0506 F71C     		adds	r7, r6, #3
 5933 0508 C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 5934 050a 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 5935              		.loc 4 131 0
 5936 050e C0F83835 		str	r3, [r0, #1336]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 5937              		.loc 4 132 0
 5938 0512 0436     		adds	r6, r6, #4
 5939              	.LVL741:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5940              		.loc 4 133 0
 5941 0514 D0F83C15 		ldr	r1, [r0, #1340]
 5942 0518 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5943              	.LBE804:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 148


 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5944              		.loc 4 121 0
 5945 051c 0132     		adds	r2, r2, #1
 5946              	.LVL742:
 5947 051e D2B2     		uxtb	r2, r2
 5948              	.LVL743:
 5949 0520 E0E7     		b	.L291
 5950              	.LVL744:
 5951              	.L346:
 5952              	.LBE805:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5953              		.loc 4 118 0
 5954 0522 4D4F     		ldr	r7, .L355
 5955 0524 B100     		lsls	r1, r6, #2
 5956 0526 D7F83C05 		ldr	r0, [r7, #1340]
 5957 052a FFF7FEFF 		bl	realloc
 5958              	.LVL745:
 5959 052e C7F83C05 		str	r0, [r7, #1340]
 5960 0532 D2E7     		b	.L289
 5961              	.LVL746:
 5962              	.L290:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 5963              		.loc 4 135 0
 5964 0534 484B     		ldr	r3, .L355
 5965 0536 03F11802 		add	r2, r3, #24
 5966              	.LVL747:
 5967 053a 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
 5968              	.LVL748:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 5969              		.loc 4 136 0
 5970 053c 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5971 0540 9F42     		cmp	r7, r3
 5972 0542 24D8     		bhi	.L347
 5973              	.L292:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 5974              		.loc 4 138 0
 5975 0544 0436     		adds	r6, r6, #4
 5976              	.LVL749:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 5977              		.loc 4 139 0
 5978 0546 444B     		ldr	r3, .L355
 5979 0548 83F84075 		strb	r7, [r3, #1344]
 5980              	.LVL750:
 5981              	.LBB806:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5982              		.loc 4 140 0
 5983 054c 0022     		movs	r2, #0
 5984              	.LVL751:
 5985              	.L294:
 5986 054e 424B     		ldr	r3, .L355
 5987 0550 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5988 0554 9342     		cmp	r3, r2
 5989 0556 24D9     		bls	.L293
 5990              	.LBB807:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5991              		.loc 4 146 0
 5992 0558 3F48     		ldr	r0, .L355
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 149


 5993 055a 00F11801 		add	r1, r0, #24
 5994 055e 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5995              		.loc 4 147 0
 5996 0560 771C     		adds	r7, r6, #1
 5997 0562 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5998 0564 43EA0723 		orr	r3, r3, r7, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5999              		.loc 4 148 0
 6000 0568 B71C     		adds	r7, r6, #2
 6001 056a CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 6002 056c 43EA0743 		orr	r3, r3, r7, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 6003              		.loc 4 149 0
 6004 0570 F71C     		adds	r7, r6, #3
 6005 0572 C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 6006 0574 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 6007              		.loc 4 150 0
 6008 0578 00F24451 		addw	r1, r0, #1348
 6009 057c 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 6010              		.loc 4 151 0
 6011 057e 0436     		adds	r6, r6, #4
 6012              	.LVL752:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6013              		.loc 4 152 0
 6014 0580 D0F84815 		ldr	r1, [r0, #1352]
 6015 0584 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6016              	.LBE807:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6017              		.loc 4 140 0
 6018 0588 0132     		adds	r2, r2, #1
 6019              	.LVL753:
 6020 058a D2B2     		uxtb	r2, r2
 6021              	.LVL754:
 6022 058c DFE7     		b	.L294
 6023              	.LVL755:
 6024              	.L347:
 6025              	.LBE806:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6026              		.loc 4 137 0
 6027 058e A2F11808 		sub	r8, r2, #24
 6028 0592 B900     		lsls	r1, r7, #2
 6029 0594 D8F84805 		ldr	r0, [r8, #1352]
 6030 0598 FFF7FEFF 		bl	realloc
 6031              	.LVL756:
 6032 059c C8F84805 		str	r0, [r8, #1352]
 6033 05a0 D0E7     		b	.L292
 6034              	.LVL757:
 6035              	.L293:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 6036              		.loc 4 154 0
 6037 05a2 2D4B     		ldr	r3, .L355
 6038 05a4 03F11802 		add	r2, r3, #24
 6039              	.LVL758:
 6040 05a8 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 150


 6041              	.LVL759:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 6042              		.loc 4 155 0
 6043 05aa 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 6044 05ae 9F42     		cmp	r7, r3
 6045 05b0 06D8     		bhi	.L348
 6046              	.L295:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 6047              		.loc 4 157 0
 6048 05b2 321D     		adds	r2, r6, #4
 6049              	.LVL760:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 6050              		.loc 4 158 0
 6051 05b4 284B     		ldr	r3, .L355
 6052 05b6 83F84C75 		strb	r7, [r3, #1356]
 6053              	.LVL761:
 6054              	.LBB808:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6055              		.loc 4 159 0
 6056 05ba 4FF0000C 		mov	ip, #0
 6057 05be 1BE0     		b	.L299
 6058              	.LVL762:
 6059              	.L348:
 6060              	.LBE808:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6061              		.loc 4 156 0
 6062 05c0 A2F11808 		sub	r8, r2, #24
 6063 05c4 B900     		lsls	r1, r7, #2
 6064 05c6 D8F85405 		ldr	r0, [r8, #1364]
 6065 05ca FFF7FEFF 		bl	realloc
 6066              	.LVL763:
 6067 05ce C8F85405 		str	r0, [r8, #1364]
 6068 05d2 EEE7     		b	.L295
 6069              	.LVL764:
 6070              	.L297:
 6071              	.LBB812:
 6072              	.LBB809:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 6073              		.loc 4 166 0
 6074 05d4 2049     		ldr	r1, .L355
 6075 05d6 01F11803 		add	r3, r1, #24
 6076              	.LVL765:
 6077 05da 501E     		subs	r0, r2, #1
 6078 05dc 0027     		movs	r7, #0
 6079              	.LVL766:
 6080 05de 1F54     		strb	r7, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 6081              		.loc 4 167 0
 6082 05e0 013E     		subs	r6, r6, #1
 6083 05e2 1E44     		add	r6, r6, r3
 6084 05e4 C1F85065 		str	r6, [r1, #1360]
 6085              	.LVL767:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6086              		.loc 4 169 0
 6087 05e8 D1F85435 		ldr	r3, [r1, #1364]
 6088 05ec 43F82C60 		str	r6, [r3, ip, lsl #2]	@ unaligned
 6089              	.LBE809:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 151


 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6090              		.loc 4 159 0
 6091 05f0 0CF1010C 		add	ip, ip, #1
 6092              	.LVL768:
 6093 05f4 5FFA8CFC 		uxtb	ip, ip
 6094              	.LVL769:
 6095              	.L299:
 6096 05f8 174B     		ldr	r3, .L355
 6097 05fa 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 6098 05fe 6345     		cmp	r3, ip
 6099 0600 0FD9     		bls	.L296
 6100              	.LBB811:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 6101              		.loc 4 161 0
 6102 0602 194B     		ldr	r3, .L355+16
 6103 0604 9F58     		ldr	r7, [r3, r2]	@ unaligned
 6104              	.LVL770:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 6105              		.loc 4 162 0
 6106 0606 161D     		adds	r6, r2, #4
 6107              	.LVL771:
 6108              	.LBB810:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6109              		.loc 4 163 0
 6110 0608 3346     		mov	r3, r6
 6111              	.LVL772:
 6112              	.L298:
 6113 060a BA19     		adds	r2, r7, r6
 6114 060c 9A42     		cmp	r2, r3
 6115 060e E1D9     		bls	.L297
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6116              		.loc 4 164 0
 6117 0610 114A     		ldr	r2, .L355
 6118 0612 02F11800 		add	r0, r2, #24
 6119 0616 591E     		subs	r1, r3, #1
 6120 0618 1A44     		add	r2, r2, r3
 6121 061a 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 6122 061c 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6123              		.loc 4 163 0
 6124 061e 0133     		adds	r3, r3, #1
 6125              	.LVL773:
 6126 0620 F3E7     		b	.L298
 6127              	.LVL774:
 6128              	.L296:
 6129              	.LBE810:
 6130              	.LBE811:
 6131              	.LBE812:
 6132              	.LBE802:
 6133              	.LBE801:
 372:ROSSerial/ros/node_handle.h ****           }
 6134              		.loc 9 372 0
 6135 0622 0D4B     		ldr	r3, .L355
 6136 0624 0122     		movs	r2, #1
 6137 0626 83F82C25 		strb	r2, [r3, #1324]
 6138 062a 4FE5     		b	.L257
 6139              	.L341:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 152


 376:ROSSerial/ros/node_handle.h ****           }
 6140              		.loc 9 376 0
 6141 062c 0A4B     		ldr	r3, .L355
 6142 062e 0022     		movs	r2, #0
 6143 0630 83F81C25 		strb	r2, [r3, #1308]
 6144 0634 4AE5     		b	.L257
 6145              	.L262:
 6146              	.LBE742:
 391:ROSSerial/ros/node_handle.h ****     {
 6147              		.loc 9 391 0
 6148 0636 084B     		ldr	r3, .L355
 6149 0638 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 6150 063c 002B     		cmp	r3, #0
 6151 063e 00F0AD80 		beq	.L320
 6152 0642 054B     		ldr	r3, .L355
 6153 0644 D3F82035 		ldr	r3, [r3, #1312]
 6154 0648 E31A     		subs	r3, r4, r3
 6155 064a 40F6C412 		movw	r2, #2500
 6156 064e 9342     		cmp	r3, r2
 6157 0650 10D8     		bhi	.L349
 398:ROSSerial/ros/node_handle.h ****   }
 6158              		.loc 9 398 0
 6159 0652 0024     		movs	r4, #0
 6160              	.LVL775:
 6161 0654 9BE0     		b	.L259
 6162              	.L356:
 6163 0656 00BF     		.align	2
 6164              	.L355:
 6165 0658 00000000 		.word	.LANCHOR1
 6166 065c 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6167 0660 00CA9A3B 		.word	1000000000
 6168 0664 00000000 		.word	.LC27
 6169 0668 18000000 		.word	.LANCHOR1+24
 6170 066c D34D6210 		.word	274877907
 6171 0670 40420F00 		.word	1000000
 6172              	.LVL776:
 6173              	.L349:
 6174              	.LBB813:
 6175              	.LBB814:
 414:ROSSerial/ros/node_handle.h ****     {
 6176              		.loc 9 414 0
 6177 0674 764B     		ldr	r3, .L357
 6178 0676 D3F82425 		ldr	r2, [r3, #1316]
 6179 067a 9B68     		ldr	r3, [r3, #8]
 6180 067c 9A42     		cmp	r2, r3
 6181 067e 3DD3     		bcc	.L350
 6182              	.LVL777:
 6183              	.LBB815:
 6184              	.LBB816:
  14:ROSSerial/std_msgs/Time.h ****   {
 6185              		.loc 1 14 0
 6186 0680 744B     		ldr	r3, .L357+4
 6187 0682 0393     		str	r3, [sp, #12]
 6188              	.LVL778:
 6189              	.LBB817:
 6190              	.LBB818:
 6191              	.LBB819:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 153


 6192              		.loc 12 51 0
 6193 0684 0026     		movs	r6, #0
 6194 0686 0496     		str	r6, [sp, #16]
 6195 0688 0596     		str	r6, [sp, #20]
 6196              	.LVL779:
 6197              	.LBE819:
 6198              	.LBE818:
 6199              	.LBE817:
 6200              	.LBE816:
 6201              	.LBE815:
 6202              	.LBB820:
 6203              	.LBB821:
 6204              		.loc 11 151 0
 6205 068a FFF7FEFF 		bl	HAL_GetTick
 6206              	.LVL780:
 6207 068e 0146     		mov	r1, r0
 6208              	.LVL781:
 6209              	.LBE821:
 6210              	.LBE820:
 420:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 6211              		.loc 9 420 0
 6212 0690 6F4F     		ldr	r7, .L357
 6213 0692 B860     		str	r0, [r7, #8]
 421:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 6214              		.loc 9 421 0
 6215 0694 7048     		ldr	r0, .L357+8
 6216 0696 FFF7FEFF 		bl	printf
 6217              	.LVL782:
 6218              	.LBB822:
 6219              	.LBB823:
 6220              	.LBB824:
 6221              	.LBB825:
 6222              		.loc 11 151 0
 6223 069a FFF7FEFF 		bl	HAL_GetTick
 6224              	.LVL783:
 6225              	.LBE825:
 6226              	.LBE824:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 6227              		.loc 9 603 0
 6228 069e 03AB     		add	r3, sp, #12
 6229              	.LVL784:
 6230 06a0 0A22     		movs	r2, #10
 6231 06a2 0146     		mov	r1, r0
 6232 06a4 6D48     		ldr	r0, .L357+12
 6233 06a6 FFF7FEFF 		bl	printf
 6234              	.LVL785:
 610:ROSSerial/ros/node_handle.h **** 
 6235              		.loc 9 610 0
 6236 06aa 039B     		ldr	r3, [sp, #12]
 6237 06ac 1B68     		ldr	r3, [r3]
 6238 06ae 07F21F21 		addw	r1, r7, #543
 6239 06b2 03A8     		add	r0, sp, #12
 6240              	.LVL786:
 6241 06b4 9847     		blx	r3
 6242              	.LVL787:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 6243              		.loc 9 613 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 154


 6244 06b6 FF23     		movs	r3, #255
 6245 06b8 87F81832 		strb	r3, [r7, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 6246              		.loc 9 614 0
 6247 06bc FE23     		movs	r3, #254
 6248 06be 87F81932 		strb	r3, [r7, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 6249              		.loc 9 615 0
 6250 06c2 C3B2     		uxtb	r3, r0
 6251 06c4 87F81A32 		strb	r3, [r7, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 6252              		.loc 9 616 0
 6253 06c8 C0F30722 		ubfx	r2, r0, #8, #8
 6254 06cc 87F81B22 		strb	r2, [r7, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 6255              		.loc 9 617 0
 6256 06d0 1344     		add	r3, r3, r2
 6257 06d2 DBB2     		uxtb	r3, r3
 6258 06d4 DB43     		mvns	r3, r3
 6259 06d6 87F81C32 		strb	r3, [r7, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 6260              		.loc 9 618 0
 6261 06da 0A23     		movs	r3, #10
 6262 06dc 87F81D32 		strb	r3, [r7, #541]
 619:ROSSerial/ros/node_handle.h **** 
 6263              		.loc 9 619 0
 6264 06e0 87F81E62 		strb	r6, [r7, #542]
 6265              	.LVL788:
 6266              	.LBB826:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6267              		.loc 9 623 0
 6268 06e4 0523     		movs	r3, #5
 6269              	.LBE826:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 6270              		.loc 9 622 0
 6271 06e6 3246     		mov	r2, r6
 6272              	.LVL789:
 6273              	.L304:
 6274              	.LBB827:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6275              		.loc 9 623 0
 6276 06e8 C11D     		adds	r1, r0, #7
 6277 06ea 9942     		cmp	r1, r3
 6278 06ec 0DDD     		ble	.L303
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 6279              		.loc 9 624 0
 6280 06ee 5849     		ldr	r1, .L357
 6281 06f0 1944     		add	r1, r1, r3
 6282 06f2 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 6283 06f6 0A44     		add	r2, r2, r1
 6284              	.LVL790:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6285              		.loc 9 623 0
 6286 06f8 0133     		adds	r3, r3, #1
 6287              	.LVL791:
 6288 06fa F5E7     		b	.L304
 6289              	.LVL792:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 155


 6290              	.L350:
 6291              	.LBE827:
 6292              	.LBE823:
 6293              	.LBE822:
 6294              	.LBB841:
 6295              	.LBB842:
 6296              		.loc 11 151 0
 6297 06fc FFF7FEFF 		bl	HAL_GetTick
 6298              	.LVL793:
 6299              	.LBE842:
 6300              	.LBE841:
 416:ROSSerial/ros/node_handle.h ****       return;
 6301              		.loc 9 416 0
 6302 0700 0146     		mov	r1, r0
 6303 0702 5748     		ldr	r0, .L357+16
 6304 0704 FFF7FEFF 		bl	printf
 6305              	.LVL794:
 6306 0708 24E0     		b	.L302
 6307              	.LVL795:
 6308              	.L303:
 6309              	.LBB843:
 6310              	.LBB839:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 6311              		.loc 9 626 0
 6312 070a 5342     		rsbs	r3, r2, #0
 6313              	.LVL796:
 6314 070c D2B2     		uxtb	r2, r2
 6315              	.LVL797:
 6316 070e DBB2     		uxtb	r3, r3
 6317 0710 58BF     		it	pl
 6318 0712 5A42     		rsbpl	r2, r3, #0
 6319 0714 00F10806 		add	r6, r0, #8
 6320              	.LVL798:
 6321 0718 D243     		mvns	r2, r2
 6322 071a 4D4B     		ldr	r3, .L357
 6323 071c 1944     		add	r1, r1, r3
 6324 071e 81F81822 		strb	r2, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 6325              		.loc 9 629 0
 6326 0722 B6F5007F 		cmp	r6, #512
 6327 0726 20DC     		bgt	.L305
 6328              	.LVL799:
 6329              	.LBB828:
 6330              	.LBB829:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 6331              		.loc 11 121 0
 6332 0728 1423     		movs	r3, #20
 6333 072a B2B2     		uxth	r2, r6
 6334 072c 4D49     		ldr	r1, .L357+20
 6335 072e 4E48     		ldr	r0, .L357+24
 6336 0730 FFF7FEFF 		bl	HAL_UART_Transmit
 6337              	.LVL800:
 122:ROSSerial/AT32hardware.h **** 		{
 6338              		.loc 11 122 0
 6339 0734 0146     		mov	r1, r0
 6340 0736 90B9     		cbnz	r0, .L351
 6341              	.LVL801:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 156


 6342              	.L306:
 6343              	.LBE829:
 6344              	.LBE828:
 6345              	.LBB831:
 6346              	.LBB832:
 6347              		.loc 11 151 0
 6348 0738 FFF7FEFF 		bl	HAL_GetTick
 6349              	.LVL802:
 6350 073c 0746     		mov	r7, r0
 6351              	.LVL803:
 6352              	.LBE832:
 6353              	.LBE831:
 633:ROSSerial/ros/node_handle.h ****       return l;
 6354              		.loc 9 633 0
 6355 073e 1EA8     		add	r0, sp, #120
 6356 0740 50F86C3D 		ldr	r3, [r0, #-108]!
 6357 0744 9B68     		ldr	r3, [r3, #8]
 6358 0746 9847     		blx	r3
 6359              	.LVL804:
 6360 0748 3346     		mov	r3, r6
 6361 074a 0246     		mov	r2, r0
 6362 074c 3946     		mov	r1, r7
 6363 074e 4748     		ldr	r0, .L357+28
 6364 0750 FFF7FEFF 		bl	printf
 6365              	.LVL805:
 6366              	.L302:
 6367              	.LBE839:
 6368              	.LBE843:
 6369              	.LBE814:
 6370              	.LBE813:
 395:ROSSerial/ros/node_handle.h ****     }
 6371              		.loc 9 395 0
 6372 0754 3E4B     		ldr	r3, .L357
 6373 0756 C3F82045 		str	r4, [r3, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 6374              		.loc 9 398 0
 6375 075a 0024     		movs	r4, #0
 6376              	.LVL806:
 6377 075c 17E0     		b	.L259
 6378              	.LVL807:
 6379              	.L351:
 6380              	.LBB846:
 6381              	.LBB845:
 6382              	.LBB844:
 6383              	.LBB840:
 6384              	.LBB833:
 6385              	.LBB830:
 124:ROSSerial/AT32hardware.h **** 		}
 6386              		.loc 11 124 0
 6387 075e 414B     		ldr	r3, .L357+20
 6388 0760 3246     		mov	r2, r6
 6389 0762 4348     		ldr	r0, .L357+32
 6390              	.LVL808:
 6391 0764 FFF7FEFF 		bl	printf
 6392              	.LVL809:
 6393 0768 E6E7     		b	.L306
 6394              	.LVL810:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 157


 6395              	.L305:
 6396              	.LBE830:
 6397              	.LBE833:
 6398              	.LBB834:
 6399              	.LBB835:
 6400              	.LBB836:
 6401              	.LBB837:
 6402              	.LBB838:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 6403              		.loc 3 13 0
 6404 076a 424B     		ldr	r3, .L357+36
 6405 076c 0693     		str	r3, [sp, #24]
 6406              	.LVL811:
 6407              	.LBE838:
 6408              	.LBE837:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 6409              		.loc 9 652 0
 6410 076e 0323     		movs	r3, #3
 6411 0770 8DF81C30 		strb	r3, [sp, #28]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 6412              		.loc 9 653 0
 6413 0774 404E     		ldr	r6, .L357+40
 6414              	.LVL812:
 6415 0776 0896     		str	r6, [sp, #32]
 6416              		.loc 9 654 0
 6417 0778 06AA     		add	r2, sp, #24
 6418 077a 0721     		movs	r1, #7
 6419 077c 3448     		ldr	r0, .L357
 6420              	.LVL813:
 6421 077e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6422              	.LVL814:
 6423              	.LBE836:
 6424              	.LBE835:
 6425              	.LBE834:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 6426              		.loc 9 639 0
 6427 0782 3046     		mov	r0, r6
 6428 0784 FFF7FEFF 		bl	printf
 6429              	.LVL815:
 6430 0788 E4E7     		b	.L302
 6431              	.LVL816:
 6432              	.L318:
 6433              	.LBE840:
 6434              	.LBE844:
 6435              	.LBE845:
 6436              	.LBE846:
 6437              	.LBB847:
 279:ROSSerial/ros/node_handle.h ****         }
 6438              		.loc 9 279 0
 6439 078a 6FF00104 		mvn	r4, #1
 6440              	.LVL817:
 6441              	.L259:
 6442              	.LBE847:
 6443              	.LBE739:
 6444              	.LBE738:
  95:./Src/ROS_main.cpp ****     {
 6445              		.loc 8 95 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 158


 6446 078e 3CB1     		cbz	r4, .L308
  97:./Src/ROS_main.cpp ****         return;
 6447              		.loc 8 97 0
 6448 0790 3A48     		ldr	r0, .L357+44
 6449 0792 FFF7FEFF 		bl	puts
 6450              	.LVL818:
 6451              	.L254:
 6452              		.loc 8 120 0
 6453 0796 1EB0     		add	sp, sp, #120
 6454              	.LCFI37:
 6455              		.cfi_remember_state
 6456              		.cfi_def_cfa_offset 32
 6457              		@ sp needed
 6458 0798 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6459              	.LVL819:
 6460              	.L320:
 6461              	.LCFI38:
 6462              		.cfi_restore_state
 6463              	.LBB849:
 6464              	.LBB848:
 398:ROSSerial/ros/node_handle.h ****   }
 6465              		.loc 9 398 0
 6466 079c 0024     		movs	r4, #0
 6467              	.LVL820:
 6468 079e F6E7     		b	.L259
 6469              	.LVL821:
 6470              	.L308:
 6471              	.LBE848:
 6472              	.LBE849:
 101:./Src/ROS_main.cpp ****         //printf("publishing %ld, %ld\n",now, (now - publish_time));
 6473              		.loc 8 101 0
 6474 07a0 374B     		ldr	r3, .L357+48
 6475 07a2 1B68     		ldr	r3, [r3]
 6476 07a4 EB1A     		subs	r3, r5, r3
 6477 07a6 322B     		cmp	r3, #50
 6478 07a8 29D8     		bhi	.L352
 6479              	.L310:
 108:./Src/ROS_main.cpp ****     if(newWheelPositions.name_length > 0) 
 6480              		.loc 8 108 0
 6481 07aa 0CA8     		add	r0, sp, #48
 6482 07ac FFF7FEFF 		bl	_Z17getWheelPositionsv
 6483              	.LVL822:
 6484              	.LBB850:
 109:./Src/ROS_main.cpp ****     {
 6485              		.loc 8 109 0
 6486 07b0 129B     		ldr	r3, [sp, #72]
 6487 07b2 002B     		cmp	r3, #0
 6488 07b4 EFD0     		beq	.L254
 6489              	.L313:
 6490              	.LVL823:
 6491              	.LBB851:
 6492              	.LBB852:
 111:./Src/ROS_main.cpp ****         {
 6493              		.loc 8 111 0 discriminator 1
 6494 07b6 012C     		cmp	r4, #1
 6495 07b8 26DC     		bgt	.L312
 113:./Src/ROS_main.cpp ****                         int(newWheelPositions.velocity[i]),int(newWheelPositions.effort[i]) );
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 159


 6496              		.loc 8 113 0
 6497 07ba A200     		lsls	r2, r4, #2
 6498 07bc 179B     		ldr	r3, [sp, #92]
 6499 07be 1344     		add	r3, r3, r2
 6500 07c0 D3ED006A 		vldr.32	s13, [r3]
 114:./Src/ROS_main.cpp ****         }
 6501              		.loc 8 114 0
 6502 07c4 1A9B     		ldr	r3, [sp, #104]
 6503 07c6 1344     		add	r3, r3, r2
 6504 07c8 D3ED007A 		vldr.32	s15, [r3]
 6505 07cc 1D9B     		ldr	r3, [sp, #116]
 6506 07ce 1344     		add	r3, r3, r2
 6507 07d0 93ED007A 		vldr.32	s14, [r3]
 113:./Src/ROS_main.cpp ****                         int(newWheelPositions.velocity[i]),int(newWheelPositions.effort[i]) );
 6508              		.loc 8 113 0
 6509 07d4 149B     		ldr	r3, [sp, #80]
 6510 07d6 53F82420 		ldr	r2, [r3, r4, lsl #2]
 6511 07da BDEEC77A 		vcvt.s32.f32	s14, s14
 6512 07de 8DED017A 		vstr.32	s14, [sp, #4]	@ int
 6513 07e2 FDEEE77A 		vcvt.s32.f32	s15, s15
 6514 07e6 CDED007A 		vstr.32	s15, [sp]	@ int
 6515 07ea FDEEE67A 		vcvt.s32.f32	s15, s13
 6516 07ee 17EE903A 		vmov	r3, s15	@ int
 6517 07f2 2146     		mov	r1, r4
 6518 07f4 2348     		ldr	r0, .L357+52
 6519 07f6 FFF7FEFF 		bl	printf
 6520              	.LVL824:
 111:./Src/ROS_main.cpp ****         {
 6521              		.loc 8 111 0
 6522 07fa 0134     		adds	r4, r4, #1
 6523              	.LVL825:
 6524 07fc DBE7     		b	.L313
 6525              	.LVL826:
 6526              	.L352:
 6527              	.LBE852:
 6528              	.LBE851:
 6529              	.LBE850:
 103:./Src/ROS_main.cpp ****         publish_time = now;
 6530              		.loc 8 103 0
 6531 07fe FFF7FEFF 		bl	publish_hovebot_state
 6532              	.LVL827:
 104:./Src/ROS_main.cpp ****     }
 6533              		.loc 8 104 0
 6534 0802 1F4B     		ldr	r3, .L357+48
 6535 0804 1D60     		str	r5, [r3]
 6536 0806 D0E7     		b	.L310
 6537              	.LVL828:
 6538              	.L312:
 6539              	.LBB855:
 6540              	.LBB853:
 117:./Src/ROS_main.cpp ****         pwmr = MIN(newWheelPositions.effort[1],80);
 6541              		.loc 8 117 0
 6542 0808 1D9A     		ldr	r2, [sp, #116]
 6543 080a D2ED007A 		vldr.32	s15, [r2]
 6544 080e 9FED1E7A 		vldr.32	s14, .L357+56
 6545 0812 F4EEC77A 		vcmpe.f32	s15, s14
 6546 0816 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 160


 6547 081a 15D5     		bpl	.L326
 117:./Src/ROS_main.cpp ****         pwmr = MIN(newWheelPositions.effort[1],80);
 6548              		.loc 8 117 0 is_stmt 0 discriminator 1
 6549 081c FDEEE77A 		vcvt.s32.f32	s15, s15
 6550 0820 17EE903A 		vmov	r3, s15	@ int
 6551              	.L314:
 117:./Src/ROS_main.cpp ****         pwmr = MIN(newWheelPositions.effort[1],80);
 6552              		.loc 8 117 0 discriminator 4
 6553 0824 1949     		ldr	r1, .L357+60
 6554 0826 0B60     		str	r3, [r1]
 118:./Src/ROS_main.cpp ****     }
 6555              		.loc 8 118 0 is_stmt 1 discriminator 4
 6556 0828 D2ED017A 		vldr.32	s15, [r2, #4]
 6557 082c 9FED167A 		vldr.32	s14, .L357+56
 6558 0830 F4EEC77A 		vcmpe.f32	s15, s14
 6559 0834 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6560 0838 08D5     		bpl	.L327
 118:./Src/ROS_main.cpp ****     }
 6561              		.loc 8 118 0 is_stmt 0 discriminator 1
 6562 083a FDEEE77A 		vcvt.s32.f32	s15, s15
 6563 083e 17EE903A 		vmov	r3, s15	@ int
 6564              	.L316:
 118:./Src/ROS_main.cpp ****     }
 6565              		.loc 8 118 0 discriminator 4
 6566 0842 134A     		ldr	r2, .L357+64
 6567 0844 1360     		str	r3, [r2]
 6568              	.LBE853:
 6569 0846 A6E7     		b	.L254
 6570              	.L326:
 6571              	.LBB854:
 117:./Src/ROS_main.cpp ****         pwmr = MIN(newWheelPositions.effort[1],80);
 6572              		.loc 8 117 0 is_stmt 1
 6573 0848 5023     		movs	r3, #80
 6574 084a EBE7     		b	.L314
 6575              	.L327:
 118:./Src/ROS_main.cpp ****     }
 6576              		.loc 8 118 0
 6577 084c 5023     		movs	r3, #80
 6578 084e F8E7     		b	.L316
 6579              	.L358:
 6580              		.align	2
 6581              	.L357:
 6582 0850 00000000 		.word	.LANCHOR1
 6583 0854 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6584 0858 2C000000 		.word	.LC26
 6585 085c 00000000 		.word	.LC19
 6586 0860 00000000 		.word	.LC25
 6587 0864 18020000 		.word	.LANCHOR1+536
 6588 0868 00000000 		.word	huart2
 6589 086c 40000000 		.word	.LC21
 6590 0870 20000000 		.word	.LC20
 6591 0874 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 6592 0878 68000000 		.word	.LC22
 6593 087c 24000000 		.word	.LC28
 6594 0880 00000000 		.word	.LANCHOR5
 6595 0884 5C000000 		.word	.LC29
 6596 0888 0000A042 		.word	1117782016
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 161


 6597 088c 00000000 		.word	pwml
 6598 0890 00000000 		.word	pwmr
 6599              	.LBE854:
 6600              	.LBE855:
 6601              		.cfi_endproc
 6602              	.LFE496:
 6603              		.fnend
 6605              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 6606              		.align	1
 6607              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 6608              		.syntax unified
 6609              		.thumb
 6610              		.thumb_func
 6611              		.fpu fpv4-sp-d16
 6613              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 6614              		.fnstart
 6615              	.LFB539:
 238:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 6616              		.loc 9 238 0
 6617              		.cfi_startproc
 6618              		@ args = 0, pretend = 0, frame = 40
 6619              		@ frame_needed = 0, uses_anonymous_args = 0
 6620              	.LVL829:
 6621 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6622              		.save {r4, r5, r6, r7, r8, r9, lr}
 6623              	.LCFI39:
 6624              		.cfi_def_cfa_offset 28
 6625              		.cfi_offset 4, -28
 6626              		.cfi_offset 5, -24
 6627              		.cfi_offset 6, -20
 6628              		.cfi_offset 7, -16
 6629              		.cfi_offset 8, -12
 6630              		.cfi_offset 9, -8
 6631              		.cfi_offset 14, -4
 6632              		.pad #44
 6633 0004 8BB0     		sub	sp, sp, #44
 6634              	.LCFI40:
 6635              		.cfi_def_cfa_offset 72
 6636 0006 0446     		mov	r4, r0
 6637              	.LVL830:
 6638              	.LBB953:
 6639              	.LBB954:
 6640              	.LBB955:
 6641              	.LBB956:
 6642              		.loc 11 151 0
 6643 0008 FFF7FEFF 		bl	HAL_GetTick
 6644              	.LVL831:
 6645 000c 0546     		mov	r5, r0
 6646              	.LVL832:
 6647              	.LBE956:
 6648              	.LBE955:
 250:ROSSerial/ros/node_handle.h ****     {
 6649              		.loc 9 250 0
 6650 000e D4F82435 		ldr	r3, [r4, #1316]
 6651 0012 C31A     		subs	r3, r0, r3
 6652 0014 42F6F822 		movw	r2, #11000
 6653 0018 9342     		cmp	r3, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 162


 6654 001a 02D9     		bls	.L360
 254:ROSSerial/ros/node_handle.h ****     }
 6655              		.loc 9 254 0
 6656 001c 0023     		movs	r3, #0
 6657 001e 84F81C35 		strb	r3, [r4, #1308]
 6658              	.L360:
 258:ROSSerial/ros/node_handle.h ****     {
 6659              		.loc 9 258 0
 6660 0022 D4F80835 		ldr	r3, [r4, #1288]
 6661 0026 002B     		cmp	r3, #0
 6662 0028 46D0     		beq	.L362
 260:ROSSerial/ros/node_handle.h ****       {
 6663              		.loc 9 260 0
 6664 002a D4F82835 		ldr	r3, [r4, #1320]
 6665 002e 9D42     		cmp	r5, r3
 6666 0030 42D9     		bls	.L362
 262:ROSSerial/ros/node_handle.h ****       }
 6667              		.loc 9 262 0
 6668 0032 0023     		movs	r3, #0
 6669 0034 C4F80835 		str	r3, [r4, #1288]
 6670 0038 3EE0     		b	.L362
 6671              	.LVL833:
 6672              	.L419:
 6673              	.LBB957:
 6674              	.LBB958:
 6675              	.LBB959:
  84:ROSSerial/AT32hardware.h **** 		}
 6676              		.loc 11 84 0
 6677 003a 591C     		adds	r1, r3, #1
 6678 003c BA4A     		ldr	r2, .L441
 6679 003e 1170     		strb	r1, [r2]
 6680 0040 BA4A     		ldr	r2, .L441+4
 6681 0042 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 6682              	.LVL834:
 6683              	.L366:
 6684              	.LBE959:
 6685              	.LBE958:
 283:ROSSerial/ros/node_handle.h ****         break;
 6686              		.loc 9 283 0
 6687 0044 0029     		cmp	r1, #0
 6688 0046 C0F2C182 		blt	.L367
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 6689              		.loc 9 285 0
 6690 004a D4F81825 		ldr	r2, [r4, #1304]
 6691 004e 0A44     		add	r2, r2, r1
 6692 0050 C4F81825 		str	r2, [r4, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 6693              		.loc 9 286 0
 6694 0054 D4F80835 		ldr	r3, [r4, #1288]
 6695 0058 072B     		cmp	r3, #7
 6696 005a 1DD0     		beq	.L418
 293:ROSSerial/ros/node_handle.h ****       {
 6697              		.loc 9 293 0
 6698 005c 002B     		cmp	r3, #0
 6699 005e 4CD1     		bne	.L370
 295:ROSSerial/ros/node_handle.h ****         {
 6700              		.loc 9 295 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 163


 6701 0060 FF29     		cmp	r1, #255
 6702 0062 3DD1     		bne	.L371
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 6703              		.loc 9 297 0
 6704 0064 0133     		adds	r3, r3, #1
 6705 0066 C4F80835 		str	r3, [r4, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 6706              		.loc 9 298 0
 6707 006a 05F11403 		add	r3, r5, #20
 6708 006e C4F82835 		str	r3, [r4, #1320]
 6709 0072 21E0     		b	.L362
 6710              	.LVL835:
 6711              	.L420:
 6712              	.LBB962:
 6713              	.LBB960:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 6714              		.loc 11 88 0
 6715 0074 0023     		movs	r3, #0
 6716 0076 AC4A     		ldr	r2, .L441
 6717 0078 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 6718              		.loc 11 89 0
 6719 007a AD4A     		ldr	r2, .L441+8
 6720 007c 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 6721              		.loc 11 90 0
 6722 007e AD48     		ldr	r0, .L441+12
 6723 0080 0268     		ldr	r2, [r0]
 6724 0082 D368     		ldr	r3, [r2, #12]
 6725 0084 43F04003 		orr	r3, r3, #64
 6726 0088 D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 6727              		.loc 11 91 0
 6728 008a 0122     		movs	r2, #1
 6729 008c AA49     		ldr	r1, .L441+16
 6730 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 6731              	.LVL836:
  80:ROSSerial/AT32hardware.h **** 		
 6732              		.loc 11 80 0
 6733 0092 4FF0FF31 		mov	r1, #-1
 6734 0096 D5E7     		b	.L366
 6735              	.LVL837:
 6736              	.L418:
 6737              	.LBE960:
 6738              	.LBE962:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 6739              		.loc 9 288 0
 6740 0098 D4F81435 		ldr	r3, [r4, #1300]
 6741 009c 5A1C     		adds	r2, r3, #1
 6742 009e C4F81425 		str	r2, [r4, #1300]
 6743 00a2 2344     		add	r3, r3, r4
 6744 00a4 1976     		strb	r1, [r3, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 6745              		.loc 9 289 0
 6746 00a6 D4F80C35 		ldr	r3, [r4, #1292]
 6747 00aa 013B     		subs	r3, r3, #1
 6748 00ac C4F80C35 		str	r3, [r4, #1292]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 164


 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 6749              		.loc 9 290 0
 6750 00b0 13B9     		cbnz	r3, .L362
 291:ROSSerial/ros/node_handle.h ****       }
 6751              		.loc 9 291 0
 6752 00b2 0823     		movs	r3, #8
 6753 00b4 C4F80835 		str	r3, [r4, #1288]
 6754              	.L362:
 270:ROSSerial/ros/node_handle.h ****       {
 6755              		.loc 9 270 0
 6756 00b8 6369     		ldr	r3, [r4, #20]
 6757 00ba 33B1     		cbz	r3, .L363
 6758              	.LVL838:
 6759              	.LBB963:
 6760              	.LBB964:
 6761              		.loc 11 151 0
 6762 00bc FFF7FEFF 		bl	HAL_GetTick
 6763              	.LVL839:
 6764              	.LBE964:
 6765              	.LBE963:
 276:ROSSerial/ros/node_handle.h ****         {
 6766              		.loc 9 276 0
 6767 00c0 401B     		subs	r0, r0, r5
 6768 00c2 6369     		ldr	r3, [r4, #20]
 6769 00c4 9842     		cmp	r0, r3
 6770 00c6 00F21783 		bhi	.L413
 6771              	.L363:
 6772              	.LVL840:
 6773              	.LBB965:
 6774              	.LBB961:
  82:ROSSerial/AT32hardware.h **** 		{
 6775              		.loc 11 82 0
 6776 00ca 974B     		ldr	r3, .L441
 6777 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6778 00ce 984A     		ldr	r2, .L441+8
 6779 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6780 00d2 9342     		cmp	r3, r2
 6781 00d4 B1D3     		bcc	.L419
  86:ROSSerial/AT32hardware.h **** 		{
 6782              		.loc 11 86 0
 6783 00d6 9342     		cmp	r3, r2
 6784 00d8 CCD0     		beq	.L420
  80:ROSSerial/AT32hardware.h **** 		
 6785              		.loc 11 80 0
 6786 00da 4FF0FF31 		mov	r1, #-1
 6787 00de B1E7     		b	.L366
 6788              	.LVL841:
 6789              	.L371:
 6790              	.LBE961:
 6791              	.LBE965:
 6792              	.LBB966:
 6793              	.LBB967:
 6794              		.loc 11 151 0
 6795 00e0 FFF7FEFF 		bl	HAL_GetTick
 6796              	.LVL842:
 6797              	.LBE967:
 6798              	.LBE966:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 165


 300:ROSSerial/ros/node_handle.h ****         {
 6799              		.loc 9 300 0
 6800 00e4 401B     		subs	r0, r0, r5
 6801 00e6 41F28833 		movw	r3, #5000
 6802 00ea 9842     		cmp	r0, r3
 6803 00ec E4D9     		bls	.L362
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 6804              		.loc 9 303 0
 6805 00ee 0023     		movs	r3, #0
 6806 00f0 84F81C35 		strb	r3, [r4, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 6807              		.loc 9 304 0
 6808 00f4 6FF00100 		mvn	r0, #1
 6809 00f8 00E3     		b	.L359
 6810              	.L370:
 307:ROSSerial/ros/node_handle.h ****       {
 6811              		.loc 9 307 0
 6812 00fa 012B     		cmp	r3, #1
 6813 00fc 3DD0     		beq	.L421
 320:ROSSerial/ros/node_handle.h ****       {
 6814              		.loc 9 320 0
 6815 00fe 022B     		cmp	r3, #2
 6816 0100 00F0CD80 		beq	.L422
 327:ROSSerial/ros/node_handle.h ****       {
 6817              		.loc 9 327 0
 6818 0104 032B     		cmp	r3, #3
 6819 0106 00F0D580 		beq	.L423
 332:ROSSerial/ros/node_handle.h ****       {
 6820              		.loc 9 332 0
 6821 010a 042B     		cmp	r3, #4
 6822 010c 00F0DC80 		beq	.L424
 339:ROSSerial/ros/node_handle.h ****       {
 6823              		.loc 9 339 0
 6824 0110 052B     		cmp	r3, #5
 6825 0112 00F0E880 		beq	.L425
 345:ROSSerial/ros/node_handle.h ****       {
 6826              		.loc 9 345 0
 6827 0116 062B     		cmp	r3, #6
 6828 0118 00F0ED80 		beq	.L426
 352:ROSSerial/ros/node_handle.h ****       {
 6829              		.loc 9 352 0
 6830 011c 082B     		cmp	r3, #8
 6831 011e CBD1     		bne	.L362
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 6832              		.loc 9 354 0
 6833 0120 0023     		movs	r3, #0
 6834 0122 C4F80835 		str	r3, [r4, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 6835              		.loc 9 355 0
 6836 0126 9B1A     		subs	r3, r3, r2
 6837 0128 D2B2     		uxtb	r2, r2
 6838 012a DBB2     		uxtb	r3, r3
 6839 012c 58BF     		it	pl
 6840 012e 5A42     		rsbpl	r2, r3, #0
 6841 0130 FF2A     		cmp	r2, #255
 6842 0132 C1D1     		bne	.L362
 357:ROSSerial/ros/node_handle.h ****           {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 166


 6843              		.loc 9 357 0
 6844 0134 D4F81065 		ldr	r6, [r4, #1296]
 6845 0138 002E     		cmp	r6, #0
 6846 013a 00F0EE80 		beq	.L427
 365:ROSSerial/ros/node_handle.h ****           {
 6847              		.loc 9 365 0
 6848 013e 0A2E     		cmp	r6, #10
 6849 0140 00F06081 		beq	.L428
 369:ROSSerial/ros/node_handle.h ****           {
 6850              		.loc 9 369 0
 6851 0144 062E     		cmp	r6, #6
 6852 0146 00F0A881 		beq	.L429
 374:ROSSerial/ros/node_handle.h ****           {
 6853              		.loc 9 374 0
 6854 014a 0B2E     		cmp	r6, #11
 6855 014c 00F03A82 		beq	.L430
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 6856              		.loc 9 380 0
 6857 0150 643E     		subs	r6, r6, #100
 6858 0152 06EB8603 		add	r3, r6, r6, lsl #2
 6859 0156 04EB8303 		add	r3, r4, r3, lsl #2
 6860 015a B3F8A434 		ldrh	r3, [r3, #1188]
 6861 015e 002B     		cmp	r3, #0
 6862 0160 AAD0     		beq	.L362
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 6863              		.loc 9 381 0
 6864 0162 06EB8606 		add	r6, r6, r6, lsl #2
 6865 0166 04EB8606 		add	r6, r4, r6, lsl #2
 6866 016a D6F8B434 		ldr	r3, [r6, #1204]
 6867 016e 734A     		ldr	r2, .L441+20
 6868 0170 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 6869              		.loc 9 383 0
 6870 0172 04F11800 		add	r0, r4, #24
 6871 0176 9847     		blx	r3
 6872              	.LVL843:
 6873 0178 9EE7     		b	.L362
 6874              	.L421:
 309:ROSSerial/ros/node_handle.h ****         {
 6875              		.loc 9 309 0
 6876 017a FE29     		cmp	r1, #254
 6877 017c 47D0     		beq	.L431
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 6878              		.loc 9 315 0
 6879 017e 0023     		movs	r3, #0
 6880 0180 C4F80835 		str	r3, [r4, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 6881              		.loc 9 316 0
 6882 0184 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6883 0188 002B     		cmp	r3, #0
 6884 018a 95D1     		bne	.L362
 6885              	.LVL844:
 6886              	.LBB968:
 6887              	.LBB969:
 414:ROSSerial/ros/node_handle.h ****     {
 6888              		.loc 9 414 0
 6889 018c D4F82425 		ldr	r2, [r4, #1316]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 167


 6890 0190 A368     		ldr	r3, [r4, #8]
 6891 0192 9A42     		cmp	r2, r3
 6892 0194 3FD3     		bcc	.L432
 6893              	.LVL845:
 6894              	.LBB970:
 6895              	.LBB971:
  14:ROSSerial/std_msgs/Time.h ****   {
 6896              		.loc 1 14 0
 6897 0196 6A4B     		ldr	r3, .L441+24
 6898 0198 0193     		str	r3, [sp, #4]
 6899              	.LVL846:
 6900              	.LBB972:
 6901              	.LBB973:
 6902              	.LBB974:
 6903              		.loc 12 51 0
 6904 019a 0026     		movs	r6, #0
 6905 019c 0296     		str	r6, [sp, #8]
 6906 019e 0396     		str	r6, [sp, #12]
 6907              	.LVL847:
 6908              	.LBE974:
 6909              	.LBE973:
 6910              	.LBE972:
 6911              	.LBE971:
 6912              	.LBE970:
 6913              	.LBB975:
 6914              	.LBB976:
 6915              		.loc 11 151 0
 6916 01a0 FFF7FEFF 		bl	HAL_GetTick
 6917              	.LVL848:
 6918 01a4 0146     		mov	r1, r0
 6919              	.LVL849:
 6920              	.LBE976:
 6921              	.LBE975:
 420:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 6922              		.loc 9 420 0
 6923 01a6 A060     		str	r0, [r4, #8]
 421:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 6924              		.loc 9 421 0
 6925 01a8 6648     		ldr	r0, .L441+28
 6926 01aa FFF7FEFF 		bl	printf
 6927              	.LVL850:
 6928              	.LBB977:
 6929              	.LBB978:
 6930              	.LBB979:
 6931              	.LBB980:
 6932              		.loc 11 151 0
 6933 01ae FFF7FEFF 		bl	HAL_GetTick
 6934              	.LVL851:
 6935              	.LBE980:
 6936              	.LBE979:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 6937              		.loc 9 603 0
 6938 01b2 01AB     		add	r3, sp, #4
 6939              	.LVL852:
 6940 01b4 0A22     		movs	r2, #10
 6941 01b6 0146     		mov	r1, r0
 6942 01b8 6348     		ldr	r0, .L441+32
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 168


 6943 01ba FFF7FEFF 		bl	printf
 6944              	.LVL853:
 610:ROSSerial/ros/node_handle.h **** 
 6945              		.loc 9 610 0
 6946 01be 019B     		ldr	r3, [sp, #4]
 6947 01c0 1B68     		ldr	r3, [r3]
 6948 01c2 04F21F21 		addw	r1, r4, #543
 6949 01c6 01A8     		add	r0, sp, #4
 6950              	.LVL854:
 6951 01c8 9847     		blx	r3
 6952              	.LVL855:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 6953              		.loc 9 613 0
 6954 01ca FF23     		movs	r3, #255
 6955 01cc 84F81832 		strb	r3, [r4, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 6956              		.loc 9 614 0
 6957 01d0 FE23     		movs	r3, #254
 6958 01d2 84F81932 		strb	r3, [r4, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 6959              		.loc 9 615 0
 6960 01d6 C3B2     		uxtb	r3, r0
 6961 01d8 84F81A32 		strb	r3, [r4, #538]
 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 6962              		.loc 9 616 0
 6963 01dc C0F30722 		ubfx	r2, r0, #8, #8
 6964 01e0 84F81B22 		strb	r2, [r4, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 6965              		.loc 9 617 0
 6966 01e4 1344     		add	r3, r3, r2
 6967 01e6 DBB2     		uxtb	r3, r3
 6968 01e8 DB43     		mvns	r3, r3
 6969 01ea 84F81C32 		strb	r3, [r4, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 6970              		.loc 9 618 0
 6971 01ee 0A23     		movs	r3, #10
 6972 01f0 84F81D32 		strb	r3, [r4, #541]
 619:ROSSerial/ros/node_handle.h **** 
 6973              		.loc 9 619 0
 6974 01f4 84F81E62 		strb	r6, [r4, #542]
 6975              	.LVL856:
 6976              	.LBB981:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6977              		.loc 9 623 0
 6978 01f8 0522     		movs	r2, #5
 6979              	.LBE981:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 6980              		.loc 9 622 0
 6981 01fa 3346     		mov	r3, r6
 6982              	.LVL857:
 6983              	.L376:
 6984              	.LBB982:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6985              		.loc 9 623 0
 6986 01fc C11D     		adds	r1, r0, #7
 6987 01fe 9142     		cmp	r1, r2
 6988 0200 10DD     		ble	.L375
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 169


 624:ROSSerial/ros/node_handle.h ****     l += 7;
 6989              		.loc 9 624 0
 6990 0202 A118     		adds	r1, r4, r2
 6991 0204 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 6992 0208 0B44     		add	r3, r3, r1
 6993              	.LVL858:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6994              		.loc 9 623 0
 6995 020a 0132     		adds	r2, r2, #1
 6996              	.LVL859:
 6997 020c F6E7     		b	.L376
 6998              	.LVL860:
 6999              	.L431:
 7000              	.LBE982:
 7001              	.LBE978:
 7002              	.LBE977:
 7003              	.LBE969:
 7004              	.LBE968:
 311:ROSSerial/ros/node_handle.h ****         }
 7005              		.loc 9 311 0
 7006 020e 0133     		adds	r3, r3, #1
 7007 0210 C4F80835 		str	r3, [r4, #1288]
 7008 0214 50E7     		b	.L362
 7009              	.LVL861:
 7010              	.L432:
 7011              	.LBB999:
 7012              	.LBB998:
 7013              	.LBB995:
 7014              	.LBB996:
 7015              		.loc 11 151 0
 7016 0216 FFF7FEFF 		bl	HAL_GetTick
 7017              	.LVL862:
 7018              	.LBE996:
 7019              	.LBE995:
 416:ROSSerial/ros/node_handle.h ****       return;
 7020              		.loc 9 416 0
 7021 021a 0146     		mov	r1, r0
 7022 021c 4B48     		ldr	r0, .L441+36
 7023 021e FFF7FEFF 		bl	printf
 7024              	.LVL863:
 7025 0222 49E7     		b	.L362
 7026              	.LVL864:
 7027              	.L375:
 7028              	.LBB997:
 7029              	.LBB994:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 7030              		.loc 9 626 0
 7031 0224 5A42     		rsbs	r2, r3, #0
 7032              	.LVL865:
 7033 0226 DBB2     		uxtb	r3, r3
 7034              	.LVL866:
 7035 0228 D2B2     		uxtb	r2, r2
 7036 022a 58BF     		it	pl
 7037 022c 5342     		rsbpl	r3, r2, #0
 7038 022e 00F10806 		add	r6, r0, #8
 7039              	.LVL867:
 7040 0232 DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 170


 7041 0234 2144     		add	r1, r1, r4
 7042 0236 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 7043              		.loc 9 629 0
 7044 023a B6F5007F 		cmp	r6, #512
 7045 023e 1EDC     		bgt	.L377
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 7046              		.loc 9 631 0
 7047 0240 04F50677 		add	r7, r4, #536
 7048              	.LVL868:
 7049              	.LBB983:
 7050              	.LBB984:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 7051              		.loc 11 121 0
 7052 0244 1423     		movs	r3, #20
 7053 0246 B2B2     		uxth	r2, r6
 7054 0248 3946     		mov	r1, r7
 7055 024a 3A48     		ldr	r0, .L441+12
 7056 024c FFF7FEFF 		bl	HAL_UART_Transmit
 7057              	.LVL869:
 122:ROSSerial/AT32hardware.h **** 		{
 7058              		.loc 11 122 0
 7059 0250 0146     		mov	r1, r0
 7060 0252 70B9     		cbnz	r0, .L433
 7061              	.LVL870:
 7062              	.L378:
 7063              	.LBE984:
 7064              	.LBE983:
 7065              	.LBB986:
 7066              	.LBB987:
 7067              		.loc 11 151 0
 7068 0254 FFF7FEFF 		bl	HAL_GetTick
 7069              	.LVL871:
 7070 0258 0746     		mov	r7, r0
 7071              	.LVL872:
 7072              	.LBE987:
 7073              	.LBE986:
 633:ROSSerial/ros/node_handle.h ****       return l;
 7074              		.loc 9 633 0
 7075 025a 0AA8     		add	r0, sp, #40
 7076 025c 50F8243D 		ldr	r3, [r0, #-36]!
 7077 0260 9B68     		ldr	r3, [r3, #8]
 7078 0262 9847     		blx	r3
 7079              	.LVL873:
 7080 0264 3346     		mov	r3, r6
 7081 0266 0246     		mov	r2, r0
 7082 0268 3946     		mov	r1, r7
 7083 026a 3948     		ldr	r0, .L441+40
 7084 026c FFF7FEFF 		bl	printf
 7085              	.LVL874:
 7086 0270 22E7     		b	.L362
 7087              	.LVL875:
 7088              	.L433:
 7089              	.LBB988:
 7090              	.LBB985:
 124:ROSSerial/AT32hardware.h **** 		}
 7091              		.loc 11 124 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 171


 7092 0272 3B46     		mov	r3, r7
 7093 0274 3246     		mov	r2, r6
 7094 0276 3748     		ldr	r0, .L441+44
 7095              	.LVL876:
 7096 0278 FFF7FEFF 		bl	printf
 7097              	.LVL877:
 7098 027c EAE7     		b	.L378
 7099              	.LVL878:
 7100              	.L377:
 7101              	.LBE985:
 7102              	.LBE988:
 7103              	.LBB989:
 7104              	.LBB990:
 7105              	.LBB991:
 7106              	.LBB992:
 7107              	.LBB993:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 7108              		.loc 3 13 0
 7109 027e 364B     		ldr	r3, .L441+48
 7110 0280 0493     		str	r3, [sp, #16]
 7111              	.LVL879:
 7112              	.LBE993:
 7113              	.LBE992:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 7114              		.loc 9 652 0
 7115 0282 0323     		movs	r3, #3
 7116 0284 8DF81430 		strb	r3, [sp, #20]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 7117              		.loc 9 653 0
 7118 0288 344E     		ldr	r6, .L441+52
 7119              	.LVL880:
 7120 028a 0696     		str	r6, [sp, #24]
 7121              		.loc 9 654 0
 7122 028c 04AA     		add	r2, sp, #16
 7123 028e 0721     		movs	r1, #7
 7124 0290 2046     		mov	r0, r4
 7125              	.LVL881:
 7126 0292 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7127              	.LVL882:
 7128              	.LBE991:
 7129              	.LBE990:
 7130              	.LBE989:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 7131              		.loc 9 639 0
 7132 0296 3046     		mov	r0, r6
 7133 0298 FFF7FEFF 		bl	printf
 7134              	.LVL883:
 7135 029c 0CE7     		b	.L362
 7136              	.LVL884:
 7137              	.L422:
 7138              	.LBE994:
 7139              	.LBE997:
 7140              	.LBE998:
 7141              	.LBE999:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 7142              		.loc 9 322 0
 7143 029e C4F80C15 		str	r1, [r4, #1292]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 172


 323:ROSSerial/ros/node_handle.h ****         mode_++;
 7144              		.loc 9 323 0
 7145 02a2 0022     		movs	r2, #0
 7146 02a4 C4F81425 		str	r2, [r4, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 7147              		.loc 9 324 0
 7148 02a8 0133     		adds	r3, r3, #1
 7149 02aa C4F80835 		str	r3, [r4, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 7150              		.loc 9 325 0
 7151 02ae C4F81815 		str	r1, [r4, #1304]
 7152 02b2 01E7     		b	.L362
 7153              	.L423:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 7154              		.loc 9 329 0
 7155 02b4 D4F80C25 		ldr	r2, [r4, #1292]
 7156 02b8 02EB0121 		add	r1, r2, r1, lsl #8
 7157 02bc C4F80C15 		str	r1, [r4, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 7158              		.loc 9 330 0
 7159 02c0 0133     		adds	r3, r3, #1
 7160 02c2 C4F80835 		str	r3, [r4, #1288]
 7161 02c6 F7E6     		b	.L362
 7162              	.L424:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 7163              		.loc 9 334 0
 7164 02c8 5142     		rsbs	r1, r2, #0
 7165 02ca D2B2     		uxtb	r2, r2
 7166 02cc C9B2     		uxtb	r1, r1
 7167 02ce 58BF     		it	pl
 7168 02d0 4A42     		rsbpl	r2, r1, #0
 7169 02d2 FF2A     		cmp	r2, #255
 7170 02d4 03D0     		beq	.L434
 337:ROSSerial/ros/node_handle.h ****       }
 7171              		.loc 9 337 0
 7172 02d6 0023     		movs	r3, #0
 7173 02d8 C4F80835 		str	r3, [r4, #1288]
 7174 02dc ECE6     		b	.L362
 7175              	.L434:
 335:ROSSerial/ros/node_handle.h ****         else
 7176              		.loc 9 335 0
 7177 02de 0133     		adds	r3, r3, #1
 7178 02e0 C4F80835 		str	r3, [r4, #1288]
 7179 02e4 E8E6     		b	.L362
 7180              	.L425:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 7181              		.loc 9 341 0
 7182 02e6 C4F81015 		str	r1, [r4, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 7183              		.loc 9 342 0
 7184 02ea 0133     		adds	r3, r3, #1
 7185 02ec C4F80835 		str	r3, [r4, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 7186              		.loc 9 343 0
 7187 02f0 C4F81815 		str	r1, [r4, #1304]
 7188 02f4 E0E6     		b	.L362
 7189              	.L426:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 173


 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 7190              		.loc 9 347 0
 7191 02f6 D4F81035 		ldr	r3, [r4, #1296]
 7192 02fa 03EB0123 		add	r3, r3, r1, lsl #8
 7193 02fe C4F81035 		str	r3, [r4, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 7194              		.loc 9 348 0
 7195 0302 0723     		movs	r3, #7
 7196 0304 C4F80835 		str	r3, [r4, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 7197              		.loc 9 349 0
 7198 0308 D4F80C35 		ldr	r3, [r4, #1292]
 7199 030c 002B     		cmp	r3, #0
 7200 030e 7FF4D3AE 		bne	.L362
 350:ROSSerial/ros/node_handle.h ****       }
 7201              		.loc 9 350 0
 7202 0312 0823     		movs	r3, #8
 7203 0314 C4F80835 		str	r3, [r4, #1288]
 7204 0318 CEE6     		b	.L362
 7205              	.L427:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 7206              		.loc 9 359 0
 7207 031a 2046     		mov	r0, r4
 7208 031c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 7209              	.LVL885:
 7210              	.LBB1000:
 7211              	.LBB1001:
 7212              	.LBB1002:
 7213              	.LBB1003:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 7214              		.loc 2 12 0
 7215 0320 0F4B     		ldr	r3, .L441+56
 7216 0322 0493     		str	r3, [sp, #16]
 7217              	.LVL886:
 7218              	.LBE1003:
 7219              	.LBE1002:
 568:ROSSerial/ros/node_handle.h ****     {
 7220              		.loc 9 568 0
 7221 0324 3746     		mov	r7, r6
 7222 0326 1EE0     		b	.L389
 7223              	.L442:
 7224              		.align	2
 7225              	.L441:
 7226 0328 00000000 		.word	g_RxRead
 7227 032c 00000000 		.word	g_RxBuf
 7228 0330 00000000 		.word	g_RxWritten
 7229 0334 00000000 		.word	huart2
 7230 0338 00000000 		.word	byte
 7231 033c 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 7232 0340 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 7233 0344 2C000000 		.word	.LC26
 7234 0348 00000000 		.word	.LC19
 7235 034c 00000000 		.word	.LC25
 7236 0350 40000000 		.word	.LC21
 7237 0354 20000000 		.word	.LC20
 7238 0358 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 7239 035c 68000000 		.word	.LC22
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 174


 7240 0360 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 7241              	.LVL887:
 7242              	.L388:
 7243 0364 0137     		adds	r7, r7, #1
 7244              	.LVL888:
 7245              	.L389:
 7246 0366 042F     		cmp	r7, #4
 7247 0368 20DC     		bgt	.L387
 570:ROSSerial/ros/node_handle.h ****       {
 7248              		.loc 9 570 0
 7249 036a 07EB8703 		add	r3, r7, r7, lsl #2
 7250 036e 04EB8303 		add	r3, r4, r3, lsl #2
 7251 0372 B3F82C34 		ldrh	r3, [r3, #1068]
 7252 0376 002B     		cmp	r3, #0
 7253 0378 F4D0     		beq	.L388
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 7254              		.loc 9 572 0
 7255 037a ADF81430 		strh	r3, [sp, #20]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 7256              		.loc 9 573 0
 7257 037e 07EB8703 		add	r3, r7, r7, lsl #2
 7258 0382 04EB8303 		add	r3, r4, r3, lsl #2
 7259 0386 D3F83024 		ldr	r2, [r3, #1072]
 7260 038a 0692     		str	r2, [sp, #24]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 7261              		.loc 9 574 0
 7262 038c D3F83824 		ldr	r2, [r3, #1080]
 7263 0390 0792     		str	r2, [sp, #28]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 7264              		.loc 9 575 0
 7265 0392 D3F83C34 		ldr	r3, [r3, #1084]
 7266 0396 0893     		str	r3, [sp, #32]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 7267              		.loc 9 576 0
 7268 0398 4FF40073 		mov	r3, #512
 7269 039c 0993     		str	r3, [sp, #36]
 577:ROSSerial/ros/node_handle.h ****       }
 7270              		.loc 9 577 0
 7271 039e 04AA     		add	r2, sp, #16
 7272 03a0 0021     		movs	r1, #0
 7273 03a2 2046     		mov	r0, r4
 7274 03a4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7275              	.LVL889:
 7276 03a8 DCE7     		b	.L388
 7277              	.LVL890:
 7278              	.L391:
 580:ROSSerial/ros/node_handle.h ****     {
 7279              		.loc 9 580 0
 7280 03aa 0136     		adds	r6, r6, #1
 7281              	.LVL891:
 7282              	.L387:
 7283 03ac 042E     		cmp	r6, #4
 7284 03ae 1FDC     		bgt	.L390
 582:ROSSerial/ros/node_handle.h ****       {
 7285              		.loc 9 582 0
 7286 03b0 06EB8603 		add	r3, r6, r6, lsl #2
 7287 03b4 04EB8303 		add	r3, r4, r3, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 175


 7288 03b8 B3F8A434 		ldrh	r3, [r3, #1188]
 7289 03bc 002B     		cmp	r3, #0
 7290 03be F4D0     		beq	.L391
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 7291              		.loc 9 584 0
 7292 03c0 ADF81430 		strh	r3, [sp, #20]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 7293              		.loc 9 585 0
 7294 03c4 06EB8603 		add	r3, r6, r6, lsl #2
 7295 03c8 04EB8303 		add	r3, r4, r3, lsl #2
 7296 03cc D3F8A824 		ldr	r2, [r3, #1192]
 7297 03d0 0692     		str	r2, [sp, #24]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 7298              		.loc 9 586 0
 7299 03d2 D3F8AC24 		ldr	r2, [r3, #1196]
 7300 03d6 0792     		str	r2, [sp, #28]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 7301              		.loc 9 587 0
 7302 03d8 D3F8B034 		ldr	r3, [r3, #1200]
 7303 03dc 0893     		str	r3, [sp, #32]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 7304              		.loc 9 588 0
 7305 03de 4FF40073 		mov	r3, #512
 7306 03e2 0993     		str	r3, [sp, #36]
 589:ROSSerial/ros/node_handle.h ****       }
 7307              		.loc 9 589 0
 7308 03e4 04AA     		add	r2, sp, #16
 7309 03e6 0121     		movs	r1, #1
 7310 03e8 2046     		mov	r0, r4
 7311 03ea FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7312              	.LVL892:
 7313 03ee DCE7     		b	.L391
 7314              	.L390:
 592:ROSSerial/ros/node_handle.h ****   }
 7315              		.loc 9 592 0
 7316 03f0 0123     		movs	r3, #1
 7317 03f2 84F81C35 		strb	r3, [r4, #1308]
 7318              	.LVL893:
 7319              	.LBE1001:
 7320              	.LBE1000:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 7321              		.loc 9 361 0
 7322 03f6 C4F82055 		str	r5, [r4, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 7323              		.loc 9 362 0
 7324 03fa C4F82455 		str	r5, [r4, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 7325              		.loc 9 363 0
 7326 03fe 4FF0FF30 		mov	r0, #-1
 7327 0402 7BE1     		b	.L359
 7328              	.L428:
 367:ROSSerial/ros/node_handle.h ****           }
 7329              		.loc 9 367 0
 7330 0404 04F11807 		add	r7, r4, #24
 7331              	.LVL894:
 7332              	.LBB1004:
 7333              	.LBB1005:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 176


 7334              	.LBB1006:
 7335              	.LBB1007:
 7336              		.loc 11 151 0
 7337 0408 FFF7FEFF 		bl	HAL_GetTick
 7338              	.LVL895:
 7339              	.LBE1007:
 7340              	.LBE1006:
 429:ROSSerial/ros/node_handle.h **** 
 7341              		.loc 9 429 0
 7342 040c A668     		ldr	r6, [r4, #8]
 7343 040e 861B     		subs	r6, r0, r6
 7344              	.LVL896:
 7345              	.LBB1008:
 7346              	.LBB1009:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 7347              		.loc 1 38 0
 7348 0410 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 7349              		.loc 1 39 0
 7350 0412 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 7351 0414 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 7352              		.loc 1 40 0
 7353 0418 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 7354 041a 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 7355              		.loc 1 41 0
 7356 041e F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 7357 0420 42EA0161 		orr	r1, r2, r1, lsl #24
 7358              	.LVL897:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 7359              		.loc 1 43 0
 7360 0424 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 7361              		.loc 1 44 0
 7362 0426 7879     		ldrb	r0, [r7, #5]	@ zero_extendqisi2
 7363 0428 42EA0022 		orr	r2, r2, r0, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 7364              		.loc 1 45 0
 7365 042c B879     		ldrb	r0, [r7, #6]	@ zero_extendqisi2
 7366 042e 42EA0042 		orr	r2, r2, r0, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 7367              		.loc 1 46 0
 7368 0432 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7369 0434 42EA0362 		orr	r2, r2, r3, lsl #24
 7370              	.LVL898:
 7371              	.LBE1009:
 7372              	.LBE1008:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 7373              		.loc 9 432 0
 7374 0438 B34F     		ldr	r7, .L443
 7375 043a A7FB0603 		umull	r0, r3, r7, r6
 7376 043e 9B09     		lsrs	r3, r3, #6
 7377 0440 1944     		add	r1, r1, r3
 7378 0442 0591     		str	r1, [sp, #20]
 433:ROSSerial/ros/node_handle.h **** 
 7379              		.loc 9 433 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 177


 7380 0444 4FF47A79 		mov	r9, #1000
 7381 0448 09FB1363 		mls	r3, r9, r3, r6
 7382 044c DFF8E882 		ldr	r8, .L443+48
 7383 0450 08FB0323 		mla	r3, r8, r3, r2
 7384 0454 0693     		str	r3, [sp, #24]
 7385              	.LVL899:
 7386              	.LBB1010:
 7387              	.LBB1011:
 7388              	.LBB1012:
 7389              	.LBB1013:
 7390              		.loc 11 151 0
 7391 0456 FFF7FEFF 		bl	HAL_GetTick
 7392              	.LVL900:
 7393              	.LBE1013:
 7394              	.LBE1012:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 7395              		.loc 9 454 0
 7396 045a A7FB0023 		umull	r2, r3, r7, r0
 7397 045e 9B09     		lsrs	r3, r3, #6
 7398 0460 059A     		ldr	r2, [sp, #20]
 7399 0462 D21A     		subs	r2, r2, r3
 7400 0464 013A     		subs	r2, r2, #1
 7401 0466 E260     		str	r2, [r4, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 7402              		.loc 9 455 0
 7403 0468 09FB1303 		mls	r3, r9, r3, r0
 7404 046c 069A     		ldr	r2, [sp, #24]
 7405 046e 08FB1323 		mls	r3, r8, r3, r2
 7406 0472 A64A     		ldr	r2, .L443+4
 7407 0474 1A44     		add	r2, r2, r3
 7408 0476 2146     		mov	r1, r4
 7409 0478 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 7410              		.loc 9 456 0
 7411 047c 04F10C00 		add	r0, r4, #12
 7412              	.LVL901:
 7413 0480 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 7414              	.LVL902:
 7415              	.LBE1011:
 7416              	.LBE1010:
 7417              	.LBB1014:
 7418              	.LBB1015:
 7419              		.loc 11 151 0
 7420 0484 FFF7FEFF 		bl	HAL_GetTick
 7421              	.LVL903:
 7422 0488 0746     		mov	r7, r0
 7423              	.LVL904:
 7424              	.LBE1015:
 7425              	.LBE1014:
 437:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = c_time;
 7426              		.loc 9 437 0
 7427 048a 3246     		mov	r2, r6
 7428 048c 0146     		mov	r1, r0
 7429 048e A048     		ldr	r0, .L443+8
 7430              	.LVL905:
 7431 0490 FFF7FEFF 		bl	printf
 7432              	.LVL906:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 178


 438:ROSSerial/ros/node_handle.h ****   }
 7433              		.loc 9 438 0
 7434 0494 C4F82475 		str	r7, [r4, #1316]
 7435 0498 0EE6     		b	.L362
 7436              	.LVL907:
 7437              	.L429:
 7438              	.LBE1005:
 7439              	.LBE1004:
 371:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 7440              		.loc 9 371 0
 7441 049a 04F5A668 		add	r8, r4, #1328
 7442 049e 04F11807 		add	r7, r4, #24
 7443              	.LVL908:
 7444              	.LBB1016:
 7445              	.LBB1017:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 7446              		.loc 4 116 0
 7447 04a2 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 7448              	.LVL909:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 7449              		.loc 4 117 0
 7450 04a4 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 7451 04a8 9E42     		cmp	r6, r3
 7452 04aa 1ED8     		bhi	.L435
 7453              	.L394:
 7454              	.LVL910:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 7455              		.loc 4 120 0
 7456 04ac 88F80460 		strb	r6, [r8, #4]
 7457              	.LVL911:
 7458              	.LBB1018:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 7459              		.loc 4 121 0
 7460 04b0 0022     		movs	r2, #0
 7461              	.LBE1018:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 7462              		.loc 4 119 0
 7463 04b2 0426     		movs	r6, #4
 7464              	.LVL912:
 7465              	.L396:
 7466              	.LBB1020:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 7467              		.loc 4 121 0
 7468 04b4 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 7469 04b8 9342     		cmp	r3, r2
 7470 04ba 1ED9     		bls	.L395
 7471              	.LBB1019:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 7472              		.loc 4 127 0
 7473 04bc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 7474              		.loc 4 128 0
 7475 04be 711C     		adds	r1, r6, #1
 7476 04c0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7477 04c2 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 7478              		.loc 4 129 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 179


 7479 04c6 B11C     		adds	r1, r6, #2
 7480 04c8 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7481 04ca 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 7482              		.loc 4 130 0
 7483 04ce F11C     		adds	r1, r6, #3
 7484 04d0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7485 04d2 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 7486              		.loc 4 131 0
 7487 04d6 C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 7488              		.loc 4 132 0
 7489 04da 0436     		adds	r6, r6, #4
 7490              	.LVL913:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 7491              		.loc 4 133 0
 7492 04dc D8F80C10 		ldr	r1, [r8, #12]
 7493 04e0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 7494              	.LBE1019:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 7495              		.loc 4 121 0
 7496 04e4 0132     		adds	r2, r2, #1
 7497              	.LVL914:
 7498 04e6 D2B2     		uxtb	r2, r2
 7499              	.LVL915:
 7500 04e8 E4E7     		b	.L396
 7501              	.LVL916:
 7502              	.L435:
 7503              	.LBE1020:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 7504              		.loc 4 118 0
 7505 04ea B100     		lsls	r1, r6, #2
 7506 04ec D8F80C00 		ldr	r0, [r8, #12]
 7507 04f0 FFF7FEFF 		bl	realloc
 7508              	.LVL917:
 7509 04f4 C8F80C00 		str	r0, [r8, #12]
 7510 04f8 D8E7     		b	.L394
 7511              	.LVL918:
 7512              	.L395:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 7513              		.loc 4 135 0
 7514 04fa 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 7515              	.LVL919:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 7516              		.loc 4 136 0
 7517 04fe 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7518 0502 9945     		cmp	r9, r3
 7519 0504 1ED8     		bhi	.L436
 7520              	.LVL920:
 7521              	.L397:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 7522              		.loc 4 138 0
 7523 0506 0436     		adds	r6, r6, #4
 7524              	.LVL921:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 7525              		.loc 4 139 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 180


 7526 0508 88F81090 		strb	r9, [r8, #16]
 7527              	.LVL922:
 7528              	.LBB1021:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 7529              		.loc 4 140 0
 7530 050c 0022     		movs	r2, #0
 7531              	.LVL923:
 7532              	.L399:
 7533 050e 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 7534 0512 9342     		cmp	r3, r2
 7535 0514 1FD9     		bls	.L398
 7536              	.LBB1022:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 7537              		.loc 4 146 0
 7538 0516 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 7539              		.loc 4 147 0
 7540 0518 711C     		adds	r1, r6, #1
 7541 051a 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7542 051c 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 7543              		.loc 4 148 0
 7544 0520 B11C     		adds	r1, r6, #2
 7545 0522 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7546 0524 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 7547              		.loc 4 149 0
 7548 0528 F11C     		adds	r1, r6, #3
 7549 052a 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 7550 052c 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 7551              		.loc 4 150 0
 7552 0530 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 7553              		.loc 4 151 0
 7554 0534 0436     		adds	r6, r6, #4
 7555              	.LVL924:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 7556              		.loc 4 152 0
 7557 0536 D8F81810 		ldr	r1, [r8, #24]
 7558 053a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 7559              	.LBE1022:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 7560              		.loc 4 140 0
 7561 053e 0132     		adds	r2, r2, #1
 7562              	.LVL925:
 7563 0540 D2B2     		uxtb	r2, r2
 7564              	.LVL926:
 7565 0542 E4E7     		b	.L399
 7566              	.LVL927:
 7567              	.L436:
 7568              	.LBE1021:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 7569              		.loc 4 137 0
 7570 0544 4FEA8901 		lsl	r1, r9, #2
 7571 0548 D8F81800 		ldr	r0, [r8, #24]
 7572 054c FFF7FEFF 		bl	realloc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 181


 7573              	.LVL928:
 7574 0550 C8F81800 		str	r0, [r8, #24]
 7575 0554 D7E7     		b	.L397
 7576              	.LVL929:
 7577              	.L398:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 7578              		.loc 4 154 0
 7579 0556 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 7580              	.LVL930:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 7581              		.loc 4 155 0
 7582 055a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 7583 055e 9945     		cmp	r9, r3
 7584 0560 05D8     		bhi	.L437
 7585              	.LVL931:
 7586              	.L400:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 7587              		.loc 4 157 0
 7588 0562 321D     		adds	r2, r6, #4
 7589              	.LVL932:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 7590              		.loc 4 158 0
 7591 0564 88F81C90 		strb	r9, [r8, #28]
 7592              	.LVL933:
 7593              	.LBB1023:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 7594              		.loc 4 159 0
 7595 0568 4FF0000C 		mov	ip, #0
 7596 056c 17E0     		b	.L404
 7597              	.LVL934:
 7598              	.L437:
 7599              	.LBE1023:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 7600              		.loc 4 156 0
 7601 056e 4FEA8901 		lsl	r1, r9, #2
 7602 0572 D8F82400 		ldr	r0, [r8, #36]
 7603 0576 FFF7FEFF 		bl	realloc
 7604              	.LVL935:
 7605 057a C8F82400 		str	r0, [r8, #36]
 7606 057e F0E7     		b	.L400
 7607              	.LVL936:
 7608              	.L402:
 7609              	.LBB1027:
 7610              	.LBB1024:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 7611              		.loc 4 166 0
 7612 0580 531E     		subs	r3, r2, #1
 7613              	.LVL937:
 7614 0582 0021     		movs	r1, #0
 7615 0584 F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 7616              		.loc 4 167 0
 7617 0586 731E     		subs	r3, r6, #1
 7618 0588 3B44     		add	r3, r3, r7
 7619 058a C8F82030 		str	r3, [r8, #32]
 7620              	.LVL938:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 182


 7621              		.loc 4 169 0
 7622 058e D8F82410 		ldr	r1, [r8, #36]
 7623 0592 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 7624              	.LVL939:
 7625              	.LBE1024:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 7626              		.loc 4 159 0
 7627 0596 0CF1010C 		add	ip, ip, #1
 7628              	.LVL940:
 7629 059a 5FFA8CFC 		uxtb	ip, ip
 7630              	.LVL941:
 7631              	.L404:
 7632 059e 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 7633 05a2 6345     		cmp	r3, ip
 7634 05a4 0AD9     		bls	.L401
 7635              	.LBB1026:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 7636              		.loc 4 161 0
 7637 05a6 B858     		ldr	r0, [r7, r2]	@ unaligned
 7638              	.LVL942:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 7639              		.loc 4 162 0
 7640 05a8 161D     		adds	r6, r2, #4
 7641              	.LVL943:
 7642              	.LBB1025:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 7643              		.loc 4 163 0
 7644 05aa 3346     		mov	r3, r6
 7645              	.LVL944:
 7646              	.L403:
 7647 05ac 8219     		adds	r2, r0, r6
 7648 05ae 9A42     		cmp	r2, r3
 7649 05b0 E6D9     		bls	.L402
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 7650              		.loc 4 164 0
 7651 05b2 5A1E     		subs	r2, r3, #1
 7652 05b4 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 7653 05b6 B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 7654              		.loc 4 163 0
 7655 05b8 0133     		adds	r3, r3, #1
 7656              	.LVL945:
 7657 05ba F7E7     		b	.L403
 7658              	.LVL946:
 7659              	.L401:
 7660              	.LBE1025:
 7661              	.LBE1026:
 7662              	.LBE1027:
 7663              	.LBE1017:
 7664              	.LBE1016:
 372:ROSSerial/ros/node_handle.h ****           }
 7665              		.loc 9 372 0
 7666 05bc 0123     		movs	r3, #1
 7667 05be 84F82C35 		strb	r3, [r4, #1324]
 7668 05c2 79E5     		b	.L362
 7669              	.L430:
 376:ROSSerial/ros/node_handle.h ****           }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 183


 7670              		.loc 9 376 0
 7671 05c4 0023     		movs	r3, #0
 7672 05c6 84F81C35 		strb	r3, [r4, #1308]
 7673 05ca 75E5     		b	.L362
 7674              	.L367:
 7675              	.LBE957:
 391:ROSSerial/ros/node_handle.h ****     {
 7676              		.loc 9 391 0
 7677 05cc 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 7678 05d0 002B     		cmp	r3, #0
 7679 05d2 00F09680 		beq	.L415
 7680 05d6 D4F82035 		ldr	r3, [r4, #1312]
 7681 05da EB1A     		subs	r3, r5, r3
 7682 05dc 40F6C412 		movw	r2, #2500
 7683 05e0 9342     		cmp	r3, r2
 7684 05e2 01D8     		bhi	.L438
 398:ROSSerial/ros/node_handle.h ****   }
 7685              		.loc 9 398 0
 7686 05e4 0020     		movs	r0, #0
 7687              	.LVL947:
 7688              	.LBE954:
 7689              	.LBE953:
 239:ROSSerial/ros/node_handle.h ****   }
 7690              		.loc 9 239 0
 7691 05e6 89E0     		b	.L359
 7692              	.LVL948:
 7693              	.L438:
 7694              	.LBB1065:
 7695              	.LBB1063:
 7696              	.LBB1028:
 7697              	.LBB1029:
 414:ROSSerial/ros/node_handle.h ****     {
 7698              		.loc 9 414 0
 7699 05e8 D4F82425 		ldr	r2, [r4, #1316]
 7700 05ec A368     		ldr	r3, [r4, #8]
 7701 05ee 9A42     		cmp	r2, r3
 7702 05f0 3BD3     		bcc	.L439
 7703              	.LVL949:
 7704              	.LBB1030:
 7705              	.LBB1031:
  14:ROSSerial/std_msgs/Time.h ****   {
 7706              		.loc 1 14 0
 7707 05f2 484B     		ldr	r3, .L443+12
 7708 05f4 0193     		str	r3, [sp, #4]
 7709              	.LVL950:
 7710              	.LBB1032:
 7711              	.LBB1033:
 7712              	.LBB1034:
 7713              		.loc 12 51 0
 7714 05f6 0026     		movs	r6, #0
 7715 05f8 0296     		str	r6, [sp, #8]
 7716 05fa 0396     		str	r6, [sp, #12]
 7717              	.LVL951:
 7718              	.LBE1034:
 7719              	.LBE1033:
 7720              	.LBE1032:
 7721              	.LBE1031:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 184


 7722              	.LBE1030:
 7723              	.LBB1035:
 7724              	.LBB1036:
 7725              		.loc 11 151 0
 7726 05fc FFF7FEFF 		bl	HAL_GetTick
 7727              	.LVL952:
 7728 0600 0146     		mov	r1, r0
 7729              	.LVL953:
 7730              	.LBE1036:
 7731              	.LBE1035:
 420:ROSSerial/ros/node_handle.h ****     printf("requestSyncTime  rt_time=%lu\n",rt_time);
 7732              		.loc 9 420 0
 7733 0602 A060     		str	r0, [r4, #8]
 421:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 7734              		.loc 9 421 0
 7735 0604 4448     		ldr	r0, .L443+16
 7736 0606 FFF7FEFF 		bl	printf
 7737              	.LVL954:
 7738              	.LBB1037:
 7739              	.LBB1038:
 7740              	.LBB1039:
 7741              	.LBB1040:
 7742              		.loc 11 151 0
 7743 060a FFF7FEFF 		bl	HAL_GetTick
 7744              	.LVL955:
 7745              	.LBE1040:
 7746              	.LBE1039:
 603:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 7747              		.loc 9 603 0
 7748 060e 01AB     		add	r3, sp, #4
 7749              	.LVL956:
 7750 0610 0A22     		movs	r2, #10
 7751 0612 0146     		mov	r1, r0
 7752 0614 4148     		ldr	r0, .L443+20
 7753 0616 FFF7FEFF 		bl	printf
 7754              	.LVL957:
 610:ROSSerial/ros/node_handle.h **** 
 7755              		.loc 9 610 0
 7756 061a 019B     		ldr	r3, [sp, #4]
 7757 061c 1B68     		ldr	r3, [r3]
 7758 061e 04F21F21 		addw	r1, r4, #543
 7759 0622 01A8     		add	r0, sp, #4
 7760              	.LVL958:
 7761 0624 9847     		blx	r3
 7762              	.LVL959:
 613:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 7763              		.loc 9 613 0
 7764 0626 FF23     		movs	r3, #255
 7765 0628 84F81832 		strb	r3, [r4, #536]
 614:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 7766              		.loc 9 614 0
 7767 062c FE23     		movs	r3, #254
 7768 062e 84F81932 		strb	r3, [r4, #537]
 615:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 7769              		.loc 9 615 0
 7770 0632 C3B2     		uxtb	r3, r0
 7771 0634 84F81A32 		strb	r3, [r4, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 185


 616:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 7772              		.loc 9 616 0
 7773 0638 C0F30722 		ubfx	r2, r0, #8, #8
 7774 063c 84F81B22 		strb	r2, [r4, #539]
 617:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 7775              		.loc 9 617 0
 7776 0640 1344     		add	r3, r3, r2
 7777 0642 DBB2     		uxtb	r3, r3
 7778 0644 DB43     		mvns	r3, r3
 7779 0646 84F81C32 		strb	r3, [r4, #540]
 618:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 7780              		.loc 9 618 0
 7781 064a 0A23     		movs	r3, #10
 7782 064c 84F81D32 		strb	r3, [r4, #541]
 619:ROSSerial/ros/node_handle.h **** 
 7783              		.loc 9 619 0
 7784 0650 84F81E62 		strb	r6, [r4, #542]
 7785              	.LVL960:
 7786              	.LBB1041:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7787              		.loc 9 623 0
 7788 0654 0523     		movs	r3, #5
 7789              	.LBE1041:
 622:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 7790              		.loc 9 622 0
 7791 0656 3246     		mov	r2, r6
 7792              	.LVL961:
 7793              	.L409:
 7794              	.LBB1042:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7795              		.loc 9 623 0
 7796 0658 C11D     		adds	r1, r0, #7
 7797 065a 9942     		cmp	r1, r3
 7798 065c 0CDD     		ble	.L408
 624:ROSSerial/ros/node_handle.h ****     l += 7;
 7799              		.loc 9 624 0
 7800 065e E118     		adds	r1, r4, r3
 7801 0660 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 7802 0664 0A44     		add	r2, r2, r1
 7803              	.LVL962:
 623:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7804              		.loc 9 623 0
 7805 0666 0133     		adds	r3, r3, #1
 7806              	.LVL963:
 7807 0668 F6E7     		b	.L409
 7808              	.LVL964:
 7809              	.L439:
 7810              	.LBE1042:
 7811              	.LBE1038:
 7812              	.LBE1037:
 7813              	.LBB1056:
 7814              	.LBB1057:
 7815              		.loc 11 151 0
 7816 066a FFF7FEFF 		bl	HAL_GetTick
 7817              	.LVL965:
 7818              	.LBE1057:
 7819              	.LBE1056:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 186


 416:ROSSerial/ros/node_handle.h ****       return;
 7820              		.loc 9 416 0
 7821 066e 0146     		mov	r1, r0
 7822 0670 2B48     		ldr	r0, .L443+24
 7823 0672 FFF7FEFF 		bl	printf
 7824              	.LVL966:
 7825 0676 25E0     		b	.L407
 7826              	.LVL967:
 7827              	.L408:
 7828              	.LBB1058:
 7829              	.LBB1054:
 626:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 7830              		.loc 9 626 0
 7831 0678 5342     		rsbs	r3, r2, #0
 7832              	.LVL968:
 7833 067a D2B2     		uxtb	r2, r2
 7834              	.LVL969:
 7835 067c DBB2     		uxtb	r3, r3
 7836 067e 58BF     		it	pl
 7837 0680 5A42     		rsbpl	r2, r3, #0
 7838 0682 00F10806 		add	r6, r0, #8
 7839              	.LVL970:
 7840 0686 D243     		mvns	r2, r2
 7841 0688 2144     		add	r1, r1, r4
 7842 068a 81F81822 		strb	r2, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     {
 7843              		.loc 9 629 0
 7844 068e B6F5007F 		cmp	r6, #512
 7845 0692 21DC     		bgt	.L410
 631:ROSSerial/ros/node_handle.h ****       if(id == TopicInfo::ID_TIME)
 7846              		.loc 9 631 0
 7847 0694 04F50677 		add	r7, r4, #536
 7848              	.LVL971:
 7849              	.LBB1043:
 7850              	.LBB1044:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 7851              		.loc 11 121 0
 7852 0698 1423     		movs	r3, #20
 7853 069a B2B2     		uxth	r2, r6
 7854 069c 3946     		mov	r1, r7
 7855 069e 2148     		ldr	r0, .L443+28
 7856 06a0 FFF7FEFF 		bl	HAL_UART_Transmit
 7857              	.LVL972:
 122:ROSSerial/AT32hardware.h **** 		{
 7858              		.loc 11 122 0
 7859 06a4 0146     		mov	r1, r0
 7860 06a6 88B9     		cbnz	r0, .L440
 7861              	.LVL973:
 7862              	.L411:
 7863              	.LBE1044:
 7864              	.LBE1043:
 7865              	.LBB1046:
 7866              	.LBB1047:
 7867              		.loc 11 151 0
 7868 06a8 FFF7FEFF 		bl	HAL_GetTick
 7869              	.LVL974:
 7870 06ac 0746     		mov	r7, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 187


 7871              	.LVL975:
 7872              	.LBE1047:
 7873              	.LBE1046:
 633:ROSSerial/ros/node_handle.h ****       return l;
 7874              		.loc 9 633 0
 7875 06ae 0AA8     		add	r0, sp, #40
 7876 06b0 50F8243D 		ldr	r3, [r0, #-36]!
 7877 06b4 9B68     		ldr	r3, [r3, #8]
 7878 06b6 9847     		blx	r3
 7879              	.LVL976:
 7880 06b8 3346     		mov	r3, r6
 7881 06ba 0246     		mov	r2, r0
 7882 06bc 3946     		mov	r1, r7
 7883 06be 1A48     		ldr	r0, .L443+32
 7884 06c0 FFF7FEFF 		bl	printf
 7885              	.LVL977:
 7886              	.L407:
 7887              	.LBE1054:
 7888              	.LBE1058:
 7889              	.LBE1029:
 7890              	.LBE1028:
 395:ROSSerial/ros/node_handle.h ****     }
 7891              		.loc 9 395 0
 7892 06c4 C4F82055 		str	r5, [r4, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 7893              		.loc 9 398 0
 7894 06c8 0020     		movs	r0, #0
 7895 06ca 17E0     		b	.L359
 7896              	.LVL978:
 7897              	.L440:
 7898              	.LBB1061:
 7899              	.LBB1060:
 7900              	.LBB1059:
 7901              	.LBB1055:
 7902              	.LBB1048:
 7903              	.LBB1045:
 124:ROSSerial/AT32hardware.h **** 		}
 7904              		.loc 11 124 0
 7905 06cc 3B46     		mov	r3, r7
 7906 06ce 3246     		mov	r2, r6
 7907 06d0 1648     		ldr	r0, .L443+36
 7908              	.LVL979:
 7909 06d2 FFF7FEFF 		bl	printf
 7910              	.LVL980:
 7911 06d6 E7E7     		b	.L411
 7912              	.LVL981:
 7913              	.L410:
 7914              	.LBE1045:
 7915              	.LBE1048:
 7916              	.LBB1049:
 7917              	.LBB1050:
 7918              	.LBB1051:
 7919              	.LBB1052:
 7920              	.LBB1053:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 7921              		.loc 3 13 0
 7922 06d8 154B     		ldr	r3, .L443+40
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 188


 7923 06da 0493     		str	r3, [sp, #16]
 7924              	.LVL982:
 7925              	.LBE1053:
 7926              	.LBE1052:
 652:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 7927              		.loc 9 652 0
 7928 06dc 0323     		movs	r3, #3
 7929 06de 8DF81430 		strb	r3, [sp, #20]
 653:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 7930              		.loc 9 653 0
 7931 06e2 144E     		ldr	r6, .L443+44
 7932              	.LVL983:
 7933 06e4 0696     		str	r6, [sp, #24]
 7934              		.loc 9 654 0
 7935 06e6 04AA     		add	r2, sp, #16
 7936 06e8 0721     		movs	r1, #7
 7937 06ea 2046     		mov	r0, r4
 7938              	.LVL984:
 7939 06ec FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7940              	.LVL985:
 7941              	.LBE1051:
 7942              	.LBE1050:
 7943              	.LBE1049:
 639:ROSSerial/ros/node_handle.h ****       return -1;
 7944              		.loc 9 639 0
 7945 06f0 3046     		mov	r0, r6
 7946 06f2 FFF7FEFF 		bl	printf
 7947              	.LVL986:
 7948 06f6 E5E7     		b	.L407
 7949              	.LVL987:
 7950              	.L413:
 7951              	.LBE1055:
 7952              	.LBE1059:
 7953              	.LBE1060:
 7954              	.LBE1061:
 7955              	.LBB1062:
 279:ROSSerial/ros/node_handle.h ****         }
 7956              		.loc 9 279 0
 7957 06f8 6FF00100 		mvn	r0, #1
 7958              	.LVL988:
 7959              	.L359:
 7960              	.LBE1062:
 7961              	.LBE1063:
 7962              	.LBE1065:
 240:ROSSerial/ros/node_handle.h **** 
 7963              		.loc 9 240 0
 7964 06fc 0BB0     		add	sp, sp, #44
 7965              	.LCFI41:
 7966              		.cfi_remember_state
 7967              		.cfi_def_cfa_offset 28
 7968              		@ sp needed
 7969 06fe BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7970              	.LVL989:
 7971              	.L415:
 7972              	.LCFI42:
 7973              		.cfi_restore_state
 7974              	.LBB1066:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 189


 7975              	.LBB1064:
 398:ROSSerial/ros/node_handle.h ****   }
 7976              		.loc 9 398 0
 7977 0702 0020     		movs	r0, #0
 7978 0704 FAE7     		b	.L359
 7979              	.L444:
 7980 0706 00BF     		.align	2
 7981              	.L443:
 7982 0708 D34D6210 		.word	274877907
 7983 070c 00CA9A3B 		.word	1000000000
 7984 0710 00000000 		.word	.LC27
 7985 0714 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 7986 0718 2C000000 		.word	.LC26
 7987 071c 00000000 		.word	.LC19
 7988 0720 00000000 		.word	.LC25
 7989 0724 00000000 		.word	huart2
 7990 0728 40000000 		.word	.LC21
 7991 072c 20000000 		.word	.LC20
 7992 0730 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 7993 0734 68000000 		.word	.LC22
 7994 0738 40420F00 		.word	1000000
 7995              	.LBE1064:
 7996              	.LBE1066:
 7997              		.cfi_endproc
 7998              	.LFE539:
 7999              		.fnend
 8001              		.section	.text._GLOBAL__sub_I_publish_time,"ax",%progbits
 8002              		.align	1
 8003              		.syntax unified
 8004              		.thumb
 8005              		.thumb_func
 8006              		.fpu fpv4-sp-d16
 8008              	_GLOBAL__sub_I_publish_time:
 8009              		.fnstart
 8010              	.LFB541:
 8011              		.loc 8 120 0
 8012              		.cfi_startproc
 8013              		@ args = 0, pretend = 0, frame = 0
 8014              		@ frame_needed = 0, uses_anonymous_args = 0
 8015 0000 08B5     		push	{r3, lr}
 8016              	.LCFI43:
 8017              		.cfi_def_cfa_offset 8
 8018              		.cfi_offset 3, -8
 8019              		.cfi_offset 14, -4
 8020              		.loc 8 120 0
 8021 0002 4FF6FF71 		movw	r1, #65535
 8022 0006 0120     		movs	r0, #1
 8023 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 8024              	.LVL990:
 8025 000c 08BD     		pop	{r3, pc}
 8026              		.cfi_endproc
 8027              	.LFE541:
 8028              		.cantunwind
 8029              		.fnend
 8031              		.section	.init_array,"aw",%init_array
 8032              		.align	2
 8033 0000 00000000 		.word	_GLOBAL__sub_I_publish_time(target1)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 190


 8034              		.weak	_ZTVN8std_msgs4TimeE
 8035              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 8036              		.align	2
 8039              	_ZTVN8std_msgs4TimeE:
 8040 0000 00000000 		.word	0
 8041 0004 00000000 		.word	0
 8042 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 8043 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 8044 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 8045 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 8046              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 8047              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 8048              		.align	2
 8051              	_ZTVN14rosserial_msgs9TopicInfoE:
 8052 0000 00000000 		.word	0
 8053 0004 00000000 		.word	0
 8054 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 8055 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 8056 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 8057 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 8058              		.weak	_ZTVN14rosserial_msgs3LogE
 8059              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 8060              		.align	2
 8063              	_ZTVN14rosserial_msgs3LogE:
 8064 0000 00000000 		.word	0
 8065 0004 00000000 		.word	0
 8066 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 8067 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 8068 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 8069 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 8070              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 8071              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 8072              		.align	2
 8075              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 8076 0000 00000000 		.word	0
 8077 0004 00000000 		.word	0
 8078 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 8079 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 8080 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 8081 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 8082              		.weak	_ZTVN8std_msgs6StringE
 8083              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 8084              		.align	2
 8087              	_ZTVN8std_msgs6StringE:
 8088 0000 00000000 		.word	0
 8089 0004 00000000 		.word	0
 8090 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 8091 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 8092 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 8093 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 8094              		.weak	_ZTVN8std_msgs6HeaderE
 8095              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 8096              		.align	2
 8099              	_ZTVN8std_msgs6HeaderE:
 8100 0000 00000000 		.word	0
 8101 0004 00000000 		.word	0
 8102 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 191


 8103 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 8104 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 8105 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 8106              		.weak	_ZTVN11sensor_msgs10JointStateE
 8107              		.section	.rodata._ZTVN11sensor_msgs10JointStateE,"aG",%progbits,_ZTVN11sensor_msgs10JointStateE,co
 8108              		.align	2
 8111              	_ZTVN11sensor_msgs10JointStateE:
 8112 0000 00000000 		.word	0
 8113 0004 00000000 		.word	0
 8114 0008 00000000 		.word	_ZNK11sensor_msgs10JointState9serializeEPh
 8115 000c 00000000 		.word	_ZN11sensor_msgs10JointState11deserializeEPh
 8116 0010 00000000 		.word	_ZN11sensor_msgs10JointState7getTypeEv
 8117 0014 00000000 		.word	_ZN11sensor_msgs10JointState6getMD5Ev
 8118              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 8119              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 8120              		.align	2
 8123              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 8124 0000 00000000 		.word	0
 8125 0004 00000000 		.word	0
 8126 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 8127 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 8128 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 8129              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 8130              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 8131              		.align	2
 8134              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 8135 0000 00000000 		.space	4
 8136              		.global	chatter
 8137              		.global	hovebotState
 8138              		.global	nh
 8139              		.global	publish_time
 8140              		.section	.rodata
 8141              		.align	2
 8142              		.set	.LANCHOR4,. + 0
 8143              	.LC23:
 8144 0000 00000000 		.word	.LC0
 8145 0004 08000000 		.word	.LC1
 8146              		.section	.bss.chatter,"aw",%nobits
 8147              		.align	2
 8148              		.set	.LANCHOR3,. + 0
 8151              	chatter:
 8152 0000 00000000 		.space	4
 8153              		.section	.bss.hovebotState,"aw",%nobits
 8154              		.align	2
 8155              		.set	.LANCHOR2,. + 0
 8158              	hovebotState:
 8159 0000 00000000 		.space	4
 8160              		.section	.bss.nh,"aw",%nobits
 8161              		.align	2
 8162              		.set	.LANCHOR1,. + 0
 8165              	nh:
 8166 0000 00000000 		.space	1368
 8166      00000000 
 8166      00000000 
 8166      00000000 
 8166      00000000 
 8167              		.section	.bss.publish_time,"aw",%nobits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 192


 8168              		.align	2
 8169              		.set	.LANCHOR5,. + 0
 8172              	publish_time:
 8173 0000 00000000 		.space	4
 8174              		.section	.rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4,"aMS",%progbits,1
 8175              		.align	2
 8176              	.LC15:
 8177 0000 33303636 		.ascii	"3066dcd76a6cfaef579bd0f34173e9fd\000"
 8177      64636437 
 8177      36613663 
 8177      66616566 
 8177      35373962 
 8178              		.section	.rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4,"aMS",%progbits,1
 8179              		.align	2
 8180              	.LC14:
 8181 0000 73656E73 		.ascii	"sensor_msgs/JointState\000"
 8181      6F725F6D 
 8181      7367732F 
 8181      4A6F696E 
 8181      74537461 
 8182              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 8183              		.align	2
 8184              	.LC9:
 8185 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 8185      39386264 
 8185      61363539 
 8185      38313938 
 8185      36646466 
 8186              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 8187              		.align	2
 8188              	.LC8:
 8189 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 8189      64373331 
 8189      63323539 
 8189      33333236 
 8189      31636436 
 8190              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 8191              		.align	2
 8192              	.LC7:
 8193 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 8193      65726961 
 8193      6C5F6D73 
 8193      67732F4C 
 8193      6F6700
 8194              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 8195              		.align	2
 8196              	.LC6:
 8197 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 8197      31663838 
 8197      66633434 
 8197      38393266 
 8197      38633130 
 8198              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 8199              		.align	2
 8200              	.LC5:
 8201 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 8201      65726961 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 193


 8201      6C5F6D73 
 8201      67732F54 
 8201      6F706963 
 8202              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 8203              		.align	2
 8204              		.set	.LANCHOR0,. + 0
 8207              	_ZN14rosserial_msgsL12REQUESTPARAME:
 8208 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 8208      65726961 
 8208      6C5F6D73 
 8208      67732F52 
 8208      65717565 
 8209              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv.str1
 8210              		.align	2
 8211              	.LC25:
 8212 0000 736B6970 		.ascii	"skip requestSyncTime as one is pending %lu\012\000"
 8212      20726571 
 8212      75657374 
 8212      53796E63 
 8212      54696D65 
 8213              	.LC26:
 8214 002c 72657175 		.ascii	"requestSyncTime  rt_time=%lu\012\000"
 8214      65737453 
 8214      796E6354 
 8214      696D6520 
 8214      2072745F 
 8215              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str
 8216              		.align	2
 8217              	.LC19:
 8218 0000 74696D65 		.ascii	"time=%lu, in nh.publsh %d %x\012\000"
 8218      3D256C75 
 8218      2C20696E 
 8218      206E682E 
 8218      7075626C 
 8219 001e 0000     		.space	2
 8220              	.LC20:
 8221 0020 48414C20 		.ascii	"HAL write error %d %lu - %s\012\000"
 8221      77726974 
 8221      65206572 
 8221      726F7220 
 8221      25642025 
 8222 003d 000000   		.space	3
 8223              	.LC21:
 8224 0040 256C753A 		.ascii	"%lu:sent write message - %s, length %d\012\000"
 8224      73656E74 
 8224      20777269 
 8224      7465206D 
 8224      65737361 
 8225              	.LC22:
 8226 0068 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 8226      61676520 
 8226      66726F6D 
 8226      20646576 
 8226      69636520 
 8227 009b 66666572 		.ascii	"ffer.\000"
 8227      2E00
 8228              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 194


 8229              		.align	2
 8230              	.LC4:
 8231 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 8231      36366337 
 8231      34633535 
 8231      32633331 
 8231      31666263 
 8232              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 8233              		.align	2
 8234              	.LC3:
 8235 0000 7374645F 		.ascii	"std_msgs/Time\000"
 8235      6D736773 
 8235      2F54696D 
 8235      6500
 8236              		.section	.rodata._ZN8std_msgs6Header6getMD5Ev.str1.4,"aMS",%progbits,1
 8237              		.align	2
 8238              	.LC13:
 8239 0000 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 8239      64656361 
 8239      65636263 
 8239      65373861 
 8239      62633362 
 8240              		.section	.rodata._ZN8std_msgs6Header7getTypeEv.str1.4,"aMS",%progbits,1
 8241              		.align	2
 8242              	.LC12:
 8243 0000 7374645F 		.ascii	"std_msgs/Header\000"
 8243      6D736773 
 8243      2F486561 
 8243      64657200 
 8244              		.section	.rodata._ZN8std_msgs6String6getMD5Ev.str1.4,"aMS",%progbits,1
 8245              		.align	2
 8246              	.LC11:
 8247 0000 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 8247      65386131 
 8247      36383763 
 8247      65633863 
 8247      38626438 
 8248              		.section	.rodata._ZN8std_msgs6String7getTypeEv.str1.4,"aMS",%progbits,1
 8249              		.align	2
 8250              	.LC10:
 8251 0000 7374645F 		.ascii	"std_msgs/String\000"
 8251      6D736773 
 8251      2F537472 
 8251      696E6700 
 8252              		.section	.rodata.publish_hovebot_state.str1.4,"aMS",%progbits,1
 8253              		.align	2
 8254              	.LC24:
 8255 0000 686F7665 		.ascii	"hoverbot_state publish1 failed %d\012\000"
 8255      72626F74 
 8255      5F737461 
 8255      74652070 
 8255      75626C69 
 8256              		.section	.rodata.ros_init.str1.4,"aMS",%progbits,1
 8257              		.align	2
 8258              	.LC16:
 8259 0000 4E6F6465 		.ascii	"Node init\000"
 8259      20696E69 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 195


 8259      7400
 8260 000a 0000     		.space	2
 8261              	.LC17:
 8262 000c 686F7665 		.ascii	"hoverbot_state\000"
 8262      72626F74 
 8262      5F737461 
 8262      746500
 8263 001b 00       		.space	1
 8264              	.LC18:
 8265 001c 63686174 		.ascii	"chatter\000"
 8265      74657200 
 8266              		.section	.rodata.ros_run.str1.4,"aMS",%progbits,1
 8267              		.align	2
 8268              	.LC27:
 8269 0000 73796E63 		.ascii	"syncTime c_time=%lu, offset=%ld\012\000"
 8269      54696D65 
 8269      20635F74 
 8269      696D653D 
 8269      256C752C 
 8270 0021 000000   		.space	3
 8271              	.LC28:
 8272 0024 4552524F 		.ascii	"ERROR: spinOnce1 returned error probably SPIN_TIMEO"
 8272      523A2073 
 8272      70696E4F 
 8272      6E636531 
 8272      20726574 
 8273 0057 555400   		.ascii	"UT\000"
 8274 005a 0000     		.space	2
 8275              	.LC29:
 8276 005c 52656365 		.ascii	"Received Wheel[%d] %s %d %d %d\012\000"
 8276      69766564 
 8276      20576865 
 8276      656C5B25 
 8276      645D2025 
 8277              		.section	.rodata.str1.4,"aMS",%progbits,1
 8278              		.align	2
 8279              	.LC0:
 8280 0000 4C454654 		.ascii	"LEFT\000"
 8280      00
 8281 0005 000000   		.space	3
 8282              	.LC1:
 8283 0008 52494748 		.ascii	"RIGHT\000"
 8283      5400
 8284              		.text
 8285              	.Letext0:
 8286              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 8287              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 8288              		.file 15 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 8289              		.file 16 "Inc/system_at32f4xx.h"
 8290              		.file 17 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 8291              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 8292              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 8293              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 8294              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 8295              		.file 22 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 8296              		.file 23 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 8297              		.file 24 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 196


 8298              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 8299              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 8300              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 8301              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 8302              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 8303              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 8304              		.file 31 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 8305              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 8306              		.file 33 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 8307              		.file 34 "<built-in>"
 8308              		.file 35 "ROSSerial/ros/duration.h"
 8309              		.file 36 "ROSSerial/ros/publisher.h"
 8310              		.file 37 "ROSSerial/ros.h"
 8311              		.file 38 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 8312              		.file 39 "Inc/control_structures.h"
 8313              		.file 40 "Inc/defines.h"
 8314              		.file 41 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 8315              		.file 42 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 8316              		.file 43 "Inc/ROS_subscribe.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 197


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ROS_main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:615    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:622    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:686    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:693    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 _ZN8std_msgs6String7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:709    .text._ZN8std_msgs6String7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:716    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:723    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 _ZN8std_msgs6String6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:739    .text._ZN8std_msgs6String6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 198


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:746    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:753    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:865    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:872    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 _ZN8std_msgs6Header7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:888    .text._ZN8std_msgs6Header7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:895    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:902    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 _ZN8std_msgs6Header6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:918    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:925    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:932    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 _ZN11sensor_msgs10JointState7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:949    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:956    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:963    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 _ZN11sensor_msgs10JointState6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:979    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:986    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:992    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1136   .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8123   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8075   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1145   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1152   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1171   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1178   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1428   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1435   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1522   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1529   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1574   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1581   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1630   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1637   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1754   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1761   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1956   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:1963   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 _ZNK11sensor_msgs10JointState9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:2466   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:2473   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 _ZN11sensor_msgs10JointState11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3089   .text.ros_init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3096   .text.ros_init:0000000000000000 ros_init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3339   .text.ros_init:0000000000000120 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8111   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 _ZTVN11sensor_msgs10JointStateE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8099   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 _ZTVN8std_msgs6HeaderE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 199


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8087   .rodata._ZTVN8std_msgs6StringE:0000000000000000 _ZTVN8std_msgs6StringE
         .ARM.exidx.text.ros_init:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3355   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3362   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3603   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000110 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8063   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3614   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:3621   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4016   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:00000000000001b4 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4027   .text.publish_hovebot_state:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4034   .text.publish_hovebot_state:0000000000000000 publish_hovebot_state
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4558   .text.publish_hovebot_state:000000000000026c $d
.ARM.exidx.text.publish_hovebot_state:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4581   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:4588   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:5001   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:00000000000001b4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8039   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:5022   .text.ros_run:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:5029   .text.ros_run:0000000000000000 ros_run
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:5606   .text.ros_run:00000000000002f0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8134   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:5624   .text.ros_run:0000000000000330 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:6165   .text.ros_run:0000000000000658 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8051   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:6177   .text.ros_run:0000000000000674 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:6582   .text.ros_run:0000000000000850 $d
          .ARM.exidx.text.ros_run:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:6606   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:6613   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:7226   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000328 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:7243   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000364 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:7982   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000708 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8002   .text._GLOBAL__sub_I_publish_time:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8008   .text._GLOBAL__sub_I_publish_time:0000000000000000 _GLOBAL__sub_I_publish_time
.ARM.exidx.text._GLOBAL__sub_I_publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8032   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8036   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8048   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8060   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8072   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8084   .rodata._ZTVN8std_msgs6StringE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8096   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8108   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8120   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8131   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8151   .bss.chatter:0000000000000000 chatter
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8158   .bss.hovebotState:0000000000000000 hovebotState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8165   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8172   .bss.publish_time:0000000000000000 publish_time
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8141   .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8147   .bss.chatter:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8154   .bss.hovebotState:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8161   .bss.nh:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s 			page 200


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8168   .bss.publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8175   .rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8179   .rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8183   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8187   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8191   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8195   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8199   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8203   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8207   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8210   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8216   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8229   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8233   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8237   .rodata._ZN8std_msgs6Header6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8241   .rodata._ZN8std_msgs6Header7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8245   .rodata._ZN8std_msgs6String6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8249   .rodata._ZN8std_msgs6String7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8253   .rodata.publish_hovebot_state.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8257   .rodata.ros_init.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8267   .rodata.ros_run.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccMCBQWl.s:8278   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
realloc
strlen
memcpy
HAL_UART_Receive_IT
puts
_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
byte
huart2
__aeabi_unwind_cpp_pr0
HAL_GetTick
printf
HAL_UART_Transmit
_ZN3ros16normalizeSecNSecERmS0_
wheel_posn
pwml
pwmr
g_RxRead
g_RxBuf
g_RxWritten
_Z17getWheelPositionsv
