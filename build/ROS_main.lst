ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ROS_main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC0
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB100:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE100:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB101:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE101:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB102:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE102:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC2
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC3
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB103:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE103:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC4
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC5
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC6
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 615              		.align	1
 616              		.weak	_ZN8std_msgs6String11deserializeEPh
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	_ZN8std_msgs6String11deserializeEPh:
 623              		.fnstart
 624              	.LFB404:
 625              		.file 5 "ROSSerial/std_msgs/ROSString.h"
   1:ROSSerial/std_msgs/ROSString.h **** #ifndef _ROS_std_msgs_String_h
   2:ROSSerial/std_msgs/ROSString.h **** #define _ROS_std_msgs_String_h
   3:ROSSerial/std_msgs/ROSString.h **** 
   4:ROSSerial/std_msgs/ROSString.h **** #include <cstring>
   5:ROSSerial/std_msgs/ROSString.h **** #include <stdint.h>
   6:ROSSerial/std_msgs/ROSString.h **** #include <string.h>
   7:ROSSerial/std_msgs/ROSString.h **** #include <stdlib.h>
   8:ROSSerial/std_msgs/ROSString.h **** #include "ros/msg.h"
   9:ROSSerial/std_msgs/ROSString.h **** 
  10:ROSSerial/std_msgs/ROSString.h **** namespace std_msgs
  11:ROSSerial/std_msgs/ROSString.h **** {
  12:ROSSerial/std_msgs/ROSString.h **** 
  13:ROSSerial/std_msgs/ROSString.h ****   class String : public ros::Msg
  14:ROSSerial/std_msgs/ROSString.h ****   {
  15:ROSSerial/std_msgs/ROSString.h ****     public:
  16:ROSSerial/std_msgs/ROSString.h ****       const char* data;
  17:ROSSerial/std_msgs/ROSString.h **** 
  18:ROSSerial/std_msgs/ROSString.h ****     virtual int serialize(unsigned char *outbuffer) const
  19:ROSSerial/std_msgs/ROSString.h ****     {
  20:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  21:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data = strlen(this->data);
  22:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  23:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  24:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, this->data, length_data);
  25:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  26:ROSSerial/std_msgs/ROSString.h ****       return offset;
  27:ROSSerial/std_msgs/ROSString.h ****     }
  28:ROSSerial/std_msgs/ROSString.h **** 
  29:ROSSerial/std_msgs/ROSString.h ****     virtual int deserialize(unsigned char *inbuffer)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 19


 626              		.loc 5 29 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL60:
 632 0000 30B4     		push	{r4, r5}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 5, -4
 637              	.LVL61:
  30:ROSSerial/std_msgs/ROSString.h ****     {
  31:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  32:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data;
  33:ROSSerial/std_msgs/ROSString.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
 638              		.loc 5 33 0
 639 0002 0D68     		ldr	r5, [r1]	@ unaligned
 640              	.LVL62:
 641              	.LBB104:
  34:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  35:ROSSerial/std_msgs/ROSString.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
 642              		.loc 5 35 0
 643 0004 0423     		movs	r3, #4
 644              	.LVL63:
 645              	.L41:
 646              		.loc 5 35 0 is_stmt 0 discriminator 3
 647 0006 2A1D     		adds	r2, r5, #4
 648 0008 9A42     		cmp	r2, r3
 649 000a 04D9     		bls	.L40
  36:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 650              		.loc 5 36 0 is_stmt 1 discriminator 2
 651 000c 5A1E     		subs	r2, r3, #1
 652 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 653 0010 8C54     		strb	r4, [r1, r2]
  35:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 654              		.loc 5 35 0 discriminator 2
 655 0012 0133     		adds	r3, r3, #1
 656              	.LVL64:
 657 0014 F7E7     		b	.L41
 658              	.L40:
 659              	.LBE104:
  37:ROSSerial/std_msgs/ROSString.h ****       }
  38:ROSSerial/std_msgs/ROSString.h ****       inbuffer[offset+length_data-1]=0;
 660              		.loc 5 38 0
 661 0016 0335     		adds	r5, r5, #3
 662              	.LVL65:
 663 0018 0023     		movs	r3, #0
 664              	.LVL66:
 665 001a 4B55     		strb	r3, [r1, r5]
  39:ROSSerial/std_msgs/ROSString.h ****       this->data = (char *)(inbuffer + offset-1);
 666              		.loc 5 39 0
 667 001c 0331     		adds	r1, r1, #3
 668              	.LVL67:
 669 001e 4160     		str	r1, [r0, #4]
 670              	.LVL68:
  40:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 20


  41:ROSSerial/std_msgs/ROSString.h ****      return offset;
  42:ROSSerial/std_msgs/ROSString.h ****     }
 671              		.loc 5 42 0
 672 0020 1046     		mov	r0, r2
 673              	.LVL69:
 674 0022 30BC     		pop	{r4, r5}
 675              	.LCFI5:
 676              		.cfi_restore 5
 677              		.cfi_restore 4
 678              		.cfi_def_cfa_offset 0
 679 0024 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE404:
 682              		.cantunwind
 683              		.fnend
 685              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 686              		.align	1
 687              		.weak	_ZN8std_msgs6String7getTypeEv
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	_ZN8std_msgs6String7getTypeEv:
 694              		.fnstart
 695              	.LFB405:
  43:ROSSerial/std_msgs/ROSString.h **** 
  44:ROSSerial/std_msgs/ROSString.h ****     const char * getType(){ return "std_msgs/String"; };
 696              		.loc 5 44 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701              	.LVL70:
 702              		.loc 5 44 0
 703 0000 0048     		ldr	r0, .L44
 704              	.LVL71:
 705 0002 7047     		bx	lr
 706              	.L45:
 707              		.align	2
 708              	.L44:
 709 0004 00000000 		.word	.LC7
 710              		.cfi_endproc
 711              	.LFE405:
 712              		.cantunwind
 713              		.fnend
 715              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 716              		.align	1
 717              		.weak	_ZN8std_msgs6String6getMD5Ev
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	_ZN8std_msgs6String6getMD5Ev:
 724              		.fnstart
 725              	.LFB406:
  45:ROSSerial/std_msgs/ROSString.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 726              		.loc 5 45 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 21


 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL72:
 732              		.loc 5 45 0
 733 0000 0048     		ldr	r0, .L47
 734              	.LVL73:
 735 0002 7047     		bx	lr
 736              	.L48:
 737              		.align	2
 738              	.L47:
 739 0004 00000000 		.word	.LC8
 740              		.cfi_endproc
 741              	.LFE406:
 742              		.cantunwind
 743              		.fnend
 745              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 746              		.align	1
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	_Z41__static_initialization_and_destruction_0ii:
 753              		.fnstart
 754              	.LFB510:
 755              		.file 6 "./Src/ROS_main.cpp"
   1:./Src/ROS_main.cpp **** /*
   2:./Src/ROS_main.cpp **** * Implement all ROS functions here.
   3:./Src/ROS_main.cpp **** */
   4:./Src/ROS_main.cpp **** 
   5:./Src/ROS_main.cpp **** #include "ros.h"
   6:./Src/ROS_main.cpp **** #include "ROS_subscribe.h"
   7:./Src/ROS_main.cpp **** #include "std_msgs/ROSString.h"
   8:./Src/ROS_main.cpp **** 
   9:./Src/ROS_main.cpp **** extern "C" 
  10:./Src/ROS_main.cpp **** {
  11:./Src/ROS_main.cpp ****     void ros_init();
  12:./Src/ROS_main.cpp ****     void ros_run();
  13:./Src/ROS_main.cpp **** }
  14:./Src/ROS_main.cpp **** 
  15:./Src/ROS_main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  16:./Src/ROS_main.cpp **** 
  17:./Src/ROS_main.cpp **** ros::PublisherType *chatter;
  18:./Src/ROS_main.cpp **** //extern int16_t ledState;
  19:./Src/ROS_main.cpp **** 
  20:./Src/ROS_main.cpp **** void ros_init()
  21:./Src/ROS_main.cpp **** {
  22:./Src/ROS_main.cpp ****     /* ROS init, we can start UART hear in not in bsp */ 
  23:./Src/ROS_main.cpp ****     //nh_ = &nh;
  24:./Src/ROS_main.cpp ****     nh.initNode();
  25:./Src/ROS_main.cpp **** 
  26:./Src/ROS_main.cpp ****     /* Register Publisher Chatter */
  27:./Src/ROS_main.cpp ****     std_msgs::String str_msg;
  28:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &str_msg);
  29:./Src/ROS_main.cpp **** 
  30:./Src/ROS_main.cpp ****     /* Register Subscriber led */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 22


  31:./Src/ROS_main.cpp ****     rosSubscribeInit(&nh);
  32:./Src/ROS_main.cpp **** }
  33:./Src/ROS_main.cpp **** 
  34:./Src/ROS_main.cpp **** void ros_run()
  35:./Src/ROS_main.cpp **** {
  36:./Src/ROS_main.cpp ****     nh.spinOnce1();
  37:./Src/ROS_main.cpp **** 
  38:./Src/ROS_main.cpp ****     //Note: If Msg is declared outside function/globally publish1 doesn't work.
  39:./Src/ROS_main.cpp ****     //may be constructor is not getting called.
  40:./Src/ROS_main.cpp ****     std_msgs::String str_msg;
  41:./Src/ROS_main.cpp **** 
  42:./Src/ROS_main.cpp ****     char buf[512];
  43:./Src/ROS_main.cpp ****     sprintf(buf,"Millis %ld ledState = %d",HAL_GetTick(), getLedState());
  44:./Src/ROS_main.cpp ****     str_msg.data = buf;
  45:./Src/ROS_main.cpp ****     //printf("%s\n",buf);
  46:./Src/ROS_main.cpp ****     
  47:./Src/ROS_main.cpp ****     //nh.publish1(chatter->topic_id, &str_msg); 
  48:./Src/ROS_main.cpp **** 
  49:./Src/ROS_main.cpp **** }...
 756              		.loc 6 49 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761              	.LVL74:
 762              		.loc 6 49 0
 763 0000 0128     		cmp	r0, #1
 764 0002 00D0     		beq	.L59
 765              	.LVL75:
 766              	.L49:
 767 0004 7047     		bx	lr
 768              	.LVL76:
 769              	.L59:
 770              		.loc 6 49 0 is_stmt 0 discriminator 1
 771 0006 4FF6FF73 		movw	r3, #65535
 772 000a 9942     		cmp	r1, r3
 773 000c FAD1     		bne	.L49
 774              	.LVL77:
 775              	.LBB118:
 776              	.LBB119:
 777              	.LBB120:
 778              		.file 7 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 23


  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** #include "std_msgs/ROSString.h"
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** namespace ros
  66:ROSSerial/ros/node_handle.h **** {
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  69:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  70:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  71:ROSSerial/ros/node_handle.h **** 
  72:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 24


  73:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** /*
  76:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:ROSSerial/ros/node_handle.h ****  */
  83:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:ROSSerial/ros/node_handle.h **** 
  95:ROSSerial/ros/node_handle.h **** 
  96:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:ROSSerial/ros/node_handle.h **** 
 100:ROSSerial/ros/node_handle.h **** typedef struct
 101:ROSSerial/ros/node_handle.h **** {
 102:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 103:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 104:ROSSerial/ros/node_handle.h ****     const char* message_type;
 105:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 106:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 107:ROSSerial/ros/node_handle.h **** } SubscriberType;
 108:ROSSerial/ros/node_handle.h **** 
 109:ROSSerial/ros/node_handle.h **** typedef struct
 110:ROSSerial/ros/node_handle.h **** {
 111:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 112:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 113:ROSSerial/ros/node_handle.h ****     const Msg* msg; 
 114:ROSSerial/ros/node_handle.h ****     const char* message_type;
 115:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 116:ROSSerial/ros/node_handle.h **** } PublisherType;
 117:ROSSerial/ros/node_handle.h **** 
 118:ROSSerial/ros/node_handle.h **** /* Node Handle */
 119:ROSSerial/ros/node_handle.h **** template<class Hardware,
 120:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 121:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 122:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 123:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 124:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 125:ROSSerial/ros/node_handle.h **** {
 126:ROSSerial/ros/node_handle.h **** protected:
 127:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 128:ROSSerial/ros/node_handle.h **** 
 129:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 25


 130:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 131:ROSSerial/ros/node_handle.h **** 
 132:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 133:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 134:ROSSerial/ros/node_handle.h **** 
 135:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 136:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 137:ROSSerial/ros/node_handle.h **** 
 138:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 139:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 142:ROSSerial/ros/node_handle.h ****   PublisherType publishers2[MAX_PUBLISHERS];
 143:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 144:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 145:ROSSerial/ros/node_handle.h **** 
 146:ROSSerial/ros/node_handle.h ****   /*
 147:ROSSerial/ros/node_handle.h ****    * Setup Functions
 148:ROSSerial/ros/node_handle.h ****    */
 149:ROSSerial/ros/node_handle.h **** public:
 150:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 779              		.loc 7 150 0 is_stmt 1
 780 000e 244A     		ldr	r2, .L60
 781 0010 244B     		ldr	r3, .L60+4
 782 0012 1360     		str	r3, [r2]
 783 0014 0023     		movs	r3, #0
 784 0016 82F81C35 		strb	r3, [r2, #1308]
 785              	.LVL78:
 786              	.LBB121:
 787              	.LBB122:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 788              		.loc 4 51 0
 789 001a 2349     		ldr	r1, .L60+8
 790              	.LVL79:
 791 001c C2F83015 		str	r1, [r2, #1328]
 792              	.LVL80:
 793              	.L52:
 794              	.LBE122:
 795              	.LBE121:
 796              	.LBB123:
 797              	.LBB124:
 151:ROSSerial/ros/node_handle.h ****   {
 152:ROSSerial/ros/node_handle.h **** 
 153:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++) {
 798              		.loc 7 153 0
 799 0020 042B     		cmp	r3, #4
 800 0022 0CD8     		bhi	.L56
 154:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 801              		.loc 7 154 0
 802 0024 1E48     		ldr	r0, .L60
 803 0026 03F58372 		add	r2, r3, #262
 804 002a 0021     		movs	r1, #0
 805 002c 40F82210 		str	r1, [r0, r2, lsl #2]
 155:ROSSerial/ros/node_handle.h ****       publishers2[i].topic_id = 0;
 806              		.loc 7 155 0
 807 0030 1422     		movs	r2, #20
 808 0032 02FB0302 		mla	r2, r2, r3, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 26


 809 0036 A2F82C14 		strh	r1, [r2, #1068]	@ movhi
 153:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 810              		.loc 7 153 0
 811 003a 0133     		adds	r3, r3, #1
 812              	.LVL81:
 813 003c F0E7     		b	.L52
 814              	.L56:
 815              	.LBE124:
 816              	.LBB125:
 156:ROSSerial/ros/node_handle.h ****     }
 157:ROSSerial/ros/node_handle.h **** 
 158:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 817              		.loc 7 158 0
 818 003e 0023     		movs	r3, #0
 819              	.LVL82:
 820              	.L51:
 821 0040 042B     		cmp	r3, #4
 822 0042 0CD8     		bhi	.L57
 159:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 823              		.loc 7 159 0
 824 0044 1648     		ldr	r0, .L60
 825 0046 03F59272 		add	r2, r3, #292
 826 004a 0021     		movs	r1, #0
 827 004c 40F82210 		str	r1, [r0, r2, lsl #2]
 160:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 828              		.loc 7 160 0
 829 0050 1422     		movs	r2, #20
 830 0052 02FB0302 		mla	r2, r2, r3, r0
 831 0056 A2F8A414 		strh	r1, [r2, #1188]	@ movhi
 158:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 832              		.loc 7 158 0
 833 005a 0133     		adds	r3, r3, #1
 834              	.LVL83:
 835 005c F0E7     		b	.L51
 836              	.L57:
 837              	.LBE125:
 838              	.LBB126:
 161:ROSSerial/ros/node_handle.h ****     }
 162:ROSSerial/ros/node_handle.h **** 
 163:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 839              		.loc 7 163 0
 840 005e 0023     		movs	r3, #0
 841              	.LVL84:
 842              	.L53:
 843 0060 B3F5007F 		cmp	r3, #512
 844 0064 05D2     		bcs	.L58
 164:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 845              		.loc 7 164 0
 846 0066 0E4A     		ldr	r2, .L60
 847 0068 1A44     		add	r2, r2, r3
 848 006a 0021     		movs	r1, #0
 849 006c 1176     		strb	r1, [r2, #24]
 163:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 850              		.loc 7 163 0
 851 006e 0133     		adds	r3, r3, #1
 852              	.LVL85:
 853 0070 F6E7     		b	.L53
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 27


 854              	.L58:
 855              	.LBE126:
 856              	.LBB127:
 165:ROSSerial/ros/node_handle.h **** 
 166:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 857              		.loc 7 166 0
 858 0072 0023     		movs	r3, #0
 859              	.LVL86:
 860              	.L54:
 861 0074 B3F5007F 		cmp	r3, #512
 862 0078 06D2     		bcs	.L55
 167:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 863              		.loc 7 167 0
 864 007a 094A     		ldr	r2, .L60
 865 007c 1A44     		add	r2, r2, r3
 866 007e 0021     		movs	r1, #0
 867 0080 82F81812 		strb	r1, [r2, #536]
 166:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 868              		.loc 7 166 0
 869 0084 0133     		adds	r3, r3, #1
 870              	.LVL87:
 871 0086 F5E7     		b	.L54
 872              	.L55:
 873              	.LBE127:
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 874              		.loc 7 169 0
 875 0088 054B     		ldr	r3, .L60
 876              	.LVL88:
 877 008a 0022     		movs	r2, #0
 878 008c 83F83425 		strb	r2, [r3, #1332]
 170:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 879              		.loc 7 170 0
 880 0090 C3F83C25 		str	r2, [r3, #1340]
 171:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 881              		.loc 7 171 0
 882 0094 83F84025 		strb	r2, [r3, #1344]
 172:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 883              		.loc 7 172 0
 884 0098 C3F84825 		str	r2, [r3, #1352]
 173:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 174:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 175:ROSSerial/ros/node_handle.h **** 
 176:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 885              		.loc 7 176 0
 886 009c 5A61     		str	r2, [r3, #20]
 887              	.LBE123:
 888              	.LBE120:
 889              	.LBE119:
 890              	.LBE118:
 891              		.loc 6 49 0
 892 009e B1E7     		b	.L49
 893              	.L61:
 894              		.align	2
 895              	.L60:
 896 00a0 00000000 		.word	.LANCHOR1
 897 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 28


 898 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 899              		.cfi_endproc
 900              	.LFE510:
 901              		.cantunwind
 902              		.fnend
 904              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 905              		.align	1
 906              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu fpv4-sp-d16
 912              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 913              		.fnstart
 914              	.LFB513:
 177:ROSSerial/ros/node_handle.h ****   }
 178:ROSSerial/ros/node_handle.h **** 
 179:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 180:ROSSerial/ros/node_handle.h ****   {
 181:ROSSerial/ros/node_handle.h ****     return &hardware_;
 182:ROSSerial/ros/node_handle.h ****   }
 183:ROSSerial/ros/node_handle.h **** 
 184:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 185:ROSSerial/ros/node_handle.h ****   void initNode()
 186:ROSSerial/ros/node_handle.h ****   {
 187:ROSSerial/ros/node_handle.h ****     hardware_.init();
 188:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 189:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 190:ROSSerial/ros/node_handle.h ****     index_ = 0;
 191:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 192:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 193:ROSSerial/ros/node_handle.h ****   };
 194:ROSSerial/ros/node_handle.h **** 
 195:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 196:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 197:ROSSerial/ros/node_handle.h ****   {
 198:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 199:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 200:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 201:ROSSerial/ros/node_handle.h ****     index_ = 0;
 202:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 203:ROSSerial/ros/node_handle.h ****   };
 204:ROSSerial/ros/node_handle.h **** 
 205:ROSSerial/ros/node_handle.h ****   /**
 206:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 207:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 208:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 209:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 210:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 211:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 212:ROSSerial/ros/node_handle.h ****    */
 213:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 214:ROSSerial/ros/node_handle.h ****   {
 215:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 216:ROSSerial/ros/node_handle.h ****   }
 217:ROSSerial/ros/node_handle.h **** 
 218:ROSSerial/ros/node_handle.h **** protected:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 29


 219:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 220:ROSSerial/ros/node_handle.h ****   int mode_;
 221:ROSSerial/ros/node_handle.h ****   int bytes_;
 222:ROSSerial/ros/node_handle.h ****   int topic_;
 223:ROSSerial/ros/node_handle.h ****   int index_;
 224:ROSSerial/ros/node_handle.h ****   int checksum_;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h ****   bool configured_;
 227:ROSSerial/ros/node_handle.h **** 
 228:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 229:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 230:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 231:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 232:ROSSerial/ros/node_handle.h **** 
 233:ROSSerial/ros/node_handle.h **** public:
 234:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 235:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 236:ROSSerial/ros/node_handle.h ****    */
 237:ROSSerial/ros/node_handle.h **** 
 238:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 239:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 240:ROSSerial/ros/node_handle.h ****   }
 241:ROSSerial/ros/node_handle.h **** 
 242:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 243:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 244:ROSSerial/ros/node_handle.h ****   {
 245:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 246:ROSSerial/ros/node_handle.h ****     
 247:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 248:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 249:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 250:ROSSerial/ros/node_handle.h ****     //printf("spinOnce %ld\n",c_time);
 251:ROSSerial/ros/node_handle.h **** 
 252:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 253:ROSSerial/ros/node_handle.h ****     {
 254:ROSSerial/ros/node_handle.h ****       configured_ = false;
 255:ROSSerial/ros/node_handle.h ****     }
 256:ROSSerial/ros/node_handle.h **** 
 257:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 258:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 259:ROSSerial/ros/node_handle.h ****     {
 260:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 261:ROSSerial/ros/node_handle.h ****       {
 262:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 263:ROSSerial/ros/node_handle.h ****       }
 264:ROSSerial/ros/node_handle.h ****     }
 265:ROSSerial/ros/node_handle.h **** 
 266:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 267:ROSSerial/ros/node_handle.h ****     while (true)
 268:ROSSerial/ros/node_handle.h ****     {
 269:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 270:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 271:ROSSerial/ros/node_handle.h ****       {
 272:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 273:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 274:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 275:ROSSerial/ros/node_handle.h ****         // and start fresh.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 30


 276:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 277:ROSSerial/ros/node_handle.h ****         {
 278:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 279:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 280:ROSSerial/ros/node_handle.h ****         }
 281:ROSSerial/ros/node_handle.h ****       }
 282:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 283:ROSSerial/ros/node_handle.h ****       if (data < 0)
 284:ROSSerial/ros/node_handle.h ****         break;
 285:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 286:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 289:ROSSerial/ros/node_handle.h ****         bytes_--;
 290:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 291:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 292:ROSSerial/ros/node_handle.h ****       }
 293:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 294:ROSSerial/ros/node_handle.h ****       {
 295:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 296:ROSSerial/ros/node_handle.h ****         {
 297:ROSSerial/ros/node_handle.h ****           mode_++;
 298:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 299:ROSSerial/ros/node_handle.h ****         }
 300:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 301:ROSSerial/ros/node_handle.h ****         {
 302:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 303:ROSSerial/ros/node_handle.h ****           configured_ = false;
 304:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****       }
 307:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 308:ROSSerial/ros/node_handle.h ****       {
 309:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 310:ROSSerial/ros/node_handle.h ****         {
 311:ROSSerial/ros/node_handle.h ****           mode_++;
 312:ROSSerial/ros/node_handle.h ****         }
 313:ROSSerial/ros/node_handle.h ****         else
 314:ROSSerial/ros/node_handle.h ****         {
 315:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 316:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 317:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 318:ROSSerial/ros/node_handle.h ****         }
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 323:ROSSerial/ros/node_handle.h ****         index_ = 0;
 324:ROSSerial/ros/node_handle.h ****         mode_++;
 325:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 326:ROSSerial/ros/node_handle.h ****       }
 327:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 328:ROSSerial/ros/node_handle.h ****       {
 329:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 330:ROSSerial/ros/node_handle.h ****         mode_++;
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 31


 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 335:ROSSerial/ros/node_handle.h ****           mode_++;
 336:ROSSerial/ros/node_handle.h ****         else
 337:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 338:ROSSerial/ros/node_handle.h ****       }
 339:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 340:ROSSerial/ros/node_handle.h ****       {
 341:ROSSerial/ros/node_handle.h ****         topic_ = data;
 342:ROSSerial/ros/node_handle.h ****         mode_++;
 343:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 348:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 349:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 350:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 351:ROSSerial/ros/node_handle.h ****       }
 352:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 353:ROSSerial/ros/node_handle.h ****       {
 354:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 355:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 356:ROSSerial/ros/node_handle.h ****         {
 357:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 358:ROSSerial/ros/node_handle.h ****           {
 359:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 360:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 361:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 362:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 363:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 364:ROSSerial/ros/node_handle.h ****           }
 365:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 366:ROSSerial/ros/node_handle.h ****           {
 367:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 368:ROSSerial/ros/node_handle.h ****           }
 369:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 370:ROSSerial/ros/node_handle.h ****           {
 371:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 372:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 373:ROSSerial/ros/node_handle.h ****           }
 374:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 375:ROSSerial/ros/node_handle.h ****           {
 376:ROSSerial/ros/node_handle.h ****             configured_ = false;
 377:ROSSerial/ros/node_handle.h ****           }
 378:ROSSerial/ros/node_handle.h ****           else
 379:ROSSerial/ros/node_handle.h ****           {
 380:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 381:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 382:ROSSerial/ros/node_handle.h ****               printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 383:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 384:ROSSerial/ros/node_handle.h ****             }
 385:ROSSerial/ros/node_handle.h ****           }
 386:ROSSerial/ros/node_handle.h ****         }
 387:ROSSerial/ros/node_handle.h ****       }
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 32


 390:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 391:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 392:ROSSerial/ros/node_handle.h ****     {
 393:ROSSerial/ros/node_handle.h ****       requestSyncTime();
 394:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 395:ROSSerial/ros/node_handle.h ****     }
 396:ROSSerial/ros/node_handle.h **** 
 397:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 398:ROSSerial/ros/node_handle.h ****   }
 399:ROSSerial/ros/node_handle.h **** 
 400:ROSSerial/ros/node_handle.h **** 
 401:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 402:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 915              		.loc 7 402 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920              	.LVL89:
 403:ROSSerial/ros/node_handle.h ****   {
 404:ROSSerial/ros/node_handle.h ****     return configured_;
 405:ROSSerial/ros/node_handle.h ****   };
 921              		.loc 7 405 0
 922 0000 90F81C05 		ldrb	r0, [r0, #1308]	@ zero_extendqisi2
 923              	.LVL90:
 924 0004 7047     		bx	lr
 925              		.cfi_endproc
 926              	.LFE513:
 927              		.cantunwind
 928              		.fnend
 930              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 931              		.align	1
 932              		.weak	_ZNK8std_msgs6String9serializeEPh
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv4-sp-d16
 938              	_ZNK8std_msgs6String9serializeEPh:
 939              		.fnstart
 940              	.LFB403:
  18:ROSSerial/std_msgs/ROSString.h ****     {
 941              		.loc 5 18 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL91:
 946 0000 70B5     		push	{r4, r5, r6, lr}
 947              	.LCFI6:
 948              		.cfi_def_cfa_offset 16
 949              		.cfi_offset 4, -16
 950              		.cfi_offset 5, -12
 951              		.cfi_offset 6, -8
 952              		.cfi_offset 14, -4
 953 0002 0646     		mov	r6, r0
 954 0004 0C46     		mov	r4, r1
 955              	.LVL92:
  21:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 33


 956              		.loc 5 21 0
 957 0006 4068     		ldr	r0, [r0, #4]
 958              	.LVL93:
 959 0008 FFF7FEFF 		bl	strlen
 960              	.LVL94:
 961 000c 0546     		mov	r5, r0
 962              	.LVL95:
  22:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
 963              		.loc 5 22 0
 964 000e 2046     		mov	r0, r4
 965              	.LVL96:
 966 0010 40F8045B 		str	r5, [r0], #4	@ unaligned
 967              	.LVL97:
  24:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
 968              		.loc 5 24 0
 969 0014 2A46     		mov	r2, r5
 970 0016 7168     		ldr	r1, [r6, #4]
 971 0018 FFF7FEFF 		bl	memcpy
 972              	.LVL98:
  27:ROSSerial/std_msgs/ROSString.h **** 
 973              		.loc 5 27 0
 974 001c 281D     		adds	r0, r5, #4
 975              	.LVL99:
 976 001e 70BD     		pop	{r4, r5, r6, pc}
 977              		.cfi_endproc
 978              	.LFE403:
 979              		.cantunwind
 980              		.fnend
 982              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 983              		.align	1
 984              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 991              		.fnstart
 992              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 993              		.loc 2 29 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              	.LVL100:
 998 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 999              	.LCFI7:
 1000              		.cfi_def_cfa_offset 24
 1001              		.cfi_offset 4, -24
 1002              		.cfi_offset 5, -20
 1003              		.cfi_offset 6, -16
 1004              		.cfi_offset 7, -12
 1005              		.cfi_offset 8, -8
 1006              		.cfi_offset 14, -4
 1007 0004 0646     		mov	r6, r0
 1008 0006 0C46     		mov	r4, r1
 1009              	.LVL101:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 34


 1010              		.loc 2 32 0
 1011 0008 8388     		ldrh	r3, [r0, #4]
 1012 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1013              		.loc 2 33 0
 1014 000c 8388     		ldrh	r3, [r0, #4]
 1015 000e 1B0A     		lsrs	r3, r3, #8
 1016 0010 4B70     		strb	r3, [r1, #1]
 1017              	.LVL102:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1018              		.loc 2 35 0
 1019 0012 8068     		ldr	r0, [r0, #8]
 1020              	.LVL103:
 1021 0014 FFF7FEFF 		bl	strlen
 1022              	.LVL104:
 1023 0018 0746     		mov	r7, r0
 1024              	.LVL105:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1025              		.loc 2 36 0
 1026 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 1027              	.LVL106:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1028              		.loc 2 38 0
 1029 001e 0246     		mov	r2, r0
 1030 0020 B168     		ldr	r1, [r6, #8]
 1031 0022 A01D     		adds	r0, r4, #6
 1032              	.LVL107:
 1033 0024 FFF7FEFF 		bl	memcpy
 1034              	.LVL108:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1035              		.loc 2 39 0
 1036 0028 07F10608 		add	r8, r7, #6
 1037              	.LVL109:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1038              		.loc 2 40 0
 1039 002c F068     		ldr	r0, [r6, #12]
 1040 002e FFF7FEFF 		bl	strlen
 1041              	.LVL110:
 1042 0032 0546     		mov	r5, r0
 1043              	.LVL111:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1044              		.loc 2 41 0
 1045 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1046              		.loc 2 42 0
 1047 0038 0A37     		adds	r7, r7, #10
 1048              	.LVL112:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1049              		.loc 2 43 0
 1050 003a 0246     		mov	r2, r0
 1051 003c F168     		ldr	r1, [r6, #12]
 1052 003e E019     		adds	r0, r4, r7
 1053              	.LVL113:
 1054 0040 FFF7FEFF 		bl	memcpy
 1055              	.LVL114:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1056              		.loc 2 44 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 35


 1057 0044 2F44     		add	r7, r7, r5
 1058              	.LVL115:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1059              		.loc 2 45 0
 1060 0046 3069     		ldr	r0, [r6, #16]
 1061 0048 FFF7FEFF 		bl	strlen
 1062              	.LVL116:
 1063 004c 0546     		mov	r5, r0
 1064              	.LVL117:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1065              		.loc 2 46 0
 1066 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 1067              		.loc 2 47 0
 1068 0050 0437     		adds	r7, r7, #4
 1069              	.LVL118:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1070              		.loc 2 48 0
 1071 0052 0246     		mov	r2, r0
 1072 0054 3169     		ldr	r1, [r6, #16]
 1073 0056 E019     		adds	r0, r4, r7
 1074              	.LVL119:
 1075 0058 FFF7FEFF 		bl	memcpy
 1076              	.LVL120:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 1077              		.loc 2 49 0
 1078 005c E819     		adds	r0, r5, r7
 1079              	.LVL121:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1080              		.loc 2 54 0
 1081 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1082              		.loc 2 55 0
 1083 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1084              		.loc 2 56 0
 1085 0062 190A     		lsrs	r1, r3, #8
 1086 0064 421C     		adds	r2, r0, #1
 1087 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1088              		.loc 2 57 0
 1089 0068 190C     		lsrs	r1, r3, #16
 1090 006a 821C     		adds	r2, r0, #2
 1091 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1092              		.loc 2 58 0
 1093 006e 1B0E     		lsrs	r3, r3, #24
 1094 0070 C21C     		adds	r2, r0, #3
 1095 0072 A354     		strb	r3, [r4, r2]
 1096              	.LVL122:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 1097              		.loc 2 61 0
 1098 0074 0430     		adds	r0, r0, #4
 1099              	.LVL123:
 1100 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1101              		.cfi_endproc
 1102              	.LFE382:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 36


 1103              		.cantunwind
 1104              		.fnend
 1106              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1107              		.align	1
 1108              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu fpv4-sp-d16
 1114              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1115              		.fnstart
 1116              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 1117              		.loc 3 24 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              	.LVL124:
 1122 0000 70B5     		push	{r4, r5, r6, lr}
 1123              	.LCFI8:
 1124              		.cfi_def_cfa_offset 16
 1125              		.cfi_offset 4, -16
 1126              		.cfi_offset 5, -12
 1127              		.cfi_offset 6, -8
 1128              		.cfi_offset 14, -4
 1129 0002 0646     		mov	r6, r0
 1130 0004 0D46     		mov	r5, r1
 1131              	.LVL125:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1132              		.loc 3 27 0
 1133 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1134 0008 0B70     		strb	r3, [r1]
 1135              	.LVL126:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1136              		.loc 3 29 0
 1137 000a 8068     		ldr	r0, [r0, #8]
 1138              	.LVL127:
 1139 000c FFF7FEFF 		bl	strlen
 1140              	.LVL128:
 1141 0010 0446     		mov	r4, r0
 1142              	.LVL129:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 1143              		.loc 3 30 0
 1144 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1145              	.LVL130:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 1146              		.loc 3 32 0
 1147 0016 0246     		mov	r2, r0
 1148 0018 B168     		ldr	r1, [r6, #8]
 1149 001a 681D     		adds	r0, r5, #5
 1150              	.LVL131:
 1151 001c FFF7FEFF 		bl	memcpy
 1152              	.LVL132:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1153              		.loc 3 35 0
 1154 0020 601D     		adds	r0, r4, #5
 1155              	.LVL133:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 37


 1156 0022 70BD     		pop	{r4, r5, r6, pc}
 1157              		.cfi_endproc
 1158              	.LFE386:
 1159              		.cantunwind
 1160              		.fnend
 1162              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1163              		.align	1
 1164              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu fpv4-sp-d16
 1170              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1171              		.fnstart
 1172              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1173              		.loc 4 64 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              	.LVL134:
 1178 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1179              	.LCFI9:
 1180              		.cfi_def_cfa_offset 24
 1181              		.cfi_offset 4, -24
 1182              		.cfi_offset 5, -20
 1183              		.cfi_offset 6, -16
 1184              		.cfi_offset 7, -12
 1185              		.cfi_offset 8, -8
 1186              		.cfi_offset 14, -4
 1187 0004 0546     		mov	r5, r0
 1188 0006 0C46     		mov	r4, r1
 1189              	.LVL135:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1190              		.loc 4 67 0
 1191 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1192 000a 0B70     		strb	r3, [r1]
 1193              	.LVL136:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1194              		.loc 4 68 0
 1195 000c 0022     		movs	r2, #0
 1196 000e 4A70     		strb	r2, [r1, #1]
 1197              	.LVL137:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1198              		.loc 4 69 0
 1199 0010 8A70     		strb	r2, [r1, #2]
 1200              	.LVL138:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1201              		.loc 4 70 0
 1202 0012 CA70     		strb	r2, [r1, #3]
 1203              	.LVL139:
 1204 0014 0423     		movs	r3, #4
 1205              	.LVL140:
 1206              	.L71:
 1207              	.LBB128:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1208              		.loc 4 71 0 discriminator 3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 38


 1209 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1210 0018 9142     		cmp	r1, r2
 1211 001a 10D9     		bls	.L70
 1212              	.LBB129:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1213              		.loc 4 76 0 discriminator 2
 1214 001c E968     		ldr	r1, [r5, #12]
 1215 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1216              		.loc 4 77 0 discriminator 2
 1217 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1218              		.loc 4 78 0 discriminator 2
 1219 0024 0E0A     		lsrs	r6, r1, #8
 1220 0026 581C     		adds	r0, r3, #1
 1221 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1222              		.loc 4 79 0 discriminator 2
 1223 002a 0E0C     		lsrs	r6, r1, #16
 1224 002c 981C     		adds	r0, r3, #2
 1225 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1226              		.loc 4 80 0 discriminator 2
 1227 0030 090E     		lsrs	r1, r1, #24
 1228 0032 D81C     		adds	r0, r3, #3
 1229 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1230              		.loc 4 81 0 discriminator 2
 1231 0036 0433     		adds	r3, r3, #4
 1232              	.LVL141:
 1233              	.LBE129:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1234              		.loc 4 71 0 discriminator 2
 1235 0038 0132     		adds	r2, r2, #1
 1236              	.LVL142:
 1237 003a D2B2     		uxtb	r2, r2
 1238              	.LVL143:
 1239 003c EBE7     		b	.L71
 1240              	.L70:
 1241              	.LBE128:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1242              		.loc 4 83 0
 1243 003e 591C     		adds	r1, r3, #1
 1244              	.LVL144:
 1245 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1246              	.LVL145:
 1247 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1248              		.loc 4 84 0
 1249 0044 981C     		adds	r0, r3, #2
 1250              	.LVL146:
 1251 0046 0022     		movs	r2, #0
 1252 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1253              		.loc 4 85 0
 1254 004a D91C     		adds	r1, r3, #3
 1255              	.LVL147:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 39


 1256 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1257              		.loc 4 86 0
 1258 004e 0433     		adds	r3, r3, #4
 1259              	.LVL148:
 1260 0050 6254     		strb	r2, [r4, r1]
 1261              	.LVL149:
 1262              	.L73:
 1263              	.LBB130:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1264              		.loc 4 87 0 discriminator 3
 1265 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1266 0054 9142     		cmp	r1, r2
 1267 0056 10D9     		bls	.L72
 1268              	.LBB131:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1269              		.loc 4 92 0 discriminator 2
 1270 0058 A969     		ldr	r1, [r5, #24]
 1271 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1272              		.loc 4 93 0 discriminator 2
 1273 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1274              		.loc 4 94 0 discriminator 2
 1275 0060 0E0A     		lsrs	r6, r1, #8
 1276 0062 581C     		adds	r0, r3, #1
 1277 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1278              		.loc 4 95 0 discriminator 2
 1279 0066 0E0C     		lsrs	r6, r1, #16
 1280 0068 981C     		adds	r0, r3, #2
 1281 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1282              		.loc 4 96 0 discriminator 2
 1283 006c 090E     		lsrs	r1, r1, #24
 1284 006e D81C     		adds	r0, r3, #3
 1285 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1286              		.loc 4 97 0 discriminator 2
 1287 0072 0433     		adds	r3, r3, #4
 1288              	.LVL150:
 1289              	.LBE131:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1290              		.loc 4 87 0 discriminator 2
 1291 0074 0132     		adds	r2, r2, #1
 1292              	.LVL151:
 1293 0076 D2B2     		uxtb	r2, r2
 1294              	.LVL152:
 1295 0078 EBE7     		b	.L73
 1296              	.L72:
 1297              	.LBE130:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1298              		.loc 4 99 0
 1299 007a 5A1C     		adds	r2, r3, #1
 1300              	.LVL153:
 1301 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1302 007e E154     		strb	r1, [r4, r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 40


 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1303              		.loc 4 100 0
 1304 0080 991C     		adds	r1, r3, #2
 1305              	.LVL154:
 1306 0082 4FF00008 		mov	r8, #0
 1307 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1308              		.loc 4 101 0
 1309 008a DA1C     		adds	r2, r3, #3
 1310              	.LVL155:
 1311 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1312              		.loc 4 102 0
 1313 0090 1E1D     		adds	r6, r3, #4
 1314              	.LVL156:
 1315 0092 04F80280 		strb	r8, [r4, r2]
 1316              	.LVL157:
 1317              	.L75:
 1318              	.LBB132:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1319              		.loc 4 103 0 discriminator 3
 1320 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1321 0098 4345     		cmp	r3, r8
 1322 009a 14D9     		bls	.L69
 1323              	.LBB133:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1324              		.loc 4 104 0 discriminator 2
 1325 009c 6B6A     		ldr	r3, [r5, #36]
 1326 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1327 00a2 FFF7FEFF 		bl	strlen
 1328              	.LVL158:
 1329 00a6 0746     		mov	r7, r0
 1330              	.LVL159:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1331              		.loc 4 105 0 discriminator 2
 1332 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1333              		.loc 4 106 0 discriminator 2
 1334 00aa 0436     		adds	r6, r6, #4
 1335              	.LVL160:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1336              		.loc 4 107 0 discriminator 2
 1337 00ac 6B6A     		ldr	r3, [r5, #36]
 1338 00ae 0246     		mov	r2, r0
 1339 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1340 00b4 A019     		adds	r0, r4, r6
 1341              	.LVL161:
 1342 00b6 FFF7FEFF 		bl	memcpy
 1343              	.LVL162:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1344              		.loc 4 108 0 discriminator 2
 1345 00ba 3E44     		add	r6, r6, r7
 1346              	.LVL163:
 1347              	.LBE133:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1348              		.loc 4 103 0 discriminator 2
 1349 00bc 08F10108 		add	r8, r8, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 41


 1350              	.LVL164:
 1351 00c0 5FFA88F8 		uxtb	r8, r8
 1352              	.LVL165:
 1353 00c4 E7E7     		b	.L75
 1354              	.L69:
 1355              	.LBE132:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1356              		.loc 4 111 0
 1357 00c6 3046     		mov	r0, r6
 1358 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1359              		.cfi_endproc
 1360              	.LFE394:
 1361              		.cantunwind
 1362              		.fnend
 1364              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1365              		.align	1
 1366              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu fpv4-sp-d16
 1372              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1373              		.fnstart
 1374              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1375              		.loc 4 113 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL166:
 1380 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1381              	.LCFI10:
 1382              		.cfi_def_cfa_offset 24
 1383              		.cfi_offset 3, -24
 1384              		.cfi_offset 4, -20
 1385              		.cfi_offset 5, -16
 1386              		.cfi_offset 6, -12
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 0646     		mov	r6, r0
 1390 0004 0D46     		mov	r5, r1
 1391              	.LVL167:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1392              		.loc 4 116 0
 1393 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1394              	.LVL168:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1395              		.loc 4 117 0
 1396 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1397 000a A342     		cmp	r3, r4
 1398 000c 1AD3     		bcc	.L90
 1399              	.LVL169:
 1400              	.L78:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1401              		.loc 4 120 0
 1402 000e 3471     		strb	r4, [r6, #4]
 1403              	.LVL170:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 42


 1404              	.LBB141:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1405              		.loc 4 121 0
 1406 0010 0022     		movs	r2, #0
 1407              	.LBE141:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1408              		.loc 4 119 0
 1409 0012 0424     		movs	r4, #4
 1410              	.LVL171:
 1411              	.L80:
 1412              	.LBB143:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1413              		.loc 4 121 0 discriminator 3
 1414 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1415 0016 9342     		cmp	r3, r2
 1416 0018 1AD9     		bls	.L79
 1417              	.LBB142:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1418              		.loc 4 127 0 discriminator 2
 1419 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1420              		.loc 4 128 0 discriminator 2
 1421 001c 611C     		adds	r1, r4, #1
 1422 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1423 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1424              		.loc 4 129 0 discriminator 2
 1425 0024 A11C     		adds	r1, r4, #2
 1426 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1427 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1428              		.loc 4 130 0 discriminator 2
 1429 002c E11C     		adds	r1, r4, #3
 1430 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1431 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1432              		.loc 4 131 0 discriminator 2
 1433 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1434              		.loc 4 132 0 discriminator 2
 1435 0036 0434     		adds	r4, r4, #4
 1436              	.LVL172:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1437              		.loc 4 133 0 discriminator 2
 1438 0038 F168     		ldr	r1, [r6, #12]
 1439 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1440              	.LBE142:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1441              		.loc 4 121 0 discriminator 2
 1442 003e 0132     		adds	r2, r2, #1
 1443              	.LVL173:
 1444 0040 D2B2     		uxtb	r2, r2
 1445              	.LVL174:
 1446 0042 E7E7     		b	.L80
 1447              	.LVL175:
 1448              	.L90:
 1449              	.LBE143:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 43


 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1450              		.loc 4 118 0
 1451 0044 A100     		lsls	r1, r4, #2
 1452              	.LVL176:
 1453 0046 C068     		ldr	r0, [r0, #12]
 1454              	.LVL177:
 1455 0048 FFF7FEFF 		bl	realloc
 1456              	.LVL178:
 1457 004c F060     		str	r0, [r6, #12]
 1458 004e DEE7     		b	.L78
 1459              	.LVL179:
 1460              	.L79:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1461              		.loc 4 135 0
 1462 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1463              	.LVL180:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1464              		.loc 4 136 0
 1465 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1466 0054 BB42     		cmp	r3, r7
 1467 0056 1AD3     		bcc	.L91
 1468              	.LVL181:
 1469              	.L81:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1470              		.loc 4 138 0
 1471 0058 0434     		adds	r4, r4, #4
 1472              	.LVL182:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1473              		.loc 4 139 0
 1474 005a 3774     		strb	r7, [r6, #16]
 1475              	.LVL183:
 1476              	.LBB144:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1477              		.loc 4 140 0
 1478 005c 0022     		movs	r2, #0
 1479              	.LVL184:
 1480              	.L83:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1481              		.loc 4 140 0 is_stmt 0 discriminator 3
 1482 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1483 0060 9342     		cmp	r3, r2
 1484 0062 1AD9     		bls	.L82
 1485              	.LBB145:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1486              		.loc 4 146 0 is_stmt 1 discriminator 2
 1487 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1488              		.loc 4 147 0 discriminator 2
 1489 0066 611C     		adds	r1, r4, #1
 1490 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1491 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1492              		.loc 4 148 0 discriminator 2
 1493 006e A11C     		adds	r1, r4, #2
 1494 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1495 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 44


 1496              		.loc 4 149 0 discriminator 2
 1497 0076 E11C     		adds	r1, r4, #3
 1498 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1499 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1500              		.loc 4 150 0 discriminator 2
 1501 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1502              		.loc 4 151 0 discriminator 2
 1503 0080 0434     		adds	r4, r4, #4
 1504              	.LVL185:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1505              		.loc 4 152 0 discriminator 2
 1506 0082 B169     		ldr	r1, [r6, #24]
 1507 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1508              	.LBE145:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1509              		.loc 4 140 0 discriminator 2
 1510 0088 0132     		adds	r2, r2, #1
 1511              	.LVL186:
 1512 008a D2B2     		uxtb	r2, r2
 1513              	.LVL187:
 1514 008c E7E7     		b	.L83
 1515              	.LVL188:
 1516              	.L91:
 1517              	.LBE144:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1518              		.loc 4 137 0
 1519 008e B900     		lsls	r1, r7, #2
 1520 0090 B069     		ldr	r0, [r6, #24]
 1521 0092 FFF7FEFF 		bl	realloc
 1522              	.LVL189:
 1523 0096 B061     		str	r0, [r6, #24]
 1524 0098 DEE7     		b	.L81
 1525              	.LVL190:
 1526              	.L82:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1527              		.loc 4 154 0
 1528 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1529              	.LVL191:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1530              		.loc 4 155 0
 1531 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1532 009e BB42     		cmp	r3, r7
 1533 00a0 04D3     		bcc	.L92
 1534              	.LVL192:
 1535              	.L84:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1536              		.loc 4 157 0
 1537 00a2 201D     		adds	r0, r4, #4
 1538              	.LVL193:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1539              		.loc 4 158 0
 1540 00a4 3777     		strb	r7, [r6, #28]
 1541              	.LVL194:
 1542              	.LBB146:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 45


 1543              		.loc 4 159 0
 1544 00a6 4FF0000C 		mov	ip, #0
 1545 00aa 12E0     		b	.L88
 1546              	.LVL195:
 1547              	.L92:
 1548              	.LBE146:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1549              		.loc 4 156 0
 1550 00ac B900     		lsls	r1, r7, #2
 1551 00ae 706A     		ldr	r0, [r6, #36]
 1552 00b0 FFF7FEFF 		bl	realloc
 1553              	.LVL196:
 1554 00b4 7062     		str	r0, [r6, #36]
 1555 00b6 F4E7     		b	.L84
 1556              	.LVL197:
 1557              	.L86:
 1558              	.LBB150:
 1559              	.LBB147:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1560              		.loc 4 166 0 discriminator 2
 1561 00b8 431E     		subs	r3, r0, #1
 1562              	.LVL198:
 1563 00ba 0022     		movs	r2, #0
 1564 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1565              		.loc 4 167 0 discriminator 2
 1566 00be 013C     		subs	r4, r4, #1
 1567 00c0 2C44     		add	r4, r4, r5
 1568 00c2 3462     		str	r4, [r6, #32]
 1569              	.LVL199:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1570              		.loc 4 169 0 discriminator 2
 1571 00c4 736A     		ldr	r3, [r6, #36]
 1572 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1573              	.LVL200:
 1574              	.LBE147:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1575              		.loc 4 159 0 discriminator 2
 1576 00ca 0CF1010C 		add	ip, ip, #1
 1577              	.LVL201:
 1578 00ce 5FFA8CFC 		uxtb	ip, ip
 1579              	.LVL202:
 1580              	.L88:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1581              		.loc 4 159 0 is_stmt 0 discriminator 1
 1582 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1583 00d4 6345     		cmp	r3, ip
 1584 00d6 0AD9     		bls	.L77
 1585              	.LBB149:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1586              		.loc 4 161 0 is_stmt 1
 1587 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1588              	.LVL203:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1589              		.loc 4 162 0
 1590 00da 041D     		adds	r4, r0, #4
 1591              	.LVL204:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 46


 1592              	.LBB148:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1593              		.loc 4 163 0
 1594 00dc 2346     		mov	r3, r4
 1595              	.LVL205:
 1596              	.L87:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1597              		.loc 4 163 0 is_stmt 0 discriminator 3
 1598 00de 3819     		adds	r0, r7, r4
 1599 00e0 9842     		cmp	r0, r3
 1600 00e2 E9D9     		bls	.L86
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1601              		.loc 4 164 0 is_stmt 1 discriminator 2
 1602 00e4 5A1E     		subs	r2, r3, #1
 1603 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1604 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1605              		.loc 4 163 0 discriminator 2
 1606 00ea 0133     		adds	r3, r3, #1
 1607              	.LVL206:
 1608 00ec F7E7     		b	.L87
 1609              	.LVL207:
 1610              	.L77:
 1611              	.LBE148:
 1612              	.LBE149:
 1613              	.LBE150:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1614              		.loc 4 172 0
 1615 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1616              		.cfi_endproc
 1617              	.LFE395:
 1618              		.cantunwind
 1619              		.fnend
 1621              		.section	.text.ros_init,"ax",%progbits
 1622              		.align	1
 1623              		.global	ros_init
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
 1627              		.fpu fpv4-sp-d16
 1629              	ros_init:
 1630              		.fnstart
 1631              	.LFB474:
  21:./Src/ROS_main.cpp **** {
 1632              		.loc 6 21 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 8
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1637              		.save {r4, r5, r6, r7, lr}
 1638              	.LCFI11:
 1639              		.cfi_def_cfa_offset 20
 1640              		.cfi_offset 4, -20
 1641              		.cfi_offset 5, -16
 1642              		.cfi_offset 6, -12
 1643              		.cfi_offset 7, -8
 1644              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 47


 1645              		.pad #12
 1646 0002 83B0     		sub	sp, sp, #12
 1647              	.LCFI12:
 1648              		.cfi_def_cfa_offset 32
 1649              	.LVL208:
 1650              	.LBB161:
 1651              	.LBB162:
 1652              	.LBB163:
 1653              	.LBB164:
 1654              		.file 8 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "stm32f1xx_hal.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** #include "setup.h"
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern UART_HandleTypeDef huart2; 
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** extern uint8_t g_RxBuf[];
  45:ROSSerial/AT32hardware.h **** extern uint8_t byte;		/* receive byte */
  46:ROSSerial/AT32hardware.h **** extern uint8_t g_RxRead;
  47:ROSSerial/AT32hardware.h **** extern uint8_t g_RxWritten;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 48


  48:ROSSerial/AT32hardware.h **** 
  49:ROSSerial/AT32hardware.h **** class STM32Hardware
  50:ROSSerial/AT32hardware.h **** {
  51:ROSSerial/AT32hardware.h **** public:
  52:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  53:ROSSerial/AT32hardware.h **** 	{
  54:ROSSerial/AT32hardware.h **** 	}
  55:ROSSerial/AT32hardware.h **** 
  56:ROSSerial/AT32hardware.h **** 	/*
  57:ROSSerial/AT32hardware.h **** 	 * Method: init
  58:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  59:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  60:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  61:ROSSerial/AT32hardware.h **** 	 *   returns: none
  62:ROSSerial/AT32hardware.h **** 	 */
  63:ROSSerial/AT32hardware.h **** 	void init(void)
  64:ROSSerial/AT32hardware.h **** 	{
  65:ROSSerial/AT32hardware.h **** 		if(HAL_UART_Receive_IT(&huart2, &byte, 1) != 0)
 1655              		.loc 8 65 0
 1656 0004 0122     		movs	r2, #1
 1657 0006 2349     		ldr	r1, .L99
 1658 0008 2348     		ldr	r0, .L99+4
 1659 000a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1660              	.LVL209:
 1661              	.LBE164:
 1662              	.LBE163:
 188:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 1663              		.loc 7 188 0
 1664 000e 234B     		ldr	r3, .L99+8
 1665 0010 0024     		movs	r4, #0
 1666 0012 C3F80845 		str	r4, [r3, #1288]
 189:ROSSerial/ros/node_handle.h ****     index_ = 0;
 1667              		.loc 7 189 0
 1668 0016 C3F80C45 		str	r4, [r3, #1292]
 190:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 1669              		.loc 7 190 0
 1670 001a C3F81445 		str	r4, [r3, #1300]
 191:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 1671              		.loc 7 191 0
 1672 001e C3F81045 		str	r4, [r3, #1296]
 192:ROSSerial/ros/node_handle.h ****   };
 1673              		.loc 7 192 0
 1674 0022 1F48     		ldr	r0, .L99+12
 1675 0024 FFF7FEFF 		bl	puts
 1676              	.LVL210:
 1677              	.LBE162:
 1678              	.LBE161:
 1679              	.LBB165:
 1680              	.LBB166:
  13:ROSSerial/std_msgs/ROSString.h ****   {
 1681              		.loc 5 13 0
 1682 0028 1E4B     		ldr	r3, .L99+16
 1683 002a 0093     		str	r3, [sp]
 1684              	.LVL211:
 1685              	.L96:
 1686              	.LBE166:
 1687              	.LBE165:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 49


 1688              	.LBB167:
 1689              	.LBB168:
 406:ROSSerial/ros/node_handle.h **** 
 407:ROSSerial/ros/node_handle.h ****   /********************************************************************
 408:ROSSerial/ros/node_handle.h ****    * Time functions
 409:ROSSerial/ros/node_handle.h ****    */
 410:ROSSerial/ros/node_handle.h **** 
 411:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 412:ROSSerial/ros/node_handle.h ****   {
 413:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 415:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 416:ROSSerial/ros/node_handle.h ****   }
 417:ROSSerial/ros/node_handle.h **** 
 418:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 419:ROSSerial/ros/node_handle.h ****   {
 420:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 421:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 422:ROSSerial/ros/node_handle.h **** 
 423:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 424:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 425:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 426:ROSSerial/ros/node_handle.h **** 
 427:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 428:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 429:ROSSerial/ros/node_handle.h ****   }
 430:ROSSerial/ros/node_handle.h **** 
 431:ROSSerial/ros/node_handle.h ****   Time now()
 432:ROSSerial/ros/node_handle.h ****   {
 433:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 434:ROSSerial/ros/node_handle.h ****     Time current_time;
 435:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 436:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 437:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 438:ROSSerial/ros/node_handle.h ****     return current_time;
 439:ROSSerial/ros/node_handle.h ****   }
 440:ROSSerial/ros/node_handle.h **** 
 441:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 442:ROSSerial/ros/node_handle.h ****   {
 443:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 444:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 445:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 446:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 447:ROSSerial/ros/node_handle.h ****   }
 448:ROSSerial/ros/node_handle.h **** 
 449:ROSSerial/ros/node_handle.h ****   /********************************************************************
 450:ROSSerial/ros/node_handle.h ****    * Topic Management
 451:ROSSerial/ros/node_handle.h ****    */
 452:ROSSerial/ros/node_handle.h **** 
 453:ROSSerial/ros/node_handle.h ****    /* Register a new publisher without C++ template */
 454:ROSSerial/ros/node_handle.h ****   PublisherType* addPublisher(char * topic_name, Msg * msg)
 455:ROSSerial/ros/node_handle.h ****   {
 456:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 1690              		.loc 7 456 0
 1691 002c 042C     		cmp	r4, #4
 1692 002e 29DC     		bgt	.L94
 457:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 50


 458:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id == 0) {// empty slot}
 1693              		.loc 7 458 0
 1694 0030 04EB8403 		add	r3, r4, r4, lsl #2
 1695 0034 9A00     		lsls	r2, r3, #2
 1696 0036 194B     		ldr	r3, .L99+8
 1697 0038 1344     		add	r3, r3, r2
 1698 003a B3F82C34 		ldrh	r3, [r3, #1068]
 1699 003e 0BB1     		cbz	r3, .L98
 456:ROSSerial/ros/node_handle.h ****     {
 1700              		.loc 7 456 0
 1701 0040 0134     		adds	r4, r4, #1
 1702              	.LVL212:
 1703 0042 F3E7     		b	.L96
 1704              	.L98:
 459:ROSSerial/ros/node_handle.h **** 
 460:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_id = i + 100 + MAX_SUBSCRIBERS;
 1705              		.loc 7 460 0
 1706 0044 04F16902 		add	r2, r4, #105
 1707 0048 144D     		ldr	r5, .L99+8
 1708 004a A700     		lsls	r7, r4, #2
 1709 004c 3B19     		adds	r3, r7, r4
 1710 004e 9E00     		lsls	r6, r3, #2
 1711 0050 2E44     		add	r6, r6, r5
 1712 0052 A6F82C24 		strh	r2, [r6, #1068]	@ movhi
 461:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 1713              		.loc 7 461 0
 1714 0056 144B     		ldr	r3, .L99+20
 1715 0058 C6F83034 		str	r3, [r6, #1072]
 462:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 1716              		.loc 7 462 0
 1717 005c C6F834D4 		str	sp, [r6, #1076]
 463:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 1718              		.loc 7 463 0
 1719 0060 009B     		ldr	r3, [sp]
 1720 0062 9B68     		ldr	r3, [r3, #8]
 1721 0064 6846     		mov	r0, sp
 1722 0066 9847     		blx	r3
 1723              	.LVL213:
 1724 0068 C6F83804 		str	r0, [r6, #1080]
 464:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 1725              		.loc 7 464 0
 1726 006c 009B     		ldr	r3, [sp]
 1727 006e DB68     		ldr	r3, [r3, #12]
 1728 0070 6846     		mov	r0, sp
 1729 0072 9847     		blx	r3
 1730              	.LVL214:
 1731 0074 C6F83C04 		str	r0, [r6, #1084]
 465:ROSSerial/ros/node_handle.h **** 
 466:ROSSerial/ros/node_handle.h ****         return &publishers2[i];
 1732              		.loc 7 466 0
 1733 0078 3C44     		add	r4, r4, r7
 1734              	.LVL215:
 1735 007a A300     		lsls	r3, r4, #2
 1736 007c 03F58563 		add	r3, r3, #1064
 1737 0080 1D44     		add	r5, r5, r3
 1738 0082 0435     		adds	r5, r5, #4
 1739              	.L94:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 51


 1740              	.LVL216:
 1741              	.LBE168:
 1742              	.LBE167:
  28:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &str_msg);
 1743              		.loc 6 28 0
 1744 0084 094B     		ldr	r3, .L99+24
 1745 0086 1D60     		str	r5, [r3]
  31:./Src/ROS_main.cpp ****     rosSubscribeInit(&nh);
 1746              		.loc 6 31 0
 1747 0088 0448     		ldr	r0, .L99+8
 1748 008a FFF7FEFF 		bl	_Z16rosSubscribeInitPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 1749              	.LVL217:
  32:./Src/ROS_main.cpp **** }
 1750              		.loc 6 32 0
 1751 008e 03B0     		add	sp, sp, #12
 1752              	.LCFI13:
 1753              		.cfi_def_cfa_offset 20
 1754              		@ sp needed
 1755 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 1756              	.L100:
 1757 0092 00BF     		.align	2
 1758              	.L99:
 1759 0094 00000000 		.word	byte
 1760 0098 00000000 		.word	huart2
 1761 009c 00000000 		.word	.LANCHOR1
 1762 00a0 00000000 		.word	.LC9
 1763 00a4 08000000 		.word	_ZTVN8std_msgs6StringE+8
 1764 00a8 0C000000 		.word	.LC10
 1765 00ac 00000000 		.word	.LANCHOR2
 1766              		.cfi_endproc
 1767              	.LFE474:
 1768              		.fnend
 1770              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE,"axG"
 1771              		.align	1
 1772              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 1773              		.syntax unified
 1774              		.thumb
 1775              		.thumb_func
 1776              		.fpu fpv4-sp-d16
 1778              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:
 1779              		.fnstart
 1780              	.LFB503:
 467:ROSSerial/ros/node_handle.h ****       }
 468:ROSSerial/ros/node_handle.h ****     }
 469:ROSSerial/ros/node_handle.h ****     return ;
 470:ROSSerial/ros/node_handle.h ****   }
 471:ROSSerial/ros/node_handle.h **** 
 472:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 473:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 474:ROSSerial/ros/node_handle.h ****   {
 475:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 476:ROSSerial/ros/node_handle.h ****     {
 477:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 478:ROSSerial/ros/node_handle.h ****       {
 479:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 480:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 481:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 52


 482:ROSSerial/ros/node_handle.h ****         return true;
 483:ROSSerial/ros/node_handle.h ****       }
 484:ROSSerial/ros/node_handle.h ****     }
 485:ROSSerial/ros/node_handle.h ****     return false;
 486:ROSSerial/ros/node_handle.h ****   }
 487:ROSSerial/ros/node_handle.h **** 
 488:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 489:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 490:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 491:ROSSerial/ros/node_handle.h ****   {
 492:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 493:ROSSerial/ros/node_handle.h ****     {
 494:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 495:ROSSerial/ros/node_handle.h ****       {
 496:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 497:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 498:ROSSerial/ros/node_handle.h ****         return true;
 499:ROSSerial/ros/node_handle.h ****       }
 500:ROSSerial/ros/node_handle.h ****     }
 501:ROSSerial/ros/node_handle.h ****     return false;
 502:ROSSerial/ros/node_handle.h ****   }
 503:ROSSerial/ros/node_handle.h **** 
 504:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 505:ROSSerial/ros/node_handle.h ****   {
 506:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 507:ROSSerial/ros/node_handle.h ****     {
 508:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 509:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 510:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 511:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 512:ROSSerial/ros/node_handle.h ****         printf("Registered %s with id %d\n", \
 513:ROSSerial/ros/node_handle.h ****           subscribers2[i].topic_name,subscribers2[i].topic_id);
 514:ROSSerial/ros/node_handle.h ****         return true;
 515:ROSSerial/ros/node_handle.h ****       }
 516:ROSSerial/ros/node_handle.h ****     }
 517:ROSSerial/ros/node_handle.h ****     return false;
 518:ROSSerial/ros/node_handle.h ****   }
 519:ROSSerial/ros/node_handle.h **** 
 520:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 521:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 522:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 523:ROSSerial/ros/node_handle.h ****   {
 524:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 525:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 526:ROSSerial/ros/node_handle.h ****     {
 527:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 528:ROSSerial/ros/node_handle.h ****       {
 529:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 530:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 531:ROSSerial/ros/node_handle.h ****         return v;
 532:ROSSerial/ros/node_handle.h ****       }
 533:ROSSerial/ros/node_handle.h ****     }
 534:ROSSerial/ros/node_handle.h ****     return false;
 535:ROSSerial/ros/node_handle.h ****   }
 536:ROSSerial/ros/node_handle.h **** 
 537:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 538:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 53


 539:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 540:ROSSerial/ros/node_handle.h ****   {
 541:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 542:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 543:ROSSerial/ros/node_handle.h ****     {
 544:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 545:ROSSerial/ros/node_handle.h ****       {
 546:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 547:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 548:ROSSerial/ros/node_handle.h ****         return v;
 549:ROSSerial/ros/node_handle.h ****       }
 550:ROSSerial/ros/node_handle.h ****     }
 551:ROSSerial/ros/node_handle.h ****     return false;
 552:ROSSerial/ros/node_handle.h ****   }
 553:ROSSerial/ros/node_handle.h **** 
 554:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 555:ROSSerial/ros/node_handle.h ****   {
 556:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 557:ROSSerial/ros/node_handle.h ****     int i;
 558:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 559:ROSSerial/ros/node_handle.h ****     {
 560:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id != 0) // non-empty slot
 561:ROSSerial/ros/node_handle.h ****       {
 562:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers2[i].topic_id;
 563:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 564:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 565:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 566:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 567:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 568:ROSSerial/ros/node_handle.h ****       }
 569:ROSSerial/ros/node_handle.h ****     }
 570:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 571:ROSSerial/ros/node_handle.h ****     {
 572:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 573:ROSSerial/ros/node_handle.h ****       {
 574:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 575:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 576:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 577:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 578:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 579:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 580:ROSSerial/ros/node_handle.h ****       }
 581:ROSSerial/ros/node_handle.h ****     }
 582:ROSSerial/ros/node_handle.h ****     configured_ = true;
 583:ROSSerial/ros/node_handle.h ****   }
 584:ROSSerial/ros/node_handle.h **** 
 585:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 586:ROSSerial/ros/node_handle.h ****   {
 587:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 588:ROSSerial/ros/node_handle.h ****   }
 589:ROSSerial/ros/node_handle.h **** 
 590:ROSSerial/ros/node_handle.h ****   int publish1(int id, Msg * msg)
 1781              		.loc 7 590 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 16
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              	.LVL218:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 54


 1786 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1787              		.save {r4, r5, r6, r7, lr}
 1788              	.LCFI14:
 1789              		.cfi_def_cfa_offset 20
 1790              		.cfi_offset 4, -20
 1791              		.cfi_offset 5, -16
 1792              		.cfi_offset 6, -12
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795              		.pad #20
 1796 0002 85B0     		sub	sp, sp, #20
 1797              	.LCFI15:
 1798              		.cfi_def_cfa_offset 40
 591:ROSSerial/ros/node_handle.h ****   {
 592:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %d\n",id);
 593:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 1799              		.loc 7 593 0
 1800 0004 6329     		cmp	r1, #99
 1801 0006 03DD     		ble	.L102
 1802              		.loc 7 593 0 is_stmt 0 discriminator 1
 1803 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 1804 000c 002B     		cmp	r3, #0
 1805 000e 6DD0     		beq	.L108
 1806              	.L102:
 1807 0010 1646     		mov	r6, r2
 1808 0012 0D46     		mov	r5, r1
 1809 0014 0446     		mov	r4, r0
 594:ROSSerial/ros/node_handle.h ****       return 0;
 595:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 596:ROSSerial/ros/node_handle.h ****     /* serialize message */
 597:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 1810              		.loc 7 597 0 is_stmt 1
 1811 0016 1368     		ldr	r3, [r2]
 1812 0018 1B68     		ldr	r3, [r3]
 1813 001a 00F21F21 		addw	r1, r0, #543
 1814              	.LVL219:
 1815 001e 1046     		mov	r0, r2
 1816              	.LVL220:
 1817 0020 9847     		blx	r3
 1818              	.LVL221:
 598:ROSSerial/ros/node_handle.h **** 
 599:ROSSerial/ros/node_handle.h ****     /* setup the header */
 600:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 1819              		.loc 7 600 0
 1820 0022 FF23     		movs	r3, #255
 1821 0024 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 1822              		.loc 7 601 0
 1823 0028 FE23     		movs	r3, #254
 1824 002a 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 1825              		.loc 7 602 0
 1826 002e C3B2     		uxtb	r3, r0
 1827 0030 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 1828              		.loc 7 603 0
 1829 0034 C0F30722 		ubfx	r2, r0, #8, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 55


 1830 0038 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 1831              		.loc 7 604 0
 1832 003c 1344     		add	r3, r3, r2
 1833 003e DBB2     		uxtb	r3, r3
 1834 0040 DB43     		mvns	r3, r3
 1835 0042 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 1836              		.loc 7 605 0
 1837 0046 84F81D52 		strb	r5, [r4, #541]
 606:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 1838              		.loc 7 606 0
 1839 004a 45F30721 		sbfx	r1, r5, #8, #8
 1840 004e 84F81E12 		strb	r1, [r4, #542]
 1841              	.LVL222:
 1842              	.LBB185:
 607:ROSSerial/ros/node_handle.h **** 
 608:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 609:ROSSerial/ros/node_handle.h ****     int chk = 0;
 610:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1843              		.loc 7 610 0
 1844 0052 0523     		movs	r3, #5
 1845              	.LBE185:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 1846              		.loc 7 609 0
 1847 0054 0025     		movs	r5, #0
 1848              	.LVL223:
 1849              	.L105:
 1850              	.LBB186:
 1851              		.loc 7 610 0 discriminator 3
 1852 0056 C11D     		adds	r1, r0, #7
 1853 0058 9942     		cmp	r1, r3
 1854 005a 05DD     		ble	.L104
 611:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1855              		.loc 7 611 0 discriminator 2
 1856 005c E218     		adds	r2, r4, r3
 1857 005e 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 1858 0062 1544     		add	r5, r5, r2
 1859              	.LVL224:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 1860              		.loc 7 610 0 discriminator 2
 1861 0064 0133     		adds	r3, r3, #1
 1862              	.LVL225:
 1863 0066 F6E7     		b	.L105
 1864              	.L104:
 1865              	.LVL226:
 1866              	.LBE186:
 612:ROSSerial/ros/node_handle.h ****     l += 7;
 613:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 1867              		.loc 7 613 0
 1868 0068 6B42     		rsbs	r3, r5, #0
 1869              	.LVL227:
 1870 006a EDB2     		uxtb	r5, r5
 1871              	.LVL228:
 1872 006c DBB2     		uxtb	r3, r3
 1873 006e 58BF     		it	pl
 1874 0070 5D42     		rsbpl	r5, r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 56


 1875 0072 00F10807 		add	r7, r0, #8
 1876              	.LVL229:
 1877 0076 ED43     		mvns	r5, r5
 1878 0078 2144     		add	r1, r1, r4
 1879 007a 81F81852 		strb	r5, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 1880              		.loc 7 614 0
 1881 007e 3368     		ldr	r3, [r6]
 1882 0080 9B68     		ldr	r3, [r3, #8]
 1883 0082 3046     		mov	r0, r6
 1884 0084 9847     		blx	r3
 1885              	.LVL230:
 1886 0086 3A46     		mov	r2, r7
 1887 0088 0146     		mov	r1, r0
 1888 008a 1948     		ldr	r0, .L111
 1889 008c FFF7FEFF 		bl	printf
 1890              	.LVL231:
 615:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 1891              		.loc 7 615 0
 1892 0090 B7F5007F 		cmp	r7, #512
 1893 0094 1BDC     		bgt	.L106
 616:ROSSerial/ros/node_handle.h ****     {
 617:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 1894              		.loc 7 617 0
 1895 0096 04F50674 		add	r4, r4, #536
 1896              	.LVL232:
 1897              	.LBB187:
 1898              	.LBB188:
  66:ROSSerial/AT32hardware.h **** 		{
  67:ROSSerial/AT32hardware.h **** 			return -1;
  68:ROSSerial/AT32hardware.h **** 		}
  69:ROSSerial/AT32hardware.h **** 	}
  70:ROSSerial/AT32hardware.h **** 
  71:ROSSerial/AT32hardware.h **** 	/*
  72:ROSSerial/AT32hardware.h ****      * Method: read
  73:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  74:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  75:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  76:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  77:ROSSerial/AT32hardware.h **** 	 */
  78:ROSSerial/AT32hardware.h **** 	int read(void)
  79:ROSSerial/AT32hardware.h **** 	{
  80:ROSSerial/AT32hardware.h **** 		int ucData = -1;
  81:ROSSerial/AT32hardware.h **** 		
  82:ROSSerial/AT32hardware.h **** 		if(g_RxRead < g_RxWritten)
  83:ROSSerial/AT32hardware.h **** 		{
  84:ROSSerial/AT32hardware.h **** 			ucData = g_RxBuf[g_RxRead++];
  85:ROSSerial/AT32hardware.h **** 		}
  86:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE &&  g_RxRead == g_RxWritten )
  87:ROSSerial/AT32hardware.h **** 		{
  88:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
  89:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
  90:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
  91:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
  92:ROSSerial/AT32hardware.h **** 		}
  93:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE && g_RxWritten > g_RxRead)
  94:ROSSerial/AT32hardware.h **** 		{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 57


  95:ROSSerial/AT32hardware.h **** 			printf("How did this happen? %d %d\n",g_RxRead,g_RxWritten);
  96:ROSSerial/AT32hardware.h **** 		}
  97:ROSSerial/AT32hardware.h **** 		
  98:ROSSerial/AT32hardware.h **** 		
  99:ROSSerial/AT32hardware.h **** 		if(g_RxRead == RX_BUF_SIZE )
 100:ROSSerial/AT32hardware.h **** 		{
 101:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
 102:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 103:ROSSerial/AT32hardware.h **** 			//Enable the interrupt so we can read again.
 104:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 105:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 106:ROSSerial/AT32hardware.h **** 		}
 107:ROSSerial/AT32hardware.h **** 		return ucData;
 108:ROSSerial/AT32hardware.h **** 	}
 109:ROSSerial/AT32hardware.h **** 
 110:ROSSerial/AT32hardware.h **** 	/*
 111:ROSSerial/AT32hardware.h **** 	 * Method: write
 112:ROSSerial/AT32hardware.h ****      * ----------------------------
 113:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
 114:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
 115:ROSSerial/AT32hardware.h **** 	 *   returns: none
 116:ROSSerial/AT32hardware.h **** 	 */
 117:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
 118:ROSSerial/AT32hardware.h **** 	{
 119:ROSSerial/AT32hardware.h **** 		//comSendBuf(COM2,data,length);
 120:ROSSerial/AT32hardware.h **** 		printf("printing %d\n",length);
 1899              		.loc 8 120 0
 1900 009a 3946     		mov	r1, r7
 1901 009c 1548     		ldr	r0, .L111+4
 1902 009e FFF7FEFF 		bl	printf
 1903              	.LVL233:
 121:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 1904              		.loc 8 121 0
 1905 00a2 0A23     		movs	r3, #10
 1906 00a4 BAB2     		uxth	r2, r7
 1907 00a6 2146     		mov	r1, r4
 1908 00a8 1348     		ldr	r0, .L111+8
 1909 00aa FFF7FEFF 		bl	HAL_UART_Transmit
 1910              	.LVL234:
 122:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 1911              		.loc 8 122 0
 1912 00ae 0328     		cmp	r0, #3
 1913 00b0 07D0     		beq	.L110
 123:ROSSerial/AT32hardware.h **** 		{
 124:ROSSerial/AT32hardware.h **** 			printf("timeout %d - %s\n",length, data);
 125:ROSSerial/AT32hardware.h **** 		}
 126:ROSSerial/AT32hardware.h **** 		else
 127:ROSSerial/AT32hardware.h **** 		{
 128:ROSSerial/AT32hardware.h **** 			printf("done %d - %s\n",length, data);
 1914              		.loc 8 128 0
 1915 00b2 2246     		mov	r2, r4
 1916 00b4 3946     		mov	r1, r7
 1917 00b6 1148     		ldr	r0, .L111+12
 1918              	.LVL235:
 1919 00b8 FFF7FEFF 		bl	printf
 1920              	.LVL236:
 1921              	.L101:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 58


 1922              	.LBE188:
 1923              	.LBE187:
 618:ROSSerial/ros/node_handle.h ****       return l;
 619:ROSSerial/ros/node_handle.h ****     }
 620:ROSSerial/ros/node_handle.h ****     else
 621:ROSSerial/ros/node_handle.h ****     {
 622:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 623:ROSSerial/ros/node_handle.h ****       return -1;
 624:ROSSerial/ros/node_handle.h ****     }
 625:ROSSerial/ros/node_handle.h ****   }
 1924              		.loc 7 625 0
 1925 00bc 3846     		mov	r0, r7
 1926 00be 05B0     		add	sp, sp, #20
 1927              	.LCFI16:
 1928              		.cfi_remember_state
 1929              		.cfi_def_cfa_offset 20
 1930              		@ sp needed
 1931 00c0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1932              	.LVL237:
 1933              	.L110:
 1934              	.LCFI17:
 1935              		.cfi_restore_state
 1936              	.LBB190:
 1937              	.LBB189:
 124:ROSSerial/AT32hardware.h **** 		}
 1938              		.loc 8 124 0
 1939 00c2 2246     		mov	r2, r4
 1940 00c4 3946     		mov	r1, r7
 1941 00c6 0E48     		ldr	r0, .L111+16
 1942              	.LVL238:
 1943 00c8 FFF7FEFF 		bl	printf
 1944              	.LVL239:
 1945 00cc F6E7     		b	.L101
 1946              	.LVL240:
 1947              	.L106:
 1948              	.LBE189:
 1949              	.LBE190:
 1950              	.LBB191:
 1951              	.LBB192:
 1952              	.LBB193:
 1953              	.LBB194:
 1954              	.LBB195:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 1955              		.loc 3 13 0
 1956 00ce 0D4B     		ldr	r3, .L111+20
 1957 00d0 0193     		str	r3, [sp, #4]
 1958              	.LVL241:
 1959              	.LBE195:
 1960              	.LBE194:
 626:ROSSerial/ros/node_handle.h **** 
 627:ROSSerial/ros/node_handle.h ****   /********************************************************************
 628:ROSSerial/ros/node_handle.h ****    * Logging
 629:ROSSerial/ros/node_handle.h ****    */
 630:ROSSerial/ros/node_handle.h **** 
 631:ROSSerial/ros/node_handle.h **** private:
 632:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 633:ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 59


 634:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 635:ROSSerial/ros/node_handle.h ****     l.level = byte;
 1961              		.loc 7 635 0
 1962 00d2 0323     		movs	r3, #3
 1963 00d4 8DF80830 		strb	r3, [sp, #8]
 636:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 1964              		.loc 7 636 0
 1965 00d8 0B4B     		ldr	r3, .L111+24
 1966 00da 0393     		str	r3, [sp, #12]
 637:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1967              		.loc 7 637 0
 1968 00dc 01AA     		add	r2, sp, #4
 1969 00de 0721     		movs	r1, #7
 1970 00e0 2046     		mov	r0, r4
 1971 00e2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 1972              	.LVL242:
 1973              	.LBE193:
 1974              	.LBE192:
 1975              	.LBE191:
 623:ROSSerial/ros/node_handle.h ****     }
 1976              		.loc 7 623 0
 1977 00e6 4FF0FF37 		mov	r7, #-1
 1978              	.LVL243:
 1979 00ea E7E7     		b	.L101
 1980              	.LVL244:
 1981              	.L108:
 594:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 1982              		.loc 7 594 0
 1983 00ec 0027     		movs	r7, #0
 1984 00ee E5E7     		b	.L101
 1985              	.L112:
 1986              		.align	2
 1987              	.L111:
 1988 00f0 00000000 		.word	.LC11
 1989 00f4 24000000 		.word	.LC12
 1990 00f8 00000000 		.word	huart2
 1991 00fc 48000000 		.word	.LC14
 1992 0100 34000000 		.word	.LC13
 1993 0104 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 1994 0108 58000000 		.word	.LC15
 1995              		.cfi_endproc
 1996              	.LFE503:
 1997              		.fnend
 1999              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 2000              		.align	1
 2001              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2005              		.fpu fpv4-sp-d16
 2007              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 2008              		.fnstart
 2009              	.LFB511:
 585:ROSSerial/ros/node_handle.h ****   {
 2010              		.loc 7 585 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 60


 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014              	.LVL245:
 2015 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2016              		.save {r4, r5, r6, r7, lr}
 2017              	.LCFI18:
 2018              		.cfi_def_cfa_offset 20
 2019              		.cfi_offset 4, -20
 2020              		.cfi_offset 5, -16
 2021              		.cfi_offset 6, -12
 2022              		.cfi_offset 7, -8
 2023              		.cfi_offset 14, -4
 2024              		.pad #28
 2025 0002 87B0     		sub	sp, sp, #28
 2026              	.LCFI19:
 2027              		.cfi_def_cfa_offset 48
 2028              	.LVL246:
 2029              	.LBB218:
 2030              	.LBB219:
 593:ROSSerial/ros/node_handle.h ****       return 0;
 2031              		.loc 7 593 0
 2032 0004 6329     		cmp	r1, #99
 2033 0006 04DD     		ble	.L114
 2034 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 2035 000c 002B     		cmp	r3, #0
 2036 000e 00F0CE80 		beq	.L125
 2037              	.L114:
 2038 0012 1646     		mov	r6, r2
 2039 0014 0D46     		mov	r5, r1
 2040 0016 0446     		mov	r4, r0
 597:ROSSerial/ros/node_handle.h **** 
 2041              		.loc 7 597 0
 2042 0018 1368     		ldr	r3, [r2]
 2043 001a 1B68     		ldr	r3, [r3]
 2044 001c 00F21F21 		addw	r1, r0, #543
 2045              	.LVL247:
 2046 0020 1046     		mov	r0, r2
 2047              	.LVL248:
 2048 0022 9847     		blx	r3
 2049              	.LVL249:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2050              		.loc 7 600 0
 2051 0024 FF23     		movs	r3, #255
 2052 0026 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2053              		.loc 7 601 0
 2054 002a FE23     		movs	r3, #254
 2055 002c 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2056              		.loc 7 602 0
 2057 0030 C3B2     		uxtb	r3, r0
 2058 0032 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2059              		.loc 7 603 0
 2060 0036 C0F30722 		ubfx	r2, r0, #8, #8
 2061 003a 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2062              		.loc 7 604 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 61


 2063 003e 1344     		add	r3, r3, r2
 2064 0040 DBB2     		uxtb	r3, r3
 2065 0042 DB43     		mvns	r3, r3
 2066 0044 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2067              		.loc 7 605 0
 2068 0048 84F81D52 		strb	r5, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 2069              		.loc 7 606 0
 2070 004c 45F30721 		sbfx	r1, r5, #8, #8
 2071 0050 84F81E12 		strb	r1, [r4, #542]
 2072              	.LVL250:
 2073              	.LBB220:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2074              		.loc 7 610 0
 2075 0054 0523     		movs	r3, #5
 2076              	.LBE220:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2077              		.loc 7 609 0
 2078 0056 0025     		movs	r5, #0
 2079              	.LVL251:
 2080              	.L117:
 2081              	.LBB221:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2082              		.loc 7 610 0
 2083 0058 C11D     		adds	r1, r0, #7
 2084 005a 9942     		cmp	r1, r3
 2085 005c 05DD     		ble	.L116
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 2086              		.loc 7 611 0
 2087 005e E218     		adds	r2, r4, r3
 2088 0060 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 2089 0064 1544     		add	r5, r5, r2
 2090              	.LVL252:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2091              		.loc 7 610 0
 2092 0066 0133     		adds	r3, r3, #1
 2093              	.LVL253:
 2094 0068 F6E7     		b	.L117
 2095              	.L116:
 2096              	.LVL254:
 2097              	.LBE221:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 2098              		.loc 7 613 0
 2099 006a 6B42     		rsbs	r3, r5, #0
 2100              	.LVL255:
 2101 006c EDB2     		uxtb	r5, r5
 2102              	.LVL256:
 2103 006e DBB2     		uxtb	r3, r3
 2104 0070 58BF     		it	pl
 2105 0072 5D42     		rsbpl	r5, r3, #0
 2106 0074 00F10807 		add	r7, r0, #8
 2107              	.LVL257:
 2108 0078 ED43     		mvns	r5, r5
 2109 007a 2144     		add	r1, r1, r4
 2110 007c 81F81852 		strb	r5, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 62


 2111              		.loc 7 614 0
 2112 0080 3368     		ldr	r3, [r6]
 2113 0082 9B68     		ldr	r3, [r3, #8]
 2114 0084 3046     		mov	r0, r6
 2115 0086 9847     		blx	r3
 2116              	.LVL258:
 2117 0088 3A46     		mov	r2, r7
 2118 008a 0146     		mov	r1, r0
 2119 008c 4948     		ldr	r0, .L129
 2120 008e FFF7FEFF 		bl	printf
 2121              	.LVL259:
 615:ROSSerial/ros/node_handle.h ****     {
 2122              		.loc 7 615 0
 2123 0092 B7F5007F 		cmp	r7, #512
 2124 0096 1BDC     		bgt	.L118
 617:ROSSerial/ros/node_handle.h ****       return l;
 2125              		.loc 7 617 0
 2126 0098 04F50674 		add	r4, r4, #536
 2127              	.LVL260:
 2128              	.LBB222:
 2129              	.LBB223:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 2130              		.loc 8 120 0
 2131 009c 3946     		mov	r1, r7
 2132 009e 4648     		ldr	r0, .L129+4
 2133 00a0 FFF7FEFF 		bl	printf
 2134              	.LVL261:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 2135              		.loc 8 121 0
 2136 00a4 0A23     		movs	r3, #10
 2137 00a6 BAB2     		uxth	r2, r7
 2138 00a8 2146     		mov	r1, r4
 2139 00aa 4448     		ldr	r0, .L129+8
 2140 00ac FFF7FEFF 		bl	HAL_UART_Transmit
 2141              	.LVL262:
 122:ROSSerial/AT32hardware.h **** 		{
 2142              		.loc 8 122 0
 2143 00b0 0328     		cmp	r0, #3
 2144 00b2 07D0     		beq	.L127
 2145              		.loc 8 128 0
 2146 00b4 2246     		mov	r2, r4
 2147 00b6 3946     		mov	r1, r7
 2148 00b8 4148     		ldr	r0, .L129+12
 2149              	.LVL263:
 2150 00ba FFF7FEFF 		bl	printf
 2151              	.LVL264:
 2152              	.L113:
 2153              	.LBE223:
 2154              	.LBE222:
 2155              	.LBE219:
 2156              	.LBE218:
 588:ROSSerial/ros/node_handle.h **** 
 2157              		.loc 7 588 0
 2158 00be 3846     		mov	r0, r7
 2159 00c0 07B0     		add	sp, sp, #28
 2160              	.LCFI20:
 2161              		.cfi_remember_state
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 63


 2162              		.cfi_def_cfa_offset 20
 2163              		@ sp needed
 2164 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 2165              	.LVL265:
 2166              	.L127:
 2167              	.LCFI21:
 2168              		.cfi_restore_state
 2169              	.LBB249:
 2170              	.LBB248:
 2171              	.LBB225:
 2172              	.LBB224:
 124:ROSSerial/AT32hardware.h **** 		}
 2173              		.loc 8 124 0
 2174 00c4 2246     		mov	r2, r4
 2175 00c6 3946     		mov	r1, r7
 2176 00c8 3E48     		ldr	r0, .L129+16
 2177              	.LVL266:
 2178 00ca FFF7FEFF 		bl	printf
 2179              	.LVL267:
 2180 00ce F6E7     		b	.L113
 2181              	.LVL268:
 2182              	.L118:
 2183              	.LBE224:
 2184              	.LBE225:
 2185              	.LBB226:
 2186              	.LBB227:
 2187              	.LBB228:
 2188              	.LBB229:
 2189              	.LBB230:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2190              		.loc 3 13 0
 2191 00d0 3D4B     		ldr	r3, .L129+20
 2192 00d2 0093     		str	r3, [sp]
 2193              	.LVL269:
 2194              	.LBE230:
 2195              	.LBE229:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2196              		.loc 7 635 0
 2197 00d4 0322     		movs	r2, #3
 2198 00d6 8DF80420 		strb	r2, [sp, #4]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2199              		.loc 7 636 0
 2200 00da 3C4A     		ldr	r2, .L129+24
 2201 00dc 0292     		str	r2, [sp, #8]
 2202              	.LVL270:
 2203              	.LBB231:
 2204              	.LBB232:
 597:ROSSerial/ros/node_handle.h **** 
 2205              		.loc 7 597 0
 2206 00de 1B68     		ldr	r3, [r3]
 2207 00e0 04F21F21 		addw	r1, r4, #543
 2208 00e4 6846     		mov	r0, sp
 2209 00e6 9847     		blx	r3
 2210              	.LVL271:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2211              		.loc 7 600 0
 2212 00e8 FF23     		movs	r3, #255
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 64


 2213 00ea 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2214              		.loc 7 601 0
 2215 00ee FE23     		movs	r3, #254
 2216 00f0 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2217              		.loc 7 602 0
 2218 00f4 C3B2     		uxtb	r3, r0
 2219 00f6 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2220              		.loc 7 603 0
 2221 00fa C0F30722 		ubfx	r2, r0, #8, #8
 2222 00fe 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2223              		.loc 7 604 0
 2224 0102 1344     		add	r3, r3, r2
 2225 0104 DBB2     		uxtb	r3, r3
 2226 0106 DB43     		mvns	r3, r3
 2227 0108 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2228              		.loc 7 605 0
 2229 010c 0723     		movs	r3, #7
 2230 010e 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 2231              		.loc 7 606 0
 2232 0112 0023     		movs	r3, #0
 2233 0114 84F81E32 		strb	r3, [r4, #542]
 2234              	.LVL272:
 2235              	.LBB233:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2236              		.loc 7 610 0
 2237 0118 0522     		movs	r2, #5
 2238              	.LVL273:
 2239              	.L121:
 2240 011a C11D     		adds	r1, r0, #7
 2241 011c 9142     		cmp	r1, r2
 2242 011e 05DD     		ble	.L120
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 2243              		.loc 7 611 0
 2244 0120 A118     		adds	r1, r4, r2
 2245 0122 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2246 0126 0B44     		add	r3, r3, r1
 2247              	.LVL274:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2248              		.loc 7 610 0
 2249 0128 0132     		adds	r2, r2, #1
 2250              	.LVL275:
 2251 012a F6E7     		b	.L121
 2252              	.L120:
 2253              	.LVL276:
 2254              	.LBE233:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 2255              		.loc 7 613 0
 2256 012c 5A42     		rsbs	r2, r3, #0
 2257              	.LVL277:
 2258 012e DBB2     		uxtb	r3, r3
 2259              	.LVL278:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 65


 2260 0130 D2B2     		uxtb	r2, r2
 2261 0132 58BF     		it	pl
 2262 0134 5342     		rsbpl	r3, r2, #0
 2263 0136 00F10805 		add	r5, r0, #8
 2264              	.LVL279:
 2265 013a DB43     		mvns	r3, r3
 2266 013c 2144     		add	r1, r1, r4
 2267 013e 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 2268              		.loc 7 614 0
 2269 0142 06A8     		add	r0, sp, #24
 2270 0144 50F8183D 		ldr	r3, [r0, #-24]!
 2271 0148 9B68     		ldr	r3, [r3, #8]
 2272 014a 9847     		blx	r3
 2273              	.LVL280:
 2274 014c 2A46     		mov	r2, r5
 2275 014e 0146     		mov	r1, r0
 2276 0150 1848     		ldr	r0, .L129
 2277 0152 FFF7FEFF 		bl	printf
 2278              	.LVL281:
 615:ROSSerial/ros/node_handle.h ****     {
 2279              		.loc 7 615 0
 2280 0156 B5F5007F 		cmp	r5, #512
 2281 015a 1BDC     		bgt	.L122
 617:ROSSerial/ros/node_handle.h ****       return l;
 2282              		.loc 7 617 0
 2283 015c 04F50674 		add	r4, r4, #536
 2284              	.LVL282:
 2285              	.LBB234:
 2286              	.LBB235:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 2287              		.loc 8 120 0
 2288 0160 2946     		mov	r1, r5
 2289 0162 1548     		ldr	r0, .L129+4
 2290 0164 FFF7FEFF 		bl	printf
 2291              	.LVL283:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 2292              		.loc 8 121 0
 2293 0168 0A23     		movs	r3, #10
 2294 016a AAB2     		uxth	r2, r5
 2295 016c 2146     		mov	r1, r4
 2296 016e 1348     		ldr	r0, .L129+8
 2297 0170 FFF7FEFF 		bl	HAL_UART_Transmit
 2298              	.LVL284:
 122:ROSSerial/AT32hardware.h **** 		{
 2299              		.loc 8 122 0
 2300 0174 0328     		cmp	r0, #3
 2301 0176 07D0     		beq	.L128
 2302              		.loc 8 128 0
 2303 0178 2246     		mov	r2, r4
 2304 017a 2946     		mov	r1, r5
 2305 017c 1048     		ldr	r0, .L129+12
 2306              	.LVL285:
 2307 017e FFF7FEFF 		bl	printf
 2308              	.LVL286:
 2309              	.L124:
 2310              	.LBE235:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 66


 2311              	.LBE234:
 2312              	.LBE232:
 2313              	.LBE231:
 2314              	.LBE228:
 2315              	.LBE227:
 2316              	.LBE226:
 623:ROSSerial/ros/node_handle.h ****     }
 2317              		.loc 7 623 0
 2318 0182 4FF0FF37 		mov	r7, #-1
 2319              	.LVL287:
 2320 0186 9AE7     		b	.L113
 2321              	.LVL288:
 2322              	.L128:
 2323              	.LBB247:
 2324              	.LBB246:
 2325              	.LBB245:
 2326              	.LBB244:
 2327              	.LBB243:
 2328              	.LBB237:
 2329              	.LBB236:
 124:ROSSerial/AT32hardware.h **** 		}
 2330              		.loc 8 124 0
 2331 0188 2246     		mov	r2, r4
 2332 018a 2946     		mov	r1, r5
 2333 018c 0D48     		ldr	r0, .L129+16
 2334              	.LVL289:
 2335 018e FFF7FEFF 		bl	printf
 2336              	.LVL290:
 2337 0192 F6E7     		b	.L124
 2338              	.LVL291:
 2339              	.L122:
 2340              	.LBE236:
 2341              	.LBE237:
 2342              	.LBB238:
 2343              	.LBB239:
 2344              	.LBB240:
 2345              	.LBB241:
 2346              	.LBB242:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2347              		.loc 3 13 0
 2348 0194 0C4B     		ldr	r3, .L129+20
 2349 0196 0393     		str	r3, [sp, #12]
 2350              	.LVL292:
 2351              	.LBE242:
 2352              	.LBE241:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2353              		.loc 7 635 0
 2354 0198 0323     		movs	r3, #3
 2355 019a 8DF81030 		strb	r3, [sp, #16]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2356              		.loc 7 636 0
 2357 019e 0B4B     		ldr	r3, .L129+24
 2358 01a0 0593     		str	r3, [sp, #20]
 2359              		.loc 7 637 0
 2360 01a2 03AA     		add	r2, sp, #12
 2361 01a4 0721     		movs	r1, #7
 2362 01a6 2046     		mov	r0, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 67


 2363 01a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 2364              	.LVL293:
 2365 01ac E9E7     		b	.L124
 2366              	.LVL294:
 2367              	.L125:
 2368              	.LBE240:
 2369              	.LBE239:
 2370              	.LBE238:
 2371              	.LBE243:
 2372              	.LBE244:
 2373              	.LBE245:
 2374              	.LBE246:
 2375              	.LBE247:
 594:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 2376              		.loc 7 594 0
 2377 01ae 0027     		movs	r7, #0
 2378              	.LVL295:
 2379              	.LBE248:
 2380              	.LBE249:
 587:ROSSerial/ros/node_handle.h ****   }
 2381              		.loc 7 587 0
 2382 01b0 85E7     		b	.L113
 2383              	.L130:
 2384 01b2 00BF     		.align	2
 2385              	.L129:
 2386 01b4 00000000 		.word	.LC11
 2387 01b8 24000000 		.word	.LC12
 2388 01bc 00000000 		.word	huart2
 2389 01c0 48000000 		.word	.LC14
 2390 01c4 34000000 		.word	.LC13
 2391 01c8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2392 01cc 58000000 		.word	.LC15
 2393              		.cfi_endproc
 2394              	.LFE511:
 2395              		.fnend
 2397              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 2398              		.align	1
 2399              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2403              		.fpu fpv4-sp-d16
 2405              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 2406              		.fnstart
 2407              	.LFB494:
 411:ROSSerial/ros/node_handle.h ****   {
 2408              		.loc 7 411 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 40
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              	.LVL296:
 2413 0000 70B5     		push	{r4, r5, r6, lr}
 2414              		.save {r4, r5, r6, lr}
 2415              	.LCFI22:
 2416              		.cfi_def_cfa_offset 16
 2417              		.cfi_offset 4, -16
 2418              		.cfi_offset 5, -12
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 68


 2419              		.cfi_offset 6, -8
 2420              		.cfi_offset 14, -4
 2421              		.pad #40
 2422 0002 8AB0     		sub	sp, sp, #40
 2423              	.LCFI23:
 2424              		.cfi_def_cfa_offset 56
 2425 0004 0646     		mov	r6, r0
 2426              	.LVL297:
 2427              	.LBB288:
 2428              	.LBB289:
  14:ROSSerial/std_msgs/Time.h ****   {
 2429              		.loc 1 14 0
 2430 0006 674B     		ldr	r3, .L145
 2431 0008 0793     		str	r3, [sp, #28]
 2432              	.LVL298:
 2433              	.LBB290:
 2434              	.LBB291:
 2435              	.LBB292:
 2436              		.file 9 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 69


  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 2437              		.loc 9 51 0
 2438 000a 0024     		movs	r4, #0
 2439 000c 0894     		str	r4, [sp, #32]
 2440 000e 0994     		str	r4, [sp, #36]
 2441              	.LVL299:
 2442              	.LBE292:
 2443              	.LBE291:
 2444              	.LBE290:
 2445              	.LBE289:
 2446              	.LBE288:
 2447              	.LBB293:
 2448              	.LBB294:
 597:ROSSerial/ros/node_handle.h **** 
 2449              		.loc 7 597 0
 2450 0010 1B68     		ldr	r3, [r3]
 2451 0012 00F21F21 		addw	r1, r0, #543
 2452 0016 07A8     		add	r0, sp, #28
 2453              	.LVL300:
 2454 0018 9847     		blx	r3
 2455              	.LVL301:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2456              		.loc 7 600 0
 2457 001a FF23     		movs	r3, #255
 2458 001c 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2459              		.loc 7 601 0
 2460 0020 FE23     		movs	r3, #254
 2461 0022 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2462              		.loc 7 602 0
 2463 0026 C3B2     		uxtb	r3, r0
 2464 0028 86F81A32 		strb	r3, [r6, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2465              		.loc 7 603 0
 2466 002c C0F30722 		ubfx	r2, r0, #8, #8
 2467 0030 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2468              		.loc 7 604 0
 2469 0034 1344     		add	r3, r3, r2
 2470 0036 DBB2     		uxtb	r3, r3
 2471 0038 DB43     		mvns	r3, r3
 2472 003a 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2473              		.loc 7 605 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 70


 2474 003e 0A23     		movs	r3, #10
 2475 0040 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 2476              		.loc 7 606 0
 2477 0044 86F81E42 		strb	r4, [r6, #542]
 2478              	.LVL302:
 2479              	.LBB295:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2480              		.loc 7 610 0
 2481 0048 0525     		movs	r5, #5
 2482              	.LBE295:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 2483              		.loc 7 609 0
 2484 004a 2346     		mov	r3, r4
 2485              	.LVL303:
 2486              	.L133:
 2487              	.LBB296:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2488              		.loc 7 610 0
 2489 004c C21D     		adds	r2, r0, #7
 2490 004e AA42     		cmp	r2, r5
 2491 0050 05DD     		ble	.L132
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 2492              		.loc 7 611 0
 2493 0052 7219     		adds	r2, r6, r5
 2494 0054 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 2495 0058 1344     		add	r3, r3, r2
 2496              	.LVL304:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2497              		.loc 7 610 0
 2498 005a 0135     		adds	r5, r5, #1
 2499              	.LVL305:
 2500 005c F6E7     		b	.L133
 2501              	.L132:
 2502              	.LVL306:
 2503              	.LBE296:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 2504              		.loc 7 613 0
 2505 005e 5942     		rsbs	r1, r3, #0
 2506 0060 DBB2     		uxtb	r3, r3
 2507              	.LVL307:
 2508 0062 C9B2     		uxtb	r1, r1
 2509 0064 58BF     		it	pl
 2510 0066 4B42     		rsbpl	r3, r1, #0
 2511 0068 00F10804 		add	r4, r0, #8
 2512              	.LVL308:
 2513 006c DB43     		mvns	r3, r3
 2514 006e 3244     		add	r2, r2, r6
 2515 0070 82F81832 		strb	r3, [r2, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 2516              		.loc 7 614 0
 2517 0074 0AA8     		add	r0, sp, #40
 2518 0076 50F80C3D 		ldr	r3, [r0, #-12]!
 2519 007a 9B68     		ldr	r3, [r3, #8]
 2520 007c 9847     		blx	r3
 2521              	.LVL309:
 2522 007e 2246     		mov	r2, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 71


 2523 0080 0146     		mov	r1, r0
 2524 0082 4948     		ldr	r0, .L145+4
 2525 0084 FFF7FEFF 		bl	printf
 2526              	.LVL310:
 615:ROSSerial/ros/node_handle.h ****     {
 2527              		.loc 7 615 0
 2528 0088 B4F5007F 		cmp	r4, #512
 2529 008c 1DDC     		bgt	.L134
 617:ROSSerial/ros/node_handle.h ****       return l;
 2530              		.loc 7 617 0
 2531 008e 06F50675 		add	r5, r6, #536
 2532              	.LVL311:
 2533              	.LBB297:
 2534              	.LBB298:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 2535              		.loc 8 120 0
 2536 0092 2146     		mov	r1, r4
 2537 0094 4548     		ldr	r0, .L145+8
 2538 0096 FFF7FEFF 		bl	printf
 2539              	.LVL312:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 2540              		.loc 8 121 0
 2541 009a 0A23     		movs	r3, #10
 2542 009c A2B2     		uxth	r2, r4
 2543 009e 2946     		mov	r1, r5
 2544 00a0 4348     		ldr	r0, .L145+12
 2545 00a2 FFF7FEFF 		bl	HAL_UART_Transmit
 2546              	.LVL313:
 122:ROSSerial/AT32hardware.h **** 		{
 2547              		.loc 8 122 0
 2548 00a6 0328     		cmp	r0, #3
 2549 00a8 09D0     		beq	.L143
 2550              		.loc 8 128 0
 2551 00aa 2A46     		mov	r2, r5
 2552 00ac 2146     		mov	r1, r4
 2553 00ae 4148     		ldr	r0, .L145+16
 2554              	.LVL314:
 2555 00b0 FFF7FEFF 		bl	printf
 2556              	.LVL315:
 2557              	.L136:
 2558              	.LBE298:
 2559              	.LBE297:
 2560              	.LBE294:
 2561              	.LBE293:
 2562              	.LBB317:
 2563              	.LBB318:
 129:ROSSerial/AT32hardware.h **** 		}
 130:ROSSerial/AT32hardware.h **** 		
 131:ROSSerial/AT32hardware.h **** 		// if(HAL_UART_Transmit_IT(&huart2, (uint8_t *)data, length)!= HAL_OK)
 132:ROSSerial/AT32hardware.h ****   		// {
 133:ROSSerial/AT32hardware.h **** 		// 	HAL_Delay(10);  
 134:ROSSerial/AT32hardware.h **** 		// }
 135:ROSSerial/AT32hardware.h **** 		
 136:ROSSerial/AT32hardware.h **** 	}
 137:ROSSerial/AT32hardware.h **** 
 138:ROSSerial/AT32hardware.h **** 	/*
 139:ROSSerial/AT32hardware.h **** 	 * Method: time
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 72


 140:ROSSerial/AT32hardware.h **** 	 * ----------------------------
 141:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
 142:ROSSerial/AT32hardware.h **** 	 *   parameters: none
 143:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
 144:ROSSerial/AT32hardware.h **** 	 */
 145:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 146:ROSSerial/AT32hardware.h **** 	{
 147:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 148:ROSSerial/AT32hardware.h **** 		return HAL_GetTick();
 2564              		.loc 8 148 0
 2565 00b4 FFF7FEFF 		bl	HAL_GetTick
 2566              	.LVL316:
 2567              	.LBE318:
 2568              	.LBE317:
 415:ROSSerial/ros/node_handle.h ****   }
 2569              		.loc 7 415 0
 2570 00b8 B060     		str	r0, [r6, #8]
 416:ROSSerial/ros/node_handle.h **** 
 2571              		.loc 7 416 0
 2572 00ba 0AB0     		add	sp, sp, #40
 2573              	.LCFI24:
 2574              		.cfi_remember_state
 2575              		.cfi_def_cfa_offset 16
 2576              		@ sp needed
 2577 00bc 70BD     		pop	{r4, r5, r6, pc}
 2578              	.LVL317:
 2579              	.L143:
 2580              	.LCFI25:
 2581              		.cfi_restore_state
 2582              	.LBB319:
 2583              	.LBB316:
 2584              	.LBB300:
 2585              	.LBB299:
 124:ROSSerial/AT32hardware.h **** 		}
 2586              		.loc 8 124 0
 2587 00be 2A46     		mov	r2, r5
 2588 00c0 2146     		mov	r1, r4
 2589 00c2 3D48     		ldr	r0, .L145+20
 2590              	.LVL318:
 2591 00c4 FFF7FEFF 		bl	printf
 2592              	.LVL319:
 2593 00c8 F4E7     		b	.L136
 2594              	.LVL320:
 2595              	.L134:
 2596              	.LBE299:
 2597              	.LBE300:
 2598              	.LBB301:
 2599              	.LBB302:
 2600              	.LBB303:
 2601              	.LBB304:
 2602              	.LBB305:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2603              		.loc 3 13 0
 2604 00ca 3C4B     		ldr	r3, .L145+24
 2605 00cc 0193     		str	r3, [sp, #4]
 2606              	.LVL321:
 2607              	.LBE305:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 73


 2608              	.LBE304:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2609              		.loc 7 635 0
 2610 00ce 0322     		movs	r2, #3
 2611 00d0 8DF80820 		strb	r2, [sp, #8]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2612              		.loc 7 636 0
 2613 00d4 3A4A     		ldr	r2, .L145+28
 2614 00d6 0392     		str	r2, [sp, #12]
 2615              	.LVL322:
 2616              	.LBB306:
 2617              	.LBB307:
 597:ROSSerial/ros/node_handle.h **** 
 2618              		.loc 7 597 0
 2619 00d8 1B68     		ldr	r3, [r3]
 2620 00da 06F21F21 		addw	r1, r6, #543
 2621 00de 01A8     		add	r0, sp, #4
 2622              	.LVL323:
 2623 00e0 9847     		blx	r3
 2624              	.LVL324:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 2625              		.loc 7 600 0
 2626 00e2 FF23     		movs	r3, #255
 2627 00e4 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 2628              		.loc 7 601 0
 2629 00e8 FE23     		movs	r3, #254
 2630 00ea 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 2631              		.loc 7 602 0
 2632 00ee C3B2     		uxtb	r3, r0
 2633 00f0 86F81A32 		strb	r3, [r6, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 2634              		.loc 7 603 0
 2635 00f4 C0F30722 		ubfx	r2, r0, #8, #8
 2636 00f8 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 2637              		.loc 7 604 0
 2638 00fc 1344     		add	r3, r3, r2
 2639 00fe DBB2     		uxtb	r3, r3
 2640 0100 DB43     		mvns	r3, r3
 2641 0102 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 2642              		.loc 7 605 0
 2643 0106 0723     		movs	r3, #7
 2644 0108 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 2645              		.loc 7 606 0
 2646 010c 0023     		movs	r3, #0
 2647 010e 86F81E32 		strb	r3, [r6, #542]
 2648              	.LVL325:
 2649              	.LBB308:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2650              		.loc 7 610 0
 2651 0112 0522     		movs	r2, #5
 2652              	.LVL326:
 2653              	.L138:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 74


 2654 0114 C11D     		adds	r1, r0, #7
 2655 0116 9142     		cmp	r1, r2
 2656 0118 05DD     		ble	.L137
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 2657              		.loc 7 611 0
 2658 011a B118     		adds	r1, r6, r2
 2659 011c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 2660 0120 0B44     		add	r3, r3, r1
 2661              	.LVL327:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 2662              		.loc 7 610 0
 2663 0122 0132     		adds	r2, r2, #1
 2664              	.LVL328:
 2665 0124 F6E7     		b	.L138
 2666              	.L137:
 2667              	.LVL329:
 2668              	.LBE308:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 2669              		.loc 7 613 0
 2670 0126 5A42     		rsbs	r2, r3, #0
 2671              	.LVL330:
 2672 0128 DBB2     		uxtb	r3, r3
 2673              	.LVL331:
 2674 012a D2B2     		uxtb	r2, r2
 2675 012c 58BF     		it	pl
 2676 012e 5342     		rsbpl	r3, r2, #0
 2677 0130 00F10804 		add	r4, r0, #8
 2678              	.LVL332:
 2679 0134 DB43     		mvns	r3, r3
 2680 0136 3144     		add	r1, r1, r6
 2681 0138 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 2682              		.loc 7 614 0
 2683 013c 0AA8     		add	r0, sp, #40
 2684 013e 50F8243D 		ldr	r3, [r0, #-36]!
 2685 0142 9B68     		ldr	r3, [r3, #8]
 2686 0144 9847     		blx	r3
 2687              	.LVL333:
 2688 0146 2246     		mov	r2, r4
 2689 0148 0146     		mov	r1, r0
 2690 014a 1748     		ldr	r0, .L145+4
 2691 014c FFF7FEFF 		bl	printf
 2692              	.LVL334:
 615:ROSSerial/ros/node_handle.h ****     {
 2693              		.loc 7 615 0
 2694 0150 B4F5007F 		cmp	r4, #512
 2695 0154 19DC     		bgt	.L139
 617:ROSSerial/ros/node_handle.h ****       return l;
 2696              		.loc 7 617 0
 2697 0156 06F50675 		add	r5, r6, #536
 2698              	.LVL335:
 2699              	.LBB309:
 2700              	.LBB310:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 2701              		.loc 8 120 0
 2702 015a 2146     		mov	r1, r4
 2703 015c 1348     		ldr	r0, .L145+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 75


 2704 015e FFF7FEFF 		bl	printf
 2705              	.LVL336:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 2706              		.loc 8 121 0
 2707 0162 0A23     		movs	r3, #10
 2708 0164 A2B2     		uxth	r2, r4
 2709 0166 2946     		mov	r1, r5
 2710 0168 1148     		ldr	r0, .L145+12
 2711 016a FFF7FEFF 		bl	HAL_UART_Transmit
 2712              	.LVL337:
 122:ROSSerial/AT32hardware.h **** 		{
 2713              		.loc 8 122 0
 2714 016e 0328     		cmp	r0, #3
 2715 0170 05D0     		beq	.L144
 128:ROSSerial/AT32hardware.h **** 		}
 2716              		.loc 8 128 0
 2717 0172 2A46     		mov	r2, r5
 2718 0174 2146     		mov	r1, r4
 2719 0176 0F48     		ldr	r0, .L145+16
 2720              	.LVL338:
 2721 0178 FFF7FEFF 		bl	printf
 2722              	.LVL339:
 2723 017c 9AE7     		b	.L136
 2724              	.LVL340:
 2725              	.L144:
 124:ROSSerial/AT32hardware.h **** 		}
 2726              		.loc 8 124 0
 2727 017e 2A46     		mov	r2, r5
 2728 0180 2146     		mov	r1, r4
 2729 0182 0D48     		ldr	r0, .L145+20
 2730              	.LVL341:
 2731 0184 FFF7FEFF 		bl	printf
 2732              	.LVL342:
 2733 0188 94E7     		b	.L136
 2734              	.LVL343:
 2735              	.L139:
 2736              	.LBE310:
 2737              	.LBE309:
 2738              	.LBB311:
 2739              	.LBB312:
 2740              	.LBB313:
 2741              	.LBB314:
 2742              	.LBB315:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 2743              		.loc 3 13 0
 2744 018a 0C4B     		ldr	r3, .L145+24
 2745 018c 0493     		str	r3, [sp, #16]
 2746              	.LVL344:
 2747              	.LBE315:
 2748              	.LBE314:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 2749              		.loc 7 635 0
 2750 018e 0323     		movs	r3, #3
 2751 0190 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2752              		.loc 7 636 0
 2753 0194 0A4B     		ldr	r3, .L145+28
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 76


 2754 0196 0693     		str	r3, [sp, #24]
 2755              		.loc 7 637 0
 2756 0198 04AA     		add	r2, sp, #16
 2757 019a 0721     		movs	r1, #7
 2758 019c 3046     		mov	r0, r6
 2759 019e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 2760              	.LVL345:
 2761 01a2 87E7     		b	.L136
 2762              	.L146:
 2763              		.align	2
 2764              	.L145:
 2765 01a4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 2766 01a8 00000000 		.word	.LC11
 2767 01ac 24000000 		.word	.LC12
 2768 01b0 00000000 		.word	huart2
 2769 01b4 48000000 		.word	.LC14
 2770 01b8 34000000 		.word	.LC13
 2771 01bc 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2772 01c0 58000000 		.word	.LC15
 2773              	.LBE313:
 2774              	.LBE312:
 2775              	.LBE311:
 2776              	.LBE307:
 2777              	.LBE306:
 2778              	.LBE303:
 2779              	.LBE302:
 2780              	.LBE301:
 2781              	.LBE316:
 2782              	.LBE319:
 2783              		.cfi_endproc
 2784              	.LFE494:
 2785              		.fnend
 2787              		.section	.text.ros_run,"ax",%progbits
 2788              		.align	1
 2789              		.global	ros_run
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2793              		.fpu fpv4-sp-d16
 2795              	ros_run:
 2796              		.fnstart
 2797              	.LFB481:
  35:./Src/ROS_main.cpp **** {
 2798              		.loc 6 35 0
 2799              		.cfi_startproc
 2800              		@ args = 0, pretend = 0, frame = 552
 2801              		@ frame_needed = 0, uses_anonymous_args = 0
 2802 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2803              		.save {r4, r5, r6, r7, r8, lr}
 2804              	.LCFI26:
 2805              		.cfi_def_cfa_offset 24
 2806              		.cfi_offset 4, -24
 2807              		.cfi_offset 5, -20
 2808              		.cfi_offset 6, -16
 2809              		.cfi_offset 7, -12
 2810              		.cfi_offset 8, -8
 2811              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 77


 2812              		.pad #552
 2813 0004 ADF50A7D 		sub	sp, sp, #552
 2814              	.LCFI27:
 2815              		.cfi_def_cfa_offset 576
 2816              	.LVL346:
 2817              	.LBB407:
 2818              	.LBB408:
 2819              	.LBB409:
 2820              	.LBB410:
 2821              		.loc 8 148 0
 2822 0008 FFF7FEFF 		bl	HAL_GetTick
 2823              	.LVL347:
 2824 000c 0446     		mov	r4, r0
 2825              	.LVL348:
 2826              	.LBE410:
 2827              	.LBE409:
 252:ROSSerial/ros/node_handle.h ****     {
 2828              		.loc 7 252 0
 2829 000e B94B     		ldr	r3, .L222
 2830 0010 D3F82435 		ldr	r3, [r3, #1316]
 2831 0014 C31A     		subs	r3, r0, r3
 2832 0016 42F6F822 		movw	r2, #11000
 2833 001a 9342     		cmp	r3, r2
 2834 001c 03D9     		bls	.L148
 254:ROSSerial/ros/node_handle.h ****     }
 2835              		.loc 7 254 0
 2836 001e B54B     		ldr	r3, .L222
 2837 0020 0022     		movs	r2, #0
 2838 0022 83F81C25 		strb	r2, [r3, #1308]
 2839              	.L148:
 258:ROSSerial/ros/node_handle.h ****     {
 2840              		.loc 7 258 0
 2841 0026 B34B     		ldr	r3, .L222
 2842 0028 D3F80835 		ldr	r3, [r3, #1288]
 2843 002c 002B     		cmp	r3, #0
 2844 002e 4BD0     		beq	.L150
 260:ROSSerial/ros/node_handle.h ****       {
 2845              		.loc 7 260 0
 2846 0030 B04B     		ldr	r3, .L222
 2847 0032 D3F82835 		ldr	r3, [r3, #1320]
 2848 0036 9C42     		cmp	r4, r3
 2849 0038 46D9     		bls	.L150
 262:ROSSerial/ros/node_handle.h ****       }
 2850              		.loc 7 262 0
 2851 003a AE4B     		ldr	r3, .L222
 2852 003c 0022     		movs	r2, #0
 2853 003e C3F80825 		str	r2, [r3, #1288]
 2854 0042 41E0     		b	.L150
 2855              	.LVL349:
 2856              	.L201:
 2857              	.LBB411:
 2858              	.LBB412:
 2859              	.LBB413:
  84:ROSSerial/AT32hardware.h **** 		}
 2860              		.loc 8 84 0
 2861 0044 591C     		adds	r1, r3, #1
 2862 0046 AC4A     		ldr	r2, .L222+4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 78


 2863 0048 1170     		strb	r1, [r2]
 2864 004a AC4A     		ldr	r2, .L222+8
 2865 004c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2866              	.LVL350:
 2867              	.L154:
 2868              	.LBE413:
 2869              	.LBE412:
 283:ROSSerial/ros/node_handle.h ****         break;
 2870              		.loc 7 283 0
 2871 004e 0029     		cmp	r1, #0
 2872 0050 C0F2CC82 		blt	.L155
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 2873              		.loc 7 285 0
 2874 0054 A74B     		ldr	r3, .L222
 2875 0056 D3F81825 		ldr	r2, [r3, #1304]
 2876 005a 0A44     		add	r2, r2, r1
 2877 005c C3F81825 		str	r2, [r3, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 2878              		.loc 7 286 0
 2879 0060 D3F80835 		ldr	r3, [r3, #1288]
 2880 0064 072B     		cmp	r3, #7
 2881 0066 1ED0     		beq	.L200
 293:ROSSerial/ros/node_handle.h ****       {
 2882              		.loc 7 293 0
 2883 0068 002B     		cmp	r3, #0
 2884 006a 4FD1     		bne	.L158
 295:ROSSerial/ros/node_handle.h ****         {
 2885              		.loc 7 295 0
 2886 006c FF29     		cmp	r1, #255
 2887 006e 41D1     		bne	.L159
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 2888              		.loc 7 297 0
 2889 0070 A04A     		ldr	r2, .L222
 2890 0072 0133     		adds	r3, r3, #1
 2891 0074 C2F80835 		str	r3, [r2, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 2892              		.loc 7 298 0
 2893 0078 04F11403 		add	r3, r4, #20
 2894 007c C2F82835 		str	r3, [r2, #1320]
 2895 0080 22E0     		b	.L150
 2896              	.LVL351:
 2897              	.L202:
 2898              	.LBB416:
 2899              	.LBB414:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 2900              		.loc 8 88 0
 2901 0082 0023     		movs	r3, #0
 2902 0084 9C4A     		ldr	r2, .L222+4
 2903 0086 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 2904              		.loc 8 89 0
 2905 0088 9D4A     		ldr	r2, .L222+12
 2906 008a 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 2907              		.loc 8 90 0
 2908 008c 9D48     		ldr	r0, .L222+16
 2909 008e 0268     		ldr	r2, [r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 79


 2910 0090 D368     		ldr	r3, [r2, #12]
 2911 0092 43F04003 		orr	r3, r3, #64
 2912 0096 D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 2913              		.loc 8 91 0
 2914 0098 0122     		movs	r2, #1
 2915 009a 9B49     		ldr	r1, .L222+20
 2916 009c FFF7FEFF 		bl	HAL_UART_Receive_IT
 2917              	.LVL352:
  80:ROSSerial/AT32hardware.h **** 		
 2918              		.loc 8 80 0
 2919 00a0 4FF0FF31 		mov	r1, #-1
 2920 00a4 D3E7     		b	.L154
 2921              	.LVL353:
 2922              	.L200:
 2923              	.LBE414:
 2924              	.LBE416:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 2925              		.loc 7 288 0
 2926 00a6 934B     		ldr	r3, .L222
 2927 00a8 D3F81425 		ldr	r2, [r3, #1300]
 2928 00ac 501C     		adds	r0, r2, #1
 2929 00ae C3F81405 		str	r0, [r3, #1300]
 2930 00b2 1A44     		add	r2, r2, r3
 2931 00b4 1176     		strb	r1, [r2, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 2932              		.loc 7 289 0
 2933 00b6 D3F80C25 		ldr	r2, [r3, #1292]
 2934 00ba 013A     		subs	r2, r2, #1
 2935 00bc C3F80C25 		str	r2, [r3, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 2936              		.loc 7 290 0
 2937 00c0 12B9     		cbnz	r2, .L150
 291:ROSSerial/ros/node_handle.h ****       }
 2938              		.loc 7 291 0
 2939 00c2 0822     		movs	r2, #8
 2940 00c4 C3F80825 		str	r2, [r3, #1288]
 2941              	.L150:
 270:ROSSerial/ros/node_handle.h ****       {
 2942              		.loc 7 270 0
 2943 00c8 8A4B     		ldr	r3, .L222
 2944 00ca 5B69     		ldr	r3, [r3, #20]
 2945 00cc 3BB1     		cbz	r3, .L151
 2946              	.LVL354:
 2947              	.LBB417:
 2948              	.LBB418:
 2949              		.loc 8 148 0
 2950 00ce FFF7FEFF 		bl	HAL_GetTick
 2951              	.LVL355:
 2952              	.LBE418:
 2953              	.LBE417:
 276:ROSSerial/ros/node_handle.h ****         {
 2954              		.loc 7 276 0
 2955 00d2 001B     		subs	r0, r0, r4
 2956 00d4 874B     		ldr	r3, .L222
 2957 00d6 5B69     		ldr	r3, [r3, #20]
 2958 00d8 9842     		cmp	r0, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 80


 2959 00da 00F29382 		bhi	.L152
 2960              	.L151:
 2961              	.LVL356:
 2962              	.LBB419:
 2963              	.LBB415:
  82:ROSSerial/AT32hardware.h **** 		{
 2964              		.loc 8 82 0
 2965 00de 864B     		ldr	r3, .L222+4
 2966 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2967 00e2 874A     		ldr	r2, .L222+12
 2968 00e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2969 00e6 9342     		cmp	r3, r2
 2970 00e8 ACD3     		bcc	.L201
  86:ROSSerial/AT32hardware.h **** 		{
 2971              		.loc 8 86 0
 2972 00ea 9342     		cmp	r3, r2
 2973 00ec C9D0     		beq	.L202
  80:ROSSerial/AT32hardware.h **** 		
 2974              		.loc 8 80 0
 2975 00ee 4FF0FF31 		mov	r1, #-1
 2976 00f2 ACE7     		b	.L154
 2977              	.LVL357:
 2978              	.L159:
 2979              	.LBE415:
 2980              	.LBE419:
 2981              	.LBB420:
 2982              	.LBB421:
 2983              		.loc 8 148 0
 2984 00f4 FFF7FEFF 		bl	HAL_GetTick
 2985              	.LVL358:
 2986              	.LBE421:
 2987              	.LBE420:
 300:ROSSerial/ros/node_handle.h ****         {
 2988              		.loc 7 300 0
 2989 00f8 001B     		subs	r0, r0, r4
 2990 00fa 41F28833 		movw	r3, #5000
 2991 00fe 9842     		cmp	r0, r3
 2992 0100 E2D9     		bls	.L150
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 2993              		.loc 7 303 0
 2994 0102 7C4B     		ldr	r3, .L222
 2995 0104 0022     		movs	r2, #0
 2996 0106 83F81C25 		strb	r2, [r3, #1308]
 2997 010a 7BE2     		b	.L152
 2998              	.L158:
 307:ROSSerial/ros/node_handle.h ****       {
 2999              		.loc 7 307 0
 3000 010c 012B     		cmp	r3, #1
 3001 010e 41D0     		beq	.L203
 320:ROSSerial/ros/node_handle.h ****       {
 3002              		.loc 7 320 0
 3003 0110 022B     		cmp	r3, #2
 3004 0112 00F0BD80 		beq	.L204
 327:ROSSerial/ros/node_handle.h ****       {
 3005              		.loc 7 327 0
 3006 0116 032B     		cmp	r3, #3
 3007 0118 00F0C680 		beq	.L205
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 81


 332:ROSSerial/ros/node_handle.h ****       {
 3008              		.loc 7 332 0
 3009 011c 042B     		cmp	r3, #4
 3010 011e 00F0CE80 		beq	.L206
 339:ROSSerial/ros/node_handle.h ****       {
 3011              		.loc 7 339 0
 3012 0122 052B     		cmp	r3, #5
 3013 0124 00F0DC80 		beq	.L207
 345:ROSSerial/ros/node_handle.h ****       {
 3014              		.loc 7 345 0
 3015 0128 062B     		cmp	r3, #6
 3016 012a 00F00381 		beq	.L208
 352:ROSSerial/ros/node_handle.h ****       {
 3017              		.loc 7 352 0
 3018 012e 082B     		cmp	r3, #8
 3019 0130 CAD1     		bne	.L150
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 3020              		.loc 7 354 0
 3021 0132 704B     		ldr	r3, .L222
 3022 0134 0021     		movs	r1, #0
 3023 0136 C3F80815 		str	r1, [r3, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 3024              		.loc 7 355 0
 3025 013a 8B1A     		subs	r3, r1, r2
 3026 013c D2B2     		uxtb	r2, r2
 3027 013e DBB2     		uxtb	r3, r3
 3028 0140 58BF     		it	pl
 3029 0142 5A42     		rsbpl	r2, r3, #0
 3030 0144 FF2A     		cmp	r2, #255
 3031 0146 BFD1     		bne	.L150
 357:ROSSerial/ros/node_handle.h ****           {
 3032              		.loc 7 357 0
 3033 0148 6A4B     		ldr	r3, .L222
 3034 014a D3F81055 		ldr	r5, [r3, #1296]
 3035 014e 002D     		cmp	r5, #0
 3036 0150 00F00481 		beq	.L209
 365:ROSSerial/ros/node_handle.h ****           {
 3037              		.loc 7 365 0
 3038 0154 0A2D     		cmp	r5, #10
 3039 0156 00F05581 		beq	.L210
 369:ROSSerial/ros/node_handle.h ****           {
 3040              		.loc 7 369 0
 3041 015a 062D     		cmp	r5, #6
 3042 015c 00F09581 		beq	.L211
 374:ROSSerial/ros/node_handle.h ****           {
 3043              		.loc 7 374 0
 3044 0160 0B2D     		cmp	r5, #11
 3045 0162 00F03E82 		beq	.L212
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 3046              		.loc 7 380 0
 3047 0166 643D     		subs	r5, r5, #100
 3048 0168 05EB8502 		add	r2, r5, r5, lsl #2
 3049 016c 614B     		ldr	r3, .L222
 3050 016e 03EB8203 		add	r3, r3, r2, lsl #2
 3051 0172 B3F8A414 		ldrh	r1, [r3, #1188]
 3052 0176 0029     		cmp	r1, #0
 3053 0178 A6D0     		beq	.L150
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 82


 381:ROSSerial/ros/node_handle.h ****               printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 3054              		.loc 7 381 0
 3055 017a 5E4E     		ldr	r6, .L222
 3056 017c D3F8B434 		ldr	r3, [r3, #1204]
 3057 0180 624D     		ldr	r5, .L222+24
 3058 0182 2B60     		str	r3, [r5]
 382:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 3059              		.loc 7 382 0
 3060 0184 6248     		ldr	r0, .L222+28
 3061 0186 FFF7FEFF 		bl	printf
 3062              	.LVL359:
 383:ROSSerial/ros/node_handle.h ****             }
 3063              		.loc 7 383 0
 3064 018a 2B68     		ldr	r3, [r5]
 3065 018c 06F11800 		add	r0, r6, #24
 3066 0190 9847     		blx	r3
 3067              	.LVL360:
 3068 0192 99E7     		b	.L150
 3069              	.L203:
 309:ROSSerial/ros/node_handle.h ****         {
 3070              		.loc 7 309 0
 3071 0194 FE29     		cmp	r1, #254
 3072 0196 35D0     		beq	.L213
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 3073              		.loc 7 315 0
 3074 0198 564B     		ldr	r3, .L222
 3075 019a 0022     		movs	r2, #0
 3076 019c C3F80825 		str	r2, [r3, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 3077              		.loc 7 316 0
 3078 01a0 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 3079 01a4 002B     		cmp	r3, #0
 3080 01a6 8FD1     		bne	.L150
 3081              	.LVL361:
 3082              	.LBB422:
 3083              	.LBB423:
 3084              	.LBB424:
 3085              	.LBB425:
  14:ROSSerial/std_msgs/Time.h ****   {
 3086              		.loc 1 14 0
 3087 01a8 5A4B     		ldr	r3, .L222+32
 3088 01aa 0193     		str	r3, [sp, #4]
 3089              	.LVL362:
 3090              	.LBB426:
 3091              	.LBB427:
 3092              	.LBB428:
 3093              		.loc 9 51 0
 3094 01ac 1546     		mov	r5, r2
 3095 01ae 0292     		str	r2, [sp, #8]
 3096 01b0 0392     		str	r2, [sp, #12]
 3097              	.LVL363:
 3098              	.LBE428:
 3099              	.LBE427:
 3100              	.LBE426:
 3101              	.LBE425:
 3102              	.LBE424:
 3103              	.LBB429:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 83


 3104              	.LBB430:
 597:ROSSerial/ros/node_handle.h **** 
 3105              		.loc 7 597 0
 3106 01b2 504E     		ldr	r6, .L222
 3107 01b4 1B68     		ldr	r3, [r3]
 3108 01b6 06F21F21 		addw	r1, r6, #543
 3109 01ba 01A8     		add	r0, sp, #4
 3110              	.LVL364:
 3111 01bc 9847     		blx	r3
 3112              	.LVL365:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3113              		.loc 7 600 0
 3114 01be FF23     		movs	r3, #255
 3115 01c0 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3116              		.loc 7 601 0
 3117 01c4 FE23     		movs	r3, #254
 3118 01c6 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3119              		.loc 7 602 0
 3120 01ca C3B2     		uxtb	r3, r0
 3121 01cc 86F81A32 		strb	r3, [r6, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3122              		.loc 7 603 0
 3123 01d0 C0F30722 		ubfx	r2, r0, #8, #8
 3124 01d4 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3125              		.loc 7 604 0
 3126 01d8 1344     		add	r3, r3, r2
 3127 01da DBB2     		uxtb	r3, r3
 3128 01dc DB43     		mvns	r3, r3
 3129 01de 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3130              		.loc 7 605 0
 3131 01e2 0A23     		movs	r3, #10
 3132 01e4 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3133              		.loc 7 606 0
 3134 01e8 86F81E52 		strb	r5, [r6, #542]
 3135              	.LVL366:
 3136              	.LBB431:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3137              		.loc 7 610 0
 3138 01ec 0522     		movs	r2, #5
 3139              	.LBE431:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3140              		.loc 7 609 0
 3141 01ee 2B46     		mov	r3, r5
 3142              	.LVL367:
 3143              	.L163:
 3144              	.LBB432:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3145              		.loc 7 610 0
 3146 01f0 C11D     		adds	r1, r0, #7
 3147 01f2 9142     		cmp	r1, r2
 3148 01f4 0BDD     		ble	.L162
 611:ROSSerial/ros/node_handle.h ****     l += 7;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 84


 3149              		.loc 7 611 0
 3150 01f6 3F49     		ldr	r1, .L222
 3151 01f8 1144     		add	r1, r1, r2
 3152 01fa 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3153 01fe 0B44     		add	r3, r3, r1
 3154              	.LVL368:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3155              		.loc 7 610 0
 3156 0200 0132     		adds	r2, r2, #1
 3157              	.LVL369:
 3158 0202 F5E7     		b	.L163
 3159              	.LVL370:
 3160              	.L213:
 3161              	.LBE432:
 3162              	.LBE430:
 3163              	.LBE429:
 3164              	.LBE423:
 3165              	.LBE422:
 311:ROSSerial/ros/node_handle.h ****         }
 3166              		.loc 7 311 0
 3167 0204 0133     		adds	r3, r3, #1
 3168 0206 3B4A     		ldr	r2, .L222
 3169 0208 C2F80835 		str	r3, [r2, #1288]
 3170 020c 5CE7     		b	.L150
 3171              	.LVL371:
 3172              	.L162:
 3173              	.LBB449:
 3174              	.LBB448:
 3175              	.LBB444:
 3176              	.LBB442:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 3177              		.loc 7 613 0
 3178 020e 5A42     		rsbs	r2, r3, #0
 3179              	.LVL372:
 3180 0210 DBB2     		uxtb	r3, r3
 3181              	.LVL373:
 3182 0212 D2B2     		uxtb	r2, r2
 3183 0214 58BF     		it	pl
 3184 0216 5342     		rsbpl	r3, r2, #0
 3185 0218 00F10805 		add	r5, r0, #8
 3186              	.LVL374:
 3187 021c DB43     		mvns	r3, r3
 3188 021e 354A     		ldr	r2, .L222
 3189 0220 1144     		add	r1, r1, r2
 3190 0222 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3191              		.loc 7 614 0
 3192 0226 019B     		ldr	r3, [sp, #4]
 3193 0228 9B68     		ldr	r3, [r3, #8]
 3194 022a 01A8     		add	r0, sp, #4
 3195              	.LVL375:
 3196 022c 9847     		blx	r3
 3197              	.LVL376:
 3198 022e 2A46     		mov	r2, r5
 3199 0230 0146     		mov	r1, r0
 3200 0232 3948     		ldr	r0, .L222+36
 3201 0234 FFF7FEFF 		bl	printf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 85


 3202              	.LVL377:
 615:ROSSerial/ros/node_handle.h ****     {
 3203              		.loc 7 615 0
 3204 0238 B5F5007F 		cmp	r5, #512
 3205 023c 1BDC     		bgt	.L164
 3206              	.LVL378:
 3207              	.LBB433:
 3208              	.LBB434:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 3209              		.loc 8 120 0
 3210 023e 2946     		mov	r1, r5
 3211 0240 3648     		ldr	r0, .L222+40
 3212 0242 FFF7FEFF 		bl	printf
 3213              	.LVL379:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 3214              		.loc 8 121 0
 3215 0246 0A23     		movs	r3, #10
 3216 0248 AAB2     		uxth	r2, r5
 3217 024a 3549     		ldr	r1, .L222+44
 3218 024c 2D48     		ldr	r0, .L222+16
 3219 024e FFF7FEFF 		bl	HAL_UART_Transmit
 3220              	.LVL380:
 122:ROSSerial/AT32hardware.h **** 		{
 3221              		.loc 8 122 0
 3222 0252 0328     		cmp	r0, #3
 3223 0254 09D0     		beq	.L214
 128:ROSSerial/AT32hardware.h **** 		}
 3224              		.loc 8 128 0
 3225 0256 324A     		ldr	r2, .L222+44
 3226 0258 2946     		mov	r1, r5
 3227 025a 3248     		ldr	r0, .L222+48
 3228              	.LVL381:
 3229 025c FFF7FEFF 		bl	printf
 3230              	.LVL382:
 3231              	.L166:
 3232              	.LBE434:
 3233              	.LBE433:
 3234              	.LBE442:
 3235              	.LBE444:
 3236              	.LBB445:
 3237              	.LBB446:
 3238              		.loc 8 148 0
 3239 0260 FFF7FEFF 		bl	HAL_GetTick
 3240              	.LVL383:
 3241              	.LBE446:
 3242              	.LBE445:
 415:ROSSerial/ros/node_handle.h ****   }
 3243              		.loc 7 415 0
 3244 0264 234B     		ldr	r3, .L222
 3245 0266 9860     		str	r0, [r3, #8]
 3246 0268 2EE7     		b	.L150
 3247              	.LVL384:
 3248              	.L214:
 3249              	.LBB447:
 3250              	.LBB443:
 3251              	.LBB436:
 3252              	.LBB435:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 86


 124:ROSSerial/AT32hardware.h **** 		}
 3253              		.loc 8 124 0
 3254 026a 2D4A     		ldr	r2, .L222+44
 3255 026c 2946     		mov	r1, r5
 3256 026e 2E48     		ldr	r0, .L222+52
 3257              	.LVL385:
 3258 0270 FFF7FEFF 		bl	printf
 3259              	.LVL386:
 3260 0274 F4E7     		b	.L166
 3261              	.LVL387:
 3262              	.L164:
 3263              	.LBE435:
 3264              	.LBE436:
 3265              	.LBB437:
 3266              	.LBB438:
 3267              	.LBB439:
 3268              	.LBB440:
 3269              	.LBB441:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3270              		.loc 3 13 0
 3271 0276 2D4B     		ldr	r3, .L222+56
 3272 0278 0493     		str	r3, [sp, #16]
 3273              	.LVL388:
 3274              	.LBE441:
 3275              	.LBE440:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3276              		.loc 7 635 0
 3277 027a 0323     		movs	r3, #3
 3278 027c 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3279              		.loc 7 636 0
 3280 0280 2B4B     		ldr	r3, .L222+60
 3281 0282 0693     		str	r3, [sp, #24]
 3282              		.loc 7 637 0
 3283 0284 04AA     		add	r2, sp, #16
 3284 0286 0721     		movs	r1, #7
 3285 0288 1A48     		ldr	r0, .L222
 3286 028a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3287              	.LVL389:
 3288 028e E7E7     		b	.L166
 3289              	.LVL390:
 3290              	.L204:
 3291              	.LBE439:
 3292              	.LBE438:
 3293              	.LBE437:
 3294              	.LBE443:
 3295              	.LBE447:
 3296              	.LBE448:
 3297              	.LBE449:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 3298              		.loc 7 322 0
 3299 0290 184A     		ldr	r2, .L222
 3300 0292 C2F80C15 		str	r1, [r2, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 3301              		.loc 7 323 0
 3302 0296 0020     		movs	r0, #0
 3303 0298 C2F81405 		str	r0, [r2, #1300]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 87


 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 3304              		.loc 7 324 0
 3305 029c 0133     		adds	r3, r3, #1
 3306 029e C2F80835 		str	r3, [r2, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 3307              		.loc 7 325 0
 3308 02a2 C2F81815 		str	r1, [r2, #1304]
 3309 02a6 0FE7     		b	.L150
 3310              	.L205:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 3311              		.loc 7 329 0
 3312 02a8 124A     		ldr	r2, .L222
 3313 02aa D2F80C05 		ldr	r0, [r2, #1292]
 3314 02ae 00EB0121 		add	r1, r0, r1, lsl #8
 3315 02b2 C2F80C15 		str	r1, [r2, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 3316              		.loc 7 330 0
 3317 02b6 0133     		adds	r3, r3, #1
 3318 02b8 C2F80835 		str	r3, [r2, #1288]
 3319 02bc 04E7     		b	.L150
 3320              	.L206:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 3321              		.loc 7 334 0
 3322 02be 5142     		rsbs	r1, r2, #0
 3323 02c0 D2B2     		uxtb	r2, r2
 3324 02c2 C9B2     		uxtb	r1, r1
 3325 02c4 58BF     		it	pl
 3326 02c6 4A42     		rsbpl	r2, r1, #0
 3327 02c8 FF2A     		cmp	r2, #255
 3328 02ca 04D0     		beq	.L215
 337:ROSSerial/ros/node_handle.h ****       }
 3329              		.loc 7 337 0
 3330 02cc 094B     		ldr	r3, .L222
 3331 02ce 0022     		movs	r2, #0
 3332 02d0 C3F80825 		str	r2, [r3, #1288]
 3333 02d4 F8E6     		b	.L150
 3334              	.L215:
 335:ROSSerial/ros/node_handle.h ****         else
 3335              		.loc 7 335 0
 3336 02d6 0133     		adds	r3, r3, #1
 3337 02d8 064A     		ldr	r2, .L222
 3338 02da C2F80835 		str	r3, [r2, #1288]
 3339 02de F3E6     		b	.L150
 3340              	.L207:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 3341              		.loc 7 341 0
 3342 02e0 044A     		ldr	r2, .L222
 3343 02e2 C2F81015 		str	r1, [r2, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 3344              		.loc 7 342 0
 3345 02e6 0133     		adds	r3, r3, #1
 3346 02e8 C2F80835 		str	r3, [r2, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 3347              		.loc 7 343 0
 3348 02ec C2F81815 		str	r1, [r2, #1304]
 3349 02f0 EAE6     		b	.L150
 3350              	.L223:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 88


 3351 02f2 00BF     		.align	2
 3352              	.L222:
 3353 02f4 00000000 		.word	.LANCHOR1
 3354 02f8 00000000 		.word	g_RxRead
 3355 02fc 00000000 		.word	g_RxBuf
 3356 0300 00000000 		.word	g_RxWritten
 3357 0304 00000000 		.word	huart2
 3358 0308 00000000 		.word	byte
 3359 030c 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 3360 0310 00000000 		.word	.LC16
 3361 0314 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3362 0318 00000000 		.word	.LC11
 3363 031c 24000000 		.word	.LC12
 3364 0320 18020000 		.word	.LANCHOR1+536
 3365 0324 48000000 		.word	.LC14
 3366 0328 34000000 		.word	.LC13
 3367 032c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3368 0330 58000000 		.word	.LC15
 3369              	.L208:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 3370              		.loc 7 347 0
 3371 0334 BB4B     		ldr	r3, .L224
 3372 0336 D3F81025 		ldr	r2, [r3, #1296]
 3373 033a 02EB0122 		add	r2, r2, r1, lsl #8
 3374 033e C3F81025 		str	r2, [r3, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 3375              		.loc 7 348 0
 3376 0342 0722     		movs	r2, #7
 3377 0344 C3F80825 		str	r2, [r3, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 3378              		.loc 7 349 0
 3379 0348 D3F80C35 		ldr	r3, [r3, #1292]
 3380 034c 002B     		cmp	r3, #0
 3381 034e 7FF4BBAE 		bne	.L150
 350:ROSSerial/ros/node_handle.h ****       }
 3382              		.loc 7 350 0
 3383 0352 B44B     		ldr	r3, .L224
 3384 0354 0822     		movs	r2, #8
 3385 0356 C3F80825 		str	r2, [r3, #1288]
 3386 035a B5E6     		b	.L150
 3387              	.L209:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 3388              		.loc 7 359 0
 3389 035c 1846     		mov	r0, r3
 3390 035e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 3391              	.LVL391:
 3392              	.LBB450:
 3393              	.LBB451:
 3394              	.LBB452:
 3395              	.LBB453:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 3396              		.loc 2 12 0
 3397 0362 B14B     		ldr	r3, .L224+4
 3398 0364 0493     		str	r3, [sp, #16]
 3399              	.LVL392:
 3400              	.LBE453:
 3401              	.LBE452:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 89


 558:ROSSerial/ros/node_handle.h ****     {
 3402              		.loc 7 558 0
 3403 0366 2E46     		mov	r6, r5
 3404 0368 00E0     		b	.L176
 3405              	.LVL393:
 3406              	.L175:
 3407 036a 0136     		adds	r6, r6, #1
 3408              	.LVL394:
 3409              	.L176:
 3410 036c 042E     		cmp	r6, #4
 3411 036e 1FDC     		bgt	.L174
 560:ROSSerial/ros/node_handle.h ****       {
 3412              		.loc 7 560 0
 3413 0370 06EB8602 		add	r2, r6, r6, lsl #2
 3414 0374 AB4B     		ldr	r3, .L224
 3415 0376 03EB8203 		add	r3, r3, r2, lsl #2
 3416 037a B3F82C34 		ldrh	r3, [r3, #1068]
 3417 037e 002B     		cmp	r3, #0
 3418 0380 F3D0     		beq	.L175
 562:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 3419              		.loc 7 562 0
 3420 0382 ADF81430 		strh	r3, [sp, #20]	@ movhi
 563:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 3421              		.loc 7 563 0
 3422 0386 A748     		ldr	r0, .L224
 3423 0388 00EB8203 		add	r3, r0, r2, lsl #2
 3424 038c D3F83024 		ldr	r2, [r3, #1072]
 3425 0390 0692     		str	r2, [sp, #24]
 564:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 3426              		.loc 7 564 0
 3427 0392 D3F83824 		ldr	r2, [r3, #1080]
 3428 0396 0792     		str	r2, [sp, #28]
 565:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 3429              		.loc 7 565 0
 3430 0398 D3F83C34 		ldr	r3, [r3, #1084]
 3431 039c 0893     		str	r3, [sp, #32]
 566:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 3432              		.loc 7 566 0
 3433 039e 4FF40073 		mov	r3, #512
 3434 03a2 0993     		str	r3, [sp, #36]
 567:ROSSerial/ros/node_handle.h ****       }
 3435              		.loc 7 567 0
 3436 03a4 04AA     		add	r2, sp, #16
 3437 03a6 0021     		movs	r1, #0
 3438 03a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3439              	.LVL395:
 3440 03ac DDE7     		b	.L175
 3441              	.LVL396:
 3442              	.L178:
 570:ROSSerial/ros/node_handle.h ****     {
 3443              		.loc 7 570 0
 3444 03ae 0135     		adds	r5, r5, #1
 3445              	.LVL397:
 3446              	.L174:
 3447 03b0 042D     		cmp	r5, #4
 3448 03b2 1EDC     		bgt	.L177
 572:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 90


 3449              		.loc 7 572 0
 3450 03b4 05EB8502 		add	r2, r5, r5, lsl #2
 3451 03b8 9A4B     		ldr	r3, .L224
 3452 03ba 03EB8203 		add	r3, r3, r2, lsl #2
 3453 03be B3F8A434 		ldrh	r3, [r3, #1188]
 3454 03c2 002B     		cmp	r3, #0
 3455 03c4 F3D0     		beq	.L178
 574:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 3456              		.loc 7 574 0
 3457 03c6 ADF81430 		strh	r3, [sp, #20]	@ movhi
 575:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 3458              		.loc 7 575 0
 3459 03ca 9648     		ldr	r0, .L224
 3460 03cc 00EB8203 		add	r3, r0, r2, lsl #2
 3461 03d0 D3F8A824 		ldr	r2, [r3, #1192]
 3462 03d4 0692     		str	r2, [sp, #24]
 576:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 3463              		.loc 7 576 0
 3464 03d6 D3F8AC24 		ldr	r2, [r3, #1196]
 3465 03da 0792     		str	r2, [sp, #28]
 577:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 3466              		.loc 7 577 0
 3467 03dc D3F8B034 		ldr	r3, [r3, #1200]
 3468 03e0 0893     		str	r3, [sp, #32]
 578:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 3469              		.loc 7 578 0
 3470 03e2 4FF40073 		mov	r3, #512
 3471 03e6 0993     		str	r3, [sp, #36]
 579:ROSSerial/ros/node_handle.h ****       }
 3472              		.loc 7 579 0
 3473 03e8 04AA     		add	r2, sp, #16
 3474 03ea 0121     		movs	r1, #1
 3475 03ec FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3476              	.LVL398:
 3477 03f0 DDE7     		b	.L178
 3478              	.L177:
 582:ROSSerial/ros/node_handle.h ****   }
 3479              		.loc 7 582 0
 3480 03f2 8C4B     		ldr	r3, .L224
 3481 03f4 0122     		movs	r2, #1
 3482 03f6 83F81C25 		strb	r2, [r3, #1308]
 3483              	.LVL399:
 3484              	.LBE451:
 3485              	.LBE450:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 3486              		.loc 7 361 0
 3487 03fa C3F82045 		str	r4, [r3, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 3488              		.loc 7 362 0
 3489 03fe C3F82445 		str	r4, [r3, #1316]
 3490 0402 FFE0     		b	.L152
 3491              	.L210:
 3492              	.LVL400:
 3493              	.LBB454:
 3494              	.LBB455:
 3495              	.LBB456:
 3496              	.LBB457:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 91


 3497              		.loc 8 148 0
 3498 0404 FFF7FEFF 		bl	HAL_GetTick
 3499              	.LVL401:
 3500              	.LBE457:
 3501              	.LBE456:
 421:ROSSerial/ros/node_handle.h **** 
 3502              		.loc 7 421 0
 3503 0408 864D     		ldr	r5, .L224
 3504 040a AB68     		ldr	r3, [r5, #8]
 3505 040c C01A     		subs	r0, r0, r3
 3506              	.LVL402:
 3507              	.LBB458:
 3508              	.LBB459:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3509              		.loc 1 38 0
 3510 040e 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3511              		.loc 1 39 0
 3512 0410 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 3513 0412 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3514              		.loc 1 40 0
 3515 0416 AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 3516 0418 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 3517              		.loc 1 41 0
 3518 041c EA7E     		ldrb	r2, [r5, #27]	@ zero_extendqisi2
 3519 041e 43EA0263 		orr	r3, r3, r2, lsl #24
 3520              	.LVL403:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3521              		.loc 1 43 0
 3522 0422 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3523              		.loc 1 44 0
 3524 0424 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 3525 0426 41EA0221 		orr	r1, r1, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3526              		.loc 1 45 0
 3527 042a AA7F     		ldrb	r2, [r5, #30]	@ zero_extendqisi2
 3528 042c 41EA0241 		orr	r1, r1, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 3529              		.loc 1 46 0
 3530 0430 EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 3531 0432 41EA0261 		orr	r1, r1, r2, lsl #24
 3532              	.LVL404:
 3533              	.LBE459:
 3534              	.LBE458:
 424:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 3535              		.loc 7 424 0
 3536 0436 7D4E     		ldr	r6, .L224+8
 3537 0438 A6FB0072 		umull	r7, r2, r6, r0
 3538 043c 9209     		lsrs	r2, r2, #6
 3539 043e 1344     		add	r3, r3, r2
 3540 0440 0593     		str	r3, [sp, #20]
 425:ROSSerial/ros/node_handle.h **** 
 3541              		.loc 7 425 0
 3542 0442 4FF47A78 		mov	r8, #1000
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 92


 3543 0446 08FB1203 		mls	r3, r8, r2, r0
 3544 044a 794F     		ldr	r7, .L224+12
 3545 044c 07FB0313 		mla	r3, r7, r3, r1
 3546 0450 0693     		str	r3, [sp, #24]
 3547              	.LVL405:
 3548              	.LBB460:
 3549              	.LBB461:
 3550              	.LBB462:
 3551              	.LBB463:
 3552              		.loc 8 148 0
 3553 0452 FFF7FEFF 		bl	HAL_GetTick
 3554              	.LVL406:
 3555              	.LBE463:
 3556              	.LBE462:
 444:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 3557              		.loc 7 444 0
 3558 0456 059A     		ldr	r2, [sp, #20]
 3559 0458 A6FB0013 		umull	r1, r3, r6, r0
 3560 045c 9B09     		lsrs	r3, r3, #6
 3561 045e D21A     		subs	r2, r2, r3
 3562 0460 013A     		subs	r2, r2, #1
 3563 0462 EA60     		str	r2, [r5, #12]
 445:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 3564              		.loc 7 445 0
 3565 0464 069A     		ldr	r2, [sp, #24]
 3566 0466 08FB1303 		mls	r3, r8, r3, r0
 3567 046a 07FB1323 		mls	r3, r7, r3, r2
 3568 046e 714A     		ldr	r2, .L224+16
 3569 0470 1A44     		add	r2, r2, r3
 3570 0472 2946     		mov	r1, r5
 3571 0474 41F8102F 		str	r2, [r1, #16]!
 446:ROSSerial/ros/node_handle.h ****   }
 3572              		.loc 7 446 0
 3573 0478 05F10C00 		add	r0, r5, #12
 3574              	.LVL407:
 3575 047c FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3576              	.LVL408:
 3577              	.LBE461:
 3578              	.LBE460:
 3579              	.LBB464:
 3580              	.LBB465:
 3581              		.loc 8 148 0
 3582 0480 FFF7FEFF 		bl	HAL_GetTick
 3583              	.LVL409:
 3584              	.LBE465:
 3585              	.LBE464:
 428:ROSSerial/ros/node_handle.h ****   }
 3586              		.loc 7 428 0
 3587 0484 C5F82405 		str	r0, [r5, #1316]
 3588 0488 1EE6     		b	.L150
 3589              	.LVL410:
 3590              	.L211:
 3591              	.LBE455:
 3592              	.LBE454:
 3593              	.LBB466:
 3594              	.LBB467:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 93


 3595              		.loc 4 116 0
 3596 048a 664B     		ldr	r3, .L224
 3597 048c 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 3598              	.LVL411:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 3599              		.loc 4 117 0
 3600 048e 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 3601 0492 9D42     		cmp	r5, r3
 3602 0494 23D8     		bhi	.L216
 3603              	.L181:
 3604              	.LVL412:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 3605              		.loc 4 120 0
 3606 0496 634B     		ldr	r3, .L224
 3607 0498 83F83455 		strb	r5, [r3, #1332]
 3608              	.LVL413:
 3609              	.LBB468:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3610              		.loc 4 121 0
 3611 049c 0022     		movs	r2, #0
 3612              	.LBE468:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 3613              		.loc 4 119 0
 3614 049e 0425     		movs	r5, #4
 3615              	.LVL414:
 3616              	.L183:
 3617              	.LBB470:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3618              		.loc 4 121 0
 3619 04a0 604B     		ldr	r3, .L224
 3620 04a2 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 3621 04a6 9342     		cmp	r3, r2
 3622 04a8 22D9     		bls	.L182
 3623              	.LBB469:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3624              		.loc 4 127 0
 3625 04aa 5E48     		ldr	r0, .L224
 3626 04ac 00F11801 		add	r1, r0, #24
 3627 04b0 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3628              		.loc 4 128 0
 3629 04b2 6E1C     		adds	r6, r5, #1
 3630 04b4 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3631 04b6 43EA0623 		orr	r3, r3, r6, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3632              		.loc 4 129 0
 3633 04ba AE1C     		adds	r6, r5, #2
 3634 04bc 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3635 04be 43EA0643 		orr	r3, r3, r6, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 3636              		.loc 4 130 0
 3637 04c2 EE1C     		adds	r6, r5, #3
 3638 04c4 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 3639 04c6 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3640              		.loc 4 131 0
 3641 04ca C0F83835 		str	r3, [r0, #1336]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 94


 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 3642              		.loc 4 132 0
 3643 04ce 0435     		adds	r5, r5, #4
 3644              	.LVL415:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3645              		.loc 4 133 0
 3646 04d0 D0F83C15 		ldr	r1, [r0, #1340]
 3647 04d4 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3648              	.LBE469:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3649              		.loc 4 121 0
 3650 04d8 0132     		adds	r2, r2, #1
 3651              	.LVL416:
 3652 04da D2B2     		uxtb	r2, r2
 3653              	.LVL417:
 3654 04dc E0E7     		b	.L183
 3655              	.LVL418:
 3656              	.L216:
 3657              	.LBE470:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3658              		.loc 4 118 0
 3659 04de 514E     		ldr	r6, .L224
 3660 04e0 A900     		lsls	r1, r5, #2
 3661 04e2 D6F83C05 		ldr	r0, [r6, #1340]
 3662 04e6 FFF7FEFF 		bl	realloc
 3663              	.LVL419:
 3664 04ea C6F83C05 		str	r0, [r6, #1340]
 3665 04ee D2E7     		b	.L181
 3666              	.LVL420:
 3667              	.L182:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3668              		.loc 4 135 0
 3669 04f0 4C4B     		ldr	r3, .L224
 3670 04f2 03F11802 		add	r2, r3, #24
 3671              	.LVL421:
 3672 04f6 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3673              	.LVL422:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3674              		.loc 4 136 0
 3675 04f8 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 3676 04fc 9E42     		cmp	r6, r3
 3677 04fe 24D8     		bhi	.L217
 3678              	.L184:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 3679              		.loc 4 138 0
 3680 0500 0435     		adds	r5, r5, #4
 3681              	.LVL423:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 3682              		.loc 4 139 0
 3683 0502 484B     		ldr	r3, .L224
 3684 0504 83F84065 		strb	r6, [r3, #1344]
 3685              	.LVL424:
 3686              	.LBB471:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3687              		.loc 4 140 0
 3688 0508 0022     		movs	r2, #0
 3689              	.LVL425:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 95


 3690              	.L186:
 3691 050a 464B     		ldr	r3, .L224
 3692 050c 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 3693 0510 9342     		cmp	r3, r2
 3694 0512 24D9     		bls	.L185
 3695              	.LBB472:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3696              		.loc 4 146 0
 3697 0514 4348     		ldr	r0, .L224
 3698 0516 00F11801 		add	r1, r0, #24
 3699 051a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3700              		.loc 4 147 0
 3701 051c 6E1C     		adds	r6, r5, #1
 3702 051e 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3703 0520 43EA0623 		orr	r3, r3, r6, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3704              		.loc 4 148 0
 3705 0524 AE1C     		adds	r6, r5, #2
 3706 0526 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 3707 0528 43EA0643 		orr	r3, r3, r6, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3708              		.loc 4 149 0
 3709 052c EE1C     		adds	r6, r5, #3
 3710 052e 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 3711 0530 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3712              		.loc 4 150 0
 3713 0534 00F24451 		addw	r1, r0, #1348
 3714 0538 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 3715              		.loc 4 151 0
 3716 053a 0435     		adds	r5, r5, #4
 3717              	.LVL426:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3718              		.loc 4 152 0
 3719 053c D0F84815 		ldr	r1, [r0, #1352]
 3720 0540 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 3721              	.LBE472:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 3722              		.loc 4 140 0
 3723 0544 0132     		adds	r2, r2, #1
 3724              	.LVL427:
 3725 0546 D2B2     		uxtb	r2, r2
 3726              	.LVL428:
 3727 0548 DFE7     		b	.L186
 3728              	.LVL429:
 3729              	.L217:
 3730              	.LBE471:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3731              		.loc 4 137 0
 3732 054a A2F11807 		sub	r7, r2, #24
 3733 054e B100     		lsls	r1, r6, #2
 3734 0550 D7F84805 		ldr	r0, [r7, #1352]
 3735 0554 FFF7FEFF 		bl	realloc
 3736              	.LVL430:
 3737 0558 C7F84805 		str	r0, [r7, #1352]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 96


 3738 055c D0E7     		b	.L184
 3739              	.LVL431:
 3740              	.L185:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3741              		.loc 4 154 0
 3742 055e 314B     		ldr	r3, .L224
 3743 0560 03F11802 		add	r2, r3, #24
 3744              	.LVL432:
 3745 0564 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 3746              	.LVL433:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3747              		.loc 4 155 0
 3748 0566 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 3749 056a 9E42     		cmp	r6, r3
 3750 056c 05D8     		bhi	.L218
 3751              	.L187:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3752              		.loc 4 157 0
 3753 056e 2A1D     		adds	r2, r5, #4
 3754              	.LVL434:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3755              		.loc 4 158 0
 3756 0570 2C4B     		ldr	r3, .L224
 3757 0572 83F84C65 		strb	r6, [r3, #1356]
 3758              	.LVL435:
 3759              	.LBB473:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3760              		.loc 4 159 0
 3761 0576 0027     		movs	r7, #0
 3762 0578 19E0     		b	.L191
 3763              	.LVL436:
 3764              	.L218:
 3765              	.LBE473:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 3766              		.loc 4 156 0
 3767 057a A2F11807 		sub	r7, r2, #24
 3768 057e B100     		lsls	r1, r6, #2
 3769 0580 D7F85405 		ldr	r0, [r7, #1364]
 3770 0584 FFF7FEFF 		bl	realloc
 3771              	.LVL437:
 3772 0588 C7F85405 		str	r0, [r7, #1364]
 3773 058c EFE7     		b	.L187
 3774              	.LVL438:
 3775              	.L189:
 3776              	.LBB477:
 3777              	.LBB474:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3778              		.loc 4 166 0
 3779 058e 2549     		ldr	r1, .L224
 3780 0590 01F11803 		add	r3, r1, #24
 3781              	.LVL439:
 3782 0594 501E     		subs	r0, r2, #1
 3783 0596 0026     		movs	r6, #0
 3784              	.LVL440:
 3785 0598 1E54     		strb	r6, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3786              		.loc 4 167 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 97


 3787 059a 013D     		subs	r5, r5, #1
 3788 059c 1D44     		add	r5, r5, r3
 3789 059e C1F85055 		str	r5, [r1, #1360]
 3790              	.LVL441:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3791              		.loc 4 169 0
 3792 05a2 D1F85435 		ldr	r3, [r1, #1364]
 3793 05a6 43F82750 		str	r5, [r3, r7, lsl #2]	@ unaligned
 3794              	.LBE474:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3795              		.loc 4 159 0
 3796 05aa 0137     		adds	r7, r7, #1
 3797              	.LVL442:
 3798 05ac FFB2     		uxtb	r7, r7
 3799              	.LVL443:
 3800              	.L191:
 3801 05ae 1D4B     		ldr	r3, .L224
 3802 05b0 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 3803 05b4 BB42     		cmp	r3, r7
 3804 05b6 0FD9     		bls	.L188
 3805              	.LBB476:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 3806              		.loc 4 161 0
 3807 05b8 1F4B     		ldr	r3, .L224+20
 3808 05ba 9E58     		ldr	r6, [r3, r2]	@ unaligned
 3809              	.LVL444:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 3810              		.loc 4 162 0
 3811 05bc 151D     		adds	r5, r2, #4
 3812              	.LVL445:
 3813              	.LBB475:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3814              		.loc 4 163 0
 3815 05be 2B46     		mov	r3, r5
 3816              	.LVL446:
 3817              	.L190:
 3818 05c0 7219     		adds	r2, r6, r5
 3819 05c2 9A42     		cmp	r2, r3
 3820 05c4 E3D9     		bls	.L189
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 3821              		.loc 4 164 0
 3822 05c6 174A     		ldr	r2, .L224
 3823 05c8 02F11800 		add	r0, r2, #24
 3824 05cc 591E     		subs	r1, r3, #1
 3825 05ce 1A44     		add	r2, r2, r3
 3826 05d0 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 3827 05d2 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3828              		.loc 4 163 0
 3829 05d4 0133     		adds	r3, r3, #1
 3830              	.LVL447:
 3831 05d6 F3E7     		b	.L190
 3832              	.LVL448:
 3833              	.L188:
 3834              	.LBE475:
 3835              	.LBE476:
 3836              	.LBE477:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 98


 3837              	.LBE467:
 3838              	.LBE466:
 372:ROSSerial/ros/node_handle.h ****           }
 3839              		.loc 7 372 0
 3840 05d8 124B     		ldr	r3, .L224
 3841 05da 0122     		movs	r2, #1
 3842 05dc 83F82C25 		strb	r2, [r3, #1324]
 3843 05e0 72E5     		b	.L150
 3844              	.L212:
 376:ROSSerial/ros/node_handle.h ****           }
 3845              		.loc 7 376 0
 3846 05e2 104B     		ldr	r3, .L224
 3847 05e4 0022     		movs	r2, #0
 3848 05e6 83F81C25 		strb	r2, [r3, #1308]
 3849 05ea 6DE5     		b	.L150
 3850              	.L155:
 3851              	.LBE411:
 391:ROSSerial/ros/node_handle.h ****     {
 3852              		.loc 7 391 0
 3853 05ec 0D4B     		ldr	r3, .L224
 3854 05ee 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 3855 05f2 3BB1     		cbz	r3, .L152
 3856 05f4 0B4B     		ldr	r3, .L224
 3857 05f6 D3F82035 		ldr	r3, [r3, #1312]
 3858 05fa E31A     		subs	r3, r4, r3
 3859 05fc 40F6C412 		movw	r2, #2500
 3860 0600 9342     		cmp	r3, r2
 3861 0602 1DD8     		bhi	.L219
 3862              	.L152:
 3863              	.LVL449:
 3864              	.LBE408:
 3865              	.LBE407:
  43:./Src/ROS_main.cpp ****     sprintf(buf,"Millis %ld ledState = %d",HAL_GetTick(), getLedState());
 3866              		.loc 6 43 0
 3867 0604 FFF7FEFF 		bl	HAL_GetTick
 3868              	.LVL450:
 3869 0608 0446     		mov	r4, r0
 3870              	.LVL451:
 3871 060a FFF7FEFF 		bl	_Z11getLedStatev
 3872              	.LVL452:
 3873 060e 0346     		mov	r3, r0
 3874 0610 2246     		mov	r2, r4
 3875 0612 0A49     		ldr	r1, .L224+24
 3876 0614 0AA8     		add	r0, sp, #40
 3877 0616 FFF7FEFF 		bl	sprintf
 3878              	.LVL453:
 3879              		.loc 6 49 0
 3880 061a 0DF50A7D 		add	sp, sp, #552
 3881              	.LCFI28:
 3882              		.cfi_remember_state
 3883              		.cfi_def_cfa_offset 24
 3884              		@ sp needed
 3885 061e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3886              	.L225:
 3887 0622 00BF     		.align	2
 3888              	.L224:
 3889 0624 00000000 		.word	.LANCHOR1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 99


 3890 0628 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 3891 062c D34D6210 		.word	274877907
 3892 0630 40420F00 		.word	1000000
 3893 0634 00CA9A3B 		.word	1000000000
 3894 0638 18000000 		.word	.LANCHOR1+24
 3895 063c 1C000000 		.word	.LC17
 3896              	.LVL454:
 3897              	.L219:
 3898              	.LCFI29:
 3899              		.cfi_restore_state
 3900              	.LBB505:
 3901              	.LBB504:
 3902              	.LBB478:
 3903              	.LBB479:
 3904              	.LBB480:
 3905              	.LBB481:
  14:ROSSerial/std_msgs/Time.h ****   {
 3906              		.loc 1 14 0
 3907 0640 384B     		ldr	r3, .L226
 3908 0642 0193     		str	r3, [sp, #4]
 3909              	.LVL455:
 3910              	.LBB482:
 3911              	.LBB483:
 3912              	.LBB484:
 3913              		.loc 9 51 0
 3914 0644 0025     		movs	r5, #0
 3915 0646 0295     		str	r5, [sp, #8]
 3916 0648 0395     		str	r5, [sp, #12]
 3917              	.LVL456:
 3918              	.LBE484:
 3919              	.LBE483:
 3920              	.LBE482:
 3921              	.LBE481:
 3922              	.LBE480:
 3923              	.LBB485:
 3924              	.LBB486:
 597:ROSSerial/ros/node_handle.h **** 
 3925              		.loc 7 597 0
 3926 064a 374E     		ldr	r6, .L226+4
 3927 064c 1B68     		ldr	r3, [r3]
 3928 064e 06F21F21 		addw	r1, r6, #543
 3929 0652 01A8     		add	r0, sp, #4
 3930              	.LVL457:
 3931 0654 9847     		blx	r3
 3932              	.LVL458:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3933              		.loc 7 600 0
 3934 0656 FF23     		movs	r3, #255
 3935 0658 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3936              		.loc 7 601 0
 3937 065c FE23     		movs	r3, #254
 3938 065e 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3939              		.loc 7 602 0
 3940 0662 C3B2     		uxtb	r3, r0
 3941 0664 86F81A32 		strb	r3, [r6, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 100


 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3942              		.loc 7 603 0
 3943 0668 C0F30722 		ubfx	r2, r0, #8, #8
 3944 066c 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3945              		.loc 7 604 0
 3946 0670 1344     		add	r3, r3, r2
 3947 0672 DBB2     		uxtb	r3, r3
 3948 0674 DB43     		mvns	r3, r3
 3949 0676 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3950              		.loc 7 605 0
 3951 067a 0A23     		movs	r3, #10
 3952 067c 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3953              		.loc 7 606 0
 3954 0680 86F81E52 		strb	r5, [r6, #542]
 3955              	.LVL459:
 3956              	.LBB487:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3957              		.loc 7 610 0
 3958 0684 0522     		movs	r2, #5
 3959              	.LBE487:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3960              		.loc 7 609 0
 3961 0686 2B46     		mov	r3, r5
 3962 0688 05E0     		b	.L194
 3963              	.LVL460:
 3964              	.L220:
 3965              	.LBB488:
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 3966              		.loc 7 611 0
 3967 068a 2749     		ldr	r1, .L226+4
 3968 068c 1144     		add	r1, r1, r2
 3969 068e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3970 0692 0B44     		add	r3, r3, r1
 3971              	.LVL461:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3972              		.loc 7 610 0
 3973 0694 0132     		adds	r2, r2, #1
 3974              	.LVL462:
 3975              	.L194:
 3976 0696 C11D     		adds	r1, r0, #7
 3977 0698 9142     		cmp	r1, r2
 3978 069a F6DC     		bgt	.L220
 3979              	.LVL463:
 3980              	.LBE488:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 3981              		.loc 7 613 0
 3982 069c 5A42     		rsbs	r2, r3, #0
 3983              	.LVL464:
 3984 069e DBB2     		uxtb	r3, r3
 3985              	.LVL465:
 3986 06a0 D2B2     		uxtb	r2, r2
 3987 06a2 58BF     		it	pl
 3988 06a4 5342     		rsbpl	r3, r2, #0
 3989 06a6 00F10805 		add	r5, r0, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 101


 3990              	.LVL466:
 3991 06aa DB43     		mvns	r3, r3
 3992 06ac 1E4A     		ldr	r2, .L226+4
 3993 06ae 1144     		add	r1, r1, r2
 3994 06b0 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3995              		.loc 7 614 0
 3996 06b4 019B     		ldr	r3, [sp, #4]
 3997 06b6 9B68     		ldr	r3, [r3, #8]
 3998 06b8 01A8     		add	r0, sp, #4
 3999              	.LVL467:
 4000 06ba 9847     		blx	r3
 4001              	.LVL468:
 4002 06bc 2A46     		mov	r2, r5
 4003 06be 0146     		mov	r1, r0
 4004 06c0 1A48     		ldr	r0, .L226+8
 4005 06c2 FFF7FEFF 		bl	printf
 4006              	.LVL469:
 615:ROSSerial/ros/node_handle.h ****     {
 4007              		.loc 7 615 0
 4008 06c6 B5F5007F 		cmp	r5, #512
 4009 06ca 1DDC     		bgt	.L195
 4010              	.LVL470:
 4011              	.LBB489:
 4012              	.LBB490:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 4013              		.loc 8 120 0
 4014 06cc 2946     		mov	r1, r5
 4015 06ce 1848     		ldr	r0, .L226+12
 4016 06d0 FFF7FEFF 		bl	printf
 4017              	.LVL471:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 4018              		.loc 8 121 0
 4019 06d4 0A23     		movs	r3, #10
 4020 06d6 AAB2     		uxth	r2, r5
 4021 06d8 1649     		ldr	r1, .L226+16
 4022 06da 1748     		ldr	r0, .L226+20
 4023 06dc FFF7FEFF 		bl	HAL_UART_Transmit
 4024              	.LVL472:
 122:ROSSerial/AT32hardware.h **** 		{
 4025              		.loc 8 122 0
 4026 06e0 0328     		cmp	r0, #3
 4027 06e2 0BD0     		beq	.L221
 128:ROSSerial/AT32hardware.h **** 		}
 4028              		.loc 8 128 0
 4029 06e4 134A     		ldr	r2, .L226+16
 4030 06e6 2946     		mov	r1, r5
 4031 06e8 1448     		ldr	r0, .L226+24
 4032              	.LVL473:
 4033 06ea FFF7FEFF 		bl	printf
 4034              	.LVL474:
 4035              	.L197:
 4036              	.LBE490:
 4037              	.LBE489:
 4038              	.LBE486:
 4039              	.LBE485:
 4040              	.LBB499:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 102


 4041              	.LBB500:
 4042              		.loc 8 148 0
 4043 06ee FFF7FEFF 		bl	HAL_GetTick
 4044              	.LVL475:
 4045              	.LBE500:
 4046              	.LBE499:
 415:ROSSerial/ros/node_handle.h ****   }
 4047              		.loc 7 415 0
 4048 06f2 0D4B     		ldr	r3, .L226+4
 4049 06f4 9860     		str	r0, [r3, #8]
 4050              	.LVL476:
 4051              	.LBE479:
 4052              	.LBE478:
 394:ROSSerial/ros/node_handle.h ****     }
 4053              		.loc 7 394 0
 4054 06f6 C3F82045 		str	r4, [r3, #1312]
 4055 06fa 83E7     		b	.L152
 4056              	.LVL477:
 4057              	.L221:
 4058              	.LBB503:
 4059              	.LBB502:
 4060              	.LBB501:
 4061              	.LBB498:
 4062              	.LBB492:
 4063              	.LBB491:
 124:ROSSerial/AT32hardware.h **** 		}
 4064              		.loc 8 124 0
 4065 06fc 0D4A     		ldr	r2, .L226+16
 4066 06fe 2946     		mov	r1, r5
 4067 0700 0F48     		ldr	r0, .L226+28
 4068              	.LVL478:
 4069 0702 FFF7FEFF 		bl	printf
 4070              	.LVL479:
 4071 0706 F2E7     		b	.L197
 4072              	.LVL480:
 4073              	.L195:
 4074              	.LBE491:
 4075              	.LBE492:
 4076              	.LBB493:
 4077              	.LBB494:
 4078              	.LBB495:
 4079              	.LBB496:
 4080              	.LBB497:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4081              		.loc 3 13 0
 4082 0708 0E4B     		ldr	r3, .L226+32
 4083 070a 0493     		str	r3, [sp, #16]
 4084              	.LVL481:
 4085              	.LBE497:
 4086              	.LBE496:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4087              		.loc 7 635 0
 4088 070c 0323     		movs	r3, #3
 4089 070e 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4090              		.loc 7 636 0
 4091 0712 0D4B     		ldr	r3, .L226+36
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 103


 4092 0714 0693     		str	r3, [sp, #24]
 4093              		.loc 7 637 0
 4094 0716 04AA     		add	r2, sp, #16
 4095 0718 0721     		movs	r1, #7
 4096 071a 0348     		ldr	r0, .L226+4
 4097 071c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4098              	.LVL482:
 4099 0720 E5E7     		b	.L197
 4100              	.L227:
 4101 0722 00BF     		.align	2
 4102              	.L226:
 4103 0724 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4104 0728 00000000 		.word	.LANCHOR1
 4105 072c 00000000 		.word	.LC11
 4106 0730 24000000 		.word	.LC12
 4107 0734 18020000 		.word	.LANCHOR1+536
 4108 0738 00000000 		.word	huart2
 4109 073c 48000000 		.word	.LC14
 4110 0740 34000000 		.word	.LC13
 4111 0744 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4112 0748 58000000 		.word	.LC15
 4113              	.LBE495:
 4114              	.LBE494:
 4115              	.LBE493:
 4116              	.LBE498:
 4117              	.LBE501:
 4118              	.LBE502:
 4119              	.LBE503:
 4120              	.LBE504:
 4121              	.LBE505:
 4122              		.cfi_endproc
 4123              	.LFE481:
 4124              		.fnend
 4126              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 4127              		.align	1
 4128              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 4129              		.syntax unified
 4130              		.thumb
 4131              		.thumb_func
 4132              		.fpu fpv4-sp-d16
 4134              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 4135              		.fnstart
 4136              	.LFB512:
 238:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 4137              		.loc 7 238 0
 4138              		.cfi_startproc
 4139              		@ args = 0, pretend = 0, frame = 40
 4140              		@ frame_needed = 0, uses_anonymous_args = 0
 4141              	.LVL483:
 4142 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4143              		.save {r4, r5, r6, r7, r8, r9, lr}
 4144              	.LCFI30:
 4145              		.cfi_def_cfa_offset 28
 4146              		.cfi_offset 4, -28
 4147              		.cfi_offset 5, -24
 4148              		.cfi_offset 6, -20
 4149              		.cfi_offset 7, -16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 104


 4150              		.cfi_offset 8, -12
 4151              		.cfi_offset 9, -8
 4152              		.cfi_offset 14, -4
 4153              		.pad #44
 4154 0004 8BB0     		sub	sp, sp, #44
 4155              	.LCFI31:
 4156              		.cfi_def_cfa_offset 72
 4157 0006 0446     		mov	r4, r0
 4158              	.LVL484:
 4159              	.LBB591:
 4160              	.LBB592:
 4161              	.LBB593:
 4162              	.LBB594:
 4163              		.loc 8 148 0
 4164 0008 FFF7FEFF 		bl	HAL_GetTick
 4165              	.LVL485:
 4166 000c 0546     		mov	r5, r0
 4167              	.LVL486:
 4168              	.LBE594:
 4169              	.LBE593:
 252:ROSSerial/ros/node_handle.h ****     {
 4170              		.loc 7 252 0
 4171 000e D4F82435 		ldr	r3, [r4, #1316]
 4172 0012 C31A     		subs	r3, r0, r3
 4173 0014 42F6F822 		movw	r2, #11000
 4174 0018 9342     		cmp	r3, r2
 4175 001a 02D9     		bls	.L229
 254:ROSSerial/ros/node_handle.h ****     }
 4176              		.loc 7 254 0
 4177 001c 0023     		movs	r3, #0
 4178 001e 84F81C35 		strb	r3, [r4, #1308]
 4179              	.L229:
 258:ROSSerial/ros/node_handle.h ****     {
 4180              		.loc 7 258 0
 4181 0022 D4F80835 		ldr	r3, [r4, #1288]
 4182 0026 002B     		cmp	r3, #0
 4183 0028 46D0     		beq	.L231
 260:ROSSerial/ros/node_handle.h ****       {
 4184              		.loc 7 260 0
 4185 002a D4F82835 		ldr	r3, [r4, #1320]
 4186 002e 9D42     		cmp	r5, r3
 4187 0030 42D9     		bls	.L231
 262:ROSSerial/ros/node_handle.h ****       }
 4188              		.loc 7 262 0
 4189 0032 0023     		movs	r3, #0
 4190 0034 C4F80835 		str	r3, [r4, #1288]
 4191 0038 3EE0     		b	.L231
 4192              	.LVL487:
 4193              	.L285:
 4194              	.LBB595:
 4195              	.LBB596:
 4196              	.LBB597:
  84:ROSSerial/AT32hardware.h **** 		}
 4197              		.loc 8 84 0
 4198 003a 591C     		adds	r1, r3, #1
 4199 003c C04A     		ldr	r2, .L306
 4200 003e 1170     		strb	r1, [r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 105


 4201 0040 C04A     		ldr	r2, .L306+4
 4202 0042 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 4203              	.LVL488:
 4204              	.L235:
 4205              	.LBE597:
 4206              	.LBE596:
 283:ROSSerial/ros/node_handle.h ****         break;
 4207              		.loc 7 283 0
 4208 0044 0029     		cmp	r1, #0
 4209 0046 C0F2A482 		blt	.L236
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4210              		.loc 7 285 0
 4211 004a D4F81825 		ldr	r2, [r4, #1304]
 4212 004e 0A44     		add	r2, r2, r1
 4213 0050 C4F81825 		str	r2, [r4, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 4214              		.loc 7 286 0
 4215 0054 D4F80835 		ldr	r3, [r4, #1288]
 4216 0058 072B     		cmp	r3, #7
 4217 005a 1DD0     		beq	.L284
 293:ROSSerial/ros/node_handle.h ****       {
 4218              		.loc 7 293 0
 4219 005c 002B     		cmp	r3, #0
 4220 005e 4CD1     		bne	.L239
 295:ROSSerial/ros/node_handle.h ****         {
 4221              		.loc 7 295 0
 4222 0060 FF29     		cmp	r1, #255
 4223 0062 3DD1     		bne	.L240
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4224              		.loc 7 297 0
 4225 0064 0133     		adds	r3, r3, #1
 4226 0066 C4F80835 		str	r3, [r4, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 4227              		.loc 7 298 0
 4228 006a 05F11403 		add	r3, r5, #20
 4229 006e C4F82835 		str	r3, [r4, #1320]
 4230 0072 21E0     		b	.L231
 4231              	.LVL489:
 4232              	.L286:
 4233              	.LBB600:
 4234              	.LBB598:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 4235              		.loc 8 88 0
 4236 0074 0023     		movs	r3, #0
 4237 0076 B24A     		ldr	r2, .L306
 4238 0078 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 4239              		.loc 8 89 0
 4240 007a B34A     		ldr	r2, .L306+8
 4241 007c 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 4242              		.loc 8 90 0
 4243 007e B348     		ldr	r0, .L306+12
 4244 0080 0268     		ldr	r2, [r0]
 4245 0082 D368     		ldr	r3, [r2, #12]
 4246 0084 43F04003 		orr	r3, r3, #64
 4247 0088 D360     		str	r3, [r2, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 106


  91:ROSSerial/AT32hardware.h **** 		}
 4248              		.loc 8 91 0
 4249 008a 0122     		movs	r2, #1
 4250 008c B049     		ldr	r1, .L306+16
 4251 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 4252              	.LVL490:
  80:ROSSerial/AT32hardware.h **** 		
 4253              		.loc 8 80 0
 4254 0092 4FF0FF31 		mov	r1, #-1
 4255 0096 D5E7     		b	.L235
 4256              	.LVL491:
 4257              	.L284:
 4258              	.LBE598:
 4259              	.LBE600:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 4260              		.loc 7 288 0
 4261 0098 D4F81435 		ldr	r3, [r4, #1300]
 4262 009c 5A1C     		adds	r2, r3, #1
 4263 009e C4F81425 		str	r2, [r4, #1300]
 4264 00a2 2344     		add	r3, r3, r4
 4265 00a4 1976     		strb	r1, [r3, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4266              		.loc 7 289 0
 4267 00a6 D4F80C35 		ldr	r3, [r4, #1292]
 4268 00aa 013B     		subs	r3, r3, #1
 4269 00ac C4F80C35 		str	r3, [r4, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4270              		.loc 7 290 0
 4271 00b0 13B9     		cbnz	r3, .L231
 291:ROSSerial/ros/node_handle.h ****       }
 4272              		.loc 7 291 0
 4273 00b2 0823     		movs	r3, #8
 4274 00b4 C4F80835 		str	r3, [r4, #1288]
 4275              	.L231:
 270:ROSSerial/ros/node_handle.h ****       {
 4276              		.loc 7 270 0
 4277 00b8 6369     		ldr	r3, [r4, #20]
 4278 00ba 33B1     		cbz	r3, .L232
 4279              	.LVL492:
 4280              	.LBB601:
 4281              	.LBB602:
 4282              		.loc 8 148 0
 4283 00bc FFF7FEFF 		bl	HAL_GetTick
 4284              	.LVL493:
 4285              	.LBE602:
 4286              	.LBE601:
 276:ROSSerial/ros/node_handle.h ****         {
 4287              		.loc 7 276 0
 4288 00c0 401B     		subs	r0, r0, r5
 4289 00c2 6369     		ldr	r3, [r4, #20]
 4290 00c4 9842     		cmp	r0, r3
 4291 00c6 00F2E282 		bhi	.L279
 4292              	.L232:
 4293              	.LVL494:
 4294              	.LBB603:
 4295              	.LBB599:
  82:ROSSerial/AT32hardware.h **** 		{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 107


 4296              		.loc 8 82 0
 4297 00ca 9D4B     		ldr	r3, .L306
 4298 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4299 00ce 9E4A     		ldr	r2, .L306+8
 4300 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4301 00d2 9342     		cmp	r3, r2
 4302 00d4 B1D3     		bcc	.L285
  86:ROSSerial/AT32hardware.h **** 		{
 4303              		.loc 8 86 0
 4304 00d6 9342     		cmp	r3, r2
 4305 00d8 CCD0     		beq	.L286
  80:ROSSerial/AT32hardware.h **** 		
 4306              		.loc 8 80 0
 4307 00da 4FF0FF31 		mov	r1, #-1
 4308 00de B1E7     		b	.L235
 4309              	.LVL495:
 4310              	.L240:
 4311              	.LBE599:
 4312              	.LBE603:
 4313              	.LBB604:
 4314              	.LBB605:
 4315              		.loc 8 148 0
 4316 00e0 FFF7FEFF 		bl	HAL_GetTick
 4317              	.LVL496:
 4318              	.LBE605:
 4319              	.LBE604:
 300:ROSSerial/ros/node_handle.h ****         {
 4320              		.loc 7 300 0
 4321 00e4 401B     		subs	r0, r0, r5
 4322 00e6 41F28833 		movw	r3, #5000
 4323 00ea 9842     		cmp	r0, r3
 4324 00ec E4D9     		bls	.L231
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4325              		.loc 7 303 0
 4326 00ee 0023     		movs	r3, #0
 4327 00f0 84F81C35 		strb	r3, [r4, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 4328              		.loc 7 304 0
 4329 00f4 6FF00100 		mvn	r0, #1
 4330 00f8 CBE2     		b	.L228
 4331              	.L239:
 307:ROSSerial/ros/node_handle.h ****       {
 4332              		.loc 7 307 0
 4333 00fa 012B     		cmp	r3, #1
 4334 00fc 3DD0     		beq	.L287
 320:ROSSerial/ros/node_handle.h ****       {
 4335              		.loc 7 320 0
 4336 00fe 022B     		cmp	r3, #2
 4337 0100 00F0B680 		beq	.L288
 327:ROSSerial/ros/node_handle.h ****       {
 4338              		.loc 7 327 0
 4339 0104 032B     		cmp	r3, #3
 4340 0106 00F0BE80 		beq	.L289
 332:ROSSerial/ros/node_handle.h ****       {
 4341              		.loc 7 332 0
 4342 010a 042B     		cmp	r3, #4
 4343 010c 00F0C580 		beq	.L290
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 108


 339:ROSSerial/ros/node_handle.h ****       {
 4344              		.loc 7 339 0
 4345 0110 052B     		cmp	r3, #5
 4346 0112 00F0D180 		beq	.L291
 345:ROSSerial/ros/node_handle.h ****       {
 4347              		.loc 7 345 0
 4348 0116 062B     		cmp	r3, #6
 4349 0118 00F0D680 		beq	.L292
 352:ROSSerial/ros/node_handle.h ****       {
 4350              		.loc 7 352 0
 4351 011c 082B     		cmp	r3, #8
 4352 011e CBD1     		bne	.L231
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4353              		.loc 7 354 0
 4354 0120 0023     		movs	r3, #0
 4355 0122 C4F80835 		str	r3, [r4, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 4356              		.loc 7 355 0
 4357 0126 9B1A     		subs	r3, r3, r2
 4358 0128 D2B2     		uxtb	r2, r2
 4359 012a DBB2     		uxtb	r3, r3
 4360 012c 58BF     		it	pl
 4361 012e 5A42     		rsbpl	r2, r3, #0
 4362 0130 FF2A     		cmp	r2, #255
 4363 0132 C1D1     		bne	.L231
 357:ROSSerial/ros/node_handle.h ****           {
 4364              		.loc 7 357 0
 4365 0134 D4F81065 		ldr	r6, [r4, #1296]
 4366 0138 002E     		cmp	r6, #0
 4367 013a 00F0D780 		beq	.L293
 365:ROSSerial/ros/node_handle.h ****           {
 4368              		.loc 7 365 0
 4369 013e 0A2E     		cmp	r6, #10
 4370 0140 00F04981 		beq	.L294
 369:ROSSerial/ros/node_handle.h ****           {
 4371              		.loc 7 369 0
 4372 0144 062E     		cmp	r6, #6
 4373 0146 00F08B81 		beq	.L295
 374:ROSSerial/ros/node_handle.h ****           {
 4374              		.loc 7 374 0
 4375 014a 0B2E     		cmp	r6, #11
 4376 014c 00F01D82 		beq	.L296
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 4377              		.loc 7 380 0
 4378 0150 643E     		subs	r6, r6, #100
 4379 0152 06EB8603 		add	r3, r6, r6, lsl #2
 4380 0156 04EB8303 		add	r3, r4, r3, lsl #2
 4381 015a B3F8A414 		ldrh	r1, [r3, #1188]
 4382 015e 0029     		cmp	r1, #0
 4383 0160 AAD0     		beq	.L231
 381:ROSSerial/ros/node_handle.h ****               printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 4384              		.loc 7 381 0
 4385 0162 D3F8B434 		ldr	r3, [r3, #1204]
 4386 0166 7B4E     		ldr	r6, .L306+20
 4387 0168 3360     		str	r3, [r6]
 382:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 4388              		.loc 7 382 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 109


 4389 016a 7B48     		ldr	r0, .L306+24
 4390 016c FFF7FEFF 		bl	printf
 4391              	.LVL497:
 383:ROSSerial/ros/node_handle.h ****             }
 4392              		.loc 7 383 0
 4393 0170 3368     		ldr	r3, [r6]
 4394 0172 04F11800 		add	r0, r4, #24
 4395 0176 9847     		blx	r3
 4396              	.LVL498:
 4397 0178 9EE7     		b	.L231
 4398              	.L287:
 309:ROSSerial/ros/node_handle.h ****         {
 4399              		.loc 7 309 0
 4400 017a FE29     		cmp	r1, #254
 4401 017c 32D0     		beq	.L297
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4402              		.loc 7 315 0
 4403 017e 0023     		movs	r3, #0
 4404 0180 C4F80835 		str	r3, [r4, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4405              		.loc 7 316 0
 4406 0184 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 4407 0188 002B     		cmp	r3, #0
 4408 018a 95D1     		bne	.L231
 4409              	.LVL499:
 4410              	.LBB606:
 4411              	.LBB607:
 4412              	.LBB608:
 4413              	.LBB609:
  14:ROSSerial/std_msgs/Time.h ****   {
 4414              		.loc 1 14 0
 4415 018c 734B     		ldr	r3, .L306+28
 4416 018e 0193     		str	r3, [sp, #4]
 4417              	.LVL500:
 4418              	.LBB610:
 4419              	.LBB611:
 4420              	.LBB612:
 4421              		.loc 9 51 0
 4422 0190 0026     		movs	r6, #0
 4423 0192 0296     		str	r6, [sp, #8]
 4424 0194 0396     		str	r6, [sp, #12]
 4425              	.LVL501:
 4426              	.LBE612:
 4427              	.LBE611:
 4428              	.LBE610:
 4429              	.LBE609:
 4430              	.LBE608:
 4431              	.LBB613:
 4432              	.LBB614:
 597:ROSSerial/ros/node_handle.h **** 
 4433              		.loc 7 597 0
 4434 0196 1B68     		ldr	r3, [r3]
 4435 0198 04F21F21 		addw	r1, r4, #543
 4436 019c 01A8     		add	r0, sp, #4
 4437              	.LVL502:
 4438 019e 9847     		blx	r3
 4439              	.LVL503:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 110


 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4440              		.loc 7 600 0
 4441 01a0 FF23     		movs	r3, #255
 4442 01a2 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4443              		.loc 7 601 0
 4444 01a6 FE23     		movs	r3, #254
 4445 01a8 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4446              		.loc 7 602 0
 4447 01ac C3B2     		uxtb	r3, r0
 4448 01ae 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4449              		.loc 7 603 0
 4450 01b2 C0F30722 		ubfx	r2, r0, #8, #8
 4451 01b6 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4452              		.loc 7 604 0
 4453 01ba 1344     		add	r3, r3, r2
 4454 01bc DBB2     		uxtb	r3, r3
 4455 01be DB43     		mvns	r3, r3
 4456 01c0 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4457              		.loc 7 605 0
 4458 01c4 0A23     		movs	r3, #10
 4459 01c6 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 4460              		.loc 7 606 0
 4461 01ca 84F81E62 		strb	r6, [r4, #542]
 4462              	.LVL504:
 4463              	.LBB615:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4464              		.loc 7 610 0
 4465 01ce 0522     		movs	r2, #5
 4466              	.LBE615:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4467              		.loc 7 609 0
 4468 01d0 3346     		mov	r3, r6
 4469              	.LVL505:
 4470              	.L244:
 4471              	.LBB616:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4472              		.loc 7 610 0
 4473 01d2 C11D     		adds	r1, r0, #7
 4474 01d4 9142     		cmp	r1, r2
 4475 01d6 09DD     		ble	.L243
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 4476              		.loc 7 611 0
 4477 01d8 A118     		adds	r1, r4, r2
 4478 01da 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4479 01de 0B44     		add	r3, r3, r1
 4480              	.LVL506:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4481              		.loc 7 610 0
 4482 01e0 0132     		adds	r2, r2, #1
 4483              	.LVL507:
 4484 01e2 F6E7     		b	.L244
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 111


 4485              	.LVL508:
 4486              	.L297:
 4487              	.LBE616:
 4488              	.LBE614:
 4489              	.LBE613:
 4490              	.LBE607:
 4491              	.LBE606:
 311:ROSSerial/ros/node_handle.h ****         }
 4492              		.loc 7 311 0
 4493 01e4 0133     		adds	r3, r3, #1
 4494 01e6 C4F80835 		str	r3, [r4, #1288]
 4495 01ea 65E7     		b	.L231
 4496              	.LVL509:
 4497              	.L243:
 4498              	.LBB633:
 4499              	.LBB632:
 4500              	.LBB628:
 4501              	.LBB626:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 4502              		.loc 7 613 0
 4503 01ec 5A42     		rsbs	r2, r3, #0
 4504              	.LVL510:
 4505 01ee DBB2     		uxtb	r3, r3
 4506              	.LVL511:
 4507 01f0 D2B2     		uxtb	r2, r2
 4508 01f2 58BF     		it	pl
 4509 01f4 5342     		rsbpl	r3, r2, #0
 4510 01f6 00F10806 		add	r6, r0, #8
 4511              	.LVL512:
 4512 01fa DB43     		mvns	r3, r3
 4513 01fc 2144     		add	r1, r1, r4
 4514 01fe 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 4515              		.loc 7 614 0
 4516 0202 0AA8     		add	r0, sp, #40
 4517 0204 50F8243D 		ldr	r3, [r0, #-36]!
 4518 0208 9B68     		ldr	r3, [r3, #8]
 4519 020a 9847     		blx	r3
 4520              	.LVL513:
 4521 020c 3246     		mov	r2, r6
 4522 020e 0146     		mov	r1, r0
 4523 0210 5348     		ldr	r0, .L306+32
 4524 0212 FFF7FEFF 		bl	printf
 4525              	.LVL514:
 615:ROSSerial/ros/node_handle.h ****     {
 4526              		.loc 7 615 0
 4527 0216 B6F5007F 		cmp	r6, #512
 4528 021a 1CDC     		bgt	.L245
 617:ROSSerial/ros/node_handle.h ****       return l;
 4529              		.loc 7 617 0
 4530 021c 04F50677 		add	r7, r4, #536
 4531              	.LVL515:
 4532              	.LBB617:
 4533              	.LBB618:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 4534              		.loc 8 120 0
 4535 0220 3146     		mov	r1, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 112


 4536 0222 5048     		ldr	r0, .L306+36
 4537 0224 FFF7FEFF 		bl	printf
 4538              	.LVL516:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 4539              		.loc 8 121 0
 4540 0228 0A23     		movs	r3, #10
 4541 022a B2B2     		uxth	r2, r6
 4542 022c 3946     		mov	r1, r7
 4543 022e 4748     		ldr	r0, .L306+12
 4544 0230 FFF7FEFF 		bl	HAL_UART_Transmit
 4545              	.LVL517:
 122:ROSSerial/AT32hardware.h **** 		{
 4546              		.loc 8 122 0
 4547 0234 0328     		cmp	r0, #3
 4548 0236 08D0     		beq	.L298
 128:ROSSerial/AT32hardware.h **** 		}
 4549              		.loc 8 128 0
 4550 0238 3A46     		mov	r2, r7
 4551 023a 3146     		mov	r1, r6
 4552 023c 4A48     		ldr	r0, .L306+40
 4553              	.LVL518:
 4554 023e FFF7FEFF 		bl	printf
 4555              	.LVL519:
 4556              	.L247:
 4557              	.LBE618:
 4558              	.LBE617:
 4559              	.LBE626:
 4560              	.LBE628:
 4561              	.LBB629:
 4562              	.LBB630:
 4563              		.loc 8 148 0
 4564 0242 FFF7FEFF 		bl	HAL_GetTick
 4565              	.LVL520:
 4566              	.LBE630:
 4567              	.LBE629:
 415:ROSSerial/ros/node_handle.h ****   }
 4568              		.loc 7 415 0
 4569 0246 A060     		str	r0, [r4, #8]
 4570 0248 36E7     		b	.L231
 4571              	.LVL521:
 4572              	.L298:
 4573              	.LBB631:
 4574              	.LBB627:
 4575              	.LBB620:
 4576              	.LBB619:
 124:ROSSerial/AT32hardware.h **** 		}
 4577              		.loc 8 124 0
 4578 024a 3A46     		mov	r2, r7
 4579 024c 3146     		mov	r1, r6
 4580 024e 4748     		ldr	r0, .L306+44
 4581              	.LVL522:
 4582 0250 FFF7FEFF 		bl	printf
 4583              	.LVL523:
 4584 0254 F5E7     		b	.L247
 4585              	.LVL524:
 4586              	.L245:
 4587              	.LBE619:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 113


 4588              	.LBE620:
 4589              	.LBB621:
 4590              	.LBB622:
 4591              	.LBB623:
 4592              	.LBB624:
 4593              	.LBB625:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4594              		.loc 3 13 0
 4595 0256 464B     		ldr	r3, .L306+48
 4596 0258 0493     		str	r3, [sp, #16]
 4597              	.LVL525:
 4598              	.LBE625:
 4599              	.LBE624:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4600              		.loc 7 635 0
 4601 025a 0323     		movs	r3, #3
 4602 025c 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4603              		.loc 7 636 0
 4604 0260 444B     		ldr	r3, .L306+52
 4605 0262 0693     		str	r3, [sp, #24]
 4606              		.loc 7 637 0
 4607 0264 04AA     		add	r2, sp, #16
 4608 0266 0721     		movs	r1, #7
 4609 0268 2046     		mov	r0, r4
 4610 026a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4611              	.LVL526:
 4612 026e E8E7     		b	.L247
 4613              	.LVL527:
 4614              	.L288:
 4615              	.LBE623:
 4616              	.LBE622:
 4617              	.LBE621:
 4618              	.LBE627:
 4619              	.LBE631:
 4620              	.LBE632:
 4621              	.LBE633:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 4622              		.loc 7 322 0
 4623 0270 C4F80C15 		str	r1, [r4, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 4624              		.loc 7 323 0
 4625 0274 0022     		movs	r2, #0
 4626 0276 C4F81425 		str	r2, [r4, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 4627              		.loc 7 324 0
 4628 027a 0133     		adds	r3, r3, #1
 4629 027c C4F80835 		str	r3, [r4, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 4630              		.loc 7 325 0
 4631 0280 C4F81815 		str	r1, [r4, #1304]
 4632 0284 18E7     		b	.L231
 4633              	.L289:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 4634              		.loc 7 329 0
 4635 0286 D4F80C25 		ldr	r2, [r4, #1292]
 4636 028a 02EB0121 		add	r1, r2, r1, lsl #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 114


 4637 028e C4F80C15 		str	r1, [r4, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 4638              		.loc 7 330 0
 4639 0292 0133     		adds	r3, r3, #1
 4640 0294 C4F80835 		str	r3, [r4, #1288]
 4641 0298 0EE7     		b	.L231
 4642              	.L290:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 4643              		.loc 7 334 0
 4644 029a 5142     		rsbs	r1, r2, #0
 4645 029c D2B2     		uxtb	r2, r2
 4646 029e C9B2     		uxtb	r1, r1
 4647 02a0 58BF     		it	pl
 4648 02a2 4A42     		rsbpl	r2, r1, #0
 4649 02a4 FF2A     		cmp	r2, #255
 4650 02a6 03D0     		beq	.L299
 337:ROSSerial/ros/node_handle.h ****       }
 4651              		.loc 7 337 0
 4652 02a8 0023     		movs	r3, #0
 4653 02aa C4F80835 		str	r3, [r4, #1288]
 4654 02ae 03E7     		b	.L231
 4655              	.L299:
 335:ROSSerial/ros/node_handle.h ****         else
 4656              		.loc 7 335 0
 4657 02b0 0133     		adds	r3, r3, #1
 4658 02b2 C4F80835 		str	r3, [r4, #1288]
 4659 02b6 FFE6     		b	.L231
 4660              	.L291:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 4661              		.loc 7 341 0
 4662 02b8 C4F81015 		str	r1, [r4, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 4663              		.loc 7 342 0
 4664 02bc 0133     		adds	r3, r3, #1
 4665 02be C4F80835 		str	r3, [r4, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 4666              		.loc 7 343 0
 4667 02c2 C4F81815 		str	r1, [r4, #1304]
 4668 02c6 F7E6     		b	.L231
 4669              	.L292:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 4670              		.loc 7 347 0
 4671 02c8 D4F81035 		ldr	r3, [r4, #1296]
 4672 02cc 03EB0123 		add	r3, r3, r1, lsl #8
 4673 02d0 C4F81035 		str	r3, [r4, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 4674              		.loc 7 348 0
 4675 02d4 0723     		movs	r3, #7
 4676 02d6 C4F80835 		str	r3, [r4, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4677              		.loc 7 349 0
 4678 02da D4F80C35 		ldr	r3, [r4, #1292]
 4679 02de 002B     		cmp	r3, #0
 4680 02e0 7FF4EAAE 		bne	.L231
 350:ROSSerial/ros/node_handle.h ****       }
 4681              		.loc 7 350 0
 4682 02e4 0823     		movs	r3, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 115


 4683 02e6 C4F80835 		str	r3, [r4, #1288]
 4684 02ea E5E6     		b	.L231
 4685              	.L293:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 4686              		.loc 7 359 0
 4687 02ec 2046     		mov	r0, r4
 4688 02ee FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4689              	.LVL528:
 4690              	.LBB634:
 4691              	.LBB635:
 4692              	.LBB636:
 4693              	.LBB637:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 4694              		.loc 2 12 0
 4695 02f2 214B     		ldr	r3, .L306+56
 4696 02f4 0493     		str	r3, [sp, #16]
 4697              	.LVL529:
 4698              	.LBE637:
 4699              	.LBE636:
 558:ROSSerial/ros/node_handle.h ****     {
 4700              		.loc 7 558 0
 4701 02f6 3746     		mov	r7, r6
 4702 02f8 00E0     		b	.L257
 4703              	.LVL530:
 4704              	.L256:
 4705 02fa 0137     		adds	r7, r7, #1
 4706              	.LVL531:
 4707              	.L257:
 4708 02fc 042F     		cmp	r7, #4
 4709 02fe 3EDC     		bgt	.L255
 560:ROSSerial/ros/node_handle.h ****       {
 4710              		.loc 7 560 0
 4711 0300 07EB8703 		add	r3, r7, r7, lsl #2
 4712 0304 04EB8303 		add	r3, r4, r3, lsl #2
 4713 0308 B3F82C34 		ldrh	r3, [r3, #1068]
 4714 030c 002B     		cmp	r3, #0
 4715 030e F4D0     		beq	.L256
 562:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 4716              		.loc 7 562 0
 4717 0310 ADF81430 		strh	r3, [sp, #20]	@ movhi
 563:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 4718              		.loc 7 563 0
 4719 0314 07EB8703 		add	r3, r7, r7, lsl #2
 4720 0318 04EB8303 		add	r3, r4, r3, lsl #2
 4721 031c D3F83024 		ldr	r2, [r3, #1072]
 4722 0320 0692     		str	r2, [sp, #24]
 564:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 4723              		.loc 7 564 0
 4724 0322 D3F83824 		ldr	r2, [r3, #1080]
 4725 0326 0792     		str	r2, [sp, #28]
 565:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 4726              		.loc 7 565 0
 4727 0328 D3F83C34 		ldr	r3, [r3, #1084]
 4728 032c 0893     		str	r3, [sp, #32]
 566:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 4729              		.loc 7 566 0
 4730 032e 4FF40073 		mov	r3, #512
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 116


 4731 0332 0993     		str	r3, [sp, #36]
 567:ROSSerial/ros/node_handle.h ****       }
 4732              		.loc 7 567 0
 4733 0334 04AA     		add	r2, sp, #16
 4734 0336 0021     		movs	r1, #0
 4735 0338 2046     		mov	r0, r4
 4736 033a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4737              	.LVL532:
 4738 033e DCE7     		b	.L256
 4739              	.L307:
 4740              		.align	2
 4741              	.L306:
 4742 0340 00000000 		.word	g_RxRead
 4743 0344 00000000 		.word	g_RxBuf
 4744 0348 00000000 		.word	g_RxWritten
 4745 034c 00000000 		.word	huart2
 4746 0350 00000000 		.word	byte
 4747 0354 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 4748 0358 00000000 		.word	.LC16
 4749 035c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4750 0360 00000000 		.word	.LC11
 4751 0364 24000000 		.word	.LC12
 4752 0368 48000000 		.word	.LC14
 4753 036c 34000000 		.word	.LC13
 4754 0370 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4755 0374 58000000 		.word	.LC15
 4756 0378 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4757              	.LVL533:
 4758              	.L259:
 570:ROSSerial/ros/node_handle.h ****     {
 4759              		.loc 7 570 0
 4760 037c 0136     		adds	r6, r6, #1
 4761              	.LVL534:
 4762              	.L255:
 4763 037e 042E     		cmp	r6, #4
 4764 0380 1FDC     		bgt	.L258
 572:ROSSerial/ros/node_handle.h ****       {
 4765              		.loc 7 572 0
 4766 0382 06EB8603 		add	r3, r6, r6, lsl #2
 4767 0386 04EB8303 		add	r3, r4, r3, lsl #2
 4768 038a B3F8A434 		ldrh	r3, [r3, #1188]
 4769 038e 002B     		cmp	r3, #0
 4770 0390 F4D0     		beq	.L259
 574:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 4771              		.loc 7 574 0
 4772 0392 ADF81430 		strh	r3, [sp, #20]	@ movhi
 575:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 4773              		.loc 7 575 0
 4774 0396 06EB8603 		add	r3, r6, r6, lsl #2
 4775 039a 04EB8303 		add	r3, r4, r3, lsl #2
 4776 039e D3F8A824 		ldr	r2, [r3, #1192]
 4777 03a2 0692     		str	r2, [sp, #24]
 576:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 4778              		.loc 7 576 0
 4779 03a4 D3F8AC24 		ldr	r2, [r3, #1196]
 4780 03a8 0792     		str	r2, [sp, #28]
 577:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 117


 4781              		.loc 7 577 0
 4782 03aa D3F8B034 		ldr	r3, [r3, #1200]
 4783 03ae 0893     		str	r3, [sp, #32]
 578:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 4784              		.loc 7 578 0
 4785 03b0 4FF40073 		mov	r3, #512
 4786 03b4 0993     		str	r3, [sp, #36]
 579:ROSSerial/ros/node_handle.h ****       }
 4787              		.loc 7 579 0
 4788 03b6 04AA     		add	r2, sp, #16
 4789 03b8 0121     		movs	r1, #1
 4790 03ba 2046     		mov	r0, r4
 4791 03bc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4792              	.LVL535:
 4793 03c0 DCE7     		b	.L259
 4794              	.L258:
 582:ROSSerial/ros/node_handle.h ****   }
 4795              		.loc 7 582 0
 4796 03c2 0123     		movs	r3, #1
 4797 03c4 84F81C35 		strb	r3, [r4, #1308]
 4798              	.LVL536:
 4799              	.LBE635:
 4800              	.LBE634:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 4801              		.loc 7 361 0
 4802 03c8 C4F82055 		str	r5, [r4, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 4803              		.loc 7 362 0
 4804 03cc C4F82455 		str	r5, [r4, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 4805              		.loc 7 363 0
 4806 03d0 4FF0FF30 		mov	r0, #-1
 4807 03d4 5DE1     		b	.L228
 4808              	.L294:
 367:ROSSerial/ros/node_handle.h ****           }
 4809              		.loc 7 367 0
 4810 03d6 04F11806 		add	r6, r4, #24
 4811              	.LVL537:
 4812              	.LBB638:
 4813              	.LBB639:
 4814              	.LBB640:
 4815              	.LBB641:
 4816              		.loc 8 148 0
 4817 03da FFF7FEFF 		bl	HAL_GetTick
 4818              	.LVL538:
 4819              	.LBE641:
 4820              	.LBE640:
 421:ROSSerial/ros/node_handle.h **** 
 4821              		.loc 7 421 0
 4822 03de A368     		ldr	r3, [r4, #8]
 4823 03e0 C01A     		subs	r0, r0, r3
 4824              	.LVL539:
 4825              	.LBB642:
 4826              	.LBB643:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4827              		.loc 1 38 0
 4828 03e2 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 118


  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4829              		.loc 1 39 0
 4830 03e4 3346     		mov	r3, r6
 4831 03e6 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 4832 03e8 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4833              		.loc 1 40 0
 4834 03ec B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 4835 03ee 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 4836              		.loc 1 41 0
 4837 03f2 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 4838 03f4 42EA0161 		orr	r1, r2, r1, lsl #24
 4839              	.LVL540:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4840              		.loc 1 43 0
 4841 03f8 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4842              		.loc 1 44 0
 4843 03fa 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 4844 03fc 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4845              		.loc 1 45 0
 4846 0400 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 4847 0402 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 4848              		.loc 1 46 0
 4849 0406 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4850 0408 42EA0362 		orr	r2, r2, r3, lsl #24
 4851              	.LVL541:
 4852              	.LBE643:
 4853              	.LBE642:
 424:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 4854              		.loc 7 424 0
 4855 040c A34E     		ldr	r6, .L308
 4856 040e A6FB0073 		umull	r7, r3, r6, r0
 4857 0412 9B09     		lsrs	r3, r3, #6
 4858 0414 1944     		add	r1, r1, r3
 4859 0416 0591     		str	r1, [sp, #20]
 425:ROSSerial/ros/node_handle.h **** 
 4860              		.loc 7 425 0
 4861 0418 4FF47A78 		mov	r8, #1000
 4862 041c 08FB1303 		mls	r3, r8, r3, r0
 4863 0420 9F4F     		ldr	r7, .L308+4
 4864 0422 07FB0323 		mla	r3, r7, r3, r2
 4865 0426 0693     		str	r3, [sp, #24]
 4866              	.LVL542:
 4867              	.LBB644:
 4868              	.LBB645:
 4869              	.LBB646:
 4870              	.LBB647:
 4871              		.loc 8 148 0
 4872 0428 FFF7FEFF 		bl	HAL_GetTick
 4873              	.LVL543:
 4874              	.LBE647:
 4875              	.LBE646:
 444:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 119


 4876              		.loc 7 444 0
 4877 042c A6FB0023 		umull	r2, r3, r6, r0
 4878 0430 9B09     		lsrs	r3, r3, #6
 4879 0432 059A     		ldr	r2, [sp, #20]
 4880 0434 D21A     		subs	r2, r2, r3
 4881 0436 013A     		subs	r2, r2, #1
 4882 0438 E260     		str	r2, [r4, #12]
 445:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 4883              		.loc 7 445 0
 4884 043a 08FB1303 		mls	r3, r8, r3, r0
 4885 043e 069A     		ldr	r2, [sp, #24]
 4886 0440 07FB1323 		mls	r3, r7, r3, r2
 4887 0444 974A     		ldr	r2, .L308+8
 4888 0446 1A44     		add	r2, r2, r3
 4889 0448 2146     		mov	r1, r4
 4890 044a 41F8102F 		str	r2, [r1, #16]!
 446:ROSSerial/ros/node_handle.h ****   }
 4891              		.loc 7 446 0
 4892 044e 04F10C00 		add	r0, r4, #12
 4893              	.LVL544:
 4894 0452 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4895              	.LVL545:
 4896              	.LBE645:
 4897              	.LBE644:
 4898              	.LBB648:
 4899              	.LBB649:
 4900              		.loc 8 148 0
 4901 0456 FFF7FEFF 		bl	HAL_GetTick
 4902              	.LVL546:
 4903              	.LBE649:
 4904              	.LBE648:
 428:ROSSerial/ros/node_handle.h ****   }
 4905              		.loc 7 428 0
 4906 045a C4F82405 		str	r0, [r4, #1316]
 4907 045e 2BE6     		b	.L231
 4908              	.LVL547:
 4909              	.L295:
 4910              	.LBE639:
 4911              	.LBE638:
 371:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 4912              		.loc 7 371 0
 4913 0460 04F5A668 		add	r8, r4, #1328
 4914 0464 04F11807 		add	r7, r4, #24
 4915              	.LVL548:
 4916              	.LBB650:
 4917              	.LBB651:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 4918              		.loc 4 116 0
 4919 0468 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 4920              	.LVL549:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 4921              		.loc 4 117 0
 4922 046a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 4923 046e 9E42     		cmp	r6, r3
 4924 0470 1ED8     		bhi	.L300
 4925              	.L262:
 4926              	.LVL550:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 120


 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 4927              		.loc 4 120 0
 4928 0472 88F80460 		strb	r6, [r8, #4]
 4929              	.LVL551:
 4930              	.LBB652:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4931              		.loc 4 121 0
 4932 0476 0022     		movs	r2, #0
 4933              	.LBE652:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 4934              		.loc 4 119 0
 4935 0478 0426     		movs	r6, #4
 4936              	.LVL552:
 4937              	.L264:
 4938              	.LBB654:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4939              		.loc 4 121 0
 4940 047a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 4941 047e 9342     		cmp	r3, r2
 4942 0480 1ED9     		bls	.L263
 4943              	.LBB653:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4944              		.loc 4 127 0
 4945 0482 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4946              		.loc 4 128 0
 4947 0484 711C     		adds	r1, r6, #1
 4948 0486 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4949 0488 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4950              		.loc 4 129 0
 4951 048c B11C     		adds	r1, r6, #2
 4952 048e 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4953 0490 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 4954              		.loc 4 130 0
 4955 0494 F11C     		adds	r1, r6, #3
 4956 0496 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 4957 0498 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 4958              		.loc 4 131 0
 4959 049c C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 4960              		.loc 4 132 0
 4961 04a0 0436     		adds	r6, r6, #4
 4962              	.LVL553:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4963              		.loc 4 133 0
 4964 04a2 D8F80C10 		ldr	r1, [r8, #12]
 4965 04a6 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 4966              	.LBE653:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4967              		.loc 4 121 0
 4968 04aa 0132     		adds	r2, r2, #1
 4969              	.LVL554:
 4970 04ac D2B2     		uxtb	r2, r2
 4971              	.LVL555:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 121


 4972 04ae E4E7     		b	.L264
 4973              	.LVL556:
 4974              	.L300:
 4975              	.LBE654:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4976              		.loc 4 118 0
 4977 04b0 B100     		lsls	r1, r6, #2
 4978 04b2 D8F80C00 		ldr	r0, [r8, #12]
 4979 04b6 FFF7FEFF 		bl	realloc
 4980              	.LVL557:
 4981 04ba C8F80C00 		str	r0, [r8, #12]
 4982 04be D8E7     		b	.L262
 4983              	.LVL558:
 4984              	.L263:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 4985              		.loc 4 135 0
 4986 04c0 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 4987              	.LVL559:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 4988              		.loc 4 136 0
 4989 04c4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 4990 04c8 9945     		cmp	r9, r3
 4991 04ca 1ED8     		bhi	.L301
 4992              	.LVL560:
 4993              	.L265:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 4994              		.loc 4 138 0
 4995 04cc 0436     		adds	r6, r6, #4
 4996              	.LVL561:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 4997              		.loc 4 139 0
 4998 04ce 88F81090 		strb	r9, [r8, #16]
 4999              	.LVL562:
 5000              	.LBB655:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5001              		.loc 4 140 0
 5002 04d2 0022     		movs	r2, #0
 5003              	.LVL563:
 5004              	.L267:
 5005 04d4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 5006 04d8 9342     		cmp	r3, r2
 5007 04da 1FD9     		bls	.L266
 5008              	.LBB656:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5009              		.loc 4 146 0
 5010 04dc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5011              		.loc 4 147 0
 5012 04de 711C     		adds	r1, r6, #1
 5013 04e0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5014 04e2 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5015              		.loc 4 148 0
 5016 04e6 B11C     		adds	r1, r6, #2
 5017 04e8 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5018 04ea 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 122


 5019              		.loc 4 149 0
 5020 04ee F11C     		adds	r1, r6, #3
 5021 04f0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 5022 04f2 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 5023              		.loc 4 150 0
 5024 04f6 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 5025              		.loc 4 151 0
 5026 04fa 0436     		adds	r6, r6, #4
 5027              	.LVL564:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5028              		.loc 4 152 0
 5029 04fc D8F81810 		ldr	r1, [r8, #24]
 5030 0500 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5031              	.LBE656:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5032              		.loc 4 140 0
 5033 0504 0132     		adds	r2, r2, #1
 5034              	.LVL565:
 5035 0506 D2B2     		uxtb	r2, r2
 5036              	.LVL566:
 5037 0508 E4E7     		b	.L267
 5038              	.LVL567:
 5039              	.L301:
 5040              	.LBE655:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5041              		.loc 4 137 0
 5042 050a 4FEA8901 		lsl	r1, r9, #2
 5043 050e D8F81800 		ldr	r0, [r8, #24]
 5044 0512 FFF7FEFF 		bl	realloc
 5045              	.LVL568:
 5046 0516 C8F81800 		str	r0, [r8, #24]
 5047 051a D7E7     		b	.L265
 5048              	.LVL569:
 5049              	.L266:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 5050              		.loc 4 154 0
 5051 051c 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 5052              	.LVL570:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 5053              		.loc 4 155 0
 5054 0520 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5055 0524 9945     		cmp	r9, r3
 5056 0526 05D8     		bhi	.L302
 5057              	.LVL571:
 5058              	.L268:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 5059              		.loc 4 157 0
 5060 0528 321D     		adds	r2, r6, #4
 5061              	.LVL572:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 5062              		.loc 4 158 0
 5063 052a 88F81C90 		strb	r9, [r8, #28]
 5064              	.LVL573:
 5065              	.LBB657:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 123


 5066              		.loc 4 159 0
 5067 052e 4FF0000C 		mov	ip, #0
 5068 0532 17E0     		b	.L272
 5069              	.LVL574:
 5070              	.L302:
 5071              	.LBE657:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5072              		.loc 4 156 0
 5073 0534 4FEA8901 		lsl	r1, r9, #2
 5074 0538 D8F82400 		ldr	r0, [r8, #36]
 5075 053c FFF7FEFF 		bl	realloc
 5076              	.LVL575:
 5077 0540 C8F82400 		str	r0, [r8, #36]
 5078 0544 F0E7     		b	.L268
 5079              	.LVL576:
 5080              	.L270:
 5081              	.LBB661:
 5082              	.LBB658:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 5083              		.loc 4 166 0
 5084 0546 531E     		subs	r3, r2, #1
 5085              	.LVL577:
 5086 0548 0021     		movs	r1, #0
 5087 054a F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 5088              		.loc 4 167 0
 5089 054c 731E     		subs	r3, r6, #1
 5090 054e 3B44     		add	r3, r3, r7
 5091 0550 C8F82030 		str	r3, [r8, #32]
 5092              	.LVL578:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5093              		.loc 4 169 0
 5094 0554 D8F82410 		ldr	r1, [r8, #36]
 5095 0558 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 5096              	.LVL579:
 5097              	.LBE658:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5098              		.loc 4 159 0
 5099 055c 0CF1010C 		add	ip, ip, #1
 5100              	.LVL580:
 5101 0560 5FFA8CFC 		uxtb	ip, ip
 5102              	.LVL581:
 5103              	.L272:
 5104 0564 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 5105 0568 6345     		cmp	r3, ip
 5106 056a 0AD9     		bls	.L269
 5107              	.LBB660:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 5108              		.loc 4 161 0
 5109 056c B858     		ldr	r0, [r7, r2]	@ unaligned
 5110              	.LVL582:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 5111              		.loc 4 162 0
 5112 056e 161D     		adds	r6, r2, #4
 5113              	.LVL583:
 5114              	.LBB659:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 124


 5115              		.loc 4 163 0
 5116 0570 3346     		mov	r3, r6
 5117              	.LVL584:
 5118              	.L271:
 5119 0572 8219     		adds	r2, r0, r6
 5120 0574 9A42     		cmp	r2, r3
 5121 0576 E6D9     		bls	.L270
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5122              		.loc 4 164 0
 5123 0578 5A1E     		subs	r2, r3, #1
 5124 057a F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 5125 057c B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5126              		.loc 4 163 0
 5127 057e 0133     		adds	r3, r3, #1
 5128              	.LVL585:
 5129 0580 F7E7     		b	.L271
 5130              	.LVL586:
 5131              	.L269:
 5132              	.LBE659:
 5133              	.LBE660:
 5134              	.LBE661:
 5135              	.LBE651:
 5136              	.LBE650:
 372:ROSSerial/ros/node_handle.h ****           }
 5137              		.loc 7 372 0
 5138 0582 0123     		movs	r3, #1
 5139 0584 84F82C35 		strb	r3, [r4, #1324]
 5140 0588 96E5     		b	.L231
 5141              	.L296:
 376:ROSSerial/ros/node_handle.h ****           }
 5142              		.loc 7 376 0
 5143 058a 0023     		movs	r3, #0
 5144 058c 84F81C35 		strb	r3, [r4, #1308]
 5145 0590 92E5     		b	.L231
 5146              	.L236:
 5147              	.LBE595:
 391:ROSSerial/ros/node_handle.h ****     {
 5148              		.loc 7 391 0
 5149 0592 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 5150 0596 002B     		cmp	r3, #0
 5151 0598 7ED0     		beq	.L281
 5152 059a D4F82035 		ldr	r3, [r4, #1312]
 5153 059e EB1A     		subs	r3, r5, r3
 5154 05a0 40F6C412 		movw	r2, #2500
 5155 05a4 9342     		cmp	r3, r2
 5156 05a6 01D8     		bhi	.L303
 397:ROSSerial/ros/node_handle.h ****   }
 5157              		.loc 7 397 0
 5158 05a8 0020     		movs	r0, #0
 5159              	.LVL587:
 5160              	.LBE592:
 5161              	.LBE591:
 239:ROSSerial/ros/node_handle.h ****   }
 5162              		.loc 7 239 0
 5163 05aa 72E0     		b	.L228
 5164              	.LVL588:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 125


 5165              	.L303:
 5166              	.LBB691:
 5167              	.LBB689:
 5168              	.LBB662:
 5169              	.LBB663:
 5170              	.LBB664:
 5171              	.LBB665:
  14:ROSSerial/std_msgs/Time.h ****   {
 5172              		.loc 1 14 0
 5173 05ac 3E4B     		ldr	r3, .L308+12
 5174 05ae 0193     		str	r3, [sp, #4]
 5175              	.LVL589:
 5176              	.LBB666:
 5177              	.LBB667:
 5178              	.LBB668:
 5179              		.loc 9 51 0
 5180 05b0 0026     		movs	r6, #0
 5181 05b2 0296     		str	r6, [sp, #8]
 5182 05b4 0396     		str	r6, [sp, #12]
 5183              	.LVL590:
 5184              	.LBE668:
 5185              	.LBE667:
 5186              	.LBE666:
 5187              	.LBE665:
 5188              	.LBE664:
 5189              	.LBB669:
 5190              	.LBB670:
 597:ROSSerial/ros/node_handle.h **** 
 5191              		.loc 7 597 0
 5192 05b6 1B68     		ldr	r3, [r3]
 5193 05b8 04F21F21 		addw	r1, r4, #543
 5194 05bc 01A8     		add	r0, sp, #4
 5195              	.LVL591:
 5196 05be 9847     		blx	r3
 5197              	.LVL592:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5198              		.loc 7 600 0
 5199 05c0 FF23     		movs	r3, #255
 5200 05c2 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5201              		.loc 7 601 0
 5202 05c6 FE23     		movs	r3, #254
 5203 05c8 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5204              		.loc 7 602 0
 5205 05cc C3B2     		uxtb	r3, r0
 5206 05ce 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5207              		.loc 7 603 0
 5208 05d2 C0F30722 		ubfx	r2, r0, #8, #8
 5209 05d6 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5210              		.loc 7 604 0
 5211 05da 1344     		add	r3, r3, r2
 5212 05dc DBB2     		uxtb	r3, r3
 5213 05de DB43     		mvns	r3, r3
 5214 05e0 84F81C32 		strb	r3, [r4, #540]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 126


 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5215              		.loc 7 605 0
 5216 05e4 0A23     		movs	r3, #10
 5217 05e6 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 5218              		.loc 7 606 0
 5219 05ea 84F81E62 		strb	r6, [r4, #542]
 5220              	.LVL593:
 5221              	.LBB671:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5222              		.loc 7 610 0
 5223 05ee 0522     		movs	r2, #5
 5224              	.LBE671:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5225              		.loc 7 609 0
 5226 05f0 3346     		mov	r3, r6
 5227 05f2 04E0     		b	.L275
 5228              	.LVL594:
 5229              	.L304:
 5230              	.LBB672:
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 5231              		.loc 7 611 0
 5232 05f4 A118     		adds	r1, r4, r2
 5233 05f6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5234 05fa 0B44     		add	r3, r3, r1
 5235              	.LVL595:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5236              		.loc 7 610 0
 5237 05fc 0132     		adds	r2, r2, #1
 5238              	.LVL596:
 5239              	.L275:
 5240 05fe C11D     		adds	r1, r0, #7
 5241 0600 9142     		cmp	r1, r2
 5242 0602 F7DC     		bgt	.L304
 5243              	.LVL597:
 5244              	.LBE672:
 613:ROSSerial/ros/node_handle.h ****     printf("Sending message - %s, length %d\n",msg->getType(), l);
 5245              		.loc 7 613 0
 5246 0604 5A42     		rsbs	r2, r3, #0
 5247              	.LVL598:
 5248 0606 DBB2     		uxtb	r3, r3
 5249              	.LVL599:
 5250 0608 D2B2     		uxtb	r2, r2
 5251 060a 58BF     		it	pl
 5252 060c 5342     		rsbpl	r3, r2, #0
 5253 060e 00F10806 		add	r6, r0, #8
 5254              	.LVL600:
 5255 0612 DB43     		mvns	r3, r3
 5256 0614 2144     		add	r1, r1, r4
 5257 0616 81F81832 		strb	r3, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 5258              		.loc 7 614 0
 5259 061a 0AA8     		add	r0, sp, #40
 5260 061c 50F8243D 		ldr	r3, [r0, #-36]!
 5261 0620 9B68     		ldr	r3, [r3, #8]
 5262 0622 9847     		blx	r3
 5263              	.LVL601:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 127


 5264 0624 3246     		mov	r2, r6
 5265 0626 0146     		mov	r1, r0
 5266 0628 2048     		ldr	r0, .L308+16
 5267 062a FFF7FEFF 		bl	printf
 5268              	.LVL602:
 615:ROSSerial/ros/node_handle.h ****     {
 5269              		.loc 7 615 0
 5270 062e B6F5007F 		cmp	r6, #512
 5271 0632 1FDC     		bgt	.L276
 617:ROSSerial/ros/node_handle.h ****       return l;
 5272              		.loc 7 617 0
 5273 0634 04F50677 		add	r7, r4, #536
 5274              	.LVL603:
 5275              	.LBB673:
 5276              	.LBB674:
 120:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 5277              		.loc 8 120 0
 5278 0638 3146     		mov	r1, r6
 5279 063a 1D48     		ldr	r0, .L308+20
 5280 063c FFF7FEFF 		bl	printf
 5281              	.LVL604:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 5282              		.loc 8 121 0
 5283 0640 0A23     		movs	r3, #10
 5284 0642 B2B2     		uxth	r2, r6
 5285 0644 3946     		mov	r1, r7
 5286 0646 1B48     		ldr	r0, .L308+24
 5287 0648 FFF7FEFF 		bl	HAL_UART_Transmit
 5288              	.LVL605:
 122:ROSSerial/AT32hardware.h **** 		{
 5289              		.loc 8 122 0
 5290 064c 0328     		cmp	r0, #3
 5291 064e 0BD0     		beq	.L305
 128:ROSSerial/AT32hardware.h **** 		}
 5292              		.loc 8 128 0
 5293 0650 3A46     		mov	r2, r7
 5294 0652 3146     		mov	r1, r6
 5295 0654 1848     		ldr	r0, .L308+28
 5296              	.LVL606:
 5297 0656 FFF7FEFF 		bl	printf
 5298              	.LVL607:
 5299              	.L278:
 5300              	.LBE674:
 5301              	.LBE673:
 5302              	.LBE670:
 5303              	.LBE669:
 5304              	.LBB683:
 5305              	.LBB684:
 5306              		.loc 8 148 0
 5307 065a FFF7FEFF 		bl	HAL_GetTick
 5308              	.LVL608:
 5309              	.LBE684:
 5310              	.LBE683:
 415:ROSSerial/ros/node_handle.h ****   }
 5311              		.loc 7 415 0
 5312 065e A060     		str	r0, [r4, #8]
 5313              	.LVL609:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 128


 5314              	.LBE663:
 5315              	.LBE662:
 394:ROSSerial/ros/node_handle.h ****     }
 5316              		.loc 7 394 0
 5317 0660 C4F82055 		str	r5, [r4, #1312]
 397:ROSSerial/ros/node_handle.h ****   }
 5318              		.loc 7 397 0
 5319 0664 0020     		movs	r0, #0
 5320 0666 14E0     		b	.L228
 5321              	.LVL610:
 5322              	.L305:
 5323              	.LBB687:
 5324              	.LBB686:
 5325              	.LBB685:
 5326              	.LBB682:
 5327              	.LBB676:
 5328              	.LBB675:
 124:ROSSerial/AT32hardware.h **** 		}
 5329              		.loc 8 124 0
 5330 0668 3A46     		mov	r2, r7
 5331 066a 3146     		mov	r1, r6
 5332 066c 1348     		ldr	r0, .L308+32
 5333              	.LVL611:
 5334 066e FFF7FEFF 		bl	printf
 5335              	.LVL612:
 5336 0672 F2E7     		b	.L278
 5337              	.LVL613:
 5338              	.L276:
 5339              	.LBE675:
 5340              	.LBE676:
 5341              	.LBB677:
 5342              	.LBB678:
 5343              	.LBB679:
 5344              	.LBB680:
 5345              	.LBB681:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5346              		.loc 3 13 0
 5347 0674 124B     		ldr	r3, .L308+36
 5348 0676 0493     		str	r3, [sp, #16]
 5349              	.LVL614:
 5350              	.LBE681:
 5351              	.LBE680:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5352              		.loc 7 635 0
 5353 0678 0323     		movs	r3, #3
 5354 067a 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5355              		.loc 7 636 0
 5356 067e 114B     		ldr	r3, .L308+40
 5357 0680 0693     		str	r3, [sp, #24]
 5358              		.loc 7 637 0
 5359 0682 04AA     		add	r2, sp, #16
 5360 0684 0721     		movs	r1, #7
 5361 0686 2046     		mov	r0, r4
 5362 0688 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5363              	.LVL615:
 5364 068c E5E7     		b	.L278
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 129


 5365              	.LVL616:
 5366              	.L279:
 5367              	.LBE679:
 5368              	.LBE678:
 5369              	.LBE677:
 5370              	.LBE682:
 5371              	.LBE685:
 5372              	.LBE686:
 5373              	.LBE687:
 5374              	.LBB688:
 279:ROSSerial/ros/node_handle.h ****         }
 5375              		.loc 7 279 0
 5376 068e 6FF00100 		mvn	r0, #1
 5377              	.LVL617:
 5378              	.L228:
 5379              	.LBE688:
 5380              	.LBE689:
 5381              	.LBE691:
 240:ROSSerial/ros/node_handle.h **** 
 5382              		.loc 7 240 0
 5383 0692 0BB0     		add	sp, sp, #44
 5384              	.LCFI32:
 5385              		.cfi_remember_state
 5386              		.cfi_def_cfa_offset 28
 5387              		@ sp needed
 5388 0694 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5389              	.LVL618:
 5390              	.L281:
 5391              	.LCFI33:
 5392              		.cfi_restore_state
 5393              	.LBB692:
 5394              	.LBB690:
 397:ROSSerial/ros/node_handle.h ****   }
 5395              		.loc 7 397 0
 5396 0698 0020     		movs	r0, #0
 5397 069a FAE7     		b	.L228
 5398              	.L309:
 5399              		.align	2
 5400              	.L308:
 5401 069c D34D6210 		.word	274877907
 5402 06a0 40420F00 		.word	1000000
 5403 06a4 00CA9A3B 		.word	1000000000
 5404 06a8 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5405 06ac 00000000 		.word	.LC11
 5406 06b0 24000000 		.word	.LC12
 5407 06b4 00000000 		.word	huart2
 5408 06b8 48000000 		.word	.LC14
 5409 06bc 34000000 		.word	.LC13
 5410 06c0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5411 06c4 58000000 		.word	.LC15
 5412              	.LBE690:
 5413              	.LBE692:
 5414              		.cfi_endproc
 5415              	.LFE512:
 5416              		.fnend
 5418              		.section	.text._GLOBAL__sub_I_nh,"ax",%progbits
 5419              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 130


 5420              		.syntax unified
 5421              		.thumb
 5422              		.thumb_func
 5423              		.fpu fpv4-sp-d16
 5425              	_GLOBAL__sub_I_nh:
 5426              		.fnstart
 5427              	.LFB514:
 5428              		.loc 6 49 0
 5429              		.cfi_startproc
 5430              		@ args = 0, pretend = 0, frame = 0
 5431              		@ frame_needed = 0, uses_anonymous_args = 0
 5432 0000 08B5     		push	{r3, lr}
 5433              	.LCFI34:
 5434              		.cfi_def_cfa_offset 8
 5435              		.cfi_offset 3, -8
 5436              		.cfi_offset 14, -4
 5437              		.loc 6 49 0
 5438 0002 4FF6FF71 		movw	r1, #65535
 5439 0006 0120     		movs	r0, #1
 5440 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 5441              	.LVL619:
 5442 000c 08BD     		pop	{r3, pc}
 5443              		.cfi_endproc
 5444              	.LFE514:
 5445              		.cantunwind
 5446              		.fnend
 5448              		.section	.init_array,"aw",%init_array
 5449              		.align	2
 5450 0000 00000000 		.word	_GLOBAL__sub_I_nh(target1)
 5451              		.weak	_ZTVN8std_msgs4TimeE
 5452              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5453              		.align	2
 5456              	_ZTVN8std_msgs4TimeE:
 5457 0000 00000000 		.word	0
 5458 0004 00000000 		.word	0
 5459 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5460 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5461 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5462 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5463              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5464              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5465              		.align	2
 5468              	_ZTVN14rosserial_msgs9TopicInfoE:
 5469 0000 00000000 		.word	0
 5470 0004 00000000 		.word	0
 5471 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5472 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5473 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5474 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5475              		.weak	_ZTVN14rosserial_msgs3LogE
 5476              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5477              		.align	2
 5480              	_ZTVN14rosserial_msgs3LogE:
 5481 0000 00000000 		.word	0
 5482 0004 00000000 		.word	0
 5483 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5484 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 131


 5485 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5486 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5487              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5488              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5489              		.align	2
 5492              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5493 0000 00000000 		.word	0
 5494 0004 00000000 		.word	0
 5495 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5496 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5497 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5498 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5499              		.weak	_ZTVN8std_msgs6StringE
 5500              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 5501              		.align	2
 5504              	_ZTVN8std_msgs6StringE:
 5505 0000 00000000 		.word	0
 5506 0004 00000000 		.word	0
 5507 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 5508 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 5509 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 5510 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 5511              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 5512              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 5513              		.align	2
 5516              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 5517 0000 00000000 		.word	0
 5518 0004 00000000 		.word	0
 5519 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 5520 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5521 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 5522              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5523              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 5524              		.align	2
 5527              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 5528 0000 00000000 		.space	4
 5529              		.global	chatter
 5530              		.global	nh
 5531              		.section	.bss.chatter,"aw",%nobits
 5532              		.align	2
 5533              		.set	.LANCHOR2,. + 0
 5536              	chatter:
 5537 0000 00000000 		.space	4
 5538              		.section	.bss.nh,"aw",%nobits
 5539              		.align	2
 5540              		.set	.LANCHOR1,. + 0
 5543              	nh:
 5544 0000 00000000 		.space	1368
 5544      00000000 
 5544      00000000 
 5544      00000000 
 5544      00000000 
 5545              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 5546              		.align	2
 5547              	.LC6:
 5548 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5548      39386264 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 132


 5548      61363539 
 5548      38313938 
 5548      36646466 
 5549              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 5550              		.align	2
 5551              	.LC5:
 5552 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5552      64373331 
 5552      63323539 
 5552      33333236 
 5552      31636436 
 5553              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 5554              		.align	2
 5555              	.LC4:
 5556 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5556      65726961 
 5556      6C5F6D73 
 5556      67732F4C 
 5556      6F6700
 5557              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 5558              		.align	2
 5559              	.LC3:
 5560 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5560      31663838 
 5560      66633434 
 5560      38393266 
 5560      38633130 
 5561              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 5562              		.align	2
 5563              	.LC2:
 5564 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5564      65726961 
 5564      6C5F6D73 
 5564      67732F54 
 5564      6F706963 
 5565              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 5566              		.align	2
 5567              		.set	.LANCHOR0,. + 0
 5570              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5571 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5571      65726961 
 5571      6C5F6D73 
 5571      67732F52 
 5571      65717565 
 5572              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str
 5573              		.align	2
 5574              	.LC11:
 5575 0000 53656E64 		.ascii	"Sending message - %s, length %d\012\000"
 5575      696E6720 
 5575      6D657373 
 5575      61676520 
 5575      2D202573 
 5576 0021 000000   		.space	3
 5577              	.LC12:
 5578 0024 7072696E 		.ascii	"printing %d\012\000"
 5578      74696E67 
 5578      2025640A 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 133


 5578      00
 5579 0031 000000   		.space	3
 5580              	.LC13:
 5581 0034 74696D65 		.ascii	"timeout %d - %s\012\000"
 5581      6F757420 
 5581      2564202D 
 5581      2025730A 
 5581      00
 5582 0045 000000   		.space	3
 5583              	.LC14:
 5584 0048 646F6E65 		.ascii	"done %d - %s\012\000"
 5584      20256420 
 5584      2D202573 
 5584      0A00
 5585 0056 0000     		.space	2
 5586              	.LC15:
 5587 0058 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5587      61676520 
 5587      66726F6D 
 5587      20646576 
 5587      69636520 
 5588 008b 66666572 		.ascii	"ffer.\000"
 5588      2E00
 5589              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 5590              		.align	2
 5591              	.LC1:
 5592 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5592      36366337 
 5592      34633535 
 5592      32633331 
 5592      31666263 
 5593              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 5594              		.align	2
 5595              	.LC0:
 5596 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5596      6D736773 
 5596      2F54696D 
 5596      6500
 5597              		.section	.rodata._ZN8std_msgs6String6getMD5Ev.str1.4,"aMS",%progbits,1
 5598              		.align	2
 5599              	.LC8:
 5600 0000 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 5600      65386131 
 5600      36383763 
 5600      65633863 
 5600      38626438 
 5601              		.section	.rodata._ZN8std_msgs6String7getTypeEv.str1.4,"aMS",%progbits,1
 5602              		.align	2
 5603              	.LC7:
 5604 0000 7374645F 		.ascii	"std_msgs/String\000"
 5604      6D736773 
 5604      2F537472 
 5604      696E6700 
 5605              		.section	.rodata.ros_init.str1.4,"aMS",%progbits,1
 5606              		.align	2
 5607              	.LC9:
 5608 0000 4E6F6465 		.ascii	"Node init\000"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 134


 5608      20696E69 
 5608      7400
 5609 000a 0000     		.space	2
 5610              	.LC10:
 5611 000c 63686174 		.ascii	"chatter\000"
 5611      74657200 
 5612              		.section	.rodata.ros_run.str1.4,"aMS",%progbits,1
 5613              		.align	2
 5614              	.LC16:
 5615 0000 43616C6C 		.ascii	"Calling callback with %id\012\000"
 5615      696E6720 
 5615      63616C6C 
 5615      6261636B 
 5615      20776974 
 5616 001b 00       		.space	1
 5617              	.LC17:
 5618 001c 4D696C6C 		.ascii	"Millis %ld ledState = %d\000"
 5618      69732025 
 5618      6C64206C 
 5618      65645374 
 5618      61746520 
 5619              		.text
 5620              	.Letext0:
 5621              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 5622              		.file 11 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 5623              		.file 12 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 5624              		.file 13 "Inc/system_at32f4xx.h"
 5625              		.file 14 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 5626              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 5627              		.file 16 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 5628              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 5629              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 5630              		.file 19 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5631              		.file 20 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5632              		.file 21 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5633              		.file 22 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 5634              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 5635              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 5636              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 5637              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 5638              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 5639              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 5640              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 5641              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 5642              		.file 31 "<built-in>"
 5643              		.file 32 "ROSSerial/ros/msg.h"
 5644              		.file 33 "ROSSerial/ros/duration.h"
 5645              		.file 34 "ROSSerial/ros/publisher.h"
 5646              		.file 35 "ROSSerial/ros.h"
 5647              		.file 36 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 5648              		.file 37 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 5649              		.file 38 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 5650              		.file 39 "Inc/ROS_subscribe.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 135


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ROS_main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:615    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:622    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:686    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:693    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 _ZN8std_msgs6String7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:709    .text._ZN8std_msgs6String7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:716    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:723    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 _ZN8std_msgs6String6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:739    .text._ZN8std_msgs6String6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 136


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:746    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:752    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:896    .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5516   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5492   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:905    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:912    .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:931    .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:938    .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:983    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:990    .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1107   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1114   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1163   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1170   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1365   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1372   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1622   .text.ros_init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1629   .text.ros_init:0000000000000000 ros_init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1759   .text.ros_init:0000000000000094 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5504   .rodata._ZTVN8std_msgs6StringE:0000000000000000 _ZTVN8std_msgs6StringE
         .ARM.exidx.text.ros_init:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1771   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1778   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:1988   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:00000000000000f0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5480   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2000   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2007   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2386   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:00000000000001b4 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2398   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2405   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2765   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:00000000000001a4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5456   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2788   .text.ros_run:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:2795   .text.ros_run:0000000000000000 ros_run
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:3353   .text.ros_run:00000000000002f4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5527   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:3371   .text.ros_run:0000000000000334 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:3889   .text.ros_run:0000000000000624 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5468   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:3907   .text.ros_run:0000000000000640 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:4103   .text.ros_run:0000000000000724 $d
          .ARM.exidx.text.ros_run:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:4127   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:4134   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:4742   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000340 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:4760   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000037c $t
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s 			page 137


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5401   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000069c $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5419   .text._GLOBAL__sub_I_nh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5425   .text._GLOBAL__sub_I_nh:0000000000000000 _GLOBAL__sub_I_nh
.ARM.exidx.text._GLOBAL__sub_I_nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5449   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5453   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5465   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5477   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5489   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5501   .rodata._ZTVN8std_msgs6StringE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5513   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5524   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5536   .bss.chatter:0000000000000000 chatter
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5543   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5532   .bss.chatter:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5539   .bss.nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5546   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5550   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5554   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5558   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5562   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5566   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5570   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5573   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5590   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5594   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5598   .rodata._ZN8std_msgs6String6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5602   .rodata._ZN8std_msgs6String7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5606   .rodata.ros_init.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccxvahLH.s:5613   .rodata.ros_run.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
memcpy
realloc
HAL_UART_Receive_IT
puts
_Z16rosSubscribeInitPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
byte
huart2
__aeabi_unwind_cpp_pr0
printf
HAL_UART_Transmit
HAL_GetTick
g_RxRead
g_RxBuf
g_RxWritten
_ZN3ros16normalizeSecNSecERmS0_
_Z11getLedStatev
sprintf
