ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ROS_main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC3
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB145:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE145:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB146:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE146:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB147:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE147:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC5
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC6
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB148:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE148:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC7
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC8
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC9
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 615              		.align	1
 616              		.weak	_ZN8std_msgs6Header11deserializeEPh
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	_ZN8std_msgs6Header11deserializeEPh:
 623              		.fnstart
 624              	.LFB475:
 625              		.file 5 "ROSSerial/std_msgs/Header.h"
   1:ROSSerial/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:ROSSerial/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:ROSSerial/std_msgs/Header.h **** 
   4:ROSSerial/std_msgs/Header.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Header.h **** #include <string.h>
   6:ROSSerial/std_msgs/Header.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Header.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Header.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Header.h **** 
  10:ROSSerial/std_msgs/Header.h **** namespace std_msgs
  11:ROSSerial/std_msgs/Header.h **** {
  12:ROSSerial/std_msgs/Header.h **** 
  13:ROSSerial/std_msgs/Header.h ****   class Header : public ros::Msg
  14:ROSSerial/std_msgs/Header.h ****   {
  15:ROSSerial/std_msgs/Header.h ****     public:
  16:ROSSerial/std_msgs/Header.h ****       uint32_t seq;
  17:ROSSerial/std_msgs/Header.h ****       ros::Time stamp;
  18:ROSSerial/std_msgs/Header.h ****       const char* frame_id;
  19:ROSSerial/std_msgs/Header.h **** 
  20:ROSSerial/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/std_msgs/Header.h ****     {
  22:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  26:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  27:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 19


  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  31:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  32:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  36:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  37:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  38:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  39:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  40:ROSSerial/std_msgs/Header.h ****       offset += 4;
  41:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  42:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  43:ROSSerial/std_msgs/Header.h ****       return offset;
  44:ROSSerial/std_msgs/Header.h ****     }
  45:ROSSerial/std_msgs/Header.h **** 
  46:ROSSerial/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
 626              		.loc 5 46 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL60:
 632 0000 30B4     		push	{r4, r5}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 5, -4
 637              	.LVL61:
  47:ROSSerial/std_msgs/Header.h ****     {
  48:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  49:ROSSerial/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
 638              		.loc 5 49 0
 639 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 640 0004 4360     		str	r3, [r0, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 641              		.loc 5 50 0
 642 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 643 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 644 000c 4360     		str	r3, [r0, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 645              		.loc 5 51 0
 646 000e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 647 0010 43EA0243 		orr	r3, r3, r2, lsl #16
 648 0014 4360     		str	r3, [r0, #4]
  52:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 649              		.loc 5 52 0
 650 0016 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 651 0018 43EA0263 		orr	r3, r3, r2, lsl #24
 652 001c 4360     		str	r3, [r0, #4]
 653              	.LVL62:
  53:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 654              		.loc 5 54 0
 655 001e 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 656 0020 8360     		str	r3, [r0, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 20


 657              		.loc 5 55 0
 658 0022 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 659 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 660 0028 8360     		str	r3, [r0, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 661              		.loc 5 56 0
 662 002a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 663 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 664 0030 8360     		str	r3, [r0, #8]
  57:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 665              		.loc 5 57 0
 666 0032 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 667 0034 43EA0263 		orr	r3, r3, r2, lsl #24
 668 0038 8360     		str	r3, [r0, #8]
 669              	.LVL63:
  58:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 670              		.loc 5 59 0
 671 003a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 672 003c C360     		str	r3, [r0, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 673              		.loc 5 60 0
 674 003e 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 675 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 676 0044 C360     		str	r3, [r0, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 677              		.loc 5 61 0
 678 0046 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 679 0048 43EA0243 		orr	r3, r3, r2, lsl #16
 680 004c C360     		str	r3, [r0, #12]
  62:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 681              		.loc 5 62 0
 682 004e CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 683 0050 43EA0263 		orr	r3, r3, r2, lsl #24
 684 0054 C360     		str	r3, [r0, #12]
 685              	.LVL64:
  63:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  64:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id;
  65:ROSSerial/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
 686              		.loc 5 65 0
 687 0056 CD68     		ldr	r5, [r1, #12]	@ unaligned
 688              	.LVL65:
 689              	.LBB150:
  66:ROSSerial/std_msgs/Header.h ****       offset += 4;
  67:ROSSerial/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
 690              		.loc 5 67 0
 691 0058 1023     		movs	r3, #16
 692              	.LVL66:
 693              	.L41:
 694              		.loc 5 67 0 is_stmt 0 discriminator 3
 695 005a 05F11002 		add	r2, r5, #16
 696 005e 9A42     		cmp	r2, r3
 697 0060 04D9     		bls	.L40
  68:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 698              		.loc 5 68 0 is_stmt 1 discriminator 2
 699 0062 5A1E     		subs	r2, r3, #1
 700 0064 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 21


 701 0066 8C54     		strb	r4, [r1, r2]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 702              		.loc 5 67 0 discriminator 2
 703 0068 0133     		adds	r3, r3, #1
 704              	.LVL67:
 705 006a F6E7     		b	.L41
 706              	.L40:
 707              	.LBE150:
  69:ROSSerial/std_msgs/Header.h ****       }
  70:ROSSerial/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
 708              		.loc 5 70 0
 709 006c 0F35     		adds	r5, r5, #15
 710              	.LVL68:
 711 006e 0023     		movs	r3, #0
 712              	.LVL69:
 713 0070 4B55     		strb	r3, [r1, r5]
  71:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 714              		.loc 5 71 0
 715 0072 0F31     		adds	r1, r1, #15
 716              	.LVL70:
 717 0074 0161     		str	r1, [r0, #16]
 718              	.LVL71:
  72:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  73:ROSSerial/std_msgs/Header.h ****      return offset;
  74:ROSSerial/std_msgs/Header.h ****     }
 719              		.loc 5 74 0
 720 0076 1046     		mov	r0, r2
 721              	.LVL72:
 722 0078 30BC     		pop	{r4, r5}
 723              	.LCFI5:
 724              		.cfi_restore 5
 725              		.cfi_restore 4
 726              		.cfi_def_cfa_offset 0
 727 007a 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE475:
 730              		.cantunwind
 731              		.fnend
 733              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 734              		.align	1
 735              		.weak	_ZN8std_msgs6Header7getTypeEv
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	_ZN8std_msgs6Header7getTypeEv:
 742              		.fnstart
 743              	.LFB476:
  75:ROSSerial/std_msgs/Header.h **** 
  76:ROSSerial/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 744              		.loc 5 76 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.LVL73:
 750              		.loc 5 76 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 22


 751 0000 0048     		ldr	r0, .L44
 752              	.LVL74:
 753 0002 7047     		bx	lr
 754              	.L45:
 755              		.align	2
 756              	.L44:
 757 0004 00000000 		.word	.LC10
 758              		.cfi_endproc
 759              	.LFE476:
 760              		.cantunwind
 761              		.fnend
 763              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 764              		.align	1
 765              		.weak	_ZN8std_msgs6Header6getMD5Ev
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv4-sp-d16
 771              	_ZN8std_msgs6Header6getMD5Ev:
 772              		.fnstart
 773              	.LFB477:
  77:ROSSerial/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 774              		.loc 5 77 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL75:
 780              		.loc 5 77 0
 781 0000 0048     		ldr	r0, .L47
 782              	.LVL76:
 783 0002 7047     		bx	lr
 784              	.L48:
 785              		.align	2
 786              	.L47:
 787 0004 00000000 		.word	.LC11
 788              		.cfi_endproc
 789              	.LFE477:
 790              		.cantunwind
 791              		.fnend
 793              		.section	.text._ZN11sensor_msgs10JointState7getTypeEv,"axG",%progbits,_ZN11sensor_msgs10JointState
 794              		.align	1
 795              		.weak	_ZN11sensor_msgs10JointState7getTypeEv
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv4-sp-d16
 801              	_ZN11sensor_msgs10JointState7getTypeEv:
 802              		.fnstart
 803              	.LFB489:
 804              		.file 6 "ROSSerial/sensor_msgs/JointState.h"
   1:ROSSerial/sensor_msgs/JointState.h **** #ifndef _ROS_sensor_msgs_JointState_h
   2:ROSSerial/sensor_msgs/JointState.h **** #define _ROS_sensor_msgs_JointState_h
   3:ROSSerial/sensor_msgs/JointState.h **** 
   4:ROSSerial/sensor_msgs/JointState.h **** #include <stdint.h>
   5:ROSSerial/sensor_msgs/JointState.h **** #include <string.h>
   6:ROSSerial/sensor_msgs/JointState.h **** #include <stdlib.h>
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 23


   7:ROSSerial/sensor_msgs/JointState.h **** #include "ros/msg.h"
   8:ROSSerial/sensor_msgs/JointState.h **** #include "std_msgs/Header.h"
   9:ROSSerial/sensor_msgs/JointState.h **** 
  10:ROSSerial/sensor_msgs/JointState.h **** namespace sensor_msgs
  11:ROSSerial/sensor_msgs/JointState.h **** {
  12:ROSSerial/sensor_msgs/JointState.h **** 
  13:ROSSerial/sensor_msgs/JointState.h ****   class JointState : public ros::Msg
  14:ROSSerial/sensor_msgs/JointState.h ****   {
  15:ROSSerial/sensor_msgs/JointState.h ****     public:
  16:ROSSerial/sensor_msgs/JointState.h ****       typedef std_msgs::Header _header_type;
  17:ROSSerial/sensor_msgs/JointState.h ****       _header_type header;
  18:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_length;
  19:ROSSerial/sensor_msgs/JointState.h ****       typedef char* _name_type;
  20:ROSSerial/sensor_msgs/JointState.h ****       _name_type st_name;
  21:ROSSerial/sensor_msgs/JointState.h ****       _name_type * name;
  22:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_length;
  23:ROSSerial/sensor_msgs/JointState.h ****       typedef float _position_type;
  24:ROSSerial/sensor_msgs/JointState.h ****       _position_type st_position;
  25:ROSSerial/sensor_msgs/JointState.h ****       _position_type * position;
  26:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_length;
  27:ROSSerial/sensor_msgs/JointState.h ****       typedef float _velocity_type;
  28:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type st_velocity;
  29:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type * velocity;
  30:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_length;
  31:ROSSerial/sensor_msgs/JointState.h ****       typedef float _effort_type;
  32:ROSSerial/sensor_msgs/JointState.h ****       _effort_type st_effort;
  33:ROSSerial/sensor_msgs/JointState.h ****       _effort_type * effort;
  34:ROSSerial/sensor_msgs/JointState.h **** 
  35:ROSSerial/sensor_msgs/JointState.h ****     JointState():
  36:ROSSerial/sensor_msgs/JointState.h ****       header(),
  37:ROSSerial/sensor_msgs/JointState.h ****       name_length(0), name(NULL),
  38:ROSSerial/sensor_msgs/JointState.h ****       position_length(0), position(NULL),
  39:ROSSerial/sensor_msgs/JointState.h ****       velocity_length(0), velocity(NULL),
  40:ROSSerial/sensor_msgs/JointState.h ****       effort_length(0), effort(NULL)
  41:ROSSerial/sensor_msgs/JointState.h ****     {
  42:ROSSerial/sensor_msgs/JointState.h ****     }
  43:ROSSerial/sensor_msgs/JointState.h **** 
  44:ROSSerial/sensor_msgs/JointState.h ****     virtual int serialize(unsigned char *outbuffer) const
  45:ROSSerial/sensor_msgs/JointState.h ****     {
  46:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  47:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.serialize(outbuffer + offset);
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->name_length >> (8 * 0)) & 0xFF;
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
  51:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
  52:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  53:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
  54:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
  55:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
  56:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
  57:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
  58:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
  59:ROSSerial/sensor_msgs/JointState.h ****       }
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->position_length >> (8 * 0)) & 0xFF;
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
  63:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 24


  64:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
  65:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
  66:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
  67:ROSSerial/sensor_msgs/JointState.h ****       }
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->velocity_length >> (8 * 0)) & 0xFF;
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
  71:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
  72:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
  73:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
  74:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
  75:ROSSerial/sensor_msgs/JointState.h ****       }
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->effort_length >> (8 * 0)) & 0xFF;
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
  79:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
  80:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
  81:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
  82:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
  83:ROSSerial/sensor_msgs/JointState.h ****       }
  84:ROSSerial/sensor_msgs/JointState.h ****       return offset;
  85:ROSSerial/sensor_msgs/JointState.h ****     }
  86:ROSSerial/sensor_msgs/JointState.h **** 
  87:ROSSerial/sensor_msgs/JointState.h ****     virtual int deserialize(unsigned char *inbuffer)
  88:ROSSerial/sensor_msgs/JointState.h ****     {
  89:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  90:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.deserialize(inbuffer + offset);
  91:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
  94:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
  95:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  96:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
  97:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
  98:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
  99:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 100:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 101:ROSSerial/sensor_msgs/JointState.h ****       arrToVar(length_st_name, (inbuffer + offset));
 102:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 103:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 104:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 105:ROSSerial/sensor_msgs/JointState.h ****       }
 106:ROSSerial/sensor_msgs/JointState.h ****       inbuffer[offset+length_st_name-1]=0;
 107:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 108:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 109:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 110:ROSSerial/sensor_msgs/JointState.h ****       }
 111:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 114:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 115:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 116:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 117:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 118:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 119:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 120:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 25


 121:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 122:ROSSerial/sensor_msgs/JointState.h ****       }
 123:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 126:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 127:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 128:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 129:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 130:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 131:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 132:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 133:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 134:ROSSerial/sensor_msgs/JointState.h ****       }
 135:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 138:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 139:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 140:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 141:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 142:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 143:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 144:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 145:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 146:ROSSerial/sensor_msgs/JointState.h ****       }
 147:ROSSerial/sensor_msgs/JointState.h ****      return offset;
 148:ROSSerial/sensor_msgs/JointState.h ****     }
 149:ROSSerial/sensor_msgs/JointState.h **** 
 150:ROSSerial/sensor_msgs/JointState.h ****     const char * getType(){ return "sensor_msgs/JointState"; };
 805              		.loc 6 150 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810              	.LVL77:
 811              		.loc 6 150 0
 812 0000 0048     		ldr	r0, .L50
 813              	.LVL78:
 814 0002 7047     		bx	lr
 815              	.L51:
 816              		.align	2
 817              	.L50:
 818 0004 00000000 		.word	.LC12
 819              		.cfi_endproc
 820              	.LFE489:
 821              		.cantunwind
 822              		.fnend
 824              		.section	.text._ZN11sensor_msgs10JointState6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs10JointState6
 825              		.align	1
 826              		.weak	_ZN11sensor_msgs10JointState6getMD5Ev
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 830              		.fpu fpv4-sp-d16
 832              	_ZN11sensor_msgs10JointState6getMD5Ev:
 833              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 26


 834              	.LFB490:
 151:ROSSerial/sensor_msgs/JointState.h ****     const char * getMD5(){ return "3066dcd76a6cfaef579bd0f34173e9fd"; };
 835              		.loc 6 151 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840              	.LVL79:
 841              		.loc 6 151 0
 842 0000 0048     		ldr	r0, .L53
 843              	.LVL80:
 844 0002 7047     		bx	lr
 845              	.L54:
 846              		.align	2
 847              	.L53:
 848 0004 00000000 		.word	.LC13
 849              		.cfi_endproc
 850              	.LFE490:
 851              		.cantunwind
 852              		.fnend
 854              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 855              		.align	1
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 859              		.fpu fpv4-sp-d16
 861              	_Z41__static_initialization_and_destruction_0ii:
 862              		.fnstart
 863              	.LFB523:
 864              		.file 7 "./Src/ROS_main.cpp"
   1:./Src/ROS_main.cpp **** /*
   2:./Src/ROS_main.cpp **** * Implement all ROS functions here.
   3:./Src/ROS_main.cpp **** */
   4:./Src/ROS_main.cpp **** 
   5:./Src/ROS_main.cpp **** #include "ros.h"
   6:./Src/ROS_main.cpp **** #include "ROS_subscribe.h"
   7:./Src/ROS_main.cpp **** #include "sensor_msgs/JointState.h"
   8:./Src/ROS_main.cpp **** #include "hallinterrupts.h"
   9:./Src/ROS_main.cpp **** 
  10:./Src/ROS_main.cpp **** 
  11:./Src/ROS_main.cpp **** extern volatile int pwml;  // global variable for pwm left. -1000 to 1000
  12:./Src/ROS_main.cpp **** extern volatile int pwmr;  // global variable for pwm right. -1000 to 1000
  13:./Src/ROS_main.cpp **** 
  14:./Src/ROS_main.cpp **** 
  15:./Src/ROS_main.cpp **** extern "C" 
  16:./Src/ROS_main.cpp **** {
  17:./Src/ROS_main.cpp ****     void ros_init(void);
  18:./Src/ROS_main.cpp ****     void ros_run(void);
  19:./Src/ROS_main.cpp ****     void get_position(sensor_msgs::JointState *wheelPositions);
  20:./Src/ROS_main.cpp ****     //void HallInterruptReadPosn( HALL_POSN*, int );
  21:./Src/ROS_main.cpp **** }
  22:./Src/ROS_main.cpp **** 
  23:./Src/ROS_main.cpp **** using namespace ros;
  24:./Src/ROS_main.cpp **** 
  25:./Src/ROS_main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  26:./Src/ROS_main.cpp **** 
  27:./Src/ROS_main.cpp **** ros::PublisherType *hovebotState;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 27


  28:./Src/ROS_main.cpp **** 
  29:./Src/ROS_main.cpp **** void ros_init()
  30:./Src/ROS_main.cpp **** {
  31:./Src/ROS_main.cpp ****     nh.initNode();
  32:./Src/ROS_main.cpp **** 
  33:./Src/ROS_main.cpp ****     /* Register Publisher  */
  34:./Src/ROS_main.cpp ****     //sensor_msgs::JointState varwheels;
  35:./Src/ROS_main.cpp ****     //wheelPositions = &varwheels;
  36:./Src/ROS_main.cpp ****     //Init wheelPositions
  37:./Src/ROS_main.cpp **** 
  38:./Src/ROS_main.cpp ****     sensor_msgs::JointState tmpVar;
  39:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hovebot_state",  &tmpVar);
  40:./Src/ROS_main.cpp **** 
  41:./Src/ROS_main.cpp ****     /* Register Subscriber led */
  42:./Src/ROS_main.cpp ****     rosSubscribeInit(&nh);
  43:./Src/ROS_main.cpp **** }
  44:./Src/ROS_main.cpp **** 
  45:./Src/ROS_main.cpp **** void ros_run()
  46:./Src/ROS_main.cpp **** {
  47:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
  48:./Src/ROS_main.cpp ****     char *names[2] = {"left","right"};
  49:./Src/ROS_main.cpp ****     float position[2], velocity[2], effort[2];
  50:./Src/ROS_main.cpp **** 
  51:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
  52:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
  53:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
  54:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
  55:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
  56:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
  57:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
  58:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
  59:./Src/ROS_main.cpp **** 
  60:./Src/ROS_main.cpp ****     nh.spinOnce1();
  61:./Src/ROS_main.cpp **** 
  62:./Src/ROS_main.cpp ****     //test if we can stop at 60% angle
  63:./Src/ROS_main.cpp ****     // #ifdef CONTROL_MOTOR_TEST
  64:./Src/ROS_main.cpp ****     //   int langle = 60*HALL_POSN_PER_REV/360;
  65:./Src/ROS_main.cpp ****     //   int rangle = -60*HALL_POSN_PER_REV/360;
  66:./Src/ROS_main.cpp ****     //   if(p.wheel[LEFT].HallPosn >= langle) {
  67:./Src/ROS_main.cpp ****     //     pwml = 0;
  68:./Src/ROS_main.cpp ****     //   }
  69:./Src/ROS_main.cpp ****     //   if(p.wheel[RIGHT].HallPosn <=rangle) {
  70:./Src/ROS_main.cpp ****     //     pwmr = 0;
  71:./Src/ROS_main.cpp ****     //   }
  72:./Src/ROS_main.cpp ****     // #endif //CONTROL_MOTOR_TEST
  73:./Src/ROS_main.cpp **** 
  74:./Src/ROS_main.cpp ****     //Note: If message (wheelPositions) is declared outside function/globally publish1 doesn't work
  75:./Src/ROS_main.cpp ****     //may be constructor is not getting called.
  76:./Src/ROS_main.cpp ****    // get_position(&wheelPositions);
  77:./Src/ROS_main.cpp ****     nh.publish1(hovebotState->topic_id, &wheelPositions); 
  78:./Src/ROS_main.cpp **** }
 865              		.loc 7 78 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL81:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 28


 871              		.loc 7 78 0
 872 0000 0128     		cmp	r0, #1
 873 0002 00D0     		beq	.L65
 874              	.LVL82:
 875              	.L55:
 876 0004 7047     		bx	lr
 877              	.LVL83:
 878              	.L65:
 879              		.loc 7 78 0 is_stmt 0 discriminator 1
 880 0006 4FF6FF73 		movw	r3, #65535
 881 000a 9942     		cmp	r1, r3
 882 000c FAD1     		bne	.L55
 883              	.LVL84:
 884              	.LBB164:
 885              	.LBB165:
 886              	.LBB166:
 887              		.file 8 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 29


  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** #include "std_msgs/ROSString.h"
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** namespace ros
  66:ROSSerial/ros/node_handle.h **** {
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  69:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  70:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  71:ROSSerial/ros/node_handle.h **** 
  72:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  73:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** /*
  76:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:ROSSerial/ros/node_handle.h ****  */
  83:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:ROSSerial/ros/node_handle.h **** 
  95:ROSSerial/ros/node_handle.h **** 
  96:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 30


  98:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:ROSSerial/ros/node_handle.h **** 
 100:ROSSerial/ros/node_handle.h **** typedef struct
 101:ROSSerial/ros/node_handle.h **** {
 102:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 103:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 104:ROSSerial/ros/node_handle.h ****     const char* message_type;
 105:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 106:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 107:ROSSerial/ros/node_handle.h **** } SubscriberType;
 108:ROSSerial/ros/node_handle.h **** 
 109:ROSSerial/ros/node_handle.h **** typedef struct
 110:ROSSerial/ros/node_handle.h **** {
 111:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 112:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 113:ROSSerial/ros/node_handle.h ****     const Msg* msg; 
 114:ROSSerial/ros/node_handle.h ****     const char* message_type;
 115:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 116:ROSSerial/ros/node_handle.h **** } PublisherType;
 117:ROSSerial/ros/node_handle.h **** 
 118:ROSSerial/ros/node_handle.h **** /* Node Handle */
 119:ROSSerial/ros/node_handle.h **** template<class Hardware,
 120:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 121:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 122:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 123:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 124:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 125:ROSSerial/ros/node_handle.h **** {
 126:ROSSerial/ros/node_handle.h **** protected:
 127:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
 128:ROSSerial/ros/node_handle.h **** 
 129:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 130:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 131:ROSSerial/ros/node_handle.h **** 
 132:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 133:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 134:ROSSerial/ros/node_handle.h **** 
 135:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 136:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 137:ROSSerial/ros/node_handle.h **** 
 138:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 139:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 142:ROSSerial/ros/node_handle.h ****   PublisherType publishers2[MAX_PUBLISHERS];
 143:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 144:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 145:ROSSerial/ros/node_handle.h **** 
 146:ROSSerial/ros/node_handle.h ****   /*
 147:ROSSerial/ros/node_handle.h ****    * Setup Functions
 148:ROSSerial/ros/node_handle.h ****    */
 149:ROSSerial/ros/node_handle.h **** public:
 150:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 888              		.loc 8 150 0 is_stmt 1
 889 000e 244A     		ldr	r2, .L66
 890 0010 244B     		ldr	r3, .L66+4
 891 0012 1360     		str	r3, [r2]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 31


 892 0014 0023     		movs	r3, #0
 893 0016 82F81C35 		strb	r3, [r2, #1308]
 894              	.LVL85:
 895              	.LBB167:
 896              	.LBB168:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 897              		.loc 4 51 0
 898 001a 2349     		ldr	r1, .L66+8
 899              	.LVL86:
 900 001c C2F83015 		str	r1, [r2, #1328]
 901              	.LVL87:
 902              	.L58:
 903              	.LBE168:
 904              	.LBE167:
 905              	.LBB169:
 906              	.LBB170:
 151:ROSSerial/ros/node_handle.h ****   {
 152:ROSSerial/ros/node_handle.h **** 
 153:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++) {
 907              		.loc 8 153 0
 908 0020 042B     		cmp	r3, #4
 909 0022 0CD8     		bhi	.L62
 154:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 910              		.loc 8 154 0
 911 0024 1E48     		ldr	r0, .L66
 912 0026 03F58372 		add	r2, r3, #262
 913 002a 0021     		movs	r1, #0
 914 002c 40F82210 		str	r1, [r0, r2, lsl #2]
 155:ROSSerial/ros/node_handle.h ****       publishers2[i].topic_id = 0;
 915              		.loc 8 155 0
 916 0030 1422     		movs	r2, #20
 917 0032 02FB0302 		mla	r2, r2, r3, r0
 918 0036 A2F82C14 		strh	r1, [r2, #1068]	@ movhi
 153:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 919              		.loc 8 153 0
 920 003a 0133     		adds	r3, r3, #1
 921              	.LVL88:
 922 003c F0E7     		b	.L58
 923              	.L62:
 924              	.LBE170:
 925              	.LBB171:
 156:ROSSerial/ros/node_handle.h ****     }
 157:ROSSerial/ros/node_handle.h **** 
 158:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 926              		.loc 8 158 0
 927 003e 0023     		movs	r3, #0
 928              	.LVL89:
 929              	.L57:
 930 0040 042B     		cmp	r3, #4
 931 0042 0CD8     		bhi	.L63
 159:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 932              		.loc 8 159 0
 933 0044 1648     		ldr	r0, .L66
 934 0046 03F59272 		add	r2, r3, #292
 935 004a 0021     		movs	r1, #0
 936 004c 40F82210 		str	r1, [r0, r2, lsl #2]
 160:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 32


 937              		.loc 8 160 0
 938 0050 1422     		movs	r2, #20
 939 0052 02FB0302 		mla	r2, r2, r3, r0
 940 0056 A2F8A414 		strh	r1, [r2, #1188]	@ movhi
 158:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 941              		.loc 8 158 0
 942 005a 0133     		adds	r3, r3, #1
 943              	.LVL90:
 944 005c F0E7     		b	.L57
 945              	.L63:
 946              	.LBE171:
 947              	.LBB172:
 161:ROSSerial/ros/node_handle.h ****     }
 162:ROSSerial/ros/node_handle.h **** 
 163:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 948              		.loc 8 163 0
 949 005e 0023     		movs	r3, #0
 950              	.LVL91:
 951              	.L59:
 952 0060 B3F5007F 		cmp	r3, #512
 953 0064 05D2     		bcs	.L64
 164:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 954              		.loc 8 164 0
 955 0066 0E4A     		ldr	r2, .L66
 956 0068 1A44     		add	r2, r2, r3
 957 006a 0021     		movs	r1, #0
 958 006c 1176     		strb	r1, [r2, #24]
 163:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 959              		.loc 8 163 0
 960 006e 0133     		adds	r3, r3, #1
 961              	.LVL92:
 962 0070 F6E7     		b	.L59
 963              	.L64:
 964              	.LBE172:
 965              	.LBB173:
 165:ROSSerial/ros/node_handle.h **** 
 166:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 966              		.loc 8 166 0
 967 0072 0023     		movs	r3, #0
 968              	.LVL93:
 969              	.L60:
 970 0074 B3F5007F 		cmp	r3, #512
 971 0078 06D2     		bcs	.L61
 167:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 972              		.loc 8 167 0
 973 007a 094A     		ldr	r2, .L66
 974 007c 1A44     		add	r2, r2, r3
 975 007e 0021     		movs	r1, #0
 976 0080 82F81812 		strb	r1, [r2, #536]
 166:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 977              		.loc 8 166 0
 978 0084 0133     		adds	r3, r3, #1
 979              	.LVL94:
 980 0086 F5E7     		b	.L60
 981              	.L61:
 982              	.LBE173:
 168:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 33


 169:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 983              		.loc 8 169 0
 984 0088 054B     		ldr	r3, .L66
 985              	.LVL95:
 986 008a 0022     		movs	r2, #0
 987 008c 83F83425 		strb	r2, [r3, #1332]
 170:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 988              		.loc 8 170 0
 989 0090 C3F83C25 		str	r2, [r3, #1340]
 171:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 990              		.loc 8 171 0
 991 0094 83F84025 		strb	r2, [r3, #1344]
 172:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 992              		.loc 8 172 0
 993 0098 C3F84825 		str	r2, [r3, #1352]
 173:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 174:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 175:ROSSerial/ros/node_handle.h **** 
 176:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 994              		.loc 8 176 0
 995 009c 5A61     		str	r2, [r3, #20]
 996              	.LBE169:
 997              	.LBE166:
 998              	.LBE165:
 999              	.LBE164:
 1000              		.loc 7 78 0
 1001 009e B1E7     		b	.L55
 1002              	.L67:
 1003              		.align	2
 1004              	.L66:
 1005 00a0 00000000 		.word	.LANCHOR1
 1006 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 1007 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 1008              		.cfi_endproc
 1009              	.LFE523:
 1010              		.cantunwind
 1011              		.fnend
 1013              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 1014              		.align	1
 1015              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1019              		.fpu fpv4-sp-d16
 1021              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 1022              		.fnstart
 1023              	.LFB526:
 177:ROSSerial/ros/node_handle.h ****   }
 178:ROSSerial/ros/node_handle.h **** 
 179:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 180:ROSSerial/ros/node_handle.h ****   {
 181:ROSSerial/ros/node_handle.h ****     return &hardware_;
 182:ROSSerial/ros/node_handle.h ****   }
 183:ROSSerial/ros/node_handle.h **** 
 184:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 185:ROSSerial/ros/node_handle.h ****   void initNode()
 186:ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 34


 187:ROSSerial/ros/node_handle.h ****     hardware_.init();
 188:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 189:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 190:ROSSerial/ros/node_handle.h ****     index_ = 0;
 191:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 192:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 193:ROSSerial/ros/node_handle.h ****   };
 194:ROSSerial/ros/node_handle.h **** 
 195:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 196:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 197:ROSSerial/ros/node_handle.h ****   {
 198:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 199:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 200:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 201:ROSSerial/ros/node_handle.h ****     index_ = 0;
 202:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 203:ROSSerial/ros/node_handle.h ****   };
 204:ROSSerial/ros/node_handle.h **** 
 205:ROSSerial/ros/node_handle.h ****   /**
 206:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 207:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 208:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 209:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 210:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 211:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 212:ROSSerial/ros/node_handle.h ****    */
 213:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 214:ROSSerial/ros/node_handle.h ****   {
 215:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 216:ROSSerial/ros/node_handle.h ****   }
 217:ROSSerial/ros/node_handle.h **** 
 218:ROSSerial/ros/node_handle.h **** protected:
 219:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 220:ROSSerial/ros/node_handle.h ****   int mode_;
 221:ROSSerial/ros/node_handle.h ****   int bytes_;
 222:ROSSerial/ros/node_handle.h ****   int topic_;
 223:ROSSerial/ros/node_handle.h ****   int index_;
 224:ROSSerial/ros/node_handle.h ****   int checksum_;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h ****   bool configured_;
 227:ROSSerial/ros/node_handle.h **** 
 228:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 229:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 230:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 231:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 232:ROSSerial/ros/node_handle.h **** 
 233:ROSSerial/ros/node_handle.h **** public:
 234:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 235:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 236:ROSSerial/ros/node_handle.h ****    */
 237:ROSSerial/ros/node_handle.h **** 
 238:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 239:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 240:ROSSerial/ros/node_handle.h ****   }
 241:ROSSerial/ros/node_handle.h **** 
 242:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 243:ROSSerial/ros/node_handle.h ****   int spinOnce1()
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 35


 244:ROSSerial/ros/node_handle.h ****   {
 245:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 246:ROSSerial/ros/node_handle.h ****     
 247:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 248:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 249:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 250:ROSSerial/ros/node_handle.h ****     //printf("spinOnce %ld\n",c_time);
 251:ROSSerial/ros/node_handle.h **** 
 252:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 253:ROSSerial/ros/node_handle.h ****     {
 254:ROSSerial/ros/node_handle.h ****       configured_ = false;
 255:ROSSerial/ros/node_handle.h ****     }
 256:ROSSerial/ros/node_handle.h **** 
 257:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 258:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 259:ROSSerial/ros/node_handle.h ****     {
 260:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 261:ROSSerial/ros/node_handle.h ****       {
 262:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 263:ROSSerial/ros/node_handle.h ****       }
 264:ROSSerial/ros/node_handle.h ****     }
 265:ROSSerial/ros/node_handle.h **** 
 266:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 267:ROSSerial/ros/node_handle.h ****     while (true)
 268:ROSSerial/ros/node_handle.h ****     {
 269:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 270:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 271:ROSSerial/ros/node_handle.h ****       {
 272:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 273:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 274:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 275:ROSSerial/ros/node_handle.h ****         // and start fresh.
 276:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 277:ROSSerial/ros/node_handle.h ****         {
 278:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 279:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 280:ROSSerial/ros/node_handle.h ****         }
 281:ROSSerial/ros/node_handle.h ****       }
 282:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 283:ROSSerial/ros/node_handle.h ****       if (data < 0)
 284:ROSSerial/ros/node_handle.h ****         break;
 285:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 286:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 289:ROSSerial/ros/node_handle.h ****         bytes_--;
 290:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 291:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 292:ROSSerial/ros/node_handle.h ****       }
 293:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 294:ROSSerial/ros/node_handle.h ****       {
 295:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 296:ROSSerial/ros/node_handle.h ****         {
 297:ROSSerial/ros/node_handle.h ****           mode_++;
 298:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 299:ROSSerial/ros/node_handle.h ****         }
 300:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 36


 301:ROSSerial/ros/node_handle.h ****         {
 302:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 303:ROSSerial/ros/node_handle.h ****           configured_ = false;
 304:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****       }
 307:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 308:ROSSerial/ros/node_handle.h ****       {
 309:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 310:ROSSerial/ros/node_handle.h ****         {
 311:ROSSerial/ros/node_handle.h ****           mode_++;
 312:ROSSerial/ros/node_handle.h ****         }
 313:ROSSerial/ros/node_handle.h ****         else
 314:ROSSerial/ros/node_handle.h ****         {
 315:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 316:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 317:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 318:ROSSerial/ros/node_handle.h ****         }
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 323:ROSSerial/ros/node_handle.h ****         index_ = 0;
 324:ROSSerial/ros/node_handle.h ****         mode_++;
 325:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 326:ROSSerial/ros/node_handle.h ****       }
 327:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 328:ROSSerial/ros/node_handle.h ****       {
 329:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 330:ROSSerial/ros/node_handle.h ****         mode_++;
 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 335:ROSSerial/ros/node_handle.h ****           mode_++;
 336:ROSSerial/ros/node_handle.h ****         else
 337:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 338:ROSSerial/ros/node_handle.h ****       }
 339:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 340:ROSSerial/ros/node_handle.h ****       {
 341:ROSSerial/ros/node_handle.h ****         topic_ = data;
 342:ROSSerial/ros/node_handle.h ****         mode_++;
 343:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 348:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 349:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 350:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 351:ROSSerial/ros/node_handle.h ****       }
 352:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 353:ROSSerial/ros/node_handle.h ****       {
 354:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 355:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 356:ROSSerial/ros/node_handle.h ****         {
 357:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 37


 358:ROSSerial/ros/node_handle.h ****           {
 359:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 360:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 361:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 362:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 363:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 364:ROSSerial/ros/node_handle.h ****           }
 365:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 366:ROSSerial/ros/node_handle.h ****           {
 367:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 368:ROSSerial/ros/node_handle.h ****           }
 369:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 370:ROSSerial/ros/node_handle.h ****           {
 371:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 372:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 373:ROSSerial/ros/node_handle.h ****           }
 374:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 375:ROSSerial/ros/node_handle.h ****           {
 376:ROSSerial/ros/node_handle.h ****             configured_ = false;
 377:ROSSerial/ros/node_handle.h ****           }
 378:ROSSerial/ros/node_handle.h ****           else
 379:ROSSerial/ros/node_handle.h ****           {
 380:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 381:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 382:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 383:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 384:ROSSerial/ros/node_handle.h ****             }
 385:ROSSerial/ros/node_handle.h ****           }
 386:ROSSerial/ros/node_handle.h ****         }
 387:ROSSerial/ros/node_handle.h ****       }
 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 391:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 392:ROSSerial/ros/node_handle.h ****     {
 393:ROSSerial/ros/node_handle.h ****       requestSyncTime();
 394:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 395:ROSSerial/ros/node_handle.h ****     }
 396:ROSSerial/ros/node_handle.h **** 
 397:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 398:ROSSerial/ros/node_handle.h ****   }
 399:ROSSerial/ros/node_handle.h **** 
 400:ROSSerial/ros/node_handle.h **** 
 401:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 402:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 1024              		.loc 8 402 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 1029              	.LVL96:
 403:ROSSerial/ros/node_handle.h ****   {
 404:ROSSerial/ros/node_handle.h ****     return configured_;
 405:ROSSerial/ros/node_handle.h ****   };
 1030              		.loc 8 405 0
 1031 0000 90F81C05 		ldrb	r0, [r0, #1308]	@ zero_extendqisi2
 1032              	.LVL97:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 38


 1033 0004 7047     		bx	lr
 1034              		.cfi_endproc
 1035              	.LFE526:
 1036              		.cantunwind
 1037              		.fnend
 1039              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1040              		.align	1
 1041              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv4-sp-d16
 1047              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1048              		.fnstart
 1049              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1050              		.loc 4 113 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              	.LVL98:
 1055 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1056              	.LCFI6:
 1057              		.cfi_def_cfa_offset 24
 1058              		.cfi_offset 3, -24
 1059              		.cfi_offset 4, -20
 1060              		.cfi_offset 5, -16
 1061              		.cfi_offset 6, -12
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 0646     		mov	r6, r0
 1065 0004 0D46     		mov	r5, r1
 1066              	.LVL99:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1067              		.loc 4 116 0
 1068 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1069              	.LVL100:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1070              		.loc 4 117 0
 1071 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1072 000a A342     		cmp	r3, r4
 1073 000c 1AD3     		bcc	.L82
 1074              	.LVL101:
 1075              	.L70:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1076              		.loc 4 120 0
 1077 000e 3471     		strb	r4, [r6, #4]
 1078              	.LVL102:
 1079              	.LBB181:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1080              		.loc 4 121 0
 1081 0010 0022     		movs	r2, #0
 1082              	.LBE181:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1083              		.loc 4 119 0
 1084 0012 0424     		movs	r4, #4
 1085              	.LVL103:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 39


 1086              	.L72:
 1087              	.LBB183:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1088              		.loc 4 121 0 discriminator 3
 1089 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1090 0016 9342     		cmp	r3, r2
 1091 0018 1AD9     		bls	.L71
 1092              	.LBB182:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1093              		.loc 4 127 0 discriminator 2
 1094 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1095              		.loc 4 128 0 discriminator 2
 1096 001c 611C     		adds	r1, r4, #1
 1097 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1098 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1099              		.loc 4 129 0 discriminator 2
 1100 0024 A11C     		adds	r1, r4, #2
 1101 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1102 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1103              		.loc 4 130 0 discriminator 2
 1104 002c E11C     		adds	r1, r4, #3
 1105 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1106 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1107              		.loc 4 131 0 discriminator 2
 1108 0034 B360     		str	r3, [r6, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1109              		.loc 4 132 0 discriminator 2
 1110 0036 0434     		adds	r4, r4, #4
 1111              	.LVL104:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1112              		.loc 4 133 0 discriminator 2
 1113 0038 F168     		ldr	r1, [r6, #12]
 1114 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1115              	.LBE182:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1116              		.loc 4 121 0 discriminator 2
 1117 003e 0132     		adds	r2, r2, #1
 1118              	.LVL105:
 1119 0040 D2B2     		uxtb	r2, r2
 1120              	.LVL106:
 1121 0042 E7E7     		b	.L72
 1122              	.LVL107:
 1123              	.L82:
 1124              	.LBE183:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1125              		.loc 4 118 0
 1126 0044 A100     		lsls	r1, r4, #2
 1127              	.LVL108:
 1128 0046 C068     		ldr	r0, [r0, #12]
 1129              	.LVL109:
 1130 0048 FFF7FEFF 		bl	realloc
 1131              	.LVL110:
 1132 004c F060     		str	r0, [r6, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 40


 1133 004e DEE7     		b	.L70
 1134              	.LVL111:
 1135              	.L71:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1136              		.loc 4 135 0
 1137 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1138              	.LVL112:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1139              		.loc 4 136 0
 1140 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1141 0054 BB42     		cmp	r3, r7
 1142 0056 1AD3     		bcc	.L83
 1143              	.LVL113:
 1144              	.L73:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1145              		.loc 4 138 0
 1146 0058 0434     		adds	r4, r4, #4
 1147              	.LVL114:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1148              		.loc 4 139 0
 1149 005a 3774     		strb	r7, [r6, #16]
 1150              	.LVL115:
 1151              	.LBB184:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1152              		.loc 4 140 0
 1153 005c 0022     		movs	r2, #0
 1154              	.LVL116:
 1155              	.L75:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1156              		.loc 4 140 0 is_stmt 0 discriminator 3
 1157 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1158 0060 9342     		cmp	r3, r2
 1159 0062 1AD9     		bls	.L74
 1160              	.LBB185:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1161              		.loc 4 146 0 is_stmt 1 discriminator 2
 1162 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1163              		.loc 4 147 0 discriminator 2
 1164 0066 611C     		adds	r1, r4, #1
 1165 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1166 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1167              		.loc 4 148 0 discriminator 2
 1168 006e A11C     		adds	r1, r4, #2
 1169 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1170 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1171              		.loc 4 149 0 discriminator 2
 1172 0076 E11C     		adds	r1, r4, #3
 1173 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1174 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1175              		.loc 4 150 0 discriminator 2
 1176 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1177              		.loc 4 151 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 41


 1178 0080 0434     		adds	r4, r4, #4
 1179              	.LVL117:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1180              		.loc 4 152 0 discriminator 2
 1181 0082 B169     		ldr	r1, [r6, #24]
 1182 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1183              	.LBE185:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1184              		.loc 4 140 0 discriminator 2
 1185 0088 0132     		adds	r2, r2, #1
 1186              	.LVL118:
 1187 008a D2B2     		uxtb	r2, r2
 1188              	.LVL119:
 1189 008c E7E7     		b	.L75
 1190              	.LVL120:
 1191              	.L83:
 1192              	.LBE184:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1193              		.loc 4 137 0
 1194 008e B900     		lsls	r1, r7, #2
 1195 0090 B069     		ldr	r0, [r6, #24]
 1196 0092 FFF7FEFF 		bl	realloc
 1197              	.LVL121:
 1198 0096 B061     		str	r0, [r6, #24]
 1199 0098 DEE7     		b	.L73
 1200              	.LVL122:
 1201              	.L74:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1202              		.loc 4 154 0
 1203 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1204              	.LVL123:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1205              		.loc 4 155 0
 1206 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1207 009e BB42     		cmp	r3, r7
 1208 00a0 04D3     		bcc	.L84
 1209              	.LVL124:
 1210              	.L76:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1211              		.loc 4 157 0
 1212 00a2 201D     		adds	r0, r4, #4
 1213              	.LVL125:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1214              		.loc 4 158 0
 1215 00a4 3777     		strb	r7, [r6, #28]
 1216              	.LVL126:
 1217              	.LBB186:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1218              		.loc 4 159 0
 1219 00a6 4FF0000C 		mov	ip, #0
 1220 00aa 12E0     		b	.L80
 1221              	.LVL127:
 1222              	.L84:
 1223              	.LBE186:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1224              		.loc 4 156 0
 1225 00ac B900     		lsls	r1, r7, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 42


 1226 00ae 706A     		ldr	r0, [r6, #36]
 1227 00b0 FFF7FEFF 		bl	realloc
 1228              	.LVL128:
 1229 00b4 7062     		str	r0, [r6, #36]
 1230 00b6 F4E7     		b	.L76
 1231              	.LVL129:
 1232              	.L78:
 1233              	.LBB190:
 1234              	.LBB187:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1235              		.loc 4 166 0 discriminator 2
 1236 00b8 431E     		subs	r3, r0, #1
 1237              	.LVL130:
 1238 00ba 0022     		movs	r2, #0
 1239 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1240              		.loc 4 167 0 discriminator 2
 1241 00be 013C     		subs	r4, r4, #1
 1242 00c0 2C44     		add	r4, r4, r5
 1243 00c2 3462     		str	r4, [r6, #32]
 1244              	.LVL131:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1245              		.loc 4 169 0 discriminator 2
 1246 00c4 736A     		ldr	r3, [r6, #36]
 1247 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1248              	.LVL132:
 1249              	.LBE187:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1250              		.loc 4 159 0 discriminator 2
 1251 00ca 0CF1010C 		add	ip, ip, #1
 1252              	.LVL133:
 1253 00ce 5FFA8CFC 		uxtb	ip, ip
 1254              	.LVL134:
 1255              	.L80:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1256              		.loc 4 159 0 is_stmt 0 discriminator 1
 1257 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1258 00d4 6345     		cmp	r3, ip
 1259 00d6 0AD9     		bls	.L69
 1260              	.LBB189:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1261              		.loc 4 161 0 is_stmt 1
 1262 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1263              	.LVL135:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1264              		.loc 4 162 0
 1265 00da 041D     		adds	r4, r0, #4
 1266              	.LVL136:
 1267              	.LBB188:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1268              		.loc 4 163 0
 1269 00dc 2346     		mov	r3, r4
 1270              	.LVL137:
 1271              	.L79:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1272              		.loc 4 163 0 is_stmt 0 discriminator 3
 1273 00de 3819     		adds	r0, r7, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 43


 1274 00e0 9842     		cmp	r0, r3
 1275 00e2 E9D9     		bls	.L78
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1276              		.loc 4 164 0 is_stmt 1 discriminator 2
 1277 00e4 5A1E     		subs	r2, r3, #1
 1278 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1279 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1280              		.loc 4 163 0 discriminator 2
 1281 00ea 0133     		adds	r3, r3, #1
 1282              	.LVL138:
 1283 00ec F7E7     		b	.L79
 1284              	.LVL139:
 1285              	.L69:
 1286              	.LBE188:
 1287              	.LBE189:
 1288              	.LBE190:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1289              		.loc 4 172 0
 1290 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1291              		.cfi_endproc
 1292              	.LFE395:
 1293              		.cantunwind
 1294              		.fnend
 1296              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1297              		.align	1
 1298              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	_ZNK8std_msgs6Header9serializeEPh:
 1305              		.fnstart
 1306              	.LFB474:
  20:ROSSerial/std_msgs/Header.h ****     {
 1307              		.loc 5 20 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL140:
 1312 0000 70B5     		push	{r4, r5, r6, lr}
 1313              	.LCFI7:
 1314              		.cfi_def_cfa_offset 16
 1315              		.cfi_offset 4, -16
 1316              		.cfi_offset 5, -12
 1317              		.cfi_offset 6, -8
 1318              		.cfi_offset 14, -4
 1319 0002 0546     		mov	r5, r0
 1320 0004 0C46     		mov	r4, r1
 1321              	.LVL141:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1322              		.loc 5 23 0
 1323 0006 4368     		ldr	r3, [r0, #4]
 1324 0008 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1325              		.loc 5 24 0
 1326 000a 4368     		ldr	r3, [r0, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 44


 1327 000c 1B0A     		lsrs	r3, r3, #8
 1328 000e 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1329              		.loc 5 25 0
 1330 0010 C388     		ldrh	r3, [r0, #6]
 1331 0012 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1332              		.loc 5 26 0
 1333 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1334 0016 CB70     		strb	r3, [r1, #3]
 1335              	.LVL142:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1336              		.loc 5 28 0
 1337 0018 8368     		ldr	r3, [r0, #8]
 1338 001a 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1339              		.loc 5 29 0
 1340 001c 8368     		ldr	r3, [r0, #8]
 1341 001e 1B0A     		lsrs	r3, r3, #8
 1342 0020 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1343              		.loc 5 30 0
 1344 0022 4389     		ldrh	r3, [r0, #10]
 1345 0024 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1346              		.loc 5 31 0
 1347 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1348 0028 CB71     		strb	r3, [r1, #7]
 1349              	.LVL143:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1350              		.loc 5 33 0
 1351 002a C368     		ldr	r3, [r0, #12]
 1352 002c 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1353              		.loc 5 34 0
 1354 002e C368     		ldr	r3, [r0, #12]
 1355 0030 1B0A     		lsrs	r3, r3, #8
 1356 0032 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1357              		.loc 5 35 0
 1358 0034 C389     		ldrh	r3, [r0, #14]
 1359 0036 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1360              		.loc 5 36 0
 1361 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1362 003a CB72     		strb	r3, [r1, #11]
 1363              	.LVL144:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1364              		.loc 5 38 0
 1365 003c 0069     		ldr	r0, [r0, #16]
 1366              	.LVL145:
 1367 003e FFF7FEFF 		bl	strlen
 1368              	.LVL146:
 1369 0042 0646     		mov	r6, r0
 1370              	.LVL147:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 1371              		.loc 5 39 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 45


 1372 0044 E060     		str	r0, [r4, #12]	@ unaligned
 1373              	.LVL148:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 1374              		.loc 5 41 0
 1375 0046 0246     		mov	r2, r0
 1376 0048 2969     		ldr	r1, [r5, #16]
 1377 004a 04F11000 		add	r0, r4, #16
 1378              	.LVL149:
 1379 004e FFF7FEFF 		bl	memcpy
 1380              	.LVL150:
  44:ROSSerial/std_msgs/Header.h **** 
 1381              		.loc 5 44 0
 1382 0052 06F11000 		add	r0, r6, #16
 1383              	.LVL151:
 1384 0056 70BD     		pop	{r4, r5, r6, pc}
 1385              		.cfi_endproc
 1386              	.LFE474:
 1387              		.cantunwind
 1388              		.fnend
 1390              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1391              		.align	1
 1392              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv4-sp-d16
 1398              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1399              		.fnstart
 1400              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 1401              		.loc 2 29 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL152:
 1406 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1407              	.LCFI8:
 1408              		.cfi_def_cfa_offset 24
 1409              		.cfi_offset 4, -24
 1410              		.cfi_offset 5, -20
 1411              		.cfi_offset 6, -16
 1412              		.cfi_offset 7, -12
 1413              		.cfi_offset 8, -8
 1414              		.cfi_offset 14, -4
 1415 0004 0646     		mov	r6, r0
 1416 0006 0C46     		mov	r4, r1
 1417              	.LVL153:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1418              		.loc 2 32 0
 1419 0008 8388     		ldrh	r3, [r0, #4]
 1420 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1421              		.loc 2 33 0
 1422 000c 8388     		ldrh	r3, [r0, #4]
 1423 000e 1B0A     		lsrs	r3, r3, #8
 1424 0010 4B70     		strb	r3, [r1, #1]
 1425              	.LVL154:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 46


  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1426              		.loc 2 35 0
 1427 0012 8068     		ldr	r0, [r0, #8]
 1428              	.LVL155:
 1429 0014 FFF7FEFF 		bl	strlen
 1430              	.LVL156:
 1431 0018 0746     		mov	r7, r0
 1432              	.LVL157:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1433              		.loc 2 36 0
 1434 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 1435              	.LVL158:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1436              		.loc 2 38 0
 1437 001e 0246     		mov	r2, r0
 1438 0020 B168     		ldr	r1, [r6, #8]
 1439 0022 A01D     		adds	r0, r4, #6
 1440              	.LVL159:
 1441 0024 FFF7FEFF 		bl	memcpy
 1442              	.LVL160:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1443              		.loc 2 39 0
 1444 0028 07F10608 		add	r8, r7, #6
 1445              	.LVL161:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1446              		.loc 2 40 0
 1447 002c F068     		ldr	r0, [r6, #12]
 1448 002e FFF7FEFF 		bl	strlen
 1449              	.LVL162:
 1450 0032 0546     		mov	r5, r0
 1451              	.LVL163:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1452              		.loc 2 41 0
 1453 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1454              		.loc 2 42 0
 1455 0038 0A37     		adds	r7, r7, #10
 1456              	.LVL164:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1457              		.loc 2 43 0
 1458 003a 0246     		mov	r2, r0
 1459 003c F168     		ldr	r1, [r6, #12]
 1460 003e E019     		adds	r0, r4, r7
 1461              	.LVL165:
 1462 0040 FFF7FEFF 		bl	memcpy
 1463              	.LVL166:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1464              		.loc 2 44 0
 1465 0044 2F44     		add	r7, r7, r5
 1466              	.LVL167:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1467              		.loc 2 45 0
 1468 0046 3069     		ldr	r0, [r6, #16]
 1469 0048 FFF7FEFF 		bl	strlen
 1470              	.LVL168:
 1471 004c 0546     		mov	r5, r0
 1472              	.LVL169:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 47


  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1473              		.loc 2 46 0
 1474 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 1475              		.loc 2 47 0
 1476 0050 0437     		adds	r7, r7, #4
 1477              	.LVL170:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1478              		.loc 2 48 0
 1479 0052 0246     		mov	r2, r0
 1480 0054 3169     		ldr	r1, [r6, #16]
 1481 0056 E019     		adds	r0, r4, r7
 1482              	.LVL171:
 1483 0058 FFF7FEFF 		bl	memcpy
 1484              	.LVL172:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 1485              		.loc 2 49 0
 1486 005c E819     		adds	r0, r5, r7
 1487              	.LVL173:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1488              		.loc 2 54 0
 1489 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1490              		.loc 2 55 0
 1491 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1492              		.loc 2 56 0
 1493 0062 190A     		lsrs	r1, r3, #8
 1494 0064 421C     		adds	r2, r0, #1
 1495 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1496              		.loc 2 57 0
 1497 0068 190C     		lsrs	r1, r3, #16
 1498 006a 821C     		adds	r2, r0, #2
 1499 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1500              		.loc 2 58 0
 1501 006e 1B0E     		lsrs	r3, r3, #24
 1502 0070 C21C     		adds	r2, r0, #3
 1503 0072 A354     		strb	r3, [r4, r2]
 1504              	.LVL174:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 1505              		.loc 2 61 0
 1506 0074 0430     		adds	r0, r0, #4
 1507              	.LVL175:
 1508 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1509              		.cfi_endproc
 1510              	.LFE382:
 1511              		.cantunwind
 1512              		.fnend
 1514              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1515              		.align	1
 1516              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 48


 1522              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1523              		.fnstart
 1524              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 1525              		.loc 3 24 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
 1529              	.LVL176:
 1530 0000 70B5     		push	{r4, r5, r6, lr}
 1531              	.LCFI9:
 1532              		.cfi_def_cfa_offset 16
 1533              		.cfi_offset 4, -16
 1534              		.cfi_offset 5, -12
 1535              		.cfi_offset 6, -8
 1536              		.cfi_offset 14, -4
 1537 0002 0646     		mov	r6, r0
 1538 0004 0D46     		mov	r5, r1
 1539              	.LVL177:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1540              		.loc 3 27 0
 1541 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1542 0008 0B70     		strb	r3, [r1]
 1543              	.LVL178:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1544              		.loc 3 29 0
 1545 000a 8068     		ldr	r0, [r0, #8]
 1546              	.LVL179:
 1547 000c FFF7FEFF 		bl	strlen
 1548              	.LVL180:
 1549 0010 0446     		mov	r4, r0
 1550              	.LVL181:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 1551              		.loc 3 30 0
 1552 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1553              	.LVL182:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 1554              		.loc 3 32 0
 1555 0016 0246     		mov	r2, r0
 1556 0018 B168     		ldr	r1, [r6, #8]
 1557 001a 681D     		adds	r0, r5, #5
 1558              	.LVL183:
 1559 001c FFF7FEFF 		bl	memcpy
 1560              	.LVL184:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1561              		.loc 3 35 0
 1562 0020 601D     		adds	r0, r4, #5
 1563              	.LVL185:
 1564 0022 70BD     		pop	{r4, r5, r6, pc}
 1565              		.cfi_endproc
 1566              	.LFE386:
 1567              		.cantunwind
 1568              		.fnend
 1570              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1571              		.align	1
 1572              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1573              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 49


 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1579              		.fnstart
 1580              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1581              		.loc 4 64 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              	.LVL186:
 1586 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1587              	.LCFI10:
 1588              		.cfi_def_cfa_offset 24
 1589              		.cfi_offset 4, -24
 1590              		.cfi_offset 5, -20
 1591              		.cfi_offset 6, -16
 1592              		.cfi_offset 7, -12
 1593              		.cfi_offset 8, -8
 1594              		.cfi_offset 14, -4
 1595 0004 0546     		mov	r5, r0
 1596 0006 0C46     		mov	r4, r1
 1597              	.LVL187:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1598              		.loc 4 67 0
 1599 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1600 000a 0B70     		strb	r3, [r1]
 1601              	.LVL188:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1602              		.loc 4 68 0
 1603 000c 0022     		movs	r2, #0
 1604 000e 4A70     		strb	r2, [r1, #1]
 1605              	.LVL189:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1606              		.loc 4 69 0
 1607 0010 8A70     		strb	r2, [r1, #2]
 1608              	.LVL190:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1609              		.loc 4 70 0
 1610 0012 CA70     		strb	r2, [r1, #3]
 1611              	.LVL191:
 1612 0014 0423     		movs	r3, #4
 1613              	.LVL192:
 1614              	.L93:
 1615              	.LBB191:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1616              		.loc 4 71 0 discriminator 3
 1617 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1618 0018 9142     		cmp	r1, r2
 1619 001a 10D9     		bls	.L92
 1620              	.LBB192:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1621              		.loc 4 76 0 discriminator 2
 1622 001c E968     		ldr	r1, [r5, #12]
 1623 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 50


 1624              		.loc 4 77 0 discriminator 2
 1625 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1626              		.loc 4 78 0 discriminator 2
 1627 0024 0E0A     		lsrs	r6, r1, #8
 1628 0026 581C     		adds	r0, r3, #1
 1629 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1630              		.loc 4 79 0 discriminator 2
 1631 002a 0E0C     		lsrs	r6, r1, #16
 1632 002c 981C     		adds	r0, r3, #2
 1633 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1634              		.loc 4 80 0 discriminator 2
 1635 0030 090E     		lsrs	r1, r1, #24
 1636 0032 D81C     		adds	r0, r3, #3
 1637 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1638              		.loc 4 81 0 discriminator 2
 1639 0036 0433     		adds	r3, r3, #4
 1640              	.LVL193:
 1641              	.LBE192:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1642              		.loc 4 71 0 discriminator 2
 1643 0038 0132     		adds	r2, r2, #1
 1644              	.LVL194:
 1645 003a D2B2     		uxtb	r2, r2
 1646              	.LVL195:
 1647 003c EBE7     		b	.L93
 1648              	.L92:
 1649              	.LBE191:
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1650              		.loc 4 83 0
 1651 003e 591C     		adds	r1, r3, #1
 1652              	.LVL196:
 1653 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1654              	.LVL197:
 1655 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1656              		.loc 4 84 0
 1657 0044 981C     		adds	r0, r3, #2
 1658              	.LVL198:
 1659 0046 0022     		movs	r2, #0
 1660 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1661              		.loc 4 85 0
 1662 004a D91C     		adds	r1, r3, #3
 1663              	.LVL199:
 1664 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1665              		.loc 4 86 0
 1666 004e 0433     		adds	r3, r3, #4
 1667              	.LVL200:
 1668 0050 6254     		strb	r2, [r4, r1]
 1669              	.LVL201:
 1670              	.L95:
 1671              	.LBB193:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 51


  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1672              		.loc 4 87 0 discriminator 3
 1673 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1674 0054 9142     		cmp	r1, r2
 1675 0056 10D9     		bls	.L94
 1676              	.LBB194:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1677              		.loc 4 92 0 discriminator 2
 1678 0058 A969     		ldr	r1, [r5, #24]
 1679 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1680              		.loc 4 93 0 discriminator 2
 1681 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1682              		.loc 4 94 0 discriminator 2
 1683 0060 0E0A     		lsrs	r6, r1, #8
 1684 0062 581C     		adds	r0, r3, #1
 1685 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1686              		.loc 4 95 0 discriminator 2
 1687 0066 0E0C     		lsrs	r6, r1, #16
 1688 0068 981C     		adds	r0, r3, #2
 1689 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1690              		.loc 4 96 0 discriminator 2
 1691 006c 090E     		lsrs	r1, r1, #24
 1692 006e D81C     		adds	r0, r3, #3
 1693 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1694              		.loc 4 97 0 discriminator 2
 1695 0072 0433     		adds	r3, r3, #4
 1696              	.LVL202:
 1697              	.LBE194:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1698              		.loc 4 87 0 discriminator 2
 1699 0074 0132     		adds	r2, r2, #1
 1700              	.LVL203:
 1701 0076 D2B2     		uxtb	r2, r2
 1702              	.LVL204:
 1703 0078 EBE7     		b	.L95
 1704              	.L94:
 1705              	.LBE193:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1706              		.loc 4 99 0
 1707 007a 5A1C     		adds	r2, r3, #1
 1708              	.LVL205:
 1709 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1710 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1711              		.loc 4 100 0
 1712 0080 991C     		adds	r1, r3, #2
 1713              	.LVL206:
 1714 0082 4FF00008 		mov	r8, #0
 1715 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1716              		.loc 4 101 0
 1717 008a DA1C     		adds	r2, r3, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 52


 1718              	.LVL207:
 1719 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1720              		.loc 4 102 0
 1721 0090 1E1D     		adds	r6, r3, #4
 1722              	.LVL208:
 1723 0092 04F80280 		strb	r8, [r4, r2]
 1724              	.LVL209:
 1725              	.L97:
 1726              	.LBB195:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1727              		.loc 4 103 0 discriminator 3
 1728 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1729 0098 4345     		cmp	r3, r8
 1730 009a 14D9     		bls	.L91
 1731              	.LBB196:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1732              		.loc 4 104 0 discriminator 2
 1733 009c 6B6A     		ldr	r3, [r5, #36]
 1734 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1735 00a2 FFF7FEFF 		bl	strlen
 1736              	.LVL210:
 1737 00a6 0746     		mov	r7, r0
 1738              	.LVL211:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1739              		.loc 4 105 0 discriminator 2
 1740 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1741              		.loc 4 106 0 discriminator 2
 1742 00aa 0436     		adds	r6, r6, #4
 1743              	.LVL212:
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1744              		.loc 4 107 0 discriminator 2
 1745 00ac 6B6A     		ldr	r3, [r5, #36]
 1746 00ae 0246     		mov	r2, r0
 1747 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1748 00b4 A019     		adds	r0, r4, r6
 1749              	.LVL213:
 1750 00b6 FFF7FEFF 		bl	memcpy
 1751              	.LVL214:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1752              		.loc 4 108 0 discriminator 2
 1753 00ba 3E44     		add	r6, r6, r7
 1754              	.LVL215:
 1755              	.LBE196:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1756              		.loc 4 103 0 discriminator 2
 1757 00bc 08F10108 		add	r8, r8, #1
 1758              	.LVL216:
 1759 00c0 5FFA88F8 		uxtb	r8, r8
 1760              	.LVL217:
 1761 00c4 E7E7     		b	.L97
 1762              	.L91:
 1763              	.LBE195:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1764              		.loc 4 111 0
 1765 00c6 3046     		mov	r0, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 53


 1766 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1767              		.cfi_endproc
 1768              	.LFE394:
 1769              		.cantunwind
 1770              		.fnend
 1772              		.section	.text._ZNK11sensor_msgs10JointState9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs10Joint
 1773              		.align	1
 1774              		.weak	_ZNK11sensor_msgs10JointState9serializeEPh
 1775              		.syntax unified
 1776              		.thumb
 1777              		.thumb_func
 1778              		.fpu fpv4-sp-d16
 1780              	_ZNK11sensor_msgs10JointState9serializeEPh:
 1781              		.fnstart
 1782              	.LFB487:
  44:ROSSerial/sensor_msgs/JointState.h ****     {
 1783              		.loc 6 44 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              	.LVL218:
 1788 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1789              	.LCFI11:
 1790              		.cfi_def_cfa_offset 32
 1791              		.cfi_offset 3, -32
 1792              		.cfi_offset 4, -28
 1793              		.cfi_offset 5, -24
 1794              		.cfi_offset 6, -20
 1795              		.cfi_offset 7, -16
 1796              		.cfi_offset 8, -12
 1797              		.cfi_offset 9, -8
 1798              		.cfi_offset 14, -4
 1799 0004 0646     		mov	r6, r0
 1800 0006 0D46     		mov	r5, r1
 1801              	.LVL219:
 1802              	.LBB212:
 1803              	.LBB213:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1804              		.loc 5 23 0
 1805 0008 8368     		ldr	r3, [r0, #8]
 1806 000a 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1807              		.loc 5 24 0
 1808 000c 8368     		ldr	r3, [r0, #8]
 1809 000e 1B0A     		lsrs	r3, r3, #8
 1810 0010 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1811              		.loc 5 25 0
 1812 0012 4389     		ldrh	r3, [r0, #10]
 1813 0014 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1814              		.loc 5 26 0
 1815 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1816 0018 CB70     		strb	r3, [r1, #3]
 1817              	.LVL220:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1818              		.loc 5 28 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 54


 1819 001a C368     		ldr	r3, [r0, #12]
 1820 001c 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1821              		.loc 5 29 0
 1822 001e C368     		ldr	r3, [r0, #12]
 1823 0020 1B0A     		lsrs	r3, r3, #8
 1824 0022 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1825              		.loc 5 30 0
 1826 0024 C389     		ldrh	r3, [r0, #14]
 1827 0026 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1828              		.loc 5 31 0
 1829 0028 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1830 002a CB71     		strb	r3, [r1, #7]
 1831              	.LVL221:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1832              		.loc 5 33 0
 1833 002c 0369     		ldr	r3, [r0, #16]
 1834 002e 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1835              		.loc 5 34 0
 1836 0030 0369     		ldr	r3, [r0, #16]
 1837 0032 1B0A     		lsrs	r3, r3, #8
 1838 0034 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1839              		.loc 5 35 0
 1840 0036 438A     		ldrh	r3, [r0, #18]
 1841 0038 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1842              		.loc 5 36 0
 1843 003a C37C     		ldrb	r3, [r0, #19]	@ zero_extendqisi2
 1844 003c CB72     		strb	r3, [r1, #11]
 1845              	.LVL222:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1846              		.loc 5 38 0
 1847 003e 4069     		ldr	r0, [r0, #20]
 1848              	.LVL223:
 1849 0040 FFF7FEFF 		bl	strlen
 1850              	.LVL224:
 1851 0044 0446     		mov	r4, r0
 1852              	.LVL225:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 1853              		.loc 5 39 0
 1854 0046 E860     		str	r0, [r5, #12]	@ unaligned
 1855              	.LVL226:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 1856              		.loc 5 41 0
 1857 0048 0246     		mov	r2, r0
 1858 004a 7169     		ldr	r1, [r6, #20]
 1859 004c 05F11000 		add	r0, r5, #16
 1860              	.LVL227:
 1861 0050 FFF7FEFF 		bl	memcpy
 1862              	.LVL228:
  42:ROSSerial/std_msgs/Header.h ****       return offset;
 1863              		.loc 5 42 0
 1864 0054 04F11003 		add	r3, r4, #16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 55


 1865              	.LVL229:
 1866              	.LBE213:
 1867              	.LBE212:
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
 1868              		.loc 6 48 0
 1869 0058 B269     		ldr	r2, [r6, #24]
 1870 005a EA54     		strb	r2, [r5, r3]
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
 1871              		.loc 6 49 0
 1872 005c B369     		ldr	r3, [r6, #24]
 1873 005e 1B0A     		lsrs	r3, r3, #8
 1874 0060 04F11102 		add	r2, r4, #17
 1875 0064 AB54     		strb	r3, [r5, r2]
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
 1876              		.loc 6 50 0
 1877 0066 728B     		ldrh	r2, [r6, #26]
 1878 0068 04F11203 		add	r3, r4, #18
 1879 006c EA54     		strb	r2, [r5, r3]
  51:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 1880              		.loc 6 51 0
 1881 006e F27E     		ldrb	r2, [r6, #27]	@ zero_extendqisi2
 1882 0070 04F11303 		add	r3, r4, #19
 1883 0074 EA54     		strb	r2, [r5, r3]
  52:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 1884              		.loc 6 52 0
 1885 0076 1434     		adds	r4, r4, #20
 1886              	.LVL230:
 1887              	.LBB214:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 1888              		.loc 6 53 0
 1889 0078 4FF00008 		mov	r8, #0
 1890 007c 0AE0     		b	.L103
 1891              	.LVL231:
 1892              	.L101:
 1893              	.LBB215:
  56:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
 1894              		.loc 6 56 0 discriminator 2
 1895 007e 0434     		adds	r4, r4, #4
 1896              	.LVL232:
  57:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
 1897              		.loc 6 57 0 discriminator 2
 1898 0080 336A     		ldr	r3, [r6, #32]
 1899 0082 3A46     		mov	r2, r7
 1900 0084 53F80910 		ldr	r1, [r3, r9]
 1901 0088 2819     		adds	r0, r5, r4
 1902 008a FFF7FEFF 		bl	memcpy
 1903              	.LVL233:
  58:ROSSerial/sensor_msgs/JointState.h ****       }
 1904              		.loc 6 58 0 discriminator 2
 1905 008e 3C44     		add	r4, r4, r7
 1906              	.LVL234:
 1907              	.LBE215:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 1908              		.loc 6 53 0 discriminator 2
 1909 0090 08F10108 		add	r8, r8, #1
 1910              	.LVL235:
 1911              	.L103:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 56


  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 1912              		.loc 6 53 0 is_stmt 0 discriminator 3
 1913 0094 B369     		ldr	r3, [r6, #24]
 1914 0096 4345     		cmp	r3, r8
 1915 0098 12D9     		bls	.L100
 1916              	.LBB218:
  54:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
 1917              		.loc 6 54 0 is_stmt 1 discriminator 2
 1918 009a 336A     		ldr	r3, [r6, #32]
 1919 009c 4FEA8809 		lsl	r9, r8, #2
 1920 00a0 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1921 00a4 FFF7FEFF 		bl	strlen
 1922              	.LVL236:
 1923 00a8 0746     		mov	r7, r0
 1924              	.LVL237:
  55:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 1925              		.loc 6 55 0 discriminator 2
 1926 00aa 2046     		mov	r0, r4
 1927              	.LVL238:
 1928              	.LBB216:
 1929              	.LBB217:
 1930              		.file 9 "ROSSerial/ros/msg.h"
   1:ROSSerial/ros/msg.h **** /*
   2:ROSSerial/ros/msg.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/msg.h ****  *
   4:ROSSerial/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/msg.h ****  * All rights reserved.
   6:ROSSerial/ros/msg.h ****  *
   7:ROSSerial/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/msg.h ****  * are met:
  10:ROSSerial/ros/msg.h ****  *
  11:ROSSerial/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/msg.h ****  *    with the distribution.
  17:ROSSerial/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/msg.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/msg.h ****  *
  21:ROSSerial/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/msg.h ****  */
  34:ROSSerial/ros/msg.h **** 
  35:ROSSerial/ros/msg.h **** #ifndef _ROS_MSG_H_
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 57


  36:ROSSerial/ros/msg.h **** #define _ROS_MSG_H_
  37:ROSSerial/ros/msg.h **** 
  38:ROSSerial/ros/msg.h **** #include <stdint.h>
  39:ROSSerial/ros/msg.h **** #include <stddef.h>
  40:ROSSerial/ros/msg.h **** 
  41:ROSSerial/ros/msg.h **** namespace ros
  42:ROSSerial/ros/msg.h **** {
  43:ROSSerial/ros/msg.h **** 
  44:ROSSerial/ros/msg.h **** /* Base Message Type */
  45:ROSSerial/ros/msg.h **** class Msg
  46:ROSSerial/ros/msg.h **** {
  47:ROSSerial/ros/msg.h **** public:
  48:ROSSerial/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  49:ROSSerial/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  50:ROSSerial/ros/msg.h ****   virtual const char * getType() = 0;
  51:ROSSerial/ros/msg.h ****   virtual const char * getMD5() = 0;
  52:ROSSerial/ros/msg.h **** 
  53:ROSSerial/ros/msg.h ****   /**
  54:ROSSerial/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  55:ROSSerial/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  56:ROSSerial/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  57:ROSSerial/ros/msg.h ****    *
  58:ROSSerial/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  59:ROSSerial/ros/msg.h ****    * @param[in] f value to serialize.
  60:ROSSerial/ros/msg.h ****    *
  61:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  62:ROSSerial/ros/msg.h ****    *
  63:ROSSerial/ros/msg.h ****    */
  64:ROSSerial/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  65:ROSSerial/ros/msg.h ****   {
  66:ROSSerial/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  67:ROSSerial/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
  68:ROSSerial/ros/msg.h ****     if (exp != 0)
  69:ROSSerial/ros/msg.h ****     {
  70:ROSSerial/ros/msg.h ****       exp += 1023 - 127;
  71:ROSSerial/ros/msg.h ****     }
  72:ROSSerial/ros/msg.h **** 
  73:ROSSerial/ros/msg.h ****     int32_t sig = *val;
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
  81:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  82:ROSSerial/ros/msg.h **** 
  83:ROSSerial/ros/msg.h ****     // Mark negative bit as necessary.
  84:ROSSerial/ros/msg.h ****     if (f < 0)
  85:ROSSerial/ros/msg.h ****     {
  86:ROSSerial/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
  87:ROSSerial/ros/msg.h ****     }
  88:ROSSerial/ros/msg.h **** 
  89:ROSSerial/ros/msg.h ****     return 8;
  90:ROSSerial/ros/msg.h ****   }
  91:ROSSerial/ros/msg.h **** 
  92:ROSSerial/ros/msg.h ****   /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 58


  93:ROSSerial/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  94:ROSSerial/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  95:ROSSerial/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  96:ROSSerial/ros/msg.h ****    *
  97:ROSSerial/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  98:ROSSerial/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  99:ROSSerial/ros/msg.h ****    *
 100:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 101:ROSSerial/ros/msg.h ****    */
 102:ROSSerial/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 103:ROSSerial/ros/msg.h ****   {
 104:ROSSerial/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 105:ROSSerial/ros/msg.h ****     inbuffer += 3;
 106:ROSSerial/ros/msg.h **** 
 107:ROSSerial/ros/msg.h ****     // Copy truncated mantissa.
 108:ROSSerial/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 111:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 112:ROSSerial/ros/msg.h **** 
 113:ROSSerial/ros/msg.h ****     // Copy truncated exponent.
 114:ROSSerial/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 115:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 116:ROSSerial/ros/msg.h ****     if (exp != 0)
 117:ROSSerial/ros/msg.h ****     {
 118:ROSSerial/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 119:ROSSerial/ros/msg.h ****     }
 120:ROSSerial/ros/msg.h **** 
 121:ROSSerial/ros/msg.h ****     // Copy negative sign.
 122:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 123:ROSSerial/ros/msg.h **** 
 124:ROSSerial/ros/msg.h ****     return 8;
 125:ROSSerial/ros/msg.h ****   }
 126:ROSSerial/ros/msg.h **** 
 127:ROSSerial/ros/msg.h ****   // Copy data from variable into a byte array
 128:ROSSerial/ros/msg.h ****   template<typename A, typename V>
 129:ROSSerial/ros/msg.h ****   static void varToArr(A arr, const V var)
 130:ROSSerial/ros/msg.h ****   {
 131:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 1931              		.loc 9 131 0 discriminator 2
 1932 00ac 0023     		movs	r3, #0
 1933              	.LVL239:
 1934              	.L102:
 1935              		.loc 9 131 0 is_stmt 0
 1936 00ae 032B     		cmp	r3, #3
 1937 00b0 E5D8     		bhi	.L101
 132:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 1938              		.loc 9 132 0 is_stmt 1
 1939 00b2 DA00     		lsls	r2, r3, #3
 1940 00b4 27FA02F2 		lsr	r2, r7, r2
 1941 00b8 C118     		adds	r1, r0, r3
 1942 00ba 6A54     		strb	r2, [r5, r1]
 131:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 1943              		.loc 9 131 0
 1944 00bc 0133     		adds	r3, r3, #1
 1945              	.LVL240:
 1946 00be F6E7     		b	.L102
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 59


 1947              	.LVL241:
 1948              	.L100:
 1949              	.LBE217:
 1950              	.LBE216:
 1951              	.LBE218:
 1952              	.LBE214:
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
 1953              		.loc 6 60 0
 1954 00c0 736A     		ldr	r3, [r6, #36]
 1955 00c2 2B55     		strb	r3, [r5, r4]
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
 1956              		.loc 6 61 0
 1957 00c4 736A     		ldr	r3, [r6, #36]
 1958 00c6 1B0A     		lsrs	r3, r3, #8
 1959 00c8 621C     		adds	r2, r4, #1
 1960 00ca AB54     		strb	r3, [r5, r2]
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
 1961              		.loc 6 62 0
 1962 00cc F28C     		ldrh	r2, [r6, #38]
 1963 00ce A31C     		adds	r3, r4, #2
 1964 00d0 EA54     		strb	r2, [r5, r3]
  63:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 1965              		.loc 6 63 0
 1966 00d2 96F82720 		ldrb	r2, [r6, #39]	@ zero_extendqisi2
 1967 00d6 E31C     		adds	r3, r4, #3
 1968 00d8 EA54     		strb	r2, [r5, r3]
  64:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 1969              		.loc 6 64 0
 1970 00da 201D     		adds	r0, r4, #4
 1971              	.LVL242:
 1972              	.LBB219:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 1973              		.loc 6 65 0
 1974 00dc 0027     		movs	r7, #0
 1975 00de 17E0     		b	.L108
 1976              	.LVL243:
 1977              	.L105:
 1978              	.LBB220:
 1979              	.LBB221:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 1980              		.loc 9 74 0
 1981 00e0 0024     		movs	r4, #0
 1982 00e2 1470     		strb	r4, [r2]
 1983              	.LVL244:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 1984              		.loc 9 75 0
 1985 00e4 5470     		strb	r4, [r2, #1]
 1986              	.LVL245:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 1987              		.loc 9 76 0
 1988 00e6 9470     		strb	r4, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 1989              		.loc 9 77 0
 1990 00e8 5C01     		lsls	r4, r3, #5
 1991              	.LVL246:
 1992 00ea D470     		strb	r4, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 60


 1993              		.loc 9 78 0
 1994 00ec DC10     		asrs	r4, r3, #3
 1995              	.LVL247:
 1996 00ee 1471     		strb	r4, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 1997              		.loc 9 79 0
 1998 00f0 DC12     		asrs	r4, r3, #11
 1999              	.LVL248:
 2000 00f2 5471     		strb	r4, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2001              		.loc 9 80 0
 2002 00f4 C3F3C343 		ubfx	r3, r3, #19, #4
 2003              	.LVL249:
 2004 00f8 43EA0113 		orr	r3, r3, r1, lsl #4
 2005 00fc 9371     		strb	r3, [r2, #6]
 2006              	.LVL250:
  81:ROSSerial/ros/msg.h **** 
 2007              		.loc 9 81 0
 2008 00fe 0909     		lsrs	r1, r1, #4
 2009              	.LVL251:
 2010 0100 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2011              		.loc 9 84 0
 2012 0102 F5EEC07A 		vcmpe.f32	s15, #0
 2013 0106 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2014 010a 13D4     		bmi	.L123
 2015              	.L106:
 2016              	.LVL252:
 2017              	.LBE221:
 2018              	.LBE220:
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2019              		.loc 6 66 0
 2020 010c 0830     		adds	r0, r0, #8
 2021              	.LVL253:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2022              		.loc 6 65 0
 2023 010e 0137     		adds	r7, r7, #1
 2024              	.LVL254:
 2025              	.L108:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2026              		.loc 6 65 0 is_stmt 0 discriminator 3
 2027 0110 736A     		ldr	r3, [r6, #36]
 2028 0112 BB42     		cmp	r3, r7
 2029 0114 12D9     		bls	.L104
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2030              		.loc 6 66 0 is_stmt 1 discriminator 2
 2031 0116 2A18     		adds	r2, r5, r0
 2032 0118 F36A     		ldr	r3, [r6, #44]
 2033 011a 03EB8703 		add	r3, r3, r7, lsl #2
 2034 011e D3ED007A 		vldr.32	s15, [r3]
 2035              	.LVL255:
 2036              	.LBB223:
 2037              	.LBB222:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2038              		.loc 9 67 0 discriminator 2
 2039 0122 17EE903A 		vmov	r3, s15	@ int
 2040 0126 C3F3C751 		ubfx	r1, r3, #23, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 61


 2041              	.LVL256:
  68:ROSSerial/ros/msg.h ****     {
 2042              		.loc 9 68 0 discriminator 2
 2043 012a 0029     		cmp	r1, #0
 2044 012c D8D0     		beq	.L105
  70:ROSSerial/ros/msg.h ****     }
 2045              		.loc 9 70 0
 2046 012e 01F56071 		add	r1, r1, #896
 2047              	.LVL257:
 2048 0132 D5E7     		b	.L105
 2049              	.LVL258:
 2050              	.L123:
  86:ROSSerial/ros/msg.h ****     }
 2051              		.loc 9 86 0
 2052 0134 61F07F01 		orn	r1, r1, #127
 2053 0138 D171     		strb	r1, [r2, #7]
 2054 013a E7E7     		b	.L106
 2055              	.LVL259:
 2056              	.L104:
 2057              	.LBE222:
 2058              	.LBE223:
 2059              	.LBE219:
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
 2060              		.loc 6 68 0
 2061 013c 336B     		ldr	r3, [r6, #48]
 2062 013e 2B54     		strb	r3, [r5, r0]
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
 2063              		.loc 6 69 0
 2064 0140 336B     		ldr	r3, [r6, #48]
 2065 0142 1B0A     		lsrs	r3, r3, #8
 2066 0144 421C     		adds	r2, r0, #1
 2067 0146 AB54     		strb	r3, [r5, r2]
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
 2068              		.loc 6 70 0
 2069 0148 728E     		ldrh	r2, [r6, #50]
 2070 014a 831C     		adds	r3, r0, #2
 2071 014c EA54     		strb	r2, [r5, r3]
  71:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2072              		.loc 6 71 0
 2073 014e 96F83320 		ldrb	r2, [r6, #51]	@ zero_extendqisi2
 2074 0152 C31C     		adds	r3, r0, #3
 2075 0154 EA54     		strb	r2, [r5, r3]
  72:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2076              		.loc 6 72 0
 2077 0156 0430     		adds	r0, r0, #4
 2078              	.LVL260:
 2079              	.LBB224:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2080              		.loc 6 73 0
 2081 0158 0024     		movs	r4, #0
 2082 015a 17E0     		b	.L113
 2083              	.LVL261:
 2084              	.L110:
 2085              	.LBB225:
 2086              	.LBB226:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2087              		.loc 9 74 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 62


 2088 015c 0027     		movs	r7, #0
 2089 015e 1770     		strb	r7, [r2]
 2090              	.LVL262:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2091              		.loc 9 75 0
 2092 0160 5770     		strb	r7, [r2, #1]
 2093              	.LVL263:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2094              		.loc 9 76 0
 2095 0162 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2096              		.loc 9 77 0
 2097 0164 5F01     		lsls	r7, r3, #5
 2098              	.LVL264:
 2099 0166 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2100              		.loc 9 78 0
 2101 0168 DF10     		asrs	r7, r3, #3
 2102              	.LVL265:
 2103 016a 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2104              		.loc 9 79 0
 2105 016c DF12     		asrs	r7, r3, #11
 2106              	.LVL266:
 2107 016e 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2108              		.loc 9 80 0
 2109 0170 C3F3C343 		ubfx	r3, r3, #19, #4
 2110              	.LVL267:
 2111 0174 43EA0113 		orr	r3, r3, r1, lsl #4
 2112 0178 9371     		strb	r3, [r2, #6]
 2113              	.LVL268:
  81:ROSSerial/ros/msg.h **** 
 2114              		.loc 9 81 0
 2115 017a 0909     		lsrs	r1, r1, #4
 2116              	.LVL269:
 2117 017c D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2118              		.loc 9 84 0
 2119 017e F5EEC07A 		vcmpe.f32	s15, #0
 2120 0182 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2121 0186 13D4     		bmi	.L124
 2122              	.L111:
 2123              	.LVL270:
 2124              	.LBE226:
 2125              	.LBE225:
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2126              		.loc 6 74 0
 2127 0188 0830     		adds	r0, r0, #8
 2128              	.LVL271:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2129              		.loc 6 73 0
 2130 018a 0134     		adds	r4, r4, #1
 2131              	.LVL272:
 2132              	.L113:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2133              		.loc 6 73 0 is_stmt 0 discriminator 3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 63


 2134 018c 336B     		ldr	r3, [r6, #48]
 2135 018e A342     		cmp	r3, r4
 2136 0190 12D9     		bls	.L109
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2137              		.loc 6 74 0 is_stmt 1 discriminator 2
 2138 0192 2A18     		adds	r2, r5, r0
 2139 0194 B36B     		ldr	r3, [r6, #56]
 2140 0196 03EB8403 		add	r3, r3, r4, lsl #2
 2141 019a D3ED007A 		vldr.32	s15, [r3]
 2142              	.LVL273:
 2143              	.LBB228:
 2144              	.LBB227:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2145              		.loc 9 67 0 discriminator 2
 2146 019e 17EE903A 		vmov	r3, s15	@ int
 2147 01a2 C3F3C751 		ubfx	r1, r3, #23, #8
 2148              	.LVL274:
  68:ROSSerial/ros/msg.h ****     {
 2149              		.loc 9 68 0 discriminator 2
 2150 01a6 0029     		cmp	r1, #0
 2151 01a8 D8D0     		beq	.L110
  70:ROSSerial/ros/msg.h ****     }
 2152              		.loc 9 70 0
 2153 01aa 01F56071 		add	r1, r1, #896
 2154              	.LVL275:
 2155 01ae D5E7     		b	.L110
 2156              	.LVL276:
 2157              	.L124:
  86:ROSSerial/ros/msg.h ****     }
 2158              		.loc 9 86 0
 2159 01b0 61F07F01 		orn	r1, r1, #127
 2160 01b4 D171     		strb	r1, [r2, #7]
 2161 01b6 E7E7     		b	.L111
 2162              	.LVL277:
 2163              	.L109:
 2164              	.LBE227:
 2165              	.LBE228:
 2166              	.LBE224:
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
 2167              		.loc 6 76 0
 2168 01b8 F36B     		ldr	r3, [r6, #60]
 2169 01ba 2B54     		strb	r3, [r5, r0]
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
 2170              		.loc 6 77 0
 2171 01bc F36B     		ldr	r3, [r6, #60]
 2172 01be 1B0A     		lsrs	r3, r3, #8
 2173 01c0 421C     		adds	r2, r0, #1
 2174 01c2 AB54     		strb	r3, [r5, r2]
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
 2175              		.loc 6 78 0
 2176 01c4 F28F     		ldrh	r2, [r6, #62]
 2177 01c6 831C     		adds	r3, r0, #2
 2178 01c8 EA54     		strb	r2, [r5, r3]
  79:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2179              		.loc 6 79 0
 2180 01ca 96F83F20 		ldrb	r2, [r6, #63]	@ zero_extendqisi2
 2181 01ce C31C     		adds	r3, r0, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 64


 2182 01d0 EA54     		strb	r2, [r5, r3]
  80:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2183              		.loc 6 80 0
 2184 01d2 0430     		adds	r0, r0, #4
 2185              	.LVL278:
 2186              	.LBB229:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2187              		.loc 6 81 0
 2188 01d4 0024     		movs	r4, #0
 2189              	.LVL279:
 2190 01d6 17E0     		b	.L118
 2191              	.LVL280:
 2192              	.L115:
 2193              	.LBB230:
 2194              	.LBB231:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2195              		.loc 9 74 0
 2196 01d8 0027     		movs	r7, #0
 2197 01da 1770     		strb	r7, [r2]
 2198              	.LVL281:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2199              		.loc 9 75 0
 2200 01dc 5770     		strb	r7, [r2, #1]
 2201              	.LVL282:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2202              		.loc 9 76 0
 2203 01de 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2204              		.loc 9 77 0
 2205 01e0 5F01     		lsls	r7, r3, #5
 2206              	.LVL283:
 2207 01e2 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2208              		.loc 9 78 0
 2209 01e4 DF10     		asrs	r7, r3, #3
 2210              	.LVL284:
 2211 01e6 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2212              		.loc 9 79 0
 2213 01e8 DF12     		asrs	r7, r3, #11
 2214              	.LVL285:
 2215 01ea 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2216              		.loc 9 80 0
 2217 01ec C3F3C343 		ubfx	r3, r3, #19, #4
 2218              	.LVL286:
 2219 01f0 43EA0113 		orr	r3, r3, r1, lsl #4
 2220 01f4 9371     		strb	r3, [r2, #6]
 2221              	.LVL287:
  81:ROSSerial/ros/msg.h **** 
 2222              		.loc 9 81 0
 2223 01f6 0909     		lsrs	r1, r1, #4
 2224              	.LVL288:
 2225 01f8 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2226              		.loc 9 84 0
 2227 01fa F5EEC07A 		vcmpe.f32	s15, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 65


 2228 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2229 0202 13D4     		bmi	.L125
 2230              	.L116:
 2231              	.LVL289:
 2232              	.LBE231:
 2233              	.LBE230:
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2234              		.loc 6 82 0
 2235 0204 0830     		adds	r0, r0, #8
 2236              	.LVL290:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2237              		.loc 6 81 0
 2238 0206 0134     		adds	r4, r4, #1
 2239              	.LVL291:
 2240              	.L118:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2241              		.loc 6 81 0 is_stmt 0 discriminator 3
 2242 0208 F36B     		ldr	r3, [r6, #60]
 2243 020a A342     		cmp	r3, r4
 2244 020c 12D9     		bls	.L99
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2245              		.loc 6 82 0 is_stmt 1 discriminator 2
 2246 020e 2A18     		adds	r2, r5, r0
 2247 0210 736C     		ldr	r3, [r6, #68]
 2248 0212 03EB8403 		add	r3, r3, r4, lsl #2
 2249 0216 D3ED007A 		vldr.32	s15, [r3]
 2250              	.LVL292:
 2251              	.LBB233:
 2252              	.LBB232:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2253              		.loc 9 67 0 discriminator 2
 2254 021a 17EE903A 		vmov	r3, s15	@ int
 2255 021e C3F3C751 		ubfx	r1, r3, #23, #8
 2256              	.LVL293:
  68:ROSSerial/ros/msg.h ****     {
 2257              		.loc 9 68 0 discriminator 2
 2258 0222 0029     		cmp	r1, #0
 2259 0224 D8D0     		beq	.L115
  70:ROSSerial/ros/msg.h ****     }
 2260              		.loc 9 70 0
 2261 0226 01F56071 		add	r1, r1, #896
 2262              	.LVL294:
 2263 022a D5E7     		b	.L115
 2264              	.LVL295:
 2265              	.L125:
  86:ROSSerial/ros/msg.h ****     }
 2266              		.loc 9 86 0
 2267 022c 61F07F01 		orn	r1, r1, #127
 2268 0230 D171     		strb	r1, [r2, #7]
 2269 0232 E7E7     		b	.L116
 2270              	.LVL296:
 2271              	.L99:
 2272              	.LBE232:
 2273              	.LBE233:
 2274              	.LBE229:
  85:ROSSerial/sensor_msgs/JointState.h **** 
 2275              		.loc 6 85 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 66


 2276 0234 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2277              		.cfi_endproc
 2278              	.LFE487:
 2279              		.cantunwind
 2280              		.fnend
 2282              		.section	.text._ZN11sensor_msgs10JointState11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs10Join
 2283              		.align	1
 2284              		.weak	_ZN11sensor_msgs10JointState11deserializeEPh
 2285              		.syntax unified
 2286              		.thumb
 2287              		.thumb_func
 2288              		.fpu fpv4-sp-d16
 2290              	_ZN11sensor_msgs10JointState11deserializeEPh:
 2291              		.fnstart
 2292              	.LFB488:
  87:ROSSerial/sensor_msgs/JointState.h ****     {
 2293              		.loc 6 87 0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 0
 2296              		@ frame_needed = 0, uses_anonymous_args = 0
 2297              	.LVL297:
 2298 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2299              	.LCFI12:
 2300              		.cfi_def_cfa_offset 24
 2301              		.cfi_offset 3, -24
 2302              		.cfi_offset 4, -20
 2303              		.cfi_offset 5, -16
 2304              		.cfi_offset 6, -12
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 0446     		mov	r4, r0
 2308 0004 0D46     		mov	r5, r1
 2309              	.LVL298:
  90:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 2310              		.loc 6 90 0
 2311 0006 021D     		adds	r2, r0, #4
 2312              	.LVL299:
 2313              	.LBB252:
 2314              	.LBB253:
  49:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2315              		.loc 5 49 0
 2316 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2317 000a 5360     		str	r3, [r2, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2318              		.loc 5 50 0
 2319 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 2320              	.LVL300:
 2321 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 2322 0012 5360     		str	r3, [r2, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2323              		.loc 5 51 0
 2324 0014 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2325 0016 43EA0143 		orr	r3, r3, r1, lsl #16
 2326 001a 5360     		str	r3, [r2, #4]
  52:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2327              		.loc 5 52 0
 2328 001c E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 67


 2329 001e 43EA0163 		orr	r3, r3, r1, lsl #24
 2330 0022 5360     		str	r3, [r2, #4]
 2331              	.LVL301:
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2332              		.loc 5 54 0
 2333 0024 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2334 0026 9360     		str	r3, [r2, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2335              		.loc 5 55 0
 2336 0028 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 2337 002a 43EA0123 		orr	r3, r3, r1, lsl #8
 2338 002e 9360     		str	r3, [r2, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2339              		.loc 5 56 0
 2340 0030 A979     		ldrb	r1, [r5, #6]	@ zero_extendqisi2
 2341 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 2342 0036 9360     		str	r3, [r2, #8]
  57:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2343              		.loc 5 57 0
 2344 0038 E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 2345 003a 43EA0163 		orr	r3, r3, r1, lsl #24
 2346 003e 9360     		str	r3, [r2, #8]
 2347              	.LVL302:
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2348              		.loc 5 59 0
 2349 0040 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2350 0042 D360     		str	r3, [r2, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2351              		.loc 5 60 0
 2352 0044 697A     		ldrb	r1, [r5, #9]	@ zero_extendqisi2
 2353 0046 43EA0123 		orr	r3, r3, r1, lsl #8
 2354 004a D360     		str	r3, [r2, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2355              		.loc 5 61 0
 2356 004c A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 2357 004e 43EA0143 		orr	r3, r3, r1, lsl #16
 2358 0052 D360     		str	r3, [r2, #12]
  62:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2359              		.loc 5 62 0
 2360 0054 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 2361 0056 43EA0163 		orr	r3, r3, r1, lsl #24
 2362 005a D360     		str	r3, [r2, #12]
 2363              	.LVL303:
  65:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2364              		.loc 5 65 0
 2365 005c EF68     		ldr	r7, [r5, #12]	@ unaligned
 2366              	.LVL304:
 2367              	.LBB254:
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2368              		.loc 5 67 0
 2369 005e 1023     		movs	r3, #16
 2370              	.LVL305:
 2371              	.L128:
 2372 0060 07F11006 		add	r6, r7, #16
 2373 0064 9E42     		cmp	r6, r3
 2374 0066 04D9     		bls	.L127
  68:ROSSerial/std_msgs/Header.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 68


 2375              		.loc 5 68 0
 2376 0068 591E     		subs	r1, r3, #1
 2377 006a E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 2378 006c 6854     		strb	r0, [r5, r1]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2379              		.loc 5 67 0
 2380 006e 0133     		adds	r3, r3, #1
 2381              	.LVL306:
 2382 0070 F6E7     		b	.L128
 2383              	.L127:
 2384              	.LBE254:
  70:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2385              		.loc 5 70 0
 2386 0072 0F37     		adds	r7, r7, #15
 2387              	.LVL307:
 2388 0074 0023     		movs	r3, #0
 2389              	.LVL308:
 2390 0076 EB55     		strb	r3, [r5, r7]
  71:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2391              		.loc 5 71 0
 2392 0078 05F10F03 		add	r3, r5, #15
 2393 007c 1361     		str	r3, [r2, #16]
 2394              	.LVL309:
 2395              	.LBE253:
 2396              	.LBE252:
  91:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2397              		.loc 6 91 0
 2398 007e AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2399              	.LVL310:
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2400              		.loc 6 92 0
 2401 0080 731C     		adds	r3, r6, #1
 2402 0082 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2403 0084 47EA0327 		orr	r7, r7, r3, lsl #8
 2404              	.LVL311:
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2405              		.loc 6 93 0
 2406 0088 B31C     		adds	r3, r6, #2
 2407 008a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2408 008c 47EA0347 		orr	r7, r7, r3, lsl #16
 2409              	.LVL312:
  94:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2410              		.loc 6 94 0
 2411 0090 F31C     		adds	r3, r6, #3
 2412 0092 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2413 0094 47EA0367 		orr	r7, r7, r3, lsl #24
 2414              	.LVL313:
  95:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
 2415              		.loc 6 95 0
 2416 0098 0436     		adds	r6, r6, #4
 2417              	.LVL314:
  96:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
 2418              		.loc 6 96 0
 2419 009a A369     		ldr	r3, [r4, #24]
 2420 009c BB42     		cmp	r3, r7
 2421 009e 02D3     		bcc	.L149
 2422              	.L129:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 69


  98:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2423              		.loc 6 98 0
 2424 00a0 A761     		str	r7, [r4, #24]
 2425              	.LVL315:
 2426              	.LBB255:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2427              		.loc 6 99 0
 2428 00a2 0020     		movs	r0, #0
 2429 00a4 1AE0     		b	.L135
 2430              	.LVL316:
 2431              	.L149:
 2432              	.LBE255:
  97:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
 2433              		.loc 6 97 0
 2434 00a6 B900     		lsls	r1, r7, #2
 2435 00a8 206A     		ldr	r0, [r4, #32]
 2436 00aa FFF7FEFF 		bl	realloc
 2437              	.LVL317:
 2438 00ae 2062     		str	r0, [r4, #32]
 2439 00b0 F6E7     		b	.L129
 2440              	.LVL318:
 2441              	.L131:
 2442              	.LBB262:
 2443              	.LBB256:
 102:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 2444              		.loc 6 102 0
 2445 00b2 0436     		adds	r6, r6, #4
 2446              	.LVL319:
 2447              	.LBB257:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2448              		.loc 6 103 0
 2449 00b4 3346     		mov	r3, r6
 2450              	.LVL320:
 2451              	.L134:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2452              		.loc 6 103 0 is_stmt 0 discriminator 3
 2453 00b6 B118     		adds	r1, r6, r2
 2454 00b8 9942     		cmp	r1, r3
 2455 00ba 04D9     		bls	.L133
 104:ROSSerial/sensor_msgs/JointState.h ****       }
 2456              		.loc 6 104 0 is_stmt 1 discriminator 2
 2457 00bc 591E     		subs	r1, r3, #1
 2458 00be EF5C     		ldrb	r7, [r5, r3]	@ zero_extendqisi2
 2459 00c0 6F54     		strb	r7, [r5, r1]
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2460              		.loc 6 103 0 discriminator 2
 2461 00c2 0133     		adds	r3, r3, #1
 2462              	.LVL321:
 2463 00c4 F7E7     		b	.L134
 2464              	.L133:
 2465              	.LBE257:
 106:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 2466              		.loc 6 106 0 discriminator 2
 2467 00c6 4B1E     		subs	r3, r1, #1
 2468              	.LVL322:
 2469 00c8 0022     		movs	r2, #0
 2470              	.LVL323:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 70


 2471 00ca EA54     		strb	r2, [r5, r3]
 107:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 2472              		.loc 6 107 0 discriminator 2
 2473 00cc 013E     		subs	r6, r6, #1
 2474 00ce AB19     		adds	r3, r5, r6
 2475 00d0 E361     		str	r3, [r4, #28]
 108:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 2476              		.loc 6 108 0 discriminator 2
 2477 00d2 0E46     		mov	r6, r1
 2478              	.LVL324:
 109:ROSSerial/sensor_msgs/JointState.h ****       }
 2479              		.loc 6 109 0 discriminator 2
 2480 00d4 226A     		ldr	r2, [r4, #32]
 2481 00d6 42F82030 		str	r3, [r2, r0, lsl #2]	@ unaligned
 2482              	.LBE256:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2483              		.loc 6 99 0 discriminator 2
 2484 00da 0130     		adds	r0, r0, #1
 2485              	.LVL325:
 2486              	.L135:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2487              		.loc 6 99 0 is_stmt 0 discriminator 1
 2488 00dc A369     		ldr	r3, [r4, #24]
 2489 00de 8342     		cmp	r3, r0
 2490 00e0 0CD9     		bls	.L130
 2491              	.LBB261:
 101:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2492              		.loc 6 101 0 is_stmt 1
 2493 00e2 B446     		mov	ip, r6
 2494              	.LVL326:
 2495              	.LBB258:
 2496              	.LBB259:
 133:ROSSerial/ros/msg.h ****   }
 134:ROSSerial/ros/msg.h **** 
 135:ROSSerial/ros/msg.h ****   // Copy data from a byte array into variable
 136:ROSSerial/ros/msg.h ****   template<typename V, typename A>
 137:ROSSerial/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 138:ROSSerial/ros/msg.h ****   {
 139:ROSSerial/ros/msg.h ****     var = 0;
 2497              		.loc 9 139 0
 2498 00e4 0022     		movs	r2, #0
 2499              	.LBB260:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2500              		.loc 9 140 0
 2501 00e6 1346     		mov	r3, r2
 2502              	.LVL327:
 2503              	.L132:
 2504 00e8 032B     		cmp	r3, #3
 2505 00ea E2D8     		bhi	.L131
 141:ROSSerial/ros/msg.h ****       var |= (arr[i] << (8 * i));
 2506              		.loc 9 141 0
 2507 00ec 05EB0C01 		add	r1, r5, ip
 2508 00f0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 2509 00f2 DF00     		lsls	r7, r3, #3
 2510 00f4 B940     		lsls	r1, r1, r7
 2511 00f6 0A43     		orrs	r2, r2, r1
 2512              	.LVL328:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 71


 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2513              		.loc 9 140 0
 2514 00f8 0133     		adds	r3, r3, #1
 2515              	.LVL329:
 2516 00fa F5E7     		b	.L132
 2517              	.LVL330:
 2518              	.L130:
 2519              	.LBE260:
 2520              	.LBE259:
 2521              	.LBE258:
 2522              	.LBE261:
 2523              	.LBE262:
 111:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2524              		.loc 6 111 0
 2525 00fc AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2526              	.LVL331:
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2527              		.loc 6 112 0
 2528 00fe 731C     		adds	r3, r6, #1
 2529 0100 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2530 0102 47EA0327 		orr	r7, r7, r3, lsl #8
 2531              	.LVL332:
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2532              		.loc 6 113 0
 2533 0106 B31C     		adds	r3, r6, #2
 2534 0108 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2535 010a 47EA0347 		orr	r7, r7, r3, lsl #16
 2536              	.LVL333:
 114:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2537              		.loc 6 114 0
 2538 010e F31C     		adds	r3, r6, #3
 2539 0110 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2540 0112 47EA0367 		orr	r7, r7, r3, lsl #24
 2541              	.LVL334:
 115:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 2542              		.loc 6 115 0
 2543 0116 0436     		adds	r6, r6, #4
 2544              	.LVL335:
 116:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 2545              		.loc 6 116 0
 2546 0118 636A     		ldr	r3, [r4, #36]
 2547 011a BB42     		cmp	r3, r7
 2548 011c 02D3     		bcc	.L150
 2549              	.LVL336:
 2550              	.L136:
 118:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2551              		.loc 6 118 0
 2552 011e 6762     		str	r7, [r4, #36]
 2553              	.LVL337:
 2554              	.LBB263:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2555              		.loc 6 119 0
 2556 0120 0020     		movs	r0, #0
 2557 0122 12E0     		b	.L139
 2558              	.LVL338:
 2559              	.L150:
 2560              	.LBE263:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 72


 117:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 2561              		.loc 6 117 0
 2562 0124 B900     		lsls	r1, r7, #2
 2563 0126 E06A     		ldr	r0, [r4, #44]
 2564              	.LVL339:
 2565 0128 FFF7FEFF 		bl	realloc
 2566              	.LVL340:
 2567 012c E062     		str	r0, [r4, #44]
 2568 012e F6E7     		b	.L136
 2569              	.LVL341:
 2570              	.L138:
 2571              	.LBB268:
 2572              	.LBB264:
 2573              	.LBB265:
 122:ROSSerial/ros/msg.h **** 
 2574              		.loc 9 122 0
 2575 0130 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2576 0132 1B06     		lsls	r3, r3, #24
 2577 0134 03F00043 		and	r3, r3, #-2147483648
 2578 0138 A26A     		ldr	r2, [r4, #40]
 2579 013a 1343     		orrs	r3, r3, r2
 2580 013c A362     		str	r3, [r4, #40]
 2581              	.LVL342:
 2582              	.LBE265:
 2583              	.LBE264:
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2584              		.loc 6 120 0
 2585 013e 0836     		adds	r6, r6, #8
 2586              	.LVL343:
 121:ROSSerial/sensor_msgs/JointState.h ****       }
 2587              		.loc 6 121 0
 2588 0140 E36A     		ldr	r3, [r4, #44]
 2589 0142 A26A     		ldr	r2, [r4, #40]	@ unaligned
 2590 0144 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2591              		.loc 6 119 0
 2592 0148 0130     		adds	r0, r0, #1
 2593              	.LVL344:
 2594              	.L139:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2595              		.loc 6 119 0 is_stmt 0 discriminator 3
 2596 014a 636A     		ldr	r3, [r4, #36]
 2597 014c 8342     		cmp	r3, r0
 2598 014e 1FD9     		bls	.L137
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2599              		.loc 6 120 0 is_stmt 1 discriminator 2
 2600 0150 A919     		adds	r1, r5, r6
 2601              	.LVL345:
 2602              	.LBB267:
 2603              	.LBB266:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2604              		.loc 9 108 0 discriminator 2
 2605 0152 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2606 0154 5B09     		lsrs	r3, r3, #5
 2607 0156 A362     		str	r3, [r4, #40]
 2608              	.LVL346:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 73


 2609              		.loc 9 109 0 discriminator 2
 2610 0158 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2611 015a 43EAC203 		orr	r3, r3, r2, lsl #3
 2612 015e A362     		str	r3, [r4, #40]
 2613              	.LVL347:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2614              		.loc 9 110 0 discriminator 2
 2615 0160 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2616 0162 43EAC223 		orr	r3, r3, r2, lsl #11
 2617 0166 A362     		str	r3, [r4, #40]
 111:ROSSerial/ros/msg.h **** 
 2618              		.loc 9 111 0 discriminator 2
 2619 0168 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2620 016a D204     		lsls	r2, r2, #19
 2621 016c 02F4F002 		and	r2, r2, #7864320
 2622 0170 1343     		orrs	r3, r3, r2
 2623 0172 A362     		str	r3, [r4, #40]
 2624              	.LVL348:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2625              		.loc 9 114 0 discriminator 2
 2626 0174 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2627              	.LVL349:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2628              		.loc 9 115 0 discriminator 2
 2629 0176 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2630 0178 1201     		lsls	r2, r2, #4
 2631 017a 02F4FE62 		and	r2, r2, #2032
 2632              	.LVL350:
 116:ROSSerial/ros/msg.h ****     {
 2633              		.loc 9 116 0 discriminator 2
 2634 017e 52EA1712 		orrs	r2, r2, r7, lsr #4
 2635              	.LVL351:
 2636 0182 D5D0     		beq	.L138
 118:ROSSerial/ros/msg.h ****     }
 2637              		.loc 9 118 0
 2638 0184 A2F56072 		sub	r2, r2, #896
 2639              	.LVL352:
 2640 0188 43EAC253 		orr	r3, r3, r2, lsl #23
 2641 018c A362     		str	r3, [r4, #40]
 2642 018e CFE7     		b	.L138
 2643              	.LVL353:
 2644              	.L137:
 2645              	.LBE266:
 2646              	.LBE267:
 2647              	.LBE268:
 123:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2648              		.loc 6 123 0
 2649 0190 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2650              	.LVL354:
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2651              		.loc 6 124 0
 2652 0192 731C     		adds	r3, r6, #1
 2653 0194 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2654 0196 47EA0327 		orr	r7, r7, r3, lsl #8
 2655              	.LVL355:
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2656              		.loc 6 125 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 74


 2657 019a B31C     		adds	r3, r6, #2
 2658 019c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2659 019e 47EA0347 		orr	r7, r7, r3, lsl #16
 2660              	.LVL356:
 126:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2661              		.loc 6 126 0
 2662 01a2 F31C     		adds	r3, r6, #3
 2663 01a4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2664 01a6 47EA0367 		orr	r7, r7, r3, lsl #24
 2665              	.LVL357:
 127:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 2666              		.loc 6 127 0
 2667 01aa 0436     		adds	r6, r6, #4
 2668              	.LVL358:
 128:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 2669              		.loc 6 128 0
 2670 01ac 236B     		ldr	r3, [r4, #48]
 2671 01ae BB42     		cmp	r3, r7
 2672 01b0 02D3     		bcc	.L151
 2673              	.LVL359:
 2674              	.L140:
 130:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2675              		.loc 6 130 0
 2676 01b2 2763     		str	r7, [r4, #48]
 2677              	.LVL360:
 2678              	.LBB269:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2679              		.loc 6 131 0
 2680 01b4 0020     		movs	r0, #0
 2681 01b6 12E0     		b	.L143
 2682              	.LVL361:
 2683              	.L151:
 2684              	.LBE269:
 129:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 2685              		.loc 6 129 0
 2686 01b8 B900     		lsls	r1, r7, #2
 2687 01ba A06B     		ldr	r0, [r4, #56]
 2688              	.LVL362:
 2689 01bc FFF7FEFF 		bl	realloc
 2690              	.LVL363:
 2691 01c0 A063     		str	r0, [r4, #56]
 2692 01c2 F6E7     		b	.L140
 2693              	.LVL364:
 2694              	.L142:
 2695              	.LBB274:
 2696              	.LBB270:
 2697              	.LBB271:
 122:ROSSerial/ros/msg.h **** 
 2698              		.loc 9 122 0
 2699 01c4 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2700 01c6 1B06     		lsls	r3, r3, #24
 2701 01c8 03F00043 		and	r3, r3, #-2147483648
 2702 01cc 626B     		ldr	r2, [r4, #52]
 2703 01ce 1343     		orrs	r3, r3, r2
 2704 01d0 6363     		str	r3, [r4, #52]
 2705              	.LVL365:
 2706              	.LBE271:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 75


 2707              	.LBE270:
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2708              		.loc 6 132 0
 2709 01d2 0836     		adds	r6, r6, #8
 2710              	.LVL366:
 133:ROSSerial/sensor_msgs/JointState.h ****       }
 2711              		.loc 6 133 0
 2712 01d4 A36B     		ldr	r3, [r4, #56]
 2713 01d6 626B     		ldr	r2, [r4, #52]	@ unaligned
 2714 01d8 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2715              		.loc 6 131 0
 2716 01dc 0130     		adds	r0, r0, #1
 2717              	.LVL367:
 2718              	.L143:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2719              		.loc 6 131 0 is_stmt 0 discriminator 3
 2720 01de 236B     		ldr	r3, [r4, #48]
 2721 01e0 8342     		cmp	r3, r0
 2722 01e2 1FD9     		bls	.L141
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2723              		.loc 6 132 0 is_stmt 1 discriminator 2
 2724 01e4 A919     		adds	r1, r5, r6
 2725              	.LVL368:
 2726              	.LBB273:
 2727              	.LBB272:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2728              		.loc 9 108 0 discriminator 2
 2729 01e6 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2730 01e8 5B09     		lsrs	r3, r3, #5
 2731 01ea 6363     		str	r3, [r4, #52]
 2732              	.LVL369:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2733              		.loc 9 109 0 discriminator 2
 2734 01ec 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2735 01ee 43EAC203 		orr	r3, r3, r2, lsl #3
 2736 01f2 6363     		str	r3, [r4, #52]
 2737              	.LVL370:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2738              		.loc 9 110 0 discriminator 2
 2739 01f4 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2740 01f6 43EAC223 		orr	r3, r3, r2, lsl #11
 2741 01fa 6363     		str	r3, [r4, #52]
 111:ROSSerial/ros/msg.h **** 
 2742              		.loc 9 111 0 discriminator 2
 2743 01fc 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2744 01fe D204     		lsls	r2, r2, #19
 2745 0200 02F4F002 		and	r2, r2, #7864320
 2746 0204 1343     		orrs	r3, r3, r2
 2747 0206 6363     		str	r3, [r4, #52]
 2748              	.LVL371:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2749              		.loc 9 114 0 discriminator 2
 2750 0208 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2751              	.LVL372:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2752              		.loc 9 115 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 76


 2753 020a CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2754 020c 1201     		lsls	r2, r2, #4
 2755 020e 02F4FE62 		and	r2, r2, #2032
 2756              	.LVL373:
 116:ROSSerial/ros/msg.h ****     {
 2757              		.loc 9 116 0 discriminator 2
 2758 0212 52EA1712 		orrs	r2, r2, r7, lsr #4
 2759              	.LVL374:
 2760 0216 D5D0     		beq	.L142
 118:ROSSerial/ros/msg.h ****     }
 2761              		.loc 9 118 0
 2762 0218 A2F56072 		sub	r2, r2, #896
 2763              	.LVL375:
 2764 021c 43EAC253 		orr	r3, r3, r2, lsl #23
 2765 0220 6363     		str	r3, [r4, #52]
 2766 0222 CFE7     		b	.L142
 2767              	.LVL376:
 2768              	.L141:
 2769              	.LBE272:
 2770              	.LBE273:
 2771              	.LBE274:
 135:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2772              		.loc 6 135 0
 2773 0224 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2774              	.LVL377:
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2775              		.loc 6 136 0
 2776 0226 731C     		adds	r3, r6, #1
 2777 0228 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2778 022a 47EA0327 		orr	r7, r7, r3, lsl #8
 2779              	.LVL378:
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2780              		.loc 6 137 0
 2781 022e B31C     		adds	r3, r6, #2
 2782 0230 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2783 0232 47EA0347 		orr	r7, r7, r3, lsl #16
 2784              	.LVL379:
 138:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2785              		.loc 6 138 0
 2786 0236 F31C     		adds	r3, r6, #3
 2787 0238 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2788 023a 47EA0367 		orr	r7, r7, r3, lsl #24
 2789              	.LVL380:
 139:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 2790              		.loc 6 139 0
 2791 023e 0436     		adds	r6, r6, #4
 2792              	.LVL381:
 140:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 2793              		.loc 6 140 0
 2794 0240 E36B     		ldr	r3, [r4, #60]
 2795 0242 BB42     		cmp	r3, r7
 2796 0244 02D3     		bcc	.L152
 2797              	.LVL382:
 2798              	.L144:
 142:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2799              		.loc 6 142 0
 2800 0246 E763     		str	r7, [r4, #60]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 77


 2801              	.LVL383:
 2802              	.LBB275:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2803              		.loc 6 143 0
 2804 0248 0020     		movs	r0, #0
 2805 024a 12E0     		b	.L147
 2806              	.LVL384:
 2807              	.L152:
 2808              	.LBE275:
 141:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 2809              		.loc 6 141 0
 2810 024c B900     		lsls	r1, r7, #2
 2811 024e 606C     		ldr	r0, [r4, #68]
 2812              	.LVL385:
 2813 0250 FFF7FEFF 		bl	realloc
 2814              	.LVL386:
 2815 0254 6064     		str	r0, [r4, #68]
 2816 0256 F6E7     		b	.L144
 2817              	.LVL387:
 2818              	.L146:
 2819              	.LBB280:
 2820              	.LBB276:
 2821              	.LBB277:
 122:ROSSerial/ros/msg.h **** 
 2822              		.loc 9 122 0
 2823 0258 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2824 025a 1B06     		lsls	r3, r3, #24
 2825 025c 03F00043 		and	r3, r3, #-2147483648
 2826 0260 226C     		ldr	r2, [r4, #64]
 2827 0262 1343     		orrs	r3, r3, r2
 2828 0264 2364     		str	r3, [r4, #64]
 2829              	.LVL388:
 2830              	.LBE277:
 2831              	.LBE276:
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 2832              		.loc 6 144 0
 2833 0266 0836     		adds	r6, r6, #8
 2834              	.LVL389:
 145:ROSSerial/sensor_msgs/JointState.h ****       }
 2835              		.loc 6 145 0
 2836 0268 636C     		ldr	r3, [r4, #68]
 2837 026a 226C     		ldr	r2, [r4, #64]	@ unaligned
 2838 026c 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2839              		.loc 6 143 0
 2840 0270 0130     		adds	r0, r0, #1
 2841              	.LVL390:
 2842              	.L147:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2843              		.loc 6 143 0 is_stmt 0 discriminator 3
 2844 0272 E36B     		ldr	r3, [r4, #60]
 2845 0274 8342     		cmp	r3, r0
 2846 0276 1FD9     		bls	.L126
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 2847              		.loc 6 144 0 is_stmt 1 discriminator 2
 2848 0278 A919     		adds	r1, r5, r6
 2849              	.LVL391:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 78


 2850              	.LBB279:
 2851              	.LBB278:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2852              		.loc 9 108 0 discriminator 2
 2853 027a CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2854 027c 5B09     		lsrs	r3, r3, #5
 2855 027e 2364     		str	r3, [r4, #64]
 2856              	.LVL392:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2857              		.loc 9 109 0 discriminator 2
 2858 0280 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2859 0282 43EAC203 		orr	r3, r3, r2, lsl #3
 2860 0286 2364     		str	r3, [r4, #64]
 2861              	.LVL393:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2862              		.loc 9 110 0 discriminator 2
 2863 0288 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2864 028a 43EAC223 		orr	r3, r3, r2, lsl #11
 2865 028e 2364     		str	r3, [r4, #64]
 111:ROSSerial/ros/msg.h **** 
 2866              		.loc 9 111 0 discriminator 2
 2867 0290 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2868 0292 D204     		lsls	r2, r2, #19
 2869 0294 02F4F002 		and	r2, r2, #7864320
 2870 0298 1343     		orrs	r3, r3, r2
 2871 029a 2364     		str	r3, [r4, #64]
 2872              	.LVL394:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2873              		.loc 9 114 0 discriminator 2
 2874 029c 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2875              	.LVL395:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2876              		.loc 9 115 0 discriminator 2
 2877 029e CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2878 02a0 1201     		lsls	r2, r2, #4
 2879 02a2 02F4FE62 		and	r2, r2, #2032
 2880              	.LVL396:
 116:ROSSerial/ros/msg.h ****     {
 2881              		.loc 9 116 0 discriminator 2
 2882 02a6 52EA1712 		orrs	r2, r2, r7, lsr #4
 2883              	.LVL397:
 2884 02aa D5D0     		beq	.L146
 118:ROSSerial/ros/msg.h ****     }
 2885              		.loc 9 118 0
 2886 02ac A2F56072 		sub	r2, r2, #896
 2887              	.LVL398:
 2888 02b0 43EAC253 		orr	r3, r3, r2, lsl #23
 2889 02b4 2364     		str	r3, [r4, #64]
 2890 02b6 CFE7     		b	.L146
 2891              	.LVL399:
 2892              	.L126:
 2893              	.LBE278:
 2894              	.LBE279:
 2895              	.LBE280:
 148:ROSSerial/sensor_msgs/JointState.h **** 
 2896              		.loc 6 148 0
 2897 02b8 3046     		mov	r0, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 79


 2898              	.LVL400:
 2899 02ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2900              		.cfi_endproc
 2901              	.LFE488:
 2902              		.cantunwind
 2903              		.fnend
 2905              		.section	.text.ros_init,"ax",%progbits
 2906              		.align	1
 2907              		.global	ros_init
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2911              		.fpu fpv4-sp-d16
 2913              	ros_init:
 2914              		.fnstart
 2915              	.LFB491:
  30:./Src/ROS_main.cpp ****     nh.initNode();
 2916              		.loc 7 30 0
 2917              		.cfi_startproc
 2918              		@ args = 0, pretend = 0, frame = 72
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2921              		.save {r4, r5, r6, r7, lr}
 2922              	.LCFI13:
 2923              		.cfi_def_cfa_offset 20
 2924              		.cfi_offset 4, -20
 2925              		.cfi_offset 5, -16
 2926              		.cfi_offset 6, -12
 2927              		.cfi_offset 7, -8
 2928              		.cfi_offset 14, -4
 2929              		.pad #76
 2930 0002 93B0     		sub	sp, sp, #76
 2931              	.LCFI14:
 2932              		.cfi_def_cfa_offset 96
 2933              	.LVL401:
 2934              	.LBB298:
 2935              	.LBB299:
 2936              	.LBB300:
 2937              	.LBB301:
 2938              		.file 10 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 80


  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "stm32f1xx_hal.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** #include "setup.h"
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern UART_HandleTypeDef huart2; 
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** extern uint8_t g_RxBuf[];
  45:ROSSerial/AT32hardware.h **** extern uint8_t byte;		/* receive byte */
  46:ROSSerial/AT32hardware.h **** extern uint8_t g_RxRead;
  47:ROSSerial/AT32hardware.h **** extern uint8_t g_RxWritten;
  48:ROSSerial/AT32hardware.h **** 
  49:ROSSerial/AT32hardware.h **** class STM32Hardware
  50:ROSSerial/AT32hardware.h **** {
  51:ROSSerial/AT32hardware.h **** public:
  52:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  53:ROSSerial/AT32hardware.h **** 	{
  54:ROSSerial/AT32hardware.h **** 	}
  55:ROSSerial/AT32hardware.h **** 
  56:ROSSerial/AT32hardware.h **** 	/*
  57:ROSSerial/AT32hardware.h **** 	 * Method: init
  58:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  59:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  60:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  61:ROSSerial/AT32hardware.h **** 	 *   returns: none
  62:ROSSerial/AT32hardware.h **** 	 */
  63:ROSSerial/AT32hardware.h **** 	void init(void)
  64:ROSSerial/AT32hardware.h **** 	{
  65:ROSSerial/AT32hardware.h **** 		if(HAL_UART_Receive_IT(&huart2, &byte, 1) != 0)
 2939              		.loc 10 65 0
 2940 0004 0122     		movs	r2, #1
 2941 0006 2B49     		ldr	r1, .L160
 2942 0008 2B48     		ldr	r0, .L160+4
 2943 000a FFF7FEFF 		bl	HAL_UART_Receive_IT
 2944              	.LVL402:
 2945              	.LBE301:
 2946              	.LBE300:
 188:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 81


 2947              		.loc 8 188 0
 2948 000e 2B4B     		ldr	r3, .L160+8
 2949 0010 0024     		movs	r4, #0
 2950 0012 C3F80845 		str	r4, [r3, #1288]
 189:ROSSerial/ros/node_handle.h ****     index_ = 0;
 2951              		.loc 8 189 0
 2952 0016 C3F80C45 		str	r4, [r3, #1292]
 190:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 2953              		.loc 8 190 0
 2954 001a C3F81445 		str	r4, [r3, #1300]
 191:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 2955              		.loc 8 191 0
 2956 001e C3F81045 		str	r4, [r3, #1296]
 192:ROSSerial/ros/node_handle.h ****   };
 2957              		.loc 8 192 0
 2958 0022 2748     		ldr	r0, .L160+12
 2959 0024 FFF7FEFF 		bl	puts
 2960              	.LVL403:
 2961              	.LBE299:
 2962              	.LBE298:
 2963              	.LBB302:
 2964              	.LBB303:
 2965              	.LBB304:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 2966              		.loc 6 40 0
 2967 0028 264B     		ldr	r3, .L160+16
 2968 002a 0093     		str	r3, [sp]
 2969 002c 0294     		str	r4, [sp, #8]
 2970 002e 0594     		str	r4, [sp, #20]
 2971              	.LVL404:
 2972              	.LBB305:
 2973              	.LBB306:
  13:ROSSerial/std_msgs/Header.h ****   {
 2974              		.loc 5 13 0
 2975 0030 254B     		ldr	r3, .L160+20
 2976 0032 0193     		str	r3, [sp, #4]
 2977              	.LVL405:
 2978              	.LBB307:
 2979              	.LBB308:
 2980              	.LBB309:
 2981              		.file 11 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 82


  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 2982              		.loc 11 51 0
 2983 0034 0394     		str	r4, [sp, #12]
 2984 0036 0494     		str	r4, [sp, #16]
 2985              	.LVL406:
 2986              	.LBE309:
 2987              	.LBE308:
 2988              	.LBE307:
 2989              	.LBE306:
 2990              	.LBE305:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 2991              		.loc 6 40 0
 2992 0038 0694     		str	r4, [sp, #24]
 2993 003a 0894     		str	r4, [sp, #32]
 2994 003c 0994     		str	r4, [sp, #36]
 2995 003e 0B94     		str	r4, [sp, #44]
 2996 0040 0C94     		str	r4, [sp, #48]
 2997 0042 0E94     		str	r4, [sp, #56]
 2998 0044 0F94     		str	r4, [sp, #60]
 2999 0046 1194     		str	r4, [sp, #68]
 3000              	.LVL407:
 3001              	.L156:
 3002              	.LBE304:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 83


 3003              	.LBE303:
 3004              	.LBE302:
 3005              	.LBB310:
 3006              	.LBB311:
 3007              	.LBB312:
 406:ROSSerial/ros/node_handle.h **** 
 407:ROSSerial/ros/node_handle.h ****   /********************************************************************
 408:ROSSerial/ros/node_handle.h ****    * Time functions
 409:ROSSerial/ros/node_handle.h ****    */
 410:ROSSerial/ros/node_handle.h **** 
 411:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 412:ROSSerial/ros/node_handle.h ****   {
 413:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 414:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 415:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 416:ROSSerial/ros/node_handle.h ****   }
 417:ROSSerial/ros/node_handle.h **** 
 418:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 419:ROSSerial/ros/node_handle.h ****   {
 420:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 421:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 422:ROSSerial/ros/node_handle.h **** 
 423:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
 424:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 425:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 426:ROSSerial/ros/node_handle.h **** 
 427:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 428:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 429:ROSSerial/ros/node_handle.h ****   }
 430:ROSSerial/ros/node_handle.h **** 
 431:ROSSerial/ros/node_handle.h ****   Time now()
 432:ROSSerial/ros/node_handle.h ****   {
 433:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 434:ROSSerial/ros/node_handle.h ****     Time current_time;
 435:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 436:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 437:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 438:ROSSerial/ros/node_handle.h ****     return current_time;
 439:ROSSerial/ros/node_handle.h ****   }
 440:ROSSerial/ros/node_handle.h **** 
 441:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 442:ROSSerial/ros/node_handle.h ****   {
 443:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 444:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 445:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 446:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 447:ROSSerial/ros/node_handle.h ****   }
 448:ROSSerial/ros/node_handle.h **** 
 449:ROSSerial/ros/node_handle.h ****   /********************************************************************
 450:ROSSerial/ros/node_handle.h ****    * Topic Management
 451:ROSSerial/ros/node_handle.h ****    */
 452:ROSSerial/ros/node_handle.h **** 
 453:ROSSerial/ros/node_handle.h ****    /* Register a new publisher without C++ template */
 454:ROSSerial/ros/node_handle.h ****   PublisherType* addPublisher(char * topic_name, Msg * msg)
 455:ROSSerial/ros/node_handle.h ****   {
 456:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 3008              		.loc 8 456 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 84


 3009 0048 042C     		cmp	r4, #4
 3010 004a 2ADC     		bgt	.L157
 457:ROSSerial/ros/node_handle.h ****     {
 458:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id == 0) {// empty slot}
 3011              		.loc 8 458 0
 3012 004c 04EB8403 		add	r3, r4, r4, lsl #2
 3013 0050 1A4A     		ldr	r2, .L160+8
 3014 0052 02EB8303 		add	r3, r2, r3, lsl #2
 3015 0056 B3F82C34 		ldrh	r3, [r3, #1068]
 3016 005a 0BB1     		cbz	r3, .L159
 456:ROSSerial/ros/node_handle.h ****     {
 3017              		.loc 8 456 0
 3018 005c 0134     		adds	r4, r4, #1
 3019              	.LVL408:
 3020 005e F3E7     		b	.L156
 3021              	.L159:
 459:ROSSerial/ros/node_handle.h **** 
 460:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_id = i + 100 + MAX_SUBSCRIBERS;
 3022              		.loc 8 460 0
 3023 0060 04F16903 		add	r3, r4, #105
 3024 0064 1546     		mov	r5, r2
 3025 0066 A600     		lsls	r6, r4, #2
 3026 0068 3719     		adds	r7, r6, r4
 3027 006a 02EB8707 		add	r7, r2, r7, lsl #2
 3028 006e A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 461:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3029              		.loc 8 461 0
 3030 0072 164B     		ldr	r3, .L160+24
 3031 0074 C7F83034 		str	r3, [r7, #1072]
 462:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3032              		.loc 8 462 0
 3033 0078 C7F834D4 		str	sp, [r7, #1076]
 463:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3034              		.loc 8 463 0
 3035 007c 009B     		ldr	r3, [sp]
 3036 007e 9B68     		ldr	r3, [r3, #8]
 3037 0080 6846     		mov	r0, sp
 3038 0082 9847     		blx	r3
 3039              	.LVL409:
 3040 0084 C7F83804 		str	r0, [r7, #1080]
 464:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3041              		.loc 8 464 0
 3042 0088 009B     		ldr	r3, [sp]
 3043 008a DB68     		ldr	r3, [r3, #12]
 3044 008c 6846     		mov	r0, sp
 3045 008e 9847     		blx	r3
 3046              	.LVL410:
 3047 0090 C7F83C04 		str	r0, [r7, #1084]
 465:ROSSerial/ros/node_handle.h **** 
 466:ROSSerial/ros/node_handle.h ****         return &publishers2[i];
 3048              		.loc 8 466 0
 3049 0094 3319     		adds	r3, r6, r4
 3050 0096 9B00     		lsls	r3, r3, #2
 3051 0098 03F58563 		add	r3, r3, #1064
 3052 009c 2B44     		add	r3, r3, r5
 3053 009e 0433     		adds	r3, r3, #4
 3054 00a0 00E0     		b	.L154
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 85


 3055              	.L157:
 3056              	.LBE312:
 467:ROSSerial/ros/node_handle.h ****       }
 468:ROSSerial/ros/node_handle.h ****     }
 469:ROSSerial/ros/node_handle.h ****     return nullptr;
 3057              		.loc 8 469 0
 3058 00a2 0023     		movs	r3, #0
 3059              	.L154:
 3060              	.LVL411:
 3061              	.LBE311:
 3062              	.LBE310:
  39:./Src/ROS_main.cpp **** 
 3063              		.loc 7 39 0
 3064 00a4 0A4A     		ldr	r2, .L160+28
 3065 00a6 1360     		str	r3, [r2]
  42:./Src/ROS_main.cpp **** }
 3066              		.loc 7 42 0
 3067 00a8 0448     		ldr	r0, .L160+8
 3068 00aa FFF7FEFF 		bl	_Z16rosSubscribeInitPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 3069              	.LVL412:
  43:./Src/ROS_main.cpp **** 
 3070              		.loc 7 43 0
 3071 00ae 13B0     		add	sp, sp, #76
 3072              	.LCFI15:
 3073              		.cfi_def_cfa_offset 20
 3074              		@ sp needed
 3075 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 3076              	.L161:
 3077 00b2 00BF     		.align	2
 3078              	.L160:
 3079 00b4 00000000 		.word	byte
 3080 00b8 00000000 		.word	huart2
 3081 00bc 00000000 		.word	.LANCHOR1
 3082 00c0 00000000 		.word	.LC14
 3083 00c4 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 3084 00c8 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 3085 00cc 0C000000 		.word	.LC15
 3086 00d0 00000000 		.word	.LANCHOR2
 3087              		.cfi_endproc
 3088              	.LFE491:
 3089              		.fnend
 3091              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE,"axG"
 3092              		.align	1
 3093              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3094              		.syntax unified
 3095              		.thumb
 3096              		.thumb_func
 3097              		.fpu fpv4-sp-d16
 3099              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:
 3100              		.fnstart
 3101              	.LFB507:
 470:ROSSerial/ros/node_handle.h ****   }
 471:ROSSerial/ros/node_handle.h **** 
 472:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 473:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 474:ROSSerial/ros/node_handle.h ****   {
 475:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 86


 476:ROSSerial/ros/node_handle.h ****     {
 477:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 478:ROSSerial/ros/node_handle.h ****       {
 479:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 480:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 481:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 482:ROSSerial/ros/node_handle.h ****         return true;
 483:ROSSerial/ros/node_handle.h ****       }
 484:ROSSerial/ros/node_handle.h ****     }
 485:ROSSerial/ros/node_handle.h ****     return false;
 486:ROSSerial/ros/node_handle.h ****   }
 487:ROSSerial/ros/node_handle.h **** 
 488:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 489:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 490:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 491:ROSSerial/ros/node_handle.h ****   {
 492:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 493:ROSSerial/ros/node_handle.h ****     {
 494:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 495:ROSSerial/ros/node_handle.h ****       {
 496:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 497:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 498:ROSSerial/ros/node_handle.h ****         return true;
 499:ROSSerial/ros/node_handle.h ****       }
 500:ROSSerial/ros/node_handle.h ****     }
 501:ROSSerial/ros/node_handle.h ****     return false;
 502:ROSSerial/ros/node_handle.h ****   }
 503:ROSSerial/ros/node_handle.h **** 
 504:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 505:ROSSerial/ros/node_handle.h ****   {
 506:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 507:ROSSerial/ros/node_handle.h ****     {
 508:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 509:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 510:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 511:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 512:ROSSerial/ros/node_handle.h ****         printf("Registered %s with id %d\n", \
 513:ROSSerial/ros/node_handle.h ****           subscribers2[i].topic_name,subscribers2[i].topic_id);
 514:ROSSerial/ros/node_handle.h ****         return true;
 515:ROSSerial/ros/node_handle.h ****       }
 516:ROSSerial/ros/node_handle.h ****     }
 517:ROSSerial/ros/node_handle.h ****     return false;
 518:ROSSerial/ros/node_handle.h ****   }
 519:ROSSerial/ros/node_handle.h **** 
 520:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
 521:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 522:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 523:ROSSerial/ros/node_handle.h ****   {
 524:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 525:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 526:ROSSerial/ros/node_handle.h ****     {
 527:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 528:ROSSerial/ros/node_handle.h ****       {
 529:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 530:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 531:ROSSerial/ros/node_handle.h ****         return v;
 532:ROSSerial/ros/node_handle.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 87


 533:ROSSerial/ros/node_handle.h ****     }
 534:ROSSerial/ros/node_handle.h ****     return false;
 535:ROSSerial/ros/node_handle.h ****   }
 536:ROSSerial/ros/node_handle.h **** 
 537:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 538:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 539:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 540:ROSSerial/ros/node_handle.h ****   {
 541:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 542:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 543:ROSSerial/ros/node_handle.h ****     {
 544:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 545:ROSSerial/ros/node_handle.h ****       {
 546:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 547:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 548:ROSSerial/ros/node_handle.h ****         return v;
 549:ROSSerial/ros/node_handle.h ****       }
 550:ROSSerial/ros/node_handle.h ****     }
 551:ROSSerial/ros/node_handle.h ****     return false;
 552:ROSSerial/ros/node_handle.h ****   }
 553:ROSSerial/ros/node_handle.h **** 
 554:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 555:ROSSerial/ros/node_handle.h ****   {
 556:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 557:ROSSerial/ros/node_handle.h ****     int i;
 558:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 559:ROSSerial/ros/node_handle.h ****     {
 560:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id != 0) // non-empty slot
 561:ROSSerial/ros/node_handle.h ****       {
 562:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers2[i].topic_id;
 563:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 564:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 565:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 566:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 567:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 568:ROSSerial/ros/node_handle.h ****       }
 569:ROSSerial/ros/node_handle.h ****     }
 570:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 571:ROSSerial/ros/node_handle.h ****     {
 572:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 573:ROSSerial/ros/node_handle.h ****       {
 574:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 575:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 576:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 577:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 578:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 579:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 580:ROSSerial/ros/node_handle.h ****       }
 581:ROSSerial/ros/node_handle.h ****     }
 582:ROSSerial/ros/node_handle.h ****     configured_ = true;
 583:ROSSerial/ros/node_handle.h ****   }
 584:ROSSerial/ros/node_handle.h **** 
 585:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 586:ROSSerial/ros/node_handle.h ****   {
 587:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 588:ROSSerial/ros/node_handle.h ****   }
 589:ROSSerial/ros/node_handle.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 88


 590:ROSSerial/ros/node_handle.h ****   int publish1(int id, Msg * msg)
 3102              		.loc 8 590 0
 3103              		.cfi_startproc
 3104              		@ args = 0, pretend = 0, frame = 16
 3105              		@ frame_needed = 0, uses_anonymous_args = 0
 3106              	.LVL413:
 3107 0000 30B5     		push	{r4, r5, lr}
 3108              		.save {r4, r5, lr}
 3109              	.LCFI16:
 3110              		.cfi_def_cfa_offset 12
 3111              		.cfi_offset 4, -12
 3112              		.cfi_offset 5, -8
 3113              		.cfi_offset 14, -4
 3114              		.pad #20
 3115 0002 85B0     		sub	sp, sp, #20
 3116              	.LCFI17:
 3117              		.cfi_def_cfa_offset 32
 591:ROSSerial/ros/node_handle.h ****   {
 592:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %d %x\n",id, msg);
 593:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_)
 3118              		.loc 8 593 0
 3119 0004 6329     		cmp	r1, #99
 3120 0006 03DD     		ble	.L163
 3121              		.loc 8 593 0 is_stmt 0 discriminator 1
 3122 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3123 000c 002B     		cmp	r3, #0
 3124 000e 51D0     		beq	.L168
 3125              	.L163:
 3126 0010 0D46     		mov	r5, r1
 3127 0012 0446     		mov	r4, r0
 594:ROSSerial/ros/node_handle.h ****       return 0;
 595:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 596:ROSSerial/ros/node_handle.h ****     /* serialize message */
 597:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 3128              		.loc 8 597 0 is_stmt 1
 3129 0014 1368     		ldr	r3, [r2]
 3130 0016 1B68     		ldr	r3, [r3]
 3131 0018 00F21F21 		addw	r1, r0, #543
 3132              	.LVL414:
 3133 001c 1046     		mov	r0, r2
 3134              	.LVL415:
 3135 001e 9847     		blx	r3
 3136              	.LVL416:
 598:ROSSerial/ros/node_handle.h **** 
 599:ROSSerial/ros/node_handle.h ****     /* setup the header */
 600:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 3137              		.loc 8 600 0
 3138 0020 FF23     		movs	r3, #255
 3139 0022 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3140              		.loc 8 601 0
 3141 0026 FE23     		movs	r3, #254
 3142 0028 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3143              		.loc 8 602 0
 3144 002c C3B2     		uxtb	r3, r0
 3145 002e 84F81A32 		strb	r3, [r4, #538]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 89


 603:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3146              		.loc 8 603 0
 3147 0032 C0F30722 		ubfx	r2, r0, #8, #8
 3148 0036 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3149              		.loc 8 604 0
 3150 003a 1344     		add	r3, r3, r2
 3151 003c DBB2     		uxtb	r3, r3
 3152 003e DB43     		mvns	r3, r3
 3153 0040 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3154              		.loc 8 605 0
 3155 0044 84F81D52 		strb	r5, [r4, #541]
 606:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3156              		.loc 8 606 0
 3157 0048 45F30721 		sbfx	r1, r5, #8, #8
 3158 004c 84F81E12 		strb	r1, [r4, #542]
 3159              	.LVL417:
 3160              	.LBB322:
 607:ROSSerial/ros/node_handle.h **** 
 608:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 609:ROSSerial/ros/node_handle.h ****     int chk = 0;
 610:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3161              		.loc 8 610 0
 3162 0050 0523     		movs	r3, #5
 3163              	.LBE322:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3164              		.loc 8 609 0
 3165 0052 0022     		movs	r2, #0
 3166              	.LVL418:
 3167              	.L166:
 3168              	.LBB323:
 3169              		.loc 8 610 0 discriminator 3
 3170 0054 C11D     		adds	r1, r0, #7
 3171 0056 9942     		cmp	r1, r3
 3172 0058 05DD     		ble	.L165
 611:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3173              		.loc 8 611 0 discriminator 2
 3174 005a E118     		adds	r1, r4, r3
 3175 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3176 0060 0A44     		add	r2, r2, r1
 3177              	.LVL419:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3178              		.loc 8 610 0 discriminator 2
 3179 0062 0133     		adds	r3, r3, #1
 3180              	.LVL420:
 3181 0064 F6E7     		b	.L166
 3182              	.L165:
 3183              	.LVL421:
 3184              	.LBE323:
 612:ROSSerial/ros/node_handle.h ****     l += 7;
 613:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 3185              		.loc 8 613 0
 3186 0066 5342     		rsbs	r3, r2, #0
 3187              	.LVL422:
 3188 0068 D2B2     		uxtb	r2, r2
 3189              	.LVL423:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 90


 3190 006a DBB2     		uxtb	r3, r3
 3191 006c 58BF     		it	pl
 3192 006e 5A42     		rsbpl	r2, r3, #0
 3193 0070 00F10805 		add	r5, r0, #8
 3194              	.LVL424:
 3195 0074 D243     		mvns	r2, r2
 3196 0076 2144     		add	r1, r1, r4
 3197 0078 81F81822 		strb	r2, [r1, #536]
 614:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 615:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3198              		.loc 8 615 0
 3199 007c B5F5007F 		cmp	r5, #512
 3200 0080 09DC     		bgt	.L167
 3201              	.LVL425:
 3202              	.LBB324:
 3203              	.LBB325:
  66:ROSSerial/AT32hardware.h **** 		{
  67:ROSSerial/AT32hardware.h **** 			return ;
  68:ROSSerial/AT32hardware.h **** 		}
  69:ROSSerial/AT32hardware.h **** 	}
  70:ROSSerial/AT32hardware.h **** 
  71:ROSSerial/AT32hardware.h **** 	/*
  72:ROSSerial/AT32hardware.h ****      * Method: read
  73:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  74:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  75:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  76:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  77:ROSSerial/AT32hardware.h **** 	 */
  78:ROSSerial/AT32hardware.h **** 	int read(void)
  79:ROSSerial/AT32hardware.h **** 	{
  80:ROSSerial/AT32hardware.h **** 		int ucData = -1;
  81:ROSSerial/AT32hardware.h **** 		
  82:ROSSerial/AT32hardware.h **** 		if(g_RxRead < g_RxWritten)
  83:ROSSerial/AT32hardware.h **** 		{
  84:ROSSerial/AT32hardware.h **** 			ucData = g_RxBuf[g_RxRead++];
  85:ROSSerial/AT32hardware.h **** 		}
  86:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE &&  g_RxRead == g_RxWritten )
  87:ROSSerial/AT32hardware.h **** 		{
  88:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
  89:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
  90:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
  91:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
  92:ROSSerial/AT32hardware.h **** 		}
  93:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE && g_RxWritten > g_RxRead)
  94:ROSSerial/AT32hardware.h **** 		{
  95:ROSSerial/AT32hardware.h **** 			printf("How did this happen? %d %d\n",g_RxRead,g_RxWritten);
  96:ROSSerial/AT32hardware.h **** 		}
  97:ROSSerial/AT32hardware.h **** 		
  98:ROSSerial/AT32hardware.h **** 		
  99:ROSSerial/AT32hardware.h **** 		if(g_RxRead == RX_BUF_SIZE )
 100:ROSSerial/AT32hardware.h **** 		{
 101:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
 102:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 103:ROSSerial/AT32hardware.h **** 			//Enable the interrupt so we can read again.
 104:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 105:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 106:ROSSerial/AT32hardware.h **** 		}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 91


 107:ROSSerial/AT32hardware.h **** 		return ucData;
 108:ROSSerial/AT32hardware.h **** 	}
 109:ROSSerial/AT32hardware.h **** 
 110:ROSSerial/AT32hardware.h **** 	/*
 111:ROSSerial/AT32hardware.h **** 	 * Method: write
 112:ROSSerial/AT32hardware.h ****      * ----------------------------
 113:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
 114:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
 115:ROSSerial/AT32hardware.h **** 	 *   returns: none
 116:ROSSerial/AT32hardware.h **** 	 */
 117:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
 118:ROSSerial/AT32hardware.h **** 	{
 119:ROSSerial/AT32hardware.h **** 		// printf("printing %d\n",length);
 120:ROSSerial/AT32hardware.h **** 		/* Without Interrupt we can still publish chatter at 111.6Hz or 9ms per message */
 121:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 10);
 3204              		.loc 10 121 0
 3205 0082 0A23     		movs	r3, #10
 3206 0084 AAB2     		uxth	r2, r5
 3207 0086 04F50671 		add	r1, r4, #536
 3208              	.LVL426:
 3209 008a 0B48     		ldr	r0, .L170
 3210 008c FFF7FEFF 		bl	HAL_UART_Transmit
 3211              	.LVL427:
 3212              	.L162:
 3213              	.LBE325:
 3214              	.LBE324:
 616:ROSSerial/ros/node_handle.h ****     {
 617:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 618:ROSSerial/ros/node_handle.h ****       return l;
 619:ROSSerial/ros/node_handle.h ****     }
 620:ROSSerial/ros/node_handle.h ****     else
 621:ROSSerial/ros/node_handle.h ****     {
 622:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 623:ROSSerial/ros/node_handle.h ****       return -1;
 624:ROSSerial/ros/node_handle.h ****     }
 625:ROSSerial/ros/node_handle.h ****   }
 3215              		.loc 8 625 0
 3216 0090 2846     		mov	r0, r5
 3217 0092 05B0     		add	sp, sp, #20
 3218              	.LCFI18:
 3219              		.cfi_remember_state
 3220              		.cfi_def_cfa_offset 12
 3221              		@ sp needed
 3222 0094 30BD     		pop	{r4, r5, pc}
 3223              	.LVL428:
 3224              	.L167:
 3225              	.LCFI19:
 3226              		.cfi_restore_state
 3227              	.LBB326:
 3228              	.LBB327:
 3229              	.LBB328:
 3230              	.LBB329:
 3231              	.LBB330:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3232              		.loc 3 13 0
 3233 0096 094B     		ldr	r3, .L170+4
 3234 0098 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 92


 3235              	.LVL429:
 3236              	.LBE330:
 3237              	.LBE329:
 626:ROSSerial/ros/node_handle.h **** 
 627:ROSSerial/ros/node_handle.h ****   /********************************************************************
 628:ROSSerial/ros/node_handle.h ****    * Logging
 629:ROSSerial/ros/node_handle.h ****    */
 630:ROSSerial/ros/node_handle.h **** 
 631:ROSSerial/ros/node_handle.h **** private:
 632:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 633:ROSSerial/ros/node_handle.h ****   {
 634:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 635:ROSSerial/ros/node_handle.h ****     l.level = byte;
 3238              		.loc 8 635 0
 3239 009a 0323     		movs	r3, #3
 3240 009c 8DF80830 		strb	r3, [sp, #8]
 636:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3241              		.loc 8 636 0
 3242 00a0 074B     		ldr	r3, .L170+8
 3243 00a2 0393     		str	r3, [sp, #12]
 637:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3244              		.loc 8 637 0
 3245 00a4 01AA     		add	r2, sp, #4
 3246 00a6 0721     		movs	r1, #7
 3247 00a8 2046     		mov	r0, r4
 3248 00aa FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3249              	.LVL430:
 3250              	.LBE328:
 3251              	.LBE327:
 3252              	.LBE326:
 623:ROSSerial/ros/node_handle.h ****     }
 3253              		.loc 8 623 0
 3254 00ae 4FF0FF35 		mov	r5, #-1
 3255              	.LVL431:
 3256 00b2 EDE7     		b	.L162
 3257              	.LVL432:
 3258              	.L168:
 594:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 3259              		.loc 8 594 0
 3260 00b4 0025     		movs	r5, #0
 3261 00b6 EBE7     		b	.L162
 3262              	.L171:
 3263              		.align	2
 3264              	.L170:
 3265 00b8 00000000 		.word	huart2
 3266 00bc 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3267 00c0 00000000 		.word	.LC16
 3268              		.cfi_endproc
 3269              	.LFE507:
 3270              		.fnend
 3272              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3273              		.align	1
 3274              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3275              		.syntax unified
 3276              		.thumb
 3277              		.thumb_func
 3278              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 93


 3280              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3281              		.fnstart
 3282              	.LFB524:
 585:ROSSerial/ros/node_handle.h ****   {
 3283              		.loc 8 585 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 24
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287              	.LVL433:
 3288 0000 30B5     		push	{r4, r5, lr}
 3289              		.save {r4, r5, lr}
 3290              	.LCFI20:
 3291              		.cfi_def_cfa_offset 12
 3292              		.cfi_offset 4, -12
 3293              		.cfi_offset 5, -8
 3294              		.cfi_offset 14, -4
 3295              		.pad #28
 3296 0002 87B0     		sub	sp, sp, #28
 3297              	.LCFI21:
 3298              		.cfi_def_cfa_offset 40
 3299              	.LVL434:
 3300              	.LBB353:
 3301              	.LBB354:
 593:ROSSerial/ros/node_handle.h ****       return 0;
 3302              		.loc 8 593 0
 3303 0004 6329     		cmp	r1, #99
 3304 0006 04DD     		ble	.L173
 3305 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3306 000c 002B     		cmp	r3, #0
 3307 000e 00F09680 		beq	.L182
 3308              	.L173:
 3309 0012 0D46     		mov	r5, r1
 3310 0014 0446     		mov	r4, r0
 597:ROSSerial/ros/node_handle.h **** 
 3311              		.loc 8 597 0
 3312 0016 1368     		ldr	r3, [r2]
 3313 0018 1B68     		ldr	r3, [r3]
 3314 001a 00F21F21 		addw	r1, r0, #543
 3315              	.LVL435:
 3316 001e 1046     		mov	r0, r2
 3317              	.LVL436:
 3318 0020 9847     		blx	r3
 3319              	.LVL437:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3320              		.loc 8 600 0
 3321 0022 FF23     		movs	r3, #255
 3322 0024 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3323              		.loc 8 601 0
 3324 0028 FE23     		movs	r3, #254
 3325 002a 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3326              		.loc 8 602 0
 3327 002e C3B2     		uxtb	r3, r0
 3328 0030 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3329              		.loc 8 603 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 94


 3330 0034 C0F30722 		ubfx	r2, r0, #8, #8
 3331 0038 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3332              		.loc 8 604 0
 3333 003c 1344     		add	r3, r3, r2
 3334 003e DBB2     		uxtb	r3, r3
 3335 0040 DB43     		mvns	r3, r3
 3336 0042 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3337              		.loc 8 605 0
 3338 0046 84F81D52 		strb	r5, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3339              		.loc 8 606 0
 3340 004a 45F30721 		sbfx	r1, r5, #8, #8
 3341 004e 84F81E12 		strb	r1, [r4, #542]
 3342              	.LVL438:
 3343              	.LBB355:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3344              		.loc 8 610 0
 3345 0052 0523     		movs	r3, #5
 3346              	.LBE355:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3347              		.loc 8 609 0
 3348 0054 0022     		movs	r2, #0
 3349              	.LVL439:
 3350              	.L176:
 3351              	.LBB356:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3352              		.loc 8 610 0
 3353 0056 C11D     		adds	r1, r0, #7
 3354 0058 9942     		cmp	r1, r3
 3355 005a 05DD     		ble	.L175
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 3356              		.loc 8 611 0
 3357 005c E118     		adds	r1, r4, r3
 3358 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3359 0062 0A44     		add	r2, r2, r1
 3360              	.LVL440:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3361              		.loc 8 610 0
 3362 0064 0133     		adds	r3, r3, #1
 3363              	.LVL441:
 3364 0066 F6E7     		b	.L176
 3365              	.L175:
 3366              	.LVL442:
 3367              	.LBE356:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 3368              		.loc 8 613 0
 3369 0068 5342     		rsbs	r3, r2, #0
 3370              	.LVL443:
 3371 006a D2B2     		uxtb	r2, r2
 3372              	.LVL444:
 3373 006c DBB2     		uxtb	r3, r3
 3374 006e 58BF     		it	pl
 3375 0070 5A42     		rsbpl	r2, r3, #0
 3376 0072 00F10805 		add	r5, r0, #8
 3377              	.LVL445:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 95


 3378 0076 D243     		mvns	r2, r2
 3379 0078 2144     		add	r1, r1, r4
 3380 007a 81F81822 		strb	r2, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 3381              		.loc 8 615 0
 3382 007e B5F5007F 		cmp	r5, #512
 3383 0082 09DC     		bgt	.L177
 3384              	.LVL446:
 3385              	.LBB357:
 3386              	.LBB358:
 3387              		.loc 10 121 0
 3388 0084 0A23     		movs	r3, #10
 3389 0086 AAB2     		uxth	r2, r5
 3390 0088 04F50671 		add	r1, r4, #536
 3391              	.LVL447:
 3392 008c 2D48     		ldr	r0, .L184
 3393 008e FFF7FEFF 		bl	HAL_UART_Transmit
 3394              	.LVL448:
 3395              	.L172:
 3396              	.LBE358:
 3397              	.LBE357:
 3398              	.LBE354:
 3399              	.LBE353:
 588:ROSSerial/ros/node_handle.h **** 
 3400              		.loc 8 588 0
 3401 0092 2846     		mov	r0, r5
 3402 0094 07B0     		add	sp, sp, #28
 3403              	.LCFI22:
 3404              		.cfi_remember_state
 3405              		.cfi_def_cfa_offset 12
 3406              		@ sp needed
 3407 0096 30BD     		pop	{r4, r5, pc}
 3408              	.LVL449:
 3409              	.L177:
 3410              	.LCFI23:
 3411              		.cfi_restore_state
 3412              	.LBB380:
 3413              	.LBB379:
 3414              	.LBB359:
 3415              	.LBB360:
 3416              	.LBB361:
 3417              	.LBB362:
 3418              	.LBB363:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3419              		.loc 3 13 0
 3420 0098 2B4B     		ldr	r3, .L184+4
 3421 009a 0093     		str	r3, [sp]
 3422              	.LVL450:
 3423              	.LBE363:
 3424              	.LBE362:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3425              		.loc 8 635 0
 3426 009c 0322     		movs	r2, #3
 3427 009e 8DF80420 		strb	r2, [sp, #4]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3428              		.loc 8 636 0
 3429 00a2 2A4A     		ldr	r2, .L184+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 96


 3430 00a4 0292     		str	r2, [sp, #8]
 3431              	.LVL451:
 3432              	.LBB364:
 3433              	.LBB365:
 597:ROSSerial/ros/node_handle.h **** 
 3434              		.loc 8 597 0
 3435 00a6 1B68     		ldr	r3, [r3]
 3436 00a8 04F21F21 		addw	r1, r4, #543
 3437 00ac 6846     		mov	r0, sp
 3438 00ae 9847     		blx	r3
 3439              	.LVL452:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3440              		.loc 8 600 0
 3441 00b0 FF23     		movs	r3, #255
 3442 00b2 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3443              		.loc 8 601 0
 3444 00b6 FE23     		movs	r3, #254
 3445 00b8 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3446              		.loc 8 602 0
 3447 00bc C3B2     		uxtb	r3, r0
 3448 00be 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3449              		.loc 8 603 0
 3450 00c2 C0F30722 		ubfx	r2, r0, #8, #8
 3451 00c6 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3452              		.loc 8 604 0
 3453 00ca 1344     		add	r3, r3, r2
 3454 00cc DBB2     		uxtb	r3, r3
 3455 00ce DB43     		mvns	r3, r3
 3456 00d0 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3457              		.loc 8 605 0
 3458 00d4 0723     		movs	r3, #7
 3459 00d6 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3460              		.loc 8 606 0
 3461 00da 0023     		movs	r3, #0
 3462 00dc 84F81E32 		strb	r3, [r4, #542]
 3463              	.LVL453:
 3464              	.LBB366:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3465              		.loc 8 610 0
 3466 00e0 0522     		movs	r2, #5
 3467              	.LVL454:
 3468              	.L179:
 3469 00e2 C11D     		adds	r1, r0, #7
 3470 00e4 9142     		cmp	r1, r2
 3471 00e6 05DD     		ble	.L178
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 3472              		.loc 8 611 0
 3473 00e8 A118     		adds	r1, r4, r2
 3474 00ea 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3475 00ee 0B44     		add	r3, r3, r1
 3476              	.LVL455:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 97


 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3477              		.loc 8 610 0
 3478 00f0 0132     		adds	r2, r2, #1
 3479              	.LVL456:
 3480 00f2 F6E7     		b	.L179
 3481              	.L178:
 3482              	.LVL457:
 3483              	.LBE366:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 3484              		.loc 8 613 0
 3485 00f4 5A42     		rsbs	r2, r3, #0
 3486              	.LVL458:
 3487 00f6 DBB2     		uxtb	r3, r3
 3488              	.LVL459:
 3489 00f8 D2B2     		uxtb	r2, r2
 3490 00fa 58BF     		it	pl
 3491 00fc 5342     		rsbpl	r3, r2, #0
 3492 00fe 00F10802 		add	r2, r0, #8
 3493              	.LVL460:
 3494 0102 DB43     		mvns	r3, r3
 3495 0104 2144     		add	r1, r1, r4
 3496 0106 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 3497              		.loc 8 615 0
 3498 010a B2F5007F 		cmp	r2, #512
 3499 010e 09DC     		bgt	.L180
 3500              	.LVL461:
 3501              	.LBB367:
 3502              	.LBB368:
 3503              		.loc 10 121 0
 3504 0110 0A23     		movs	r3, #10
 3505 0112 92B2     		uxth	r2, r2
 3506              	.LVL462:
 3507 0114 04F50671 		add	r1, r4, #536
 3508              	.LVL463:
 3509 0118 0A48     		ldr	r0, .L184
 3510              	.LVL464:
 3511 011a FFF7FEFF 		bl	HAL_UART_Transmit
 3512              	.LVL465:
 3513              	.L181:
 3514              	.LBE368:
 3515              	.LBE367:
 3516              	.LBE365:
 3517              	.LBE364:
 3518              	.LBE361:
 3519              	.LBE360:
 3520              	.LBE359:
 623:ROSSerial/ros/node_handle.h ****     }
 3521              		.loc 8 623 0
 3522 011e 4FF0FF35 		mov	r5, #-1
 3523              	.LVL466:
 3524 0122 B6E7     		b	.L172
 3525              	.LVL467:
 3526              	.L180:
 3527              	.LBB378:
 3528              	.LBB377:
 3529              	.LBB376:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 98


 3530              	.LBB375:
 3531              	.LBB374:
 3532              	.LBB369:
 3533              	.LBB370:
 3534              	.LBB371:
 3535              	.LBB372:
 3536              	.LBB373:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3537              		.loc 3 13 0
 3538 0124 084B     		ldr	r3, .L184+4
 3539 0126 0393     		str	r3, [sp, #12]
 3540              	.LVL468:
 3541              	.LBE373:
 3542              	.LBE372:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3543              		.loc 8 635 0
 3544 0128 0323     		movs	r3, #3
 3545 012a 8DF81030 		strb	r3, [sp, #16]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3546              		.loc 8 636 0
 3547 012e 074B     		ldr	r3, .L184+8
 3548 0130 0593     		str	r3, [sp, #20]
 3549              		.loc 8 637 0
 3550 0132 03AA     		add	r2, sp, #12
 3551              	.LVL469:
 3552 0134 0721     		movs	r1, #7
 3553 0136 2046     		mov	r0, r4
 3554              	.LVL470:
 3555 0138 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3556              	.LVL471:
 3557 013c EFE7     		b	.L181
 3558              	.LVL472:
 3559              	.L182:
 3560              	.LBE371:
 3561              	.LBE370:
 3562              	.LBE369:
 3563              	.LBE374:
 3564              	.LBE375:
 3565              	.LBE376:
 3566              	.LBE377:
 3567              	.LBE378:
 594:ROSSerial/ros/node_handle.h ****     //printf("in nh.publsh %s\n",msg->getType());
 3568              		.loc 8 594 0
 3569 013e 0025     		movs	r5, #0
 3570              	.LVL473:
 3571              	.LBE379:
 3572              	.LBE380:
 587:ROSSerial/ros/node_handle.h ****   }
 3573              		.loc 8 587 0
 3574 0140 A7E7     		b	.L172
 3575              	.L185:
 3576 0142 00BF     		.align	2
 3577              	.L184:
 3578 0144 00000000 		.word	huart2
 3579 0148 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3580 014c 00000000 		.word	.LC16
 3581              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 99


 3582              	.LFE524:
 3583              		.fnend
 3585              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 3586              		.align	1
 3587              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 3588              		.syntax unified
 3589              		.thumb
 3590              		.thumb_func
 3591              		.fpu fpv4-sp-d16
 3593              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 3594              		.fnstart
 3595              	.LFB508:
 411:ROSSerial/ros/node_handle.h ****   {
 3596              		.loc 8 411 0
 3597              		.cfi_startproc
 3598              		@ args = 0, pretend = 0, frame = 40
 3599              		@ frame_needed = 0, uses_anonymous_args = 0
 3600              	.LVL474:
 3601 0000 30B5     		push	{r4, r5, lr}
 3602              		.save {r4, r5, lr}
 3603              	.LCFI24:
 3604              		.cfi_def_cfa_offset 12
 3605              		.cfi_offset 4, -12
 3606              		.cfi_offset 5, -8
 3607              		.cfi_offset 14, -4
 3608              		.pad #44
 3609 0002 8BB0     		sub	sp, sp, #44
 3610              	.LCFI25:
 3611              		.cfi_def_cfa_offset 56
 3612 0004 0546     		mov	r5, r0
 3613              	.LVL475:
 3614              	.LBB419:
 3615              	.LBB420:
  14:ROSSerial/std_msgs/Time.h ****   {
 3616              		.loc 1 14 0
 3617 0006 4B4B     		ldr	r3, .L196
 3618 0008 0793     		str	r3, [sp, #28]
 3619              	.LVL476:
 3620              	.LBB421:
 3621              	.LBB422:
 3622              	.LBB423:
 3623              		.loc 11 51 0
 3624 000a 0024     		movs	r4, #0
 3625 000c 0894     		str	r4, [sp, #32]
 3626 000e 0994     		str	r4, [sp, #36]
 3627              	.LVL477:
 3628              	.LBE423:
 3629              	.LBE422:
 3630              	.LBE421:
 3631              	.LBE420:
 3632              	.LBE419:
 3633              	.LBB424:
 3634              	.LBB425:
 597:ROSSerial/ros/node_handle.h **** 
 3635              		.loc 8 597 0
 3636 0010 1B68     		ldr	r3, [r3]
 3637 0012 00F21F21 		addw	r1, r0, #543
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 100


 3638 0016 07A8     		add	r0, sp, #28
 3639              	.LVL478:
 3640 0018 9847     		blx	r3
 3641              	.LVL479:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3642              		.loc 8 600 0
 3643 001a FF23     		movs	r3, #255
 3644 001c 85F81832 		strb	r3, [r5, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3645              		.loc 8 601 0
 3646 0020 FE23     		movs	r3, #254
 3647 0022 85F81932 		strb	r3, [r5, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3648              		.loc 8 602 0
 3649 0026 C3B2     		uxtb	r3, r0
 3650 0028 85F81A32 		strb	r3, [r5, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3651              		.loc 8 603 0
 3652 002c C0F30722 		ubfx	r2, r0, #8, #8
 3653 0030 85F81B22 		strb	r2, [r5, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3654              		.loc 8 604 0
 3655 0034 1344     		add	r3, r3, r2
 3656 0036 DBB2     		uxtb	r3, r3
 3657 0038 DB43     		mvns	r3, r3
 3658 003a 85F81C32 		strb	r3, [r5, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3659              		.loc 8 605 0
 3660 003e 0A23     		movs	r3, #10
 3661 0040 85F81D32 		strb	r3, [r5, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3662              		.loc 8 606 0
 3663 0044 85F81E42 		strb	r4, [r5, #542]
 3664              	.LVL480:
 3665              	.LBB426:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3666              		.loc 8 610 0
 3667 0048 0521     		movs	r1, #5
 3668              	.LBE426:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3669              		.loc 8 609 0
 3670 004a 2346     		mov	r3, r4
 3671              	.LVL481:
 3672              	.L188:
 3673              	.LBB427:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3674              		.loc 8 610 0
 3675 004c C41D     		adds	r4, r0, #7
 3676 004e 8C42     		cmp	r4, r1
 3677 0050 05DD     		ble	.L187
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 3678              		.loc 8 611 0
 3679 0052 6A18     		adds	r2, r5, r1
 3680 0054 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 3681 0058 1344     		add	r3, r3, r2
 3682              	.LVL482:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 101


 3683              		.loc 8 610 0
 3684 005a 0131     		adds	r1, r1, #1
 3685              	.LVL483:
 3686 005c F6E7     		b	.L188
 3687              	.L187:
 3688              	.LVL484:
 3689              	.LBE427:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 3690              		.loc 8 613 0
 3691 005e 5A42     		rsbs	r2, r3, #0
 3692 0060 DBB2     		uxtb	r3, r3
 3693              	.LVL485:
 3694 0062 D2B2     		uxtb	r2, r2
 3695 0064 58BF     		it	pl
 3696 0066 5342     		rsbpl	r3, r2, #0
 3697 0068 00F10802 		add	r2, r0, #8
 3698              	.LVL486:
 3699 006c DB43     		mvns	r3, r3
 3700 006e 2C44     		add	r4, r4, r5
 3701 0070 84F81832 		strb	r3, [r4, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 3702              		.loc 8 615 0
 3703 0074 B2F5007F 		cmp	r2, #512
 3704 0078 0BDC     		bgt	.L189
 3705              	.LVL487:
 3706              	.LBB428:
 3707              	.LBB429:
 3708              		.loc 10 121 0
 3709 007a 0A23     		movs	r3, #10
 3710 007c 92B2     		uxth	r2, r2
 3711              	.LVL488:
 3712 007e 05F50671 		add	r1, r5, #536
 3713              	.LVL489:
 3714 0082 2D48     		ldr	r0, .L196+4
 3715              	.LVL490:
 3716 0084 FFF7FEFF 		bl	HAL_UART_Transmit
 3717              	.LVL491:
 3718              	.L190:
 3719              	.LBE429:
 3720              	.LBE428:
 3721              	.LBE425:
 3722              	.LBE424:
 3723              	.LBB446:
 3724              	.LBB447:
 122:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 123:ROSSerial/AT32hardware.h **** 		{
 124:ROSSerial/AT32hardware.h **** 			//printf("timeout %d - %s\n",length, data);
 125:ROSSerial/AT32hardware.h **** 		}
 126:ROSSerial/AT32hardware.h **** 		
 127:ROSSerial/AT32hardware.h **** 		// /* Try Interrupt - Has delayed byte problem. */
 128:ROSSerial/AT32hardware.h **** 		// if(HAL_UART_Transmit_IT(&huart2, (uint8_t *)data, length)!= HAL_OK)
 129:ROSSerial/AT32hardware.h ****   		// {
 130:ROSSerial/AT32hardware.h **** 		// 	HAL_Delay(10); 
 131:ROSSerial/AT32hardware.h **** 		// 	printf("delayed bytes %d\n",length); 
 132:ROSSerial/AT32hardware.h **** 		// }
 133:ROSSerial/AT32hardware.h **** 
 134:ROSSerial/AT32hardware.h **** 		// else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 102


 135:ROSSerial/AT32hardware.h **** 		// {
 136:ROSSerial/AT32hardware.h **** 		// 	printf("sent %d bytes over Interrupt\n",length);
 137:ROSSerial/AT32hardware.h **** 		// }
 138:ROSSerial/AT32hardware.h **** 		
 139:ROSSerial/AT32hardware.h **** 	}
 140:ROSSerial/AT32hardware.h **** 
 141:ROSSerial/AT32hardware.h **** 	/*
 142:ROSSerial/AT32hardware.h **** 	 * Method: time
 143:ROSSerial/AT32hardware.h **** 	 * ----------------------------
 144:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
 145:ROSSerial/AT32hardware.h **** 	 *   parameters: none
 146:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
 147:ROSSerial/AT32hardware.h **** 	 */
 148:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 149:ROSSerial/AT32hardware.h **** 	{
 150:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 151:ROSSerial/AT32hardware.h **** 		return HAL_GetTick();
 3725              		.loc 10 151 0
 3726 0088 FFF7FEFF 		bl	HAL_GetTick
 3727              	.LVL492:
 3728              	.LBE447:
 3729              	.LBE446:
 415:ROSSerial/ros/node_handle.h ****   }
 3730              		.loc 8 415 0
 3731 008c A860     		str	r0, [r5, #8]
 416:ROSSerial/ros/node_handle.h **** 
 3732              		.loc 8 416 0
 3733 008e 0BB0     		add	sp, sp, #44
 3734              	.LCFI26:
 3735              		.cfi_remember_state
 3736              		.cfi_def_cfa_offset 12
 3737              		@ sp needed
 3738 0090 30BD     		pop	{r4, r5, pc}
 3739              	.LVL493:
 3740              	.L189:
 3741              	.LCFI27:
 3742              		.cfi_restore_state
 3743              	.LBB448:
 3744              	.LBB445:
 3745              	.LBB430:
 3746              	.LBB431:
 3747              	.LBB432:
 3748              	.LBB433:
 3749              	.LBB434:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3750              		.loc 3 13 0
 3751 0092 2A4B     		ldr	r3, .L196+8
 3752 0094 0193     		str	r3, [sp, #4]
 3753              	.LVL494:
 3754              	.LBE434:
 3755              	.LBE433:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3756              		.loc 8 635 0
 3757 0096 0322     		movs	r2, #3
 3758              	.LVL495:
 3759 0098 8DF80820 		strb	r2, [sp, #8]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 103


 3760              		.loc 8 636 0
 3761 009c 284A     		ldr	r2, .L196+12
 3762 009e 0392     		str	r2, [sp, #12]
 3763              	.LVL496:
 3764              	.LBB435:
 3765              	.LBB436:
 597:ROSSerial/ros/node_handle.h **** 
 3766              		.loc 8 597 0
 3767 00a0 1B68     		ldr	r3, [r3]
 3768 00a2 05F21F21 		addw	r1, r5, #543
 3769              	.LVL497:
 3770 00a6 01A8     		add	r0, sp, #4
 3771              	.LVL498:
 3772 00a8 9847     		blx	r3
 3773              	.LVL499:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3774              		.loc 8 600 0
 3775 00aa FF23     		movs	r3, #255
 3776 00ac 85F81832 		strb	r3, [r5, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3777              		.loc 8 601 0
 3778 00b0 FE23     		movs	r3, #254
 3779 00b2 85F81932 		strb	r3, [r5, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3780              		.loc 8 602 0
 3781 00b6 C3B2     		uxtb	r3, r0
 3782 00b8 85F81A32 		strb	r3, [r5, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3783              		.loc 8 603 0
 3784 00bc C0F30722 		ubfx	r2, r0, #8, #8
 3785 00c0 85F81B22 		strb	r2, [r5, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3786              		.loc 8 604 0
 3787 00c4 1344     		add	r3, r3, r2
 3788 00c6 DBB2     		uxtb	r3, r3
 3789 00c8 DB43     		mvns	r3, r3
 3790 00ca 85F81C32 		strb	r3, [r5, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3791              		.loc 8 605 0
 3792 00ce 0723     		movs	r3, #7
 3793 00d0 85F81D32 		strb	r3, [r5, #541]
 606:ROSSerial/ros/node_handle.h **** 
 3794              		.loc 8 606 0
 3795 00d4 0023     		movs	r3, #0
 3796 00d6 85F81E32 		strb	r3, [r5, #542]
 3797              	.LVL500:
 3798              	.LBB437:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3799              		.loc 8 610 0
 3800 00da 0522     		movs	r2, #5
 3801              	.LVL501:
 3802              	.L192:
 3803 00dc C11D     		adds	r1, r0, #7
 3804 00de 9142     		cmp	r1, r2
 3805 00e0 05DD     		ble	.L191
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 3806              		.loc 8 611 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 104


 3807 00e2 A918     		adds	r1, r5, r2
 3808 00e4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3809 00e8 0B44     		add	r3, r3, r1
 3810              	.LVL502:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3811              		.loc 8 610 0
 3812 00ea 0132     		adds	r2, r2, #1
 3813              	.LVL503:
 3814 00ec F6E7     		b	.L192
 3815              	.L191:
 3816              	.LVL504:
 3817              	.LBE437:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 3818              		.loc 8 613 0
 3819 00ee 5A42     		rsbs	r2, r3, #0
 3820              	.LVL505:
 3821 00f0 DBB2     		uxtb	r3, r3
 3822              	.LVL506:
 3823 00f2 D2B2     		uxtb	r2, r2
 3824 00f4 58BF     		it	pl
 3825 00f6 5342     		rsbpl	r3, r2, #0
 3826 00f8 00F10802 		add	r2, r0, #8
 3827              	.LVL507:
 3828 00fc DB43     		mvns	r3, r3
 3829 00fe 2944     		add	r1, r1, r5
 3830 0100 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 3831              		.loc 8 615 0
 3832 0104 B2F5007F 		cmp	r2, #512
 3833 0108 07DC     		bgt	.L193
 3834              	.LVL508:
 3835              	.LBB438:
 3836              	.LBB439:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 3837              		.loc 10 121 0
 3838 010a 0A23     		movs	r3, #10
 3839 010c 92B2     		uxth	r2, r2
 3840              	.LVL509:
 3841 010e 05F50671 		add	r1, r5, #536
 3842              	.LVL510:
 3843 0112 0948     		ldr	r0, .L196+4
 3844              	.LVL511:
 3845 0114 FFF7FEFF 		bl	HAL_UART_Transmit
 3846              	.LVL512:
 3847 0118 B6E7     		b	.L190
 3848              	.LVL513:
 3849              	.L193:
 3850              	.LBE439:
 3851              	.LBE438:
 3852              	.LBB440:
 3853              	.LBB441:
 3854              	.LBB442:
 3855              	.LBB443:
 3856              	.LBB444:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3857              		.loc 3 13 0
 3858 011a 084B     		ldr	r3, .L196+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 105


 3859 011c 0493     		str	r3, [sp, #16]
 3860              	.LVL514:
 3861              	.LBE444:
 3862              	.LBE443:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3863              		.loc 8 635 0
 3864 011e 0323     		movs	r3, #3
 3865 0120 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3866              		.loc 8 636 0
 3867 0124 064B     		ldr	r3, .L196+12
 3868 0126 0693     		str	r3, [sp, #24]
 3869              		.loc 8 637 0
 3870 0128 04AA     		add	r2, sp, #16
 3871              	.LVL515:
 3872 012a 0721     		movs	r1, #7
 3873 012c 2846     		mov	r0, r5
 3874              	.LVL516:
 3875 012e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3876              	.LVL517:
 3877 0132 A9E7     		b	.L190
 3878              	.L197:
 3879              		.align	2
 3880              	.L196:
 3881 0134 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3882 0138 00000000 		.word	huart2
 3883 013c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3884 0140 00000000 		.word	.LC16
 3885              	.LBE442:
 3886              	.LBE441:
 3887              	.LBE440:
 3888              	.LBE436:
 3889              	.LBE435:
 3890              	.LBE432:
 3891              	.LBE431:
 3892              	.LBE430:
 3893              	.LBE445:
 3894              	.LBE448:
 3895              		.cfi_endproc
 3896              	.LFE508:
 3897              		.fnend
 3899              		.section	.text.ros_run,"ax",%progbits
 3900              		.align	1
 3901              		.global	ros_run
 3902              		.syntax unified
 3903              		.thumb
 3904              		.thumb_func
 3905              		.fpu fpv4-sp-d16
 3907              	ros_run:
 3908              		.fnstart
 3909              	.LFB492:
  46:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
 3910              		.loc 7 46 0
 3911              		.cfi_startproc
 3912              		@ args = 0, pretend = 0, frame = 144
 3913              		@ frame_needed = 0, uses_anonymous_args = 0
 3914 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 106


 3915              		.save {r4, r5, r6, r7, r8, lr}
 3916              	.LCFI28:
 3917              		.cfi_def_cfa_offset 24
 3918              		.cfi_offset 4, -24
 3919              		.cfi_offset 5, -20
 3920              		.cfi_offset 6, -16
 3921              		.cfi_offset 7, -12
 3922              		.cfi_offset 8, -8
 3923              		.cfi_offset 14, -4
 3924              		.pad #144
 3925 0004 A4B0     		sub	sp, sp, #144
 3926              	.LCFI29:
 3927              		.cfi_def_cfa_offset 168
 3928              	.LVL518:
 3929              	.LBB566:
 3930              	.LBB567:
 3931              	.LBB568:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3932              		.loc 6 40 0
 3933 0006 B54B     		ldr	r3, .L278
 3934 0008 1293     		str	r3, [sp, #72]
 3935 000a 0023     		movs	r3, #0
 3936 000c 1493     		str	r3, [sp, #80]
 3937 000e 1793     		str	r3, [sp, #92]
 3938              	.LVL519:
 3939              	.LBB569:
 3940              	.LBB570:
  13:ROSSerial/std_msgs/Header.h ****   {
 3941              		.loc 5 13 0
 3942 0010 B34A     		ldr	r2, .L278+4
 3943 0012 1392     		str	r2, [sp, #76]
 3944              	.LVL520:
 3945              	.LBB571:
 3946              	.LBB572:
 3947              	.LBB573:
 3948              		.loc 11 51 0
 3949 0014 1593     		str	r3, [sp, #84]
 3950 0016 1693     		str	r3, [sp, #88]
 3951              	.LVL521:
 3952              	.LBE573:
 3953              	.LBE572:
 3954              	.LBE571:
 3955              	.LBE570:
 3956              	.LBE569:
 3957              	.LBE568:
 3958              	.LBE567:
 3959              	.LBE566:
  48:./Src/ROS_main.cpp ****     float position[2], velocity[2], effort[2];
 3960              		.loc 7 48 0
 3961 0018 B24A     		ldr	r2, .L278+8
 3962 001a 10AB     		add	r3, sp, #64
 3963 001c 92E80300 		ldm	r2, {r0, r1}
 3964 0020 83E80300 		stm	r3, {r0, r1}
  51:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
 3965              		.loc 7 51 0
 3966 0024 1A93     		str	r3, [sp, #104]
  52:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 107


 3967              		.loc 7 52 0
 3968 0026 0223     		movs	r3, #2
 3969 0028 1893     		str	r3, [sp, #96]
  53:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
 3970              		.loc 7 53 0
 3971 002a 0EAA     		add	r2, sp, #56
 3972 002c 1D92     		str	r2, [sp, #116]
  54:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
 3973              		.loc 7 54 0
 3974 002e 1B93     		str	r3, [sp, #108]
  55:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
 3975              		.loc 7 55 0
 3976 0030 0CAA     		add	r2, sp, #48
 3977 0032 2092     		str	r2, [sp, #128]
  56:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
 3978              		.loc 7 56 0
 3979 0034 1E93     		str	r3, [sp, #120]
  57:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
 3980              		.loc 7 57 0
 3981 0036 2193     		str	r3, [sp, #132]
  58:./Src/ROS_main.cpp **** 
 3982              		.loc 7 58 0
 3983 0038 0AAB     		add	r3, sp, #40
 3984 003a 2393     		str	r3, [sp, #140]
 3985              	.LVL522:
 3986              	.LBB574:
 3987              	.LBB575:
 3988              	.LBB576:
 3989              	.LBB577:
 3990              		.loc 10 151 0
 3991 003c FFF7FEFF 		bl	HAL_GetTick
 3992              	.LVL523:
 3993 0040 0446     		mov	r4, r0
 3994              	.LVL524:
 3995              	.LBE577:
 3996              	.LBE576:
 252:ROSSerial/ros/node_handle.h ****     {
 3997              		.loc 8 252 0
 3998 0042 A94B     		ldr	r3, .L278+12
 3999 0044 D3F82435 		ldr	r3, [r3, #1316]
 4000 0048 C31A     		subs	r3, r0, r3
 4001 004a 42F6F822 		movw	r2, #11000
 4002 004e 9342     		cmp	r3, r2
 4003 0050 03D9     		bls	.L199
 254:ROSSerial/ros/node_handle.h ****     }
 4004              		.loc 8 254 0
 4005 0052 A54B     		ldr	r3, .L278+12
 4006 0054 0022     		movs	r2, #0
 4007 0056 83F81C25 		strb	r2, [r3, #1308]
 4008              	.L199:
 258:ROSSerial/ros/node_handle.h ****     {
 4009              		.loc 8 258 0
 4010 005a A34B     		ldr	r3, .L278+12
 4011 005c D3F80835 		ldr	r3, [r3, #1288]
 4012 0060 002B     		cmp	r3, #0
 4013 0062 4BD0     		beq	.L201
 260:ROSSerial/ros/node_handle.h ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 108


 4014              		.loc 8 260 0
 4015 0064 A04B     		ldr	r3, .L278+12
 4016 0066 D3F82835 		ldr	r3, [r3, #1320]
 4017 006a 9C42     		cmp	r4, r3
 4018 006c 46D9     		bls	.L201
 262:ROSSerial/ros/node_handle.h ****       }
 4019              		.loc 8 262 0
 4020 006e 9E4B     		ldr	r3, .L278+12
 4021 0070 0022     		movs	r2, #0
 4022 0072 C3F80825 		str	r2, [r3, #1288]
 4023 0076 41E0     		b	.L201
 4024              	.LVL525:
 4025              	.L259:
 4026              	.LBB578:
 4027              	.LBB579:
 4028              	.LBB580:
  84:ROSSerial/AT32hardware.h **** 		}
 4029              		.loc 10 84 0
 4030 0078 591C     		adds	r1, r3, #1
 4031 007a 9C4A     		ldr	r2, .L278+16
 4032 007c 1170     		strb	r1, [r2]
 4033 007e 9C4A     		ldr	r2, .L278+20
 4034 0080 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 4035              	.LVL526:
 4036              	.L205:
 4037              	.LBE580:
 4038              	.LBE579:
 283:ROSSerial/ros/node_handle.h ****         break;
 4039              		.loc 8 283 0
 4040 0082 0029     		cmp	r1, #0
 4041 0084 C0F2B682 		blt	.L206
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4042              		.loc 8 285 0
 4043 0088 974B     		ldr	r3, .L278+12
 4044 008a D3F81825 		ldr	r2, [r3, #1304]
 4045 008e 0A44     		add	r2, r2, r1
 4046 0090 C3F81825 		str	r2, [r3, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 4047              		.loc 8 286 0
 4048 0094 D3F80835 		ldr	r3, [r3, #1288]
 4049 0098 072B     		cmp	r3, #7
 4050 009a 1ED0     		beq	.L258
 293:ROSSerial/ros/node_handle.h ****       {
 4051              		.loc 8 293 0
 4052 009c 002B     		cmp	r3, #0
 4053 009e 4FD1     		bne	.L209
 295:ROSSerial/ros/node_handle.h ****         {
 4054              		.loc 8 295 0
 4055 00a0 FF29     		cmp	r1, #255
 4056 00a2 41D1     		bne	.L210
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4057              		.loc 8 297 0
 4058 00a4 904A     		ldr	r2, .L278+12
 4059 00a6 0133     		adds	r3, r3, #1
 4060 00a8 C2F80835 		str	r3, [r2, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 4061              		.loc 8 298 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 109


 4062 00ac 04F11403 		add	r3, r4, #20
 4063 00b0 C2F82835 		str	r3, [r2, #1320]
 4064 00b4 22E0     		b	.L201
 4065              	.LVL527:
 4066              	.L260:
 4067              	.LBB583:
 4068              	.LBB581:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 4069              		.loc 10 88 0
 4070 00b6 0023     		movs	r3, #0
 4071 00b8 8C4A     		ldr	r2, .L278+16
 4072 00ba 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 4073              		.loc 10 89 0
 4074 00bc 8D4A     		ldr	r2, .L278+24
 4075 00be 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 4076              		.loc 10 90 0
 4077 00c0 8D48     		ldr	r0, .L278+28
 4078 00c2 0268     		ldr	r2, [r0]
 4079 00c4 D368     		ldr	r3, [r2, #12]
 4080 00c6 43F04003 		orr	r3, r3, #64
 4081 00ca D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 4082              		.loc 10 91 0
 4083 00cc 0122     		movs	r2, #1
 4084 00ce 8B49     		ldr	r1, .L278+32
 4085 00d0 FFF7FEFF 		bl	HAL_UART_Receive_IT
 4086              	.LVL528:
  80:ROSSerial/AT32hardware.h **** 		
 4087              		.loc 10 80 0
 4088 00d4 4FF0FF31 		mov	r1, #-1
 4089 00d8 D3E7     		b	.L205
 4090              	.LVL529:
 4091              	.L258:
 4092              	.LBE581:
 4093              	.LBE583:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 4094              		.loc 8 288 0
 4095 00da 834B     		ldr	r3, .L278+12
 4096 00dc D3F81425 		ldr	r2, [r3, #1300]
 4097 00e0 501C     		adds	r0, r2, #1
 4098 00e2 C3F81405 		str	r0, [r3, #1300]
 4099 00e6 1A44     		add	r2, r2, r3
 4100 00e8 1176     		strb	r1, [r2, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4101              		.loc 8 289 0
 4102 00ea D3F80C25 		ldr	r2, [r3, #1292]
 4103 00ee 013A     		subs	r2, r2, #1
 4104 00f0 C3F80C25 		str	r2, [r3, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4105              		.loc 8 290 0
 4106 00f4 12B9     		cbnz	r2, .L201
 291:ROSSerial/ros/node_handle.h ****       }
 4107              		.loc 8 291 0
 4108 00f6 0822     		movs	r2, #8
 4109 00f8 C3F80825 		str	r2, [r3, #1288]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 110


 4110              	.L201:
 270:ROSSerial/ros/node_handle.h ****       {
 4111              		.loc 8 270 0
 4112 00fc 7A4B     		ldr	r3, .L278+12
 4113 00fe 5B69     		ldr	r3, [r3, #20]
 4114 0100 3BB1     		cbz	r3, .L202
 4115              	.LVL530:
 4116              	.LBB584:
 4117              	.LBB585:
 4118              		.loc 10 151 0
 4119 0102 FFF7FEFF 		bl	HAL_GetTick
 4120              	.LVL531:
 4121              	.LBE585:
 4122              	.LBE584:
 276:ROSSerial/ros/node_handle.h ****         {
 4123              		.loc 8 276 0
 4124 0106 001B     		subs	r0, r0, r4
 4125 0108 774B     		ldr	r3, .L278+12
 4126 010a 5B69     		ldr	r3, [r3, #20]
 4127 010c 9842     		cmp	r0, r3
 4128 010e 00F27D82 		bhi	.L203
 4129              	.L202:
 4130              	.LVL532:
 4131              	.LBB586:
 4132              	.LBB582:
  82:ROSSerial/AT32hardware.h **** 		{
 4133              		.loc 10 82 0
 4134 0112 764B     		ldr	r3, .L278+16
 4135 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4136 0116 774A     		ldr	r2, .L278+24
 4137 0118 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4138 011a 9342     		cmp	r3, r2
 4139 011c ACD3     		bcc	.L259
  86:ROSSerial/AT32hardware.h **** 		{
 4140              		.loc 10 86 0
 4141 011e 9342     		cmp	r3, r2
 4142 0120 C9D0     		beq	.L260
  80:ROSSerial/AT32hardware.h **** 		
 4143              		.loc 10 80 0
 4144 0122 4FF0FF31 		mov	r1, #-1
 4145 0126 ACE7     		b	.L205
 4146              	.LVL533:
 4147              	.L210:
 4148              	.LBE582:
 4149              	.LBE586:
 4150              	.LBB587:
 4151              	.LBB588:
 4152              		.loc 10 151 0
 4153 0128 FFF7FEFF 		bl	HAL_GetTick
 4154              	.LVL534:
 4155              	.LBE588:
 4156              	.LBE587:
 300:ROSSerial/ros/node_handle.h ****         {
 4157              		.loc 8 300 0
 4158 012c 001B     		subs	r0, r0, r4
 4159 012e 41F28833 		movw	r3, #5000
 4160 0132 9842     		cmp	r0, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 111


 4161 0134 E2D9     		bls	.L201
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4162              		.loc 8 303 0
 4163 0136 6C4B     		ldr	r3, .L278+12
 4164 0138 0022     		movs	r2, #0
 4165 013a 83F81C25 		strb	r2, [r3, #1308]
 4166 013e 65E2     		b	.L203
 4167              	.L209:
 307:ROSSerial/ros/node_handle.h ****       {
 4168              		.loc 8 307 0
 4169 0140 012B     		cmp	r3, #1
 4170 0142 3ED0     		beq	.L261
 320:ROSSerial/ros/node_handle.h ****       {
 4171              		.loc 8 320 0
 4172 0144 022B     		cmp	r3, #2
 4173 0146 00F0A180 		beq	.L262
 327:ROSSerial/ros/node_handle.h ****       {
 4174              		.loc 8 327 0
 4175 014a 032B     		cmp	r3, #3
 4176 014c 00F0AA80 		beq	.L263
 332:ROSSerial/ros/node_handle.h ****       {
 4177              		.loc 8 332 0
 4178 0150 042B     		cmp	r3, #4
 4179 0152 00F0B280 		beq	.L264
 339:ROSSerial/ros/node_handle.h ****       {
 4180              		.loc 8 339 0
 4181 0156 052B     		cmp	r3, #5
 4182 0158 00F0DA80 		beq	.L265
 345:ROSSerial/ros/node_handle.h ****       {
 4183              		.loc 8 345 0
 4184 015c 062B     		cmp	r3, #6
 4185 015e 00F0E080 		beq	.L266
 352:ROSSerial/ros/node_handle.h ****       {
 4186              		.loc 8 352 0
 4187 0162 082B     		cmp	r3, #8
 4188 0164 CAD1     		bne	.L201
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4189              		.loc 8 354 0
 4190 0166 604B     		ldr	r3, .L278+12
 4191 0168 0021     		movs	r1, #0
 4192 016a C3F80815 		str	r1, [r3, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 4193              		.loc 8 355 0
 4194 016e 8B1A     		subs	r3, r1, r2
 4195 0170 D2B2     		uxtb	r2, r2
 4196 0172 DBB2     		uxtb	r3, r3
 4197 0174 58BF     		it	pl
 4198 0176 5A42     		rsbpl	r2, r3, #0
 4199 0178 FF2A     		cmp	r2, #255
 4200 017a BFD1     		bne	.L201
 357:ROSSerial/ros/node_handle.h ****           {
 4201              		.loc 8 357 0
 4202 017c 5A4B     		ldr	r3, .L278+12
 4203 017e D3F81055 		ldr	r5, [r3, #1296]
 4204 0182 002D     		cmp	r5, #0
 4205 0184 00F0E180 		beq	.L267
 365:ROSSerial/ros/node_handle.h ****           {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 112


 4206              		.loc 8 365 0
 4207 0188 0A2D     		cmp	r5, #10
 4208 018a 00F03281 		beq	.L268
 369:ROSSerial/ros/node_handle.h ****           {
 4209              		.loc 8 369 0
 4210 018e 062D     		cmp	r5, #6
 4211 0190 00F07281 		beq	.L269
 374:ROSSerial/ros/node_handle.h ****           {
 4212              		.loc 8 374 0
 4213 0194 0B2D     		cmp	r5, #11
 4214 0196 00F01B82 		beq	.L270
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 4215              		.loc 8 380 0
 4216 019a 643D     		subs	r5, r5, #100
 4217 019c 05EB8502 		add	r2, r5, r5, lsl #2
 4218 01a0 514B     		ldr	r3, .L278+12
 4219 01a2 03EB8203 		add	r3, r3, r2, lsl #2
 4220 01a6 B3F8A434 		ldrh	r3, [r3, #1188]
 4221 01aa 002B     		cmp	r3, #0
 4222 01ac A6D0     		beq	.L201
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 4223              		.loc 8 381 0
 4224 01ae 4E48     		ldr	r0, .L278+12
 4225 01b0 00EB8205 		add	r5, r0, r2, lsl #2
 4226 01b4 D5F8B434 		ldr	r3, [r5, #1204]
 4227 01b8 514A     		ldr	r2, .L278+36
 4228 01ba 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 4229              		.loc 8 383 0
 4230 01bc 1830     		adds	r0, r0, #24
 4231 01be 9847     		blx	r3
 4232              	.LVL535:
 4233 01c0 9CE7     		b	.L201
 4234              	.L261:
 309:ROSSerial/ros/node_handle.h ****         {
 4235              		.loc 8 309 0
 4236 01c2 FE29     		cmp	r1, #254
 4237 01c4 35D0     		beq	.L271
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4238              		.loc 8 315 0
 4239 01c6 484B     		ldr	r3, .L278+12
 4240 01c8 0022     		movs	r2, #0
 4241 01ca C3F80825 		str	r2, [r3, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4242              		.loc 8 316 0
 4243 01ce 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4244 01d2 002B     		cmp	r3, #0
 4245 01d4 92D1     		bne	.L201
 4246              	.LVL536:
 4247              	.LBB589:
 4248              	.LBB590:
 4249              	.LBB591:
 4250              	.LBB592:
  14:ROSSerial/std_msgs/Time.h ****   {
 4251              		.loc 1 14 0
 4252 01d6 4B4B     		ldr	r3, .L278+40
 4253 01d8 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 113


 4254              	.LVL537:
 4255              	.LBB593:
 4256              	.LBB594:
 4257              	.LBB595:
 4258              		.loc 11 51 0
 4259 01da 1546     		mov	r5, r2
 4260 01dc 0292     		str	r2, [sp, #8]
 4261 01de 0392     		str	r2, [sp, #12]
 4262              	.LVL538:
 4263              	.LBE595:
 4264              	.LBE594:
 4265              	.LBE593:
 4266              	.LBE592:
 4267              	.LBE591:
 4268              	.LBB596:
 4269              	.LBB597:
 597:ROSSerial/ros/node_handle.h **** 
 4270              		.loc 8 597 0
 4271 01e0 414E     		ldr	r6, .L278+12
 4272 01e2 1B68     		ldr	r3, [r3]
 4273 01e4 06F21F21 		addw	r1, r6, #543
 4274 01e8 01A8     		add	r0, sp, #4
 4275              	.LVL539:
 4276 01ea 9847     		blx	r3
 4277              	.LVL540:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4278              		.loc 8 600 0
 4279 01ec FF23     		movs	r3, #255
 4280 01ee 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4281              		.loc 8 601 0
 4282 01f2 FE23     		movs	r3, #254
 4283 01f4 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4284              		.loc 8 602 0
 4285 01f8 C3B2     		uxtb	r3, r0
 4286 01fa 86F81A32 		strb	r3, [r6, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4287              		.loc 8 603 0
 4288 01fe C0F30722 		ubfx	r2, r0, #8, #8
 4289 0202 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4290              		.loc 8 604 0
 4291 0206 1344     		add	r3, r3, r2
 4292 0208 DBB2     		uxtb	r3, r3
 4293 020a DB43     		mvns	r3, r3
 4294 020c 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4295              		.loc 8 605 0
 4296 0210 0A23     		movs	r3, #10
 4297 0212 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 4298              		.loc 8 606 0
 4299 0216 86F81E52 		strb	r5, [r6, #542]
 4300              	.LVL541:
 4301              	.LBB598:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 114


 4302              		.loc 8 610 0
 4303 021a 0522     		movs	r2, #5
 4304              	.LBE598:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4305              		.loc 8 609 0
 4306 021c 2B46     		mov	r3, r5
 4307              	.LVL542:
 4308              	.L214:
 4309              	.LBB599:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4310              		.loc 8 610 0
 4311 021e C11D     		adds	r1, r0, #7
 4312 0220 9142     		cmp	r1, r2
 4313 0222 0BDD     		ble	.L213
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 4314              		.loc 8 611 0
 4315 0224 3049     		ldr	r1, .L278+12
 4316 0226 1144     		add	r1, r1, r2
 4317 0228 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4318 022c 0B44     		add	r3, r3, r1
 4319              	.LVL543:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4320              		.loc 8 610 0
 4321 022e 0132     		adds	r2, r2, #1
 4322              	.LVL544:
 4323 0230 F5E7     		b	.L214
 4324              	.LVL545:
 4325              	.L271:
 4326              	.LBE599:
 4327              	.LBE597:
 4328              	.LBE596:
 4329              	.LBE590:
 4330              	.LBE589:
 311:ROSSerial/ros/node_handle.h ****         }
 4331              		.loc 8 311 0
 4332 0232 0133     		adds	r3, r3, #1
 4333 0234 2C4A     		ldr	r2, .L278+12
 4334 0236 C2F80835 		str	r3, [r2, #1288]
 4335 023a 5FE7     		b	.L201
 4336              	.LVL546:
 4337              	.L213:
 4338              	.LBB614:
 4339              	.LBB613:
 4340              	.LBB609:
 4341              	.LBB607:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 4342              		.loc 8 613 0
 4343 023c 5A42     		rsbs	r2, r3, #0
 4344              	.LVL547:
 4345 023e DBB2     		uxtb	r3, r3
 4346              	.LVL548:
 4347 0240 D2B2     		uxtb	r2, r2
 4348 0242 58BF     		it	pl
 4349 0244 5342     		rsbpl	r3, r2, #0
 4350 0246 00F10802 		add	r2, r0, #8
 4351              	.LVL549:
 4352 024a DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 115


 4353 024c 2648     		ldr	r0, .L278+12
 4354 024e 0144     		add	r1, r1, r0
 4355 0250 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 4356              		.loc 8 615 0
 4357 0254 B2F5007F 		cmp	r2, #512
 4358 0258 0BDC     		bgt	.L215
 4359              	.LVL550:
 4360              	.LBB600:
 4361              	.LBB601:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 4362              		.loc 10 121 0
 4363 025a 0A23     		movs	r3, #10
 4364 025c 92B2     		uxth	r2, r2
 4365              	.LVL551:
 4366 025e 00F50671 		add	r1, r0, #536
 4367              	.LVL552:
 4368 0262 2548     		ldr	r0, .L278+28
 4369 0264 FFF7FEFF 		bl	HAL_UART_Transmit
 4370              	.LVL553:
 4371              	.L216:
 4372              	.LBE601:
 4373              	.LBE600:
 4374              	.LBE607:
 4375              	.LBE609:
 4376              	.LBB610:
 4377              	.LBB611:
 4378              		.loc 10 151 0
 4379 0268 FFF7FEFF 		bl	HAL_GetTick
 4380              	.LVL554:
 4381              	.LBE611:
 4382              	.LBE610:
 415:ROSSerial/ros/node_handle.h ****   }
 4383              		.loc 8 415 0
 4384 026c 1E4B     		ldr	r3, .L278+12
 4385 026e 9860     		str	r0, [r3, #8]
 4386 0270 44E7     		b	.L201
 4387              	.LVL555:
 4388              	.L215:
 4389              	.LBB612:
 4390              	.LBB608:
 4391              	.LBB602:
 4392              	.LBB603:
 4393              	.LBB604:
 4394              	.LBB605:
 4395              	.LBB606:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4396              		.loc 3 13 0
 4397 0272 254B     		ldr	r3, .L278+44
 4398 0274 0493     		str	r3, [sp, #16]
 4399              	.LVL556:
 4400              	.LBE606:
 4401              	.LBE605:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4402              		.loc 8 635 0
 4403 0276 0323     		movs	r3, #3
 4404 0278 8DF81430 		strb	r3, [sp, #20]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 116


 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4405              		.loc 8 636 0
 4406 027c 234B     		ldr	r3, .L278+48
 4407 027e 0693     		str	r3, [sp, #24]
 4408              		.loc 8 637 0
 4409 0280 04AA     		add	r2, sp, #16
 4410              	.LVL557:
 4411 0282 0721     		movs	r1, #7
 4412              	.LVL558:
 4413 0284 1848     		ldr	r0, .L278+12
 4414 0286 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4415              	.LVL559:
 4416 028a EDE7     		b	.L216
 4417              	.LVL560:
 4418              	.L262:
 4419              	.LBE604:
 4420              	.LBE603:
 4421              	.LBE602:
 4422              	.LBE608:
 4423              	.LBE612:
 4424              	.LBE613:
 4425              	.LBE614:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 4426              		.loc 8 322 0
 4427 028c 164A     		ldr	r2, .L278+12
 4428 028e C2F80C15 		str	r1, [r2, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 4429              		.loc 8 323 0
 4430 0292 0020     		movs	r0, #0
 4431 0294 C2F81405 		str	r0, [r2, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 4432              		.loc 8 324 0
 4433 0298 0133     		adds	r3, r3, #1
 4434 029a C2F80835 		str	r3, [r2, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 4435              		.loc 8 325 0
 4436 029e C2F81815 		str	r1, [r2, #1304]
 4437 02a2 2BE7     		b	.L201
 4438              	.L263:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 4439              		.loc 8 329 0
 4440 02a4 104A     		ldr	r2, .L278+12
 4441 02a6 D2F80C05 		ldr	r0, [r2, #1292]
 4442 02aa 00EB0121 		add	r1, r0, r1, lsl #8
 4443 02ae C2F80C15 		str	r1, [r2, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 4444              		.loc 8 330 0
 4445 02b2 0133     		adds	r3, r3, #1
 4446 02b4 C2F80835 		str	r3, [r2, #1288]
 4447 02b8 20E7     		b	.L201
 4448              	.L264:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 4449              		.loc 8 334 0
 4450 02ba 5142     		rsbs	r1, r2, #0
 4451 02bc D2B2     		uxtb	r2, r2
 4452 02be C9B2     		uxtb	r1, r1
 4453 02c0 58BF     		it	pl
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 117


 4454 02c2 4A42     		rsbpl	r2, r1, #0
 4455 02c4 FF2A     		cmp	r2, #255
 4456 02c6 04D0     		beq	.L272
 337:ROSSerial/ros/node_handle.h ****       }
 4457              		.loc 8 337 0
 4458 02c8 074B     		ldr	r3, .L278+12
 4459 02ca 0022     		movs	r2, #0
 4460 02cc C3F80825 		str	r2, [r3, #1288]
 4461 02d0 14E7     		b	.L201
 4462              	.L272:
 335:ROSSerial/ros/node_handle.h ****         else
 4463              		.loc 8 335 0
 4464 02d2 0133     		adds	r3, r3, #1
 4465 02d4 044A     		ldr	r2, .L278+12
 4466 02d6 C2F80835 		str	r3, [r2, #1288]
 4467 02da 0FE7     		b	.L201
 4468              	.L279:
 4469              		.align	2
 4470              	.L278:
 4471 02dc 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 4472 02e0 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4473 02e4 00000000 		.word	.LANCHOR3
 4474 02e8 00000000 		.word	.LANCHOR1
 4475 02ec 00000000 		.word	g_RxRead
 4476 02f0 00000000 		.word	g_RxBuf
 4477 02f4 00000000 		.word	g_RxWritten
 4478 02f8 00000000 		.word	huart2
 4479 02fc 00000000 		.word	byte
 4480 0300 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 4481 0304 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4482 0308 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4483 030c 00000000 		.word	.LC16
 4484              	.L265:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 4485              		.loc 8 341 0
 4486 0310 B24A     		ldr	r2, .L280
 4487 0312 C2F81015 		str	r1, [r2, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 4488              		.loc 8 342 0
 4489 0316 0133     		adds	r3, r3, #1
 4490 0318 C2F80835 		str	r3, [r2, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 4491              		.loc 8 343 0
 4492 031c C2F81815 		str	r1, [r2, #1304]
 4493 0320 ECE6     		b	.L201
 4494              	.L266:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 4495              		.loc 8 347 0
 4496 0322 AE4B     		ldr	r3, .L280
 4497 0324 D3F81025 		ldr	r2, [r3, #1296]
 4498 0328 02EB0122 		add	r2, r2, r1, lsl #8
 4499 032c C3F81025 		str	r2, [r3, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 4500              		.loc 8 348 0
 4501 0330 0722     		movs	r2, #7
 4502 0332 C3F80825 		str	r2, [r3, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 118


 4503              		.loc 8 349 0
 4504 0336 D3F80C35 		ldr	r3, [r3, #1292]
 4505 033a 002B     		cmp	r3, #0
 4506 033c 7FF4DEAE 		bne	.L201
 350:ROSSerial/ros/node_handle.h ****       }
 4507              		.loc 8 350 0
 4508 0340 A64B     		ldr	r3, .L280
 4509 0342 0822     		movs	r2, #8
 4510 0344 C3F80825 		str	r2, [r3, #1288]
 4511 0348 D8E6     		b	.L201
 4512              	.L267:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 4513              		.loc 8 359 0
 4514 034a 1846     		mov	r0, r3
 4515 034c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4516              	.LVL561:
 4517              	.LBB615:
 4518              	.LBB616:
 4519              	.LBB617:
 4520              	.LBB618:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 4521              		.loc 2 12 0
 4522 0350 A34B     		ldr	r3, .L280+4
 4523 0352 0493     		str	r3, [sp, #16]
 4524              	.LVL562:
 4525              	.LBE618:
 4526              	.LBE617:
 558:ROSSerial/ros/node_handle.h ****     {
 4527              		.loc 8 558 0
 4528 0354 2E46     		mov	r6, r5
 4529 0356 00E0     		b	.L226
 4530              	.LVL563:
 4531              	.L225:
 4532 0358 0136     		adds	r6, r6, #1
 4533              	.LVL564:
 4534              	.L226:
 4535 035a 042E     		cmp	r6, #4
 4536 035c 1FDC     		bgt	.L224
 560:ROSSerial/ros/node_handle.h ****       {
 4537              		.loc 8 560 0
 4538 035e 06EB8602 		add	r2, r6, r6, lsl #2
 4539 0362 9E4B     		ldr	r3, .L280
 4540 0364 03EB8203 		add	r3, r3, r2, lsl #2
 4541 0368 B3F82C34 		ldrh	r3, [r3, #1068]
 4542 036c 002B     		cmp	r3, #0
 4543 036e F3D0     		beq	.L225
 562:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 4544              		.loc 8 562 0
 4545 0370 ADF81430 		strh	r3, [sp, #20]	@ movhi
 563:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 4546              		.loc 8 563 0
 4547 0374 9948     		ldr	r0, .L280
 4548 0376 00EB8203 		add	r3, r0, r2, lsl #2
 4549 037a D3F83024 		ldr	r2, [r3, #1072]
 4550 037e 0692     		str	r2, [sp, #24]
 564:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 4551              		.loc 8 564 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 119


 4552 0380 D3F83824 		ldr	r2, [r3, #1080]
 4553 0384 0792     		str	r2, [sp, #28]
 565:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 4554              		.loc 8 565 0
 4555 0386 D3F83C34 		ldr	r3, [r3, #1084]
 4556 038a 0893     		str	r3, [sp, #32]
 566:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 4557              		.loc 8 566 0
 4558 038c 4FF40073 		mov	r3, #512
 4559 0390 0993     		str	r3, [sp, #36]
 567:ROSSerial/ros/node_handle.h ****       }
 4560              		.loc 8 567 0
 4561 0392 04AA     		add	r2, sp, #16
 4562 0394 0021     		movs	r1, #0
 4563 0396 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4564              	.LVL565:
 4565 039a DDE7     		b	.L225
 4566              	.LVL566:
 4567              	.L228:
 570:ROSSerial/ros/node_handle.h ****     {
 4568              		.loc 8 570 0
 4569 039c 0135     		adds	r5, r5, #1
 4570              	.LVL567:
 4571              	.L224:
 4572 039e 042D     		cmp	r5, #4
 4573 03a0 1EDC     		bgt	.L227
 572:ROSSerial/ros/node_handle.h ****       {
 4574              		.loc 8 572 0
 4575 03a2 05EB8502 		add	r2, r5, r5, lsl #2
 4576 03a6 8D4B     		ldr	r3, .L280
 4577 03a8 03EB8203 		add	r3, r3, r2, lsl #2
 4578 03ac B3F8A434 		ldrh	r3, [r3, #1188]
 4579 03b0 002B     		cmp	r3, #0
 4580 03b2 F3D0     		beq	.L228
 574:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 4581              		.loc 8 574 0
 4582 03b4 ADF81430 		strh	r3, [sp, #20]	@ movhi
 575:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 4583              		.loc 8 575 0
 4584 03b8 8848     		ldr	r0, .L280
 4585 03ba 00EB8203 		add	r3, r0, r2, lsl #2
 4586 03be D3F8A824 		ldr	r2, [r3, #1192]
 4587 03c2 0692     		str	r2, [sp, #24]
 576:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 4588              		.loc 8 576 0
 4589 03c4 D3F8AC24 		ldr	r2, [r3, #1196]
 4590 03c8 0792     		str	r2, [sp, #28]
 577:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 4591              		.loc 8 577 0
 4592 03ca D3F8B034 		ldr	r3, [r3, #1200]
 4593 03ce 0893     		str	r3, [sp, #32]
 578:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 4594              		.loc 8 578 0
 4595 03d0 4FF40073 		mov	r3, #512
 4596 03d4 0993     		str	r3, [sp, #36]
 579:ROSSerial/ros/node_handle.h ****       }
 4597              		.loc 8 579 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 120


 4598 03d6 04AA     		add	r2, sp, #16
 4599 03d8 0121     		movs	r1, #1
 4600 03da FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4601              	.LVL568:
 4602 03de DDE7     		b	.L228
 4603              	.L227:
 582:ROSSerial/ros/node_handle.h ****   }
 4604              		.loc 8 582 0
 4605 03e0 7E4B     		ldr	r3, .L280
 4606 03e2 0122     		movs	r2, #1
 4607 03e4 83F81C25 		strb	r2, [r3, #1308]
 4608              	.LVL569:
 4609              	.LBE616:
 4610              	.LBE615:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 4611              		.loc 8 361 0
 4612 03e8 C3F82045 		str	r4, [r3, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 4613              		.loc 8 362 0
 4614 03ec C3F82445 		str	r4, [r3, #1316]
 4615 03f0 0CE1     		b	.L203
 4616              	.L268:
 4617              	.LVL570:
 4618              	.LBB619:
 4619              	.LBB620:
 4620              	.LBB621:
 4621              	.LBB622:
 4622              		.loc 10 151 0
 4623 03f2 FFF7FEFF 		bl	HAL_GetTick
 4624              	.LVL571:
 4625              	.LBE622:
 4626              	.LBE621:
 421:ROSSerial/ros/node_handle.h **** 
 4627              		.loc 8 421 0
 4628 03f6 794D     		ldr	r5, .L280
 4629 03f8 AB68     		ldr	r3, [r5, #8]
 4630 03fa C01A     		subs	r0, r0, r3
 4631              	.LVL572:
 4632              	.LBB623:
 4633              	.LBB624:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4634              		.loc 1 38 0
 4635 03fc 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4636              		.loc 1 39 0
 4637 03fe 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 4638 0400 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4639              		.loc 1 40 0
 4640 0404 AA7E     		ldrb	r2, [r5, #26]	@ zero_extendqisi2
 4641 0406 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 4642              		.loc 1 41 0
 4643 040a EA7E     		ldrb	r2, [r5, #27]	@ zero_extendqisi2
 4644 040c 43EA0263 		orr	r3, r3, r2, lsl #24
 4645              	.LVL573:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 121


 4646              		.loc 1 43 0
 4647 0410 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4648              		.loc 1 44 0
 4649 0412 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 4650 0414 41EA0221 		orr	r1, r1, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4651              		.loc 1 45 0
 4652 0418 AA7F     		ldrb	r2, [r5, #30]	@ zero_extendqisi2
 4653 041a 41EA0241 		orr	r1, r1, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 4654              		.loc 1 46 0
 4655 041e EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 4656 0420 41EA0261 		orr	r1, r1, r2, lsl #24
 4657              	.LVL574:
 4658              	.LBE624:
 4659              	.LBE623:
 424:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 4660              		.loc 8 424 0
 4661 0424 6F4E     		ldr	r6, .L280+8
 4662 0426 A6FB0072 		umull	r7, r2, r6, r0
 4663 042a 9209     		lsrs	r2, r2, #6
 4664 042c 1344     		add	r3, r3, r2
 4665 042e 0593     		str	r3, [sp, #20]
 425:ROSSerial/ros/node_handle.h **** 
 4666              		.loc 8 425 0
 4667 0430 4FF47A78 		mov	r8, #1000
 4668 0434 08FB1203 		mls	r3, r8, r2, r0
 4669 0438 6B4F     		ldr	r7, .L280+12
 4670 043a 07FB0313 		mla	r3, r7, r3, r1
 4671 043e 0693     		str	r3, [sp, #24]
 4672              	.LVL575:
 4673              	.LBB625:
 4674              	.LBB626:
 4675              	.LBB627:
 4676              	.LBB628:
 4677              		.loc 10 151 0
 4678 0440 FFF7FEFF 		bl	HAL_GetTick
 4679              	.LVL576:
 4680              	.LBE628:
 4681              	.LBE627:
 444:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 4682              		.loc 8 444 0
 4683 0444 A6FB0023 		umull	r2, r3, r6, r0
 4684 0448 9B09     		lsrs	r3, r3, #6
 4685 044a 059A     		ldr	r2, [sp, #20]
 4686 044c D21A     		subs	r2, r2, r3
 4687 044e 013A     		subs	r2, r2, #1
 4688 0450 EA60     		str	r2, [r5, #12]
 445:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 4689              		.loc 8 445 0
 4690 0452 08FB1303 		mls	r3, r8, r3, r0
 4691 0456 069A     		ldr	r2, [sp, #24]
 4692 0458 07FB1323 		mls	r3, r7, r3, r2
 4693 045c 634A     		ldr	r2, .L280+16
 4694 045e 1A44     		add	r2, r2, r3
 4695 0460 2946     		mov	r1, r5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 122


 4696 0462 41F8102F 		str	r2, [r1, #16]!
 446:ROSSerial/ros/node_handle.h ****   }
 4697              		.loc 8 446 0
 4698 0466 05F10C00 		add	r0, r5, #12
 4699              	.LVL577:
 4700 046a FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4701              	.LVL578:
 4702              	.LBE626:
 4703              	.LBE625:
 4704              	.LBB629:
 4705              	.LBB630:
 4706              		.loc 10 151 0
 4707 046e FFF7FEFF 		bl	HAL_GetTick
 4708              	.LVL579:
 4709              	.LBE630:
 4710              	.LBE629:
 428:ROSSerial/ros/node_handle.h ****   }
 4711              		.loc 8 428 0
 4712 0472 C5F82405 		str	r0, [r5, #1316]
 4713 0476 41E6     		b	.L201
 4714              	.LVL580:
 4715              	.L269:
 4716              	.LBE620:
 4717              	.LBE619:
 4718              	.LBB631:
 4719              	.LBB632:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 4720              		.loc 4 116 0
 4721 0478 584B     		ldr	r3, .L280
 4722 047a 1D7E     		ldrb	r5, [r3, #24]	@ zero_extendqisi2
 4723              	.LVL581:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 4724              		.loc 4 117 0
 4725 047c 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 4726 0480 9D42     		cmp	r5, r3
 4727 0482 23D8     		bhi	.L273
 4728              	.L231:
 4729              	.LVL582:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 4730              		.loc 4 120 0
 4731 0484 554B     		ldr	r3, .L280
 4732 0486 83F83455 		strb	r5, [r3, #1332]
 4733              	.LVL583:
 4734              	.LBB633:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4735              		.loc 4 121 0
 4736 048a 0022     		movs	r2, #0
 4737              	.LBE633:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 4738              		.loc 4 119 0
 4739 048c 0425     		movs	r5, #4
 4740              	.LVL584:
 4741              	.L233:
 4742              	.LBB635:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4743              		.loc 4 121 0
 4744 048e 534B     		ldr	r3, .L280
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 123


 4745 0490 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 4746 0494 9342     		cmp	r3, r2
 4747 0496 22D9     		bls	.L232
 4748              	.LBB634:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4749              		.loc 4 127 0
 4750 0498 5048     		ldr	r0, .L280
 4751 049a 00F11801 		add	r1, r0, #24
 4752 049e 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4753              		.loc 4 128 0
 4754 04a0 6E1C     		adds	r6, r5, #1
 4755 04a2 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 4756 04a4 43EA0623 		orr	r3, r3, r6, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4757              		.loc 4 129 0
 4758 04a8 AE1C     		adds	r6, r5, #2
 4759 04aa 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 4760 04ac 43EA0643 		orr	r3, r3, r6, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 4761              		.loc 4 130 0
 4762 04b0 EE1C     		adds	r6, r5, #3
 4763 04b2 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 4764 04b4 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 4765              		.loc 4 131 0
 4766 04b8 C0F83835 		str	r3, [r0, #1336]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 4767              		.loc 4 132 0
 4768 04bc 0435     		adds	r5, r5, #4
 4769              	.LVL585:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4770              		.loc 4 133 0
 4771 04be D0F83C15 		ldr	r1, [r0, #1340]
 4772 04c2 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 4773              	.LBE634:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4774              		.loc 4 121 0
 4775 04c6 0132     		adds	r2, r2, #1
 4776              	.LVL586:
 4777 04c8 D2B2     		uxtb	r2, r2
 4778              	.LVL587:
 4779 04ca E0E7     		b	.L233
 4780              	.LVL588:
 4781              	.L273:
 4782              	.LBE635:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4783              		.loc 4 118 0
 4784 04cc 434E     		ldr	r6, .L280
 4785 04ce A900     		lsls	r1, r5, #2
 4786 04d0 D6F83C05 		ldr	r0, [r6, #1340]
 4787 04d4 FFF7FEFF 		bl	realloc
 4788              	.LVL589:
 4789 04d8 C6F83C05 		str	r0, [r6, #1340]
 4790 04dc D2E7     		b	.L231
 4791              	.LVL590:
 4792              	.L232:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 124


 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 4793              		.loc 4 135 0
 4794 04de 3F4B     		ldr	r3, .L280
 4795 04e0 03F11802 		add	r2, r3, #24
 4796              	.LVL591:
 4797 04e4 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 4798              	.LVL592:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 4799              		.loc 4 136 0
 4800 04e6 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 4801 04ea 9E42     		cmp	r6, r3
 4802 04ec 24D8     		bhi	.L274
 4803              	.L234:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 4804              		.loc 4 138 0
 4805 04ee 0435     		adds	r5, r5, #4
 4806              	.LVL593:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 4807              		.loc 4 139 0
 4808 04f0 3A4B     		ldr	r3, .L280
 4809 04f2 83F84065 		strb	r6, [r3, #1344]
 4810              	.LVL594:
 4811              	.LBB636:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4812              		.loc 4 140 0
 4813 04f6 0022     		movs	r2, #0
 4814              	.LVL595:
 4815              	.L236:
 4816 04f8 384B     		ldr	r3, .L280
 4817 04fa 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 4818 04fe 9342     		cmp	r3, r2
 4819 0500 24D9     		bls	.L235
 4820              	.LBB637:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 4821              		.loc 4 146 0
 4822 0502 3648     		ldr	r0, .L280
 4823 0504 00F11801 		add	r1, r0, #24
 4824 0508 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 4825              		.loc 4 147 0
 4826 050a 6E1C     		adds	r6, r5, #1
 4827 050c 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 4828 050e 43EA0623 		orr	r3, r3, r6, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 4829              		.loc 4 148 0
 4830 0512 AE1C     		adds	r6, r5, #2
 4831 0514 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 4832 0516 43EA0643 		orr	r3, r3, r6, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 4833              		.loc 4 149 0
 4834 051a EE1C     		adds	r6, r5, #3
 4835 051c 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 4836 051e 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 4837              		.loc 4 150 0
 4838 0522 00F24451 		addw	r1, r0, #1348
 4839 0526 0B60     		str	r3, [r1]	@ float
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 125


 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 4840              		.loc 4 151 0
 4841 0528 0435     		adds	r5, r5, #4
 4842              	.LVL596:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4843              		.loc 4 152 0
 4844 052a D0F84815 		ldr	r1, [r0, #1352]
 4845 052e 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 4846              	.LBE637:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 4847              		.loc 4 140 0
 4848 0532 0132     		adds	r2, r2, #1
 4849              	.LVL597:
 4850 0534 D2B2     		uxtb	r2, r2
 4851              	.LVL598:
 4852 0536 DFE7     		b	.L236
 4853              	.LVL599:
 4854              	.L274:
 4855              	.LBE636:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4856              		.loc 4 137 0
 4857 0538 A2F11807 		sub	r7, r2, #24
 4858 053c B100     		lsls	r1, r6, #2
 4859 053e D7F84805 		ldr	r0, [r7, #1352]
 4860 0542 FFF7FEFF 		bl	realloc
 4861              	.LVL600:
 4862 0546 C7F84805 		str	r0, [r7, #1352]
 4863 054a D0E7     		b	.L234
 4864              	.LVL601:
 4865              	.L235:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 4866              		.loc 4 154 0
 4867 054c 234B     		ldr	r3, .L280
 4868 054e 03F11802 		add	r2, r3, #24
 4869              	.LVL602:
 4870 0552 565D     		ldrb	r6, [r2, r5]	@ zero_extendqisi2
 4871              	.LVL603:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 4872              		.loc 4 155 0
 4873 0554 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 4874 0558 9E42     		cmp	r6, r3
 4875 055a 05D8     		bhi	.L275
 4876              	.L237:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 4877              		.loc 4 157 0
 4878 055c 2A1D     		adds	r2, r5, #4
 4879              	.LVL604:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 4880              		.loc 4 158 0
 4881 055e 1F4B     		ldr	r3, .L280
 4882 0560 83F84C65 		strb	r6, [r3, #1356]
 4883              	.LVL605:
 4884              	.LBB638:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 4885              		.loc 4 159 0
 4886 0564 0027     		movs	r7, #0
 4887 0566 19E0     		b	.L241
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 126


 4888              	.LVL606:
 4889              	.L275:
 4890              	.LBE638:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 4891              		.loc 4 156 0
 4892 0568 A2F11807 		sub	r7, r2, #24
 4893 056c B100     		lsls	r1, r6, #2
 4894 056e D7F85405 		ldr	r0, [r7, #1364]
 4895 0572 FFF7FEFF 		bl	realloc
 4896              	.LVL607:
 4897 0576 C7F85405 		str	r0, [r7, #1364]
 4898 057a EFE7     		b	.L237
 4899              	.LVL608:
 4900              	.L239:
 4901              	.LBB642:
 4902              	.LBB639:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 4903              		.loc 4 166 0
 4904 057c 1749     		ldr	r1, .L280
 4905 057e 01F11803 		add	r3, r1, #24
 4906              	.LVL609:
 4907 0582 501E     		subs	r0, r2, #1
 4908 0584 0026     		movs	r6, #0
 4909              	.LVL610:
 4910 0586 1E54     		strb	r6, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 4911              		.loc 4 167 0
 4912 0588 013D     		subs	r5, r5, #1
 4913 058a 1D44     		add	r5, r5, r3
 4914 058c C1F85055 		str	r5, [r1, #1360]
 4915              	.LVL611:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4916              		.loc 4 169 0
 4917 0590 D1F85435 		ldr	r3, [r1, #1364]
 4918 0594 43F82750 		str	r5, [r3, r7, lsl #2]	@ unaligned
 4919              	.LBE639:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 4920              		.loc 4 159 0
 4921 0598 0137     		adds	r7, r7, #1
 4922              	.LVL612:
 4923 059a FFB2     		uxtb	r7, r7
 4924              	.LVL613:
 4925              	.L241:
 4926 059c 0F4B     		ldr	r3, .L280
 4927 059e 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 4928 05a2 BB42     		cmp	r3, r7
 4929 05a4 0FD9     		bls	.L238
 4930              	.LBB641:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 4931              		.loc 4 161 0
 4932 05a6 124B     		ldr	r3, .L280+20
 4933 05a8 9E58     		ldr	r6, [r3, r2]	@ unaligned
 4934              	.LVL614:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 4935              		.loc 4 162 0
 4936 05aa 151D     		adds	r5, r2, #4
 4937              	.LVL615:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 127


 4938              	.LBB640:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 4939              		.loc 4 163 0
 4940 05ac 2B46     		mov	r3, r5
 4941              	.LVL616:
 4942              	.L240:
 4943 05ae 7219     		adds	r2, r6, r5
 4944 05b0 9A42     		cmp	r2, r3
 4945 05b2 E3D9     		bls	.L239
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 4946              		.loc 4 164 0
 4947 05b4 094A     		ldr	r2, .L280
 4948 05b6 02F11800 		add	r0, r2, #24
 4949 05ba 591E     		subs	r1, r3, #1
 4950 05bc 1A44     		add	r2, r2, r3
 4951 05be 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 4952 05c0 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 4953              		.loc 4 163 0
 4954 05c2 0133     		adds	r3, r3, #1
 4955              	.LVL617:
 4956 05c4 F3E7     		b	.L240
 4957              	.LVL618:
 4958              	.L238:
 4959              	.LBE640:
 4960              	.LBE641:
 4961              	.LBE642:
 4962              	.LBE632:
 4963              	.LBE631:
 372:ROSSerial/ros/node_handle.h ****           }
 4964              		.loc 8 372 0
 4965 05c6 054B     		ldr	r3, .L280
 4966 05c8 0122     		movs	r2, #1
 4967 05ca 83F82C25 		strb	r2, [r3, #1324]
 4968 05ce 95E5     		b	.L201
 4969              	.L270:
 376:ROSSerial/ros/node_handle.h ****           }
 4970              		.loc 8 376 0
 4971 05d0 024B     		ldr	r3, .L280
 4972 05d2 0022     		movs	r2, #0
 4973 05d4 83F81C25 		strb	r2, [r3, #1308]
 4974 05d8 90E5     		b	.L201
 4975              	.L281:
 4976 05da 00BF     		.align	2
 4977              	.L280:
 4978 05dc 00000000 		.word	.LANCHOR1
 4979 05e0 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4980 05e4 D34D6210 		.word	274877907
 4981 05e8 40420F00 		.word	1000000
 4982 05ec 00CA9A3B 		.word	1000000000
 4983 05f0 18000000 		.word	.LANCHOR1+24
 4984              	.L206:
 4985              	.LBE578:
 391:ROSSerial/ros/node_handle.h ****     {
 4986              		.loc 8 391 0
 4987 05f4 824B     		ldr	r3, .L282
 4988 05f6 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 128


 4989 05fa 3BB1     		cbz	r3, .L203
 4990 05fc 804B     		ldr	r3, .L282
 4991 05fe D3F82035 		ldr	r3, [r3, #1312]
 4992 0602 E31A     		subs	r3, r4, r3
 4993 0604 40F6C412 		movw	r2, #2500
 4994 0608 9342     		cmp	r3, r2
 4995 060a 35D8     		bhi	.L276
 4996              	.L203:
 4997              	.LVL619:
 4998              	.LBE575:
 4999              	.LBE574:
  77:./Src/ROS_main.cpp **** }
 5000              		.loc 7 77 0
 5001 060c 7D4B     		ldr	r3, .L282+4
 5002 060e 1B68     		ldr	r3, [r3]
 5003 0610 1D88     		ldrh	r5, [r3]
 5004              	.LVL620:
 5005              	.LBB668:
 5006              	.LBB669:
 593:ROSSerial/ros/node_handle.h ****       return 0;
 5007              		.loc 8 593 0
 5008 0612 632D     		cmp	r5, #99
 5009 0614 05DD     		ble	.L247
 5010 0616 7A4B     		ldr	r3, .L282
 5011 0618 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 5012 061c 002B     		cmp	r3, #0
 5013 061e 00F09880 		beq	.L198
 5014              	.L247:
 597:ROSSerial/ros/node_handle.h **** 
 5015              		.loc 8 597 0
 5016 0622 774C     		ldr	r4, .L282
 5017              	.LVL621:
 5018 0624 129B     		ldr	r3, [sp, #72]
 5019 0626 1B68     		ldr	r3, [r3]
 5020 0628 04F21F21 		addw	r1, r4, #543
 5021 062c 12A8     		add	r0, sp, #72
 5022              	.LVL622:
 5023 062e 9847     		blx	r3
 5024              	.LVL623:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5025              		.loc 8 600 0
 5026 0630 FF23     		movs	r3, #255
 5027 0632 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5028              		.loc 8 601 0
 5029 0636 FE23     		movs	r3, #254
 5030 0638 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5031              		.loc 8 602 0
 5032 063c C3B2     		uxtb	r3, r0
 5033 063e 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5034              		.loc 8 603 0
 5035 0642 C0F30722 		ubfx	r2, r0, #8, #8
 5036 0646 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5037              		.loc 8 604 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 129


 5038 064a 1344     		add	r3, r3, r2
 5039 064c DBB2     		uxtb	r3, r3
 5040 064e DB43     		mvns	r3, r3
 5041 0650 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5042              		.loc 8 605 0
 5043 0654 84F81D52 		strb	r5, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 5044              		.loc 8 606 0
 5045 0658 45F30725 		sbfx	r5, r5, #8, #8
 5046              	.LVL624:
 5047 065c 84F81E52 		strb	r5, [r4, #542]
 5048              	.LVL625:
 5049              	.LBB670:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5050              		.loc 8 610 0
 5051 0660 0523     		movs	r3, #5
 5052              	.LBE670:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5053              		.loc 8 609 0
 5054 0662 0021     		movs	r1, #0
 5055              	.LVL626:
 5056              	.L250:
 5057              	.LBB671:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5058              		.loc 8 610 0
 5059 0664 C41D     		adds	r4, r0, #7
 5060 0666 9C42     		cmp	r4, r3
 5061 0668 5EDD     		ble	.L249
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 5062              		.loc 8 611 0
 5063 066a 654A     		ldr	r2, .L282
 5064 066c 1A44     		add	r2, r2, r3
 5065 066e 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 5066 0672 1144     		add	r1, r1, r2
 5067              	.LVL627:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5068              		.loc 8 610 0
 5069 0674 0133     		adds	r3, r3, #1
 5070              	.LVL628:
 5071 0676 F5E7     		b	.L250
 5072              	.LVL629:
 5073              	.L276:
 5074              	.LBE671:
 5075              	.LBE669:
 5076              	.LBE668:
 5077              	.LBB691:
 5078              	.LBB667:
 5079              	.LBB643:
 5080              	.LBB644:
 5081              	.LBB645:
 5082              	.LBB646:
  14:ROSSerial/std_msgs/Time.h ****   {
 5083              		.loc 1 14 0
 5084 0678 634B     		ldr	r3, .L282+8
 5085 067a 0193     		str	r3, [sp, #4]
 5086              	.LVL630:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 130


 5087              	.LBB647:
 5088              	.LBB648:
 5089              	.LBB649:
 5090              		.loc 11 51 0
 5091 067c 0025     		movs	r5, #0
 5092 067e 0295     		str	r5, [sp, #8]
 5093 0680 0395     		str	r5, [sp, #12]
 5094              	.LVL631:
 5095              	.LBE649:
 5096              	.LBE648:
 5097              	.LBE647:
 5098              	.LBE646:
 5099              	.LBE645:
 5100              	.LBB650:
 5101              	.LBB651:
 597:ROSSerial/ros/node_handle.h **** 
 5102              		.loc 8 597 0
 5103 0682 5F4E     		ldr	r6, .L282
 5104 0684 1B68     		ldr	r3, [r3]
 5105 0686 06F21F21 		addw	r1, r6, #543
 5106 068a 01A8     		add	r0, sp, #4
 5107              	.LVL632:
 5108 068c 9847     		blx	r3
 5109              	.LVL633:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5110              		.loc 8 600 0
 5111 068e FF23     		movs	r3, #255
 5112 0690 86F81832 		strb	r3, [r6, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5113              		.loc 8 601 0
 5114 0694 FE23     		movs	r3, #254
 5115 0696 86F81932 		strb	r3, [r6, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5116              		.loc 8 602 0
 5117 069a C3B2     		uxtb	r3, r0
 5118 069c 86F81A32 		strb	r3, [r6, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5119              		.loc 8 603 0
 5120 06a0 C0F30722 		ubfx	r2, r0, #8, #8
 5121 06a4 86F81B22 		strb	r2, [r6, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5122              		.loc 8 604 0
 5123 06a8 1344     		add	r3, r3, r2
 5124 06aa DBB2     		uxtb	r3, r3
 5125 06ac DB43     		mvns	r3, r3
 5126 06ae 86F81C32 		strb	r3, [r6, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5127              		.loc 8 605 0
 5128 06b2 0A23     		movs	r3, #10
 5129 06b4 86F81D32 		strb	r3, [r6, #541]
 606:ROSSerial/ros/node_handle.h **** 
 5130              		.loc 8 606 0
 5131 06b8 86F81E52 		strb	r5, [r6, #542]
 5132              	.LVL634:
 5133              	.LBB652:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5134              		.loc 8 610 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 131


 5135 06bc 0522     		movs	r2, #5
 5136              	.LBE652:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5137              		.loc 8 609 0
 5138 06be 2B46     		mov	r3, r5
 5139 06c0 05E0     		b	.L244
 5140              	.LVL635:
 5141              	.L277:
 5142              	.LBB653:
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 5143              		.loc 8 611 0
 5144 06c2 4F49     		ldr	r1, .L282
 5145 06c4 1144     		add	r1, r1, r2
 5146 06c6 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5147 06ca 0B44     		add	r3, r3, r1
 5148              	.LVL636:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5149              		.loc 8 610 0
 5150 06cc 0132     		adds	r2, r2, #1
 5151              	.LVL637:
 5152              	.L244:
 5153 06ce C11D     		adds	r1, r0, #7
 5154 06d0 9142     		cmp	r1, r2
 5155 06d2 F6DC     		bgt	.L277
 5156              	.LVL638:
 5157              	.LBE653:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 5158              		.loc 8 613 0
 5159 06d4 5A42     		rsbs	r2, r3, #0
 5160              	.LVL639:
 5161 06d6 DBB2     		uxtb	r3, r3
 5162              	.LVL640:
 5163 06d8 D2B2     		uxtb	r2, r2
 5164 06da 58BF     		it	pl
 5165 06dc 5342     		rsbpl	r3, r2, #0
 5166 06de 00F10802 		add	r2, r0, #8
 5167              	.LVL641:
 5168 06e2 DB43     		mvns	r3, r3
 5169 06e4 4648     		ldr	r0, .L282
 5170 06e6 0144     		add	r1, r1, r0
 5171 06e8 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 5172              		.loc 8 615 0
 5173 06ec B2F5007F 		cmp	r2, #512
 5174 06f0 0DDC     		bgt	.L245
 5175              	.LVL642:
 5176              	.LBB654:
 5177              	.LBB655:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 5178              		.loc 10 121 0
 5179 06f2 0A23     		movs	r3, #10
 5180 06f4 92B2     		uxth	r2, r2
 5181              	.LVL643:
 5182 06f6 00F50671 		add	r1, r0, #536
 5183              	.LVL644:
 5184 06fa 4448     		ldr	r0, .L282+12
 5185 06fc FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 132


 5186              	.LVL645:
 5187              	.L246:
 5188              	.LBE655:
 5189              	.LBE654:
 5190              	.LBE651:
 5191              	.LBE650:
 5192              	.LBB662:
 5193              	.LBB663:
 5194              		.loc 10 151 0
 5195 0700 FFF7FEFF 		bl	HAL_GetTick
 5196              	.LVL646:
 5197              	.LBE663:
 5198              	.LBE662:
 415:ROSSerial/ros/node_handle.h ****   }
 5199              		.loc 8 415 0
 5200 0704 3E4B     		ldr	r3, .L282
 5201 0706 9860     		str	r0, [r3, #8]
 5202              	.LVL647:
 5203              	.LBE644:
 5204              	.LBE643:
 394:ROSSerial/ros/node_handle.h ****     }
 5205              		.loc 8 394 0
 5206 0708 C3F82045 		str	r4, [r3, #1312]
 5207 070c 7EE7     		b	.L203
 5208              	.LVL648:
 5209              	.L245:
 5210              	.LBB666:
 5211              	.LBB665:
 5212              	.LBB664:
 5213              	.LBB661:
 5214              	.LBB656:
 5215              	.LBB657:
 5216              	.LBB658:
 5217              	.LBB659:
 5218              	.LBB660:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5219              		.loc 3 13 0
 5220 070e 404B     		ldr	r3, .L282+16
 5221 0710 0493     		str	r3, [sp, #16]
 5222              	.LVL649:
 5223              	.LBE660:
 5224              	.LBE659:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5225              		.loc 8 635 0
 5226 0712 0323     		movs	r3, #3
 5227 0714 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5228              		.loc 8 636 0
 5229 0718 3E4B     		ldr	r3, .L282+20
 5230 071a 0693     		str	r3, [sp, #24]
 5231              		.loc 8 637 0
 5232 071c 04AA     		add	r2, sp, #16
 5233              	.LVL650:
 5234 071e 0721     		movs	r1, #7
 5235              	.LVL651:
 5236 0720 3748     		ldr	r0, .L282
 5237 0722 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 133


 5238              	.LVL652:
 5239 0726 EBE7     		b	.L246
 5240              	.LVL653:
 5241              	.L249:
 5242              	.LBE658:
 5243              	.LBE657:
 5244              	.LBE656:
 5245              	.LBE661:
 5246              	.LBE664:
 5247              	.LBE665:
 5248              	.LBE666:
 5249              	.LBE667:
 5250              	.LBE691:
 5251              	.LBB692:
 5252              	.LBB689:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 5253              		.loc 8 613 0
 5254 0728 4B42     		rsbs	r3, r1, #0
 5255              	.LVL654:
 5256 072a C9B2     		uxtb	r1, r1
 5257              	.LVL655:
 5258 072c DBB2     		uxtb	r3, r3
 5259 072e 58BF     		it	pl
 5260 0730 5942     		rsbpl	r1, r3, #0
 5261 0732 00F10802 		add	r2, r0, #8
 5262              	.LVL656:
 5263 0736 C943     		mvns	r1, r1
 5264 0738 314B     		ldr	r3, .L282
 5265 073a 1C44     		add	r4, r4, r3
 5266 073c 84F81812 		strb	r1, [r4, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 5267              		.loc 8 615 0
 5268 0740 B2F5007F 		cmp	r2, #512
 5269 0744 08DC     		bgt	.L251
 5270              	.LVL657:
 5271              	.LBB672:
 5272              	.LBB673:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 5273              		.loc 10 121 0
 5274 0746 0A23     		movs	r3, #10
 5275 0748 92B2     		uxth	r2, r2
 5276              	.LVL658:
 5277 074a 3349     		ldr	r1, .L282+24
 5278 074c 2F48     		ldr	r0, .L282+12
 5279              	.LVL659:
 5280 074e FFF7FEFF 		bl	HAL_UART_Transmit
 5281              	.LVL660:
 5282              	.L198:
 5283              	.LBE673:
 5284              	.LBE672:
 5285              	.LBE689:
 5286              	.LBE692:
 5287              		.loc 7 78 0
 5288 0752 24B0     		add	sp, sp, #144
 5289              	.LCFI30:
 5290              		.cfi_remember_state
 5291              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 134


 5292              		@ sp needed
 5293 0754 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5294              	.LVL661:
 5295              	.L251:
 5296              	.LCFI31:
 5297              		.cfi_restore_state
 5298              	.LBB693:
 5299              	.LBB690:
 5300              	.LBB674:
 5301              	.LBB675:
 5302              	.LBB676:
 5303              	.LBB677:
 5304              	.LBB678:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5305              		.loc 3 13 0
 5306 0758 2D4B     		ldr	r3, .L282+16
 5307 075a 0193     		str	r3, [sp, #4]
 5308              	.LVL662:
 5309              	.LBE678:
 5310              	.LBE677:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5311              		.loc 8 635 0
 5312 075c 0322     		movs	r2, #3
 5313              	.LVL663:
 5314 075e 8DF80820 		strb	r2, [sp, #8]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5315              		.loc 8 636 0
 5316 0762 2C4A     		ldr	r2, .L282+20
 5317 0764 0392     		str	r2, [sp, #12]
 5318              	.LVL664:
 5319              	.LBB679:
 5320              	.LBB680:
 597:ROSSerial/ros/node_handle.h **** 
 5321              		.loc 8 597 0
 5322 0766 264C     		ldr	r4, .L282
 5323 0768 1B68     		ldr	r3, [r3]
 5324 076a 04F21F21 		addw	r1, r4, #543
 5325 076e 01A8     		add	r0, sp, #4
 5326              	.LVL665:
 5327 0770 9847     		blx	r3
 5328              	.LVL666:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5329              		.loc 8 600 0
 5330 0772 FF23     		movs	r3, #255
 5331 0774 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5332              		.loc 8 601 0
 5333 0778 FE23     		movs	r3, #254
 5334 077a 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5335              		.loc 8 602 0
 5336 077e C3B2     		uxtb	r3, r0
 5337 0780 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5338              		.loc 8 603 0
 5339 0784 C0F30722 		ubfx	r2, r0, #8, #8
 5340 0788 84F81B22 		strb	r2, [r4, #539]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 135


 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5341              		.loc 8 604 0
 5342 078c 1344     		add	r3, r3, r2
 5343 078e DBB2     		uxtb	r3, r3
 5344 0790 DB43     		mvns	r3, r3
 5345 0792 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5346              		.loc 8 605 0
 5347 0796 0723     		movs	r3, #7
 5348 0798 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 5349              		.loc 8 606 0
 5350 079c 0023     		movs	r3, #0
 5351 079e 84F81E32 		strb	r3, [r4, #542]
 5352              	.LVL667:
 5353              	.LBB681:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5354              		.loc 8 610 0
 5355 07a2 0522     		movs	r2, #5
 5356              	.LVL668:
 5357              	.L253:
 5358 07a4 C11D     		adds	r1, r0, #7
 5359 07a6 9142     		cmp	r1, r2
 5360 07a8 06DD     		ble	.L252
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 5361              		.loc 8 611 0
 5362 07aa 1549     		ldr	r1, .L282
 5363 07ac 1144     		add	r1, r1, r2
 5364 07ae 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5365 07b2 0B44     		add	r3, r3, r1
 5366              	.LVL669:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5367              		.loc 8 610 0
 5368 07b4 0132     		adds	r2, r2, #1
 5369              	.LVL670:
 5370 07b6 F5E7     		b	.L253
 5371              	.L252:
 5372              	.LVL671:
 5373              	.LBE681:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 5374              		.loc 8 613 0
 5375 07b8 5A42     		rsbs	r2, r3, #0
 5376              	.LVL672:
 5377 07ba DBB2     		uxtb	r3, r3
 5378              	.LVL673:
 5379 07bc D2B2     		uxtb	r2, r2
 5380 07be 58BF     		it	pl
 5381 07c0 5342     		rsbpl	r3, r2, #0
 5382 07c2 00F10802 		add	r2, r0, #8
 5383              	.LVL674:
 5384 07c6 DB43     		mvns	r3, r3
 5385 07c8 0D48     		ldr	r0, .L282
 5386 07ca 0144     		add	r1, r1, r0
 5387 07cc 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 5388              		.loc 8 615 0
 5389 07d0 B2F5007F 		cmp	r2, #512
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 136


 5390 07d4 07DC     		bgt	.L254
 5391              	.LVL675:
 5392              	.LBB682:
 5393              	.LBB683:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 5394              		.loc 10 121 0
 5395 07d6 0A23     		movs	r3, #10
 5396 07d8 92B2     		uxth	r2, r2
 5397              	.LVL676:
 5398 07da 00F50671 		add	r1, r0, #536
 5399              	.LVL677:
 5400 07de 0B48     		ldr	r0, .L282+12
 5401 07e0 FFF7FEFF 		bl	HAL_UART_Transmit
 5402              	.LVL678:
 5403 07e4 B5E7     		b	.L198
 5404              	.LVL679:
 5405              	.L254:
 5406              	.LBE683:
 5407              	.LBE682:
 5408              	.LBB684:
 5409              	.LBB685:
 5410              	.LBB686:
 5411              	.LBB687:
 5412              	.LBB688:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5413              		.loc 3 13 0
 5414 07e6 0A4B     		ldr	r3, .L282+16
 5415 07e8 0493     		str	r3, [sp, #16]
 5416              	.LVL680:
 5417              	.LBE688:
 5418              	.LBE687:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5419              		.loc 8 635 0
 5420 07ea 0323     		movs	r3, #3
 5421 07ec 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5422              		.loc 8 636 0
 5423 07f0 084B     		ldr	r3, .L282+20
 5424 07f2 0693     		str	r3, [sp, #24]
 5425              		.loc 8 637 0
 5426 07f4 04AA     		add	r2, sp, #16
 5427              	.LVL681:
 5428 07f6 0721     		movs	r1, #7
 5429              	.LVL682:
 5430 07f8 0148     		ldr	r0, .L282
 5431 07fa FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5432              	.LVL683:
 5433              	.LBE686:
 5434              	.LBE685:
 5435              	.LBE684:
 5436              	.LBE680:
 5437              	.LBE679:
 5438              	.LBE676:
 5439              	.LBE675:
 5440              	.LBE674:
 5441              	.LBE690:
 5442              	.LBE693:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 137


 5443              		.loc 7 78 0
 5444 07fe A8E7     		b	.L198
 5445              	.L283:
 5446              		.align	2
 5447              	.L282:
 5448 0800 00000000 		.word	.LANCHOR1
 5449 0804 00000000 		.word	.LANCHOR2
 5450 0808 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5451 080c 00000000 		.word	huart2
 5452 0810 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5453 0814 00000000 		.word	.LC16
 5454 0818 18020000 		.word	.LANCHOR1+536
 5455              		.cfi_endproc
 5456              	.LFE492:
 5457              		.fnend
 5459              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 5460              		.align	1
 5461              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5462              		.syntax unified
 5463              		.thumb
 5464              		.thumb_func
 5465              		.fpu fpv4-sp-d16
 5467              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 5468              		.fnstart
 5469              	.LFB525:
 238:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 5470              		.loc 8 238 0
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 40
 5473              		@ frame_needed = 0, uses_anonymous_args = 0
 5474              	.LVL684:
 5475 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5476              		.save {r4, r5, r6, r7, r8, r9, lr}
 5477              	.LCFI32:
 5478              		.cfi_def_cfa_offset 28
 5479              		.cfi_offset 4, -28
 5480              		.cfi_offset 5, -24
 5481              		.cfi_offset 6, -20
 5482              		.cfi_offset 7, -16
 5483              		.cfi_offset 8, -12
 5484              		.cfi_offset 9, -8
 5485              		.cfi_offset 14, -4
 5486              		.pad #44
 5487 0004 8BB0     		sub	sp, sp, #44
 5488              	.LCFI33:
 5489              		.cfi_def_cfa_offset 72
 5490 0006 0446     		mov	r4, r0
 5491              	.LVL685:
 5492              	.LBB779:
 5493              	.LBB780:
 5494              	.LBB781:
 5495              	.LBB782:
 5496              		.loc 10 151 0
 5497 0008 FFF7FEFF 		bl	HAL_GetTick
 5498              	.LVL686:
 5499 000c 0546     		mov	r5, r0
 5500              	.LVL687:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 138


 5501              	.LBE782:
 5502              	.LBE781:
 252:ROSSerial/ros/node_handle.h ****     {
 5503              		.loc 8 252 0
 5504 000e D4F82435 		ldr	r3, [r4, #1316]
 5505 0012 C31A     		subs	r3, r0, r3
 5506 0014 42F6F822 		movw	r2, #11000
 5507 0018 9342     		cmp	r3, r2
 5508 001a 02D9     		bls	.L285
 254:ROSSerial/ros/node_handle.h ****     }
 5509              		.loc 8 254 0
 5510 001c 0023     		movs	r3, #0
 5511 001e 84F81C35 		strb	r3, [r4, #1308]
 5512              	.L285:
 258:ROSSerial/ros/node_handle.h ****     {
 5513              		.loc 8 258 0
 5514 0022 D4F80835 		ldr	r3, [r4, #1288]
 5515 0026 002B     		cmp	r3, #0
 5516 0028 46D0     		beq	.L287
 260:ROSSerial/ros/node_handle.h ****       {
 5517              		.loc 8 260 0
 5518 002a D4F82835 		ldr	r3, [r4, #1320]
 5519 002e 9D42     		cmp	r5, r3
 5520 0030 42D9     		bls	.L287
 262:ROSSerial/ros/node_handle.h ****       }
 5521              		.loc 8 262 0
 5522 0032 0023     		movs	r3, #0
 5523 0034 C4F80835 		str	r3, [r4, #1288]
 5524 0038 3EE0     		b	.L287
 5525              	.LVL688:
 5526              	.L339:
 5527              	.LBB783:
 5528              	.LBB784:
 5529              	.LBB785:
  84:ROSSerial/AT32hardware.h **** 		}
 5530              		.loc 10 84 0
 5531 003a 591C     		adds	r1, r3, #1
 5532 003c C44A     		ldr	r2, .L358
 5533 003e 1170     		strb	r1, [r2]
 5534 0040 C44A     		ldr	r2, .L358+4
 5535 0042 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 5536              	.LVL689:
 5537              	.L291:
 5538              	.LBE785:
 5539              	.LBE784:
 283:ROSSerial/ros/node_handle.h ****         break;
 5540              		.loc 8 283 0
 5541 0044 0029     		cmp	r1, #0
 5542 0046 C0F27F82 		blt	.L292
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 5543              		.loc 8 285 0
 5544 004a D4F81825 		ldr	r2, [r4, #1304]
 5545 004e 0A44     		add	r2, r2, r1
 5546 0050 C4F81825 		str	r2, [r4, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 5547              		.loc 8 286 0
 5548 0054 D4F80835 		ldr	r3, [r4, #1288]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 139


 5549 0058 072B     		cmp	r3, #7
 5550 005a 1DD0     		beq	.L338
 293:ROSSerial/ros/node_handle.h ****       {
 5551              		.loc 8 293 0
 5552 005c 002B     		cmp	r3, #0
 5553 005e 4CD1     		bne	.L295
 295:ROSSerial/ros/node_handle.h ****         {
 5554              		.loc 8 295 0
 5555 0060 FF29     		cmp	r1, #255
 5556 0062 3DD1     		bne	.L296
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 5557              		.loc 8 297 0
 5558 0064 0133     		adds	r3, r3, #1
 5559 0066 C4F80835 		str	r3, [r4, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 5560              		.loc 8 298 0
 5561 006a 05F11403 		add	r3, r5, #20
 5562 006e C4F82835 		str	r3, [r4, #1320]
 5563 0072 21E0     		b	.L287
 5564              	.LVL690:
 5565              	.L340:
 5566              	.LBB788:
 5567              	.LBB786:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 5568              		.loc 10 88 0
 5569 0074 0023     		movs	r3, #0
 5570 0076 B64A     		ldr	r2, .L358
 5571 0078 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 5572              		.loc 10 89 0
 5573 007a B74A     		ldr	r2, .L358+8
 5574 007c 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 5575              		.loc 10 90 0
 5576 007e B748     		ldr	r0, .L358+12
 5577 0080 0268     		ldr	r2, [r0]
 5578 0082 D368     		ldr	r3, [r2, #12]
 5579 0084 43F04003 		orr	r3, r3, #64
 5580 0088 D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 5581              		.loc 10 91 0
 5582 008a 0122     		movs	r2, #1
 5583 008c B449     		ldr	r1, .L358+16
 5584 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 5585              	.LVL691:
  80:ROSSerial/AT32hardware.h **** 		
 5586              		.loc 10 80 0
 5587 0092 4FF0FF31 		mov	r1, #-1
 5588 0096 D5E7     		b	.L291
 5589              	.LVL692:
 5590              	.L338:
 5591              	.LBE786:
 5592              	.LBE788:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 5593              		.loc 8 288 0
 5594 0098 D4F81435 		ldr	r3, [r4, #1300]
 5595 009c 5A1C     		adds	r2, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 140


 5596 009e C4F81425 		str	r2, [r4, #1300]
 5597 00a2 2344     		add	r3, r3, r4
 5598 00a4 1976     		strb	r1, [r3, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 5599              		.loc 8 289 0
 5600 00a6 D4F80C35 		ldr	r3, [r4, #1292]
 5601 00aa 013B     		subs	r3, r3, #1
 5602 00ac C4F80C35 		str	r3, [r4, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5603              		.loc 8 290 0
 5604 00b0 13B9     		cbnz	r3, .L287
 291:ROSSerial/ros/node_handle.h ****       }
 5605              		.loc 8 291 0
 5606 00b2 0823     		movs	r3, #8
 5607 00b4 C4F80835 		str	r3, [r4, #1288]
 5608              	.L287:
 270:ROSSerial/ros/node_handle.h ****       {
 5609              		.loc 8 270 0
 5610 00b8 6369     		ldr	r3, [r4, #20]
 5611 00ba 33B1     		cbz	r3, .L288
 5612              	.LVL693:
 5613              	.LBB789:
 5614              	.LBB790:
 5615              		.loc 10 151 0
 5616 00bc FFF7FEFF 		bl	HAL_GetTick
 5617              	.LVL694:
 5618              	.LBE790:
 5619              	.LBE789:
 276:ROSSerial/ros/node_handle.h ****         {
 5620              		.loc 8 276 0
 5621 00c0 401B     		subs	r0, r0, r5
 5622 00c2 6369     		ldr	r3, [r4, #20]
 5623 00c4 9842     		cmp	r0, r3
 5624 00c6 00F2A182 		bhi	.L333
 5625              	.L288:
 5626              	.LVL695:
 5627              	.LBB791:
 5628              	.LBB787:
  82:ROSSerial/AT32hardware.h **** 		{
 5629              		.loc 10 82 0
 5630 00ca A14B     		ldr	r3, .L358
 5631 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5632 00ce A24A     		ldr	r2, .L358+8
 5633 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5634 00d2 9342     		cmp	r3, r2
 5635 00d4 B1D3     		bcc	.L339
  86:ROSSerial/AT32hardware.h **** 		{
 5636              		.loc 10 86 0
 5637 00d6 9342     		cmp	r3, r2
 5638 00d8 CCD0     		beq	.L340
  80:ROSSerial/AT32hardware.h **** 		
 5639              		.loc 10 80 0
 5640 00da 4FF0FF31 		mov	r1, #-1
 5641 00de B1E7     		b	.L291
 5642              	.LVL696:
 5643              	.L296:
 5644              	.LBE787:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 141


 5645              	.LBE791:
 5646              	.LBB792:
 5647              	.LBB793:
 5648              		.loc 10 151 0
 5649 00e0 FFF7FEFF 		bl	HAL_GetTick
 5650              	.LVL697:
 5651              	.LBE793:
 5652              	.LBE792:
 300:ROSSerial/ros/node_handle.h ****         {
 5653              		.loc 8 300 0
 5654 00e4 401B     		subs	r0, r0, r5
 5655 00e6 41F28833 		movw	r3, #5000
 5656 00ea 9842     		cmp	r0, r3
 5657 00ec E4D9     		bls	.L287
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 5658              		.loc 8 303 0
 5659 00ee 0023     		movs	r3, #0
 5660 00f0 84F81C35 		strb	r3, [r4, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 5661              		.loc 8 304 0
 5662 00f4 6FF00100 		mvn	r0, #1
 5663 00f8 8AE2     		b	.L284
 5664              	.L295:
 307:ROSSerial/ros/node_handle.h ****       {
 5665              		.loc 8 307 0
 5666 00fa 012B     		cmp	r3, #1
 5667 00fc 3DD0     		beq	.L341
 320:ROSSerial/ros/node_handle.h ****       {
 5668              		.loc 8 320 0
 5669 00fe 022B     		cmp	r3, #2
 5670 0100 00F09A80 		beq	.L342
 327:ROSSerial/ros/node_handle.h ****       {
 5671              		.loc 8 327 0
 5672 0104 032B     		cmp	r3, #3
 5673 0106 00F0A280 		beq	.L343
 332:ROSSerial/ros/node_handle.h ****       {
 5674              		.loc 8 332 0
 5675 010a 042B     		cmp	r3, #4
 5676 010c 00F0A980 		beq	.L344
 339:ROSSerial/ros/node_handle.h ****       {
 5677              		.loc 8 339 0
 5678 0110 052B     		cmp	r3, #5
 5679 0112 00F0B580 		beq	.L345
 345:ROSSerial/ros/node_handle.h ****       {
 5680              		.loc 8 345 0
 5681 0116 062B     		cmp	r3, #6
 5682 0118 00F0BA80 		beq	.L346
 352:ROSSerial/ros/node_handle.h ****       {
 5683              		.loc 8 352 0
 5684 011c 082B     		cmp	r3, #8
 5685 011e CBD1     		bne	.L287
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 5686              		.loc 8 354 0
 5687 0120 0023     		movs	r3, #0
 5688 0122 C4F80835 		str	r3, [r4, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 5689              		.loc 8 355 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 142


 5690 0126 9B1A     		subs	r3, r3, r2
 5691 0128 D2B2     		uxtb	r2, r2
 5692 012a DBB2     		uxtb	r3, r3
 5693 012c 58BF     		it	pl
 5694 012e 5A42     		rsbpl	r2, r3, #0
 5695 0130 FF2A     		cmp	r2, #255
 5696 0132 C1D1     		bne	.L287
 357:ROSSerial/ros/node_handle.h ****           {
 5697              		.loc 8 357 0
 5698 0134 D4F81065 		ldr	r6, [r4, #1296]
 5699 0138 002E     		cmp	r6, #0
 5700 013a 00F0BB80 		beq	.L347
 365:ROSSerial/ros/node_handle.h ****           {
 5701              		.loc 8 365 0
 5702 013e 0A2E     		cmp	r6, #10
 5703 0140 00F02481 		beq	.L348
 369:ROSSerial/ros/node_handle.h ****           {
 5704              		.loc 8 369 0
 5705 0144 062E     		cmp	r6, #6
 5706 0146 00F06681 		beq	.L349
 374:ROSSerial/ros/node_handle.h ****           {
 5707              		.loc 8 374 0
 5708 014a 0B2E     		cmp	r6, #11
 5709 014c 00F0F881 		beq	.L350
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 5710              		.loc 8 380 0
 5711 0150 643E     		subs	r6, r6, #100
 5712 0152 06EB8603 		add	r3, r6, r6, lsl #2
 5713 0156 04EB8303 		add	r3, r4, r3, lsl #2
 5714 015a B3F8A434 		ldrh	r3, [r3, #1188]
 5715 015e 002B     		cmp	r3, #0
 5716 0160 AAD0     		beq	.L287
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 5717              		.loc 8 381 0
 5718 0162 06EB8606 		add	r6, r6, r6, lsl #2
 5719 0166 04EB8606 		add	r6, r4, r6, lsl #2
 5720 016a D6F8B434 		ldr	r3, [r6, #1204]
 5721 016e 7D4A     		ldr	r2, .L358+20
 5722 0170 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 5723              		.loc 8 383 0
 5724 0172 04F11800 		add	r0, r4, #24
 5725 0176 9847     		blx	r3
 5726              	.LVL698:
 5727 0178 9EE7     		b	.L287
 5728              	.L341:
 309:ROSSerial/ros/node_handle.h ****         {
 5729              		.loc 8 309 0
 5730 017a FE29     		cmp	r1, #254
 5731 017c 32D0     		beq	.L351
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 5732              		.loc 8 315 0
 5733 017e 0023     		movs	r3, #0
 5734 0180 C4F80835 		str	r3, [r4, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 5735              		.loc 8 316 0
 5736 0184 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 143


 5737 0188 002B     		cmp	r3, #0
 5738 018a 95D1     		bne	.L287
 5739              	.LVL699:
 5740              	.LBB794:
 5741              	.LBB795:
 5742              	.LBB796:
 5743              	.LBB797:
  14:ROSSerial/std_msgs/Time.h ****   {
 5744              		.loc 1 14 0
 5745 018c 764B     		ldr	r3, .L358+24
 5746 018e 0193     		str	r3, [sp, #4]
 5747              	.LVL700:
 5748              	.LBB798:
 5749              	.LBB799:
 5750              	.LBB800:
 5751              		.loc 11 51 0
 5752 0190 0026     		movs	r6, #0
 5753 0192 0296     		str	r6, [sp, #8]
 5754 0194 0396     		str	r6, [sp, #12]
 5755              	.LVL701:
 5756              	.LBE800:
 5757              	.LBE799:
 5758              	.LBE798:
 5759              	.LBE797:
 5760              	.LBE796:
 5761              	.LBB801:
 5762              	.LBB802:
 597:ROSSerial/ros/node_handle.h **** 
 5763              		.loc 8 597 0
 5764 0196 1B68     		ldr	r3, [r3]
 5765 0198 04F21F21 		addw	r1, r4, #543
 5766 019c 01A8     		add	r0, sp, #4
 5767              	.LVL702:
 5768 019e 9847     		blx	r3
 5769              	.LVL703:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5770              		.loc 8 600 0
 5771 01a0 FF23     		movs	r3, #255
 5772 01a2 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5773              		.loc 8 601 0
 5774 01a6 FE23     		movs	r3, #254
 5775 01a8 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5776              		.loc 8 602 0
 5777 01ac C3B2     		uxtb	r3, r0
 5778 01ae 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5779              		.loc 8 603 0
 5780 01b2 C0F30722 		ubfx	r2, r0, #8, #8
 5781 01b6 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5782              		.loc 8 604 0
 5783 01ba 1344     		add	r3, r3, r2
 5784 01bc DBB2     		uxtb	r3, r3
 5785 01be DB43     		mvns	r3, r3
 5786 01c0 84F81C32 		strb	r3, [r4, #540]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 144


 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5787              		.loc 8 605 0
 5788 01c4 0A23     		movs	r3, #10
 5789 01c6 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 5790              		.loc 8 606 0
 5791 01ca 84F81E62 		strb	r6, [r4, #542]
 5792              	.LVL704:
 5793              	.LBB803:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5794              		.loc 8 610 0
 5795 01ce 0522     		movs	r2, #5
 5796              	.LBE803:
 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5797              		.loc 8 609 0
 5798 01d0 3346     		mov	r3, r6
 5799              	.LVL705:
 5800              	.L300:
 5801              	.LBB804:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5802              		.loc 8 610 0
 5803 01d2 C11D     		adds	r1, r0, #7
 5804 01d4 9142     		cmp	r1, r2
 5805 01d6 09DD     		ble	.L299
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 5806              		.loc 8 611 0
 5807 01d8 A118     		adds	r1, r4, r2
 5808 01da 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5809 01de 0B44     		add	r3, r3, r1
 5810              	.LVL706:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5811              		.loc 8 610 0
 5812 01e0 0132     		adds	r2, r2, #1
 5813              	.LVL707:
 5814 01e2 F6E7     		b	.L300
 5815              	.LVL708:
 5816              	.L351:
 5817              	.LBE804:
 5818              	.LBE802:
 5819              	.LBE801:
 5820              	.LBE795:
 5821              	.LBE794:
 311:ROSSerial/ros/node_handle.h ****         }
 5822              		.loc 8 311 0
 5823 01e4 0133     		adds	r3, r3, #1
 5824 01e6 C4F80835 		str	r3, [r4, #1288]
 5825 01ea 65E7     		b	.L287
 5826              	.LVL709:
 5827              	.L299:
 5828              	.LBB819:
 5829              	.LBB818:
 5830              	.LBB814:
 5831              	.LBB812:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 5832              		.loc 8 613 0
 5833 01ec 5A42     		rsbs	r2, r3, #0
 5834              	.LVL710:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 145


 5835 01ee DBB2     		uxtb	r3, r3
 5836              	.LVL711:
 5837 01f0 D2B2     		uxtb	r2, r2
 5838 01f2 58BF     		it	pl
 5839 01f4 5342     		rsbpl	r3, r2, #0
 5840 01f6 00F10802 		add	r2, r0, #8
 5841              	.LVL712:
 5842 01fa DB43     		mvns	r3, r3
 5843 01fc 2144     		add	r1, r1, r4
 5844 01fe 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 5845              		.loc 8 615 0
 5846 0202 B2F5007F 		cmp	r2, #512
 5847 0206 0ADC     		bgt	.L301
 5848              	.LVL713:
 5849              	.LBB805:
 5850              	.LBB806:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 5851              		.loc 10 121 0
 5852 0208 0A23     		movs	r3, #10
 5853 020a 92B2     		uxth	r2, r2
 5854              	.LVL714:
 5855 020c 04F50671 		add	r1, r4, #536
 5856              	.LVL715:
 5857 0210 5248     		ldr	r0, .L358+12
 5858              	.LVL716:
 5859 0212 FFF7FEFF 		bl	HAL_UART_Transmit
 5860              	.LVL717:
 5861              	.L302:
 5862              	.LBE806:
 5863              	.LBE805:
 5864              	.LBE812:
 5865              	.LBE814:
 5866              	.LBB815:
 5867              	.LBB816:
 5868              		.loc 10 151 0
 5869 0216 FFF7FEFF 		bl	HAL_GetTick
 5870              	.LVL718:
 5871              	.LBE816:
 5872              	.LBE815:
 415:ROSSerial/ros/node_handle.h ****   }
 5873              		.loc 8 415 0
 5874 021a A060     		str	r0, [r4, #8]
 5875 021c 4CE7     		b	.L287
 5876              	.LVL719:
 5877              	.L301:
 5878              	.LBB817:
 5879              	.LBB813:
 5880              	.LBB807:
 5881              	.LBB808:
 5882              	.LBB809:
 5883              	.LBB810:
 5884              	.LBB811:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5885              		.loc 3 13 0
 5886 021e 534B     		ldr	r3, .L358+28
 5887 0220 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 146


 5888              	.LVL720:
 5889              	.LBE811:
 5890              	.LBE810:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5891              		.loc 8 635 0
 5892 0222 0323     		movs	r3, #3
 5893 0224 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5894              		.loc 8 636 0
 5895 0228 514B     		ldr	r3, .L358+32
 5896 022a 0693     		str	r3, [sp, #24]
 5897              		.loc 8 637 0
 5898 022c 04AA     		add	r2, sp, #16
 5899              	.LVL721:
 5900 022e 0721     		movs	r1, #7
 5901 0230 2046     		mov	r0, r4
 5902              	.LVL722:
 5903 0232 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5904              	.LVL723:
 5905 0236 EEE7     		b	.L302
 5906              	.LVL724:
 5907              	.L342:
 5908              	.LBE809:
 5909              	.LBE808:
 5910              	.LBE807:
 5911              	.LBE813:
 5912              	.LBE817:
 5913              	.LBE818:
 5914              	.LBE819:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5915              		.loc 8 322 0
 5916 0238 C4F80C15 		str	r1, [r4, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 5917              		.loc 8 323 0
 5918 023c 0022     		movs	r2, #0
 5919 023e C4F81425 		str	r2, [r4, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5920              		.loc 8 324 0
 5921 0242 0133     		adds	r3, r3, #1
 5922 0244 C4F80835 		str	r3, [r4, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 5923              		.loc 8 325 0
 5924 0248 C4F81815 		str	r1, [r4, #1304]
 5925 024c 34E7     		b	.L287
 5926              	.L343:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 5927              		.loc 8 329 0
 5928 024e D4F80C25 		ldr	r2, [r4, #1292]
 5929 0252 02EB0121 		add	r1, r2, r1, lsl #8
 5930 0256 C4F80C15 		str	r1, [r4, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 5931              		.loc 8 330 0
 5932 025a 0133     		adds	r3, r3, #1
 5933 025c C4F80835 		str	r3, [r4, #1288]
 5934 0260 2AE7     		b	.L287
 5935              	.L344:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 147


 5936              		.loc 8 334 0
 5937 0262 5142     		rsbs	r1, r2, #0
 5938 0264 D2B2     		uxtb	r2, r2
 5939 0266 C9B2     		uxtb	r1, r1
 5940 0268 58BF     		it	pl
 5941 026a 4A42     		rsbpl	r2, r1, #0
 5942 026c FF2A     		cmp	r2, #255
 5943 026e 03D0     		beq	.L352
 337:ROSSerial/ros/node_handle.h ****       }
 5944              		.loc 8 337 0
 5945 0270 0023     		movs	r3, #0
 5946 0272 C4F80835 		str	r3, [r4, #1288]
 5947 0276 1FE7     		b	.L287
 5948              	.L352:
 335:ROSSerial/ros/node_handle.h ****         else
 5949              		.loc 8 335 0
 5950 0278 0133     		adds	r3, r3, #1
 5951 027a C4F80835 		str	r3, [r4, #1288]
 5952 027e 1BE7     		b	.L287
 5953              	.L345:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 5954              		.loc 8 341 0
 5955 0280 C4F81015 		str	r1, [r4, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5956              		.loc 8 342 0
 5957 0284 0133     		adds	r3, r3, #1
 5958 0286 C4F80835 		str	r3, [r4, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 5959              		.loc 8 343 0
 5960 028a C4F81815 		str	r1, [r4, #1304]
 5961 028e 13E7     		b	.L287
 5962              	.L346:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5963              		.loc 8 347 0
 5964 0290 D4F81035 		ldr	r3, [r4, #1296]
 5965 0294 03EB0123 		add	r3, r3, r1, lsl #8
 5966 0298 C4F81035 		str	r3, [r4, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5967              		.loc 8 348 0
 5968 029c 0723     		movs	r3, #7
 5969 029e C4F80835 		str	r3, [r4, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5970              		.loc 8 349 0
 5971 02a2 D4F80C35 		ldr	r3, [r4, #1292]
 5972 02a6 002B     		cmp	r3, #0
 5973 02a8 7FF406AF 		bne	.L287
 350:ROSSerial/ros/node_handle.h ****       }
 5974              		.loc 8 350 0
 5975 02ac 0823     		movs	r3, #8
 5976 02ae C4F80835 		str	r3, [r4, #1288]
 5977 02b2 01E7     		b	.L287
 5978              	.L347:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 5979              		.loc 8 359 0
 5980 02b4 2046     		mov	r0, r4
 5981 02b6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 5982              	.LVL725:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 148


 5983              	.LBB820:
 5984              	.LBB821:
 5985              	.LBB822:
 5986              	.LBB823:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 5987              		.loc 2 12 0
 5988 02ba 2E4B     		ldr	r3, .L358+36
 5989 02bc 0493     		str	r3, [sp, #16]
 5990              	.LVL726:
 5991              	.LBE823:
 5992              	.LBE822:
 558:ROSSerial/ros/node_handle.h ****     {
 5993              		.loc 8 558 0
 5994 02be 3746     		mov	r7, r6
 5995 02c0 00E0     		b	.L312
 5996              	.LVL727:
 5997              	.L311:
 5998 02c2 0137     		adds	r7, r7, #1
 5999              	.LVL728:
 6000              	.L312:
 6001 02c4 042F     		cmp	r7, #4
 6002 02c6 20DC     		bgt	.L310
 560:ROSSerial/ros/node_handle.h ****       {
 6003              		.loc 8 560 0
 6004 02c8 07EB8703 		add	r3, r7, r7, lsl #2
 6005 02cc 04EB8303 		add	r3, r4, r3, lsl #2
 6006 02d0 B3F82C34 		ldrh	r3, [r3, #1068]
 6007 02d4 002B     		cmp	r3, #0
 6008 02d6 F4D0     		beq	.L311
 562:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 6009              		.loc 8 562 0
 6010 02d8 ADF81430 		strh	r3, [sp, #20]	@ movhi
 563:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 6011              		.loc 8 563 0
 6012 02dc 07EB8703 		add	r3, r7, r7, lsl #2
 6013 02e0 04EB8303 		add	r3, r4, r3, lsl #2
 6014 02e4 D3F83024 		ldr	r2, [r3, #1072]
 6015 02e8 0692     		str	r2, [sp, #24]
 564:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 6016              		.loc 8 564 0
 6017 02ea D3F83824 		ldr	r2, [r3, #1080]
 6018 02ee 0792     		str	r2, [sp, #28]
 565:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 6019              		.loc 8 565 0
 6020 02f0 D3F83C34 		ldr	r3, [r3, #1084]
 6021 02f4 0893     		str	r3, [sp, #32]
 566:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 6022              		.loc 8 566 0
 6023 02f6 4FF40073 		mov	r3, #512
 6024 02fa 0993     		str	r3, [sp, #36]
 567:ROSSerial/ros/node_handle.h ****       }
 6025              		.loc 8 567 0
 6026 02fc 04AA     		add	r2, sp, #16
 6027 02fe 0021     		movs	r1, #0
 6028 0300 2046     		mov	r0, r4
 6029 0302 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6030              	.LVL729:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 149


 6031 0306 DCE7     		b	.L311
 6032              	.LVL730:
 6033              	.L314:
 570:ROSSerial/ros/node_handle.h ****     {
 6034              		.loc 8 570 0
 6035 0308 0136     		adds	r6, r6, #1
 6036              	.LVL731:
 6037              	.L310:
 6038 030a 042E     		cmp	r6, #4
 6039 030c 34DC     		bgt	.L313
 572:ROSSerial/ros/node_handle.h ****       {
 6040              		.loc 8 572 0
 6041 030e 06EB8603 		add	r3, r6, r6, lsl #2
 6042 0312 04EB8303 		add	r3, r4, r3, lsl #2
 6043 0316 B3F8A434 		ldrh	r3, [r3, #1188]
 6044 031a 002B     		cmp	r3, #0
 6045 031c F4D0     		beq	.L314
 574:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 6046              		.loc 8 574 0
 6047 031e ADF81430 		strh	r3, [sp, #20]	@ movhi
 575:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 6048              		.loc 8 575 0
 6049 0322 06EB8603 		add	r3, r6, r6, lsl #2
 6050 0326 04EB8303 		add	r3, r4, r3, lsl #2
 6051 032a D3F8A824 		ldr	r2, [r3, #1192]
 6052 032e 0692     		str	r2, [sp, #24]
 576:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 6053              		.loc 8 576 0
 6054 0330 D3F8AC24 		ldr	r2, [r3, #1196]
 6055 0334 0792     		str	r2, [sp, #28]
 577:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 6056              		.loc 8 577 0
 6057 0336 D3F8B034 		ldr	r3, [r3, #1200]
 6058 033a 0893     		str	r3, [sp, #32]
 578:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 6059              		.loc 8 578 0
 6060 033c 4FF40073 		mov	r3, #512
 6061 0340 0993     		str	r3, [sp, #36]
 579:ROSSerial/ros/node_handle.h ****       }
 6062              		.loc 8 579 0
 6063 0342 04AA     		add	r2, sp, #16
 6064 0344 0121     		movs	r1, #1
 6065 0346 2046     		mov	r0, r4
 6066 0348 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6067              	.LVL732:
 6068 034c DCE7     		b	.L314
 6069              	.L359:
 6070 034e 00BF     		.align	2
 6071              	.L358:
 6072 0350 00000000 		.word	g_RxRead
 6073 0354 00000000 		.word	g_RxBuf
 6074 0358 00000000 		.word	g_RxWritten
 6075 035c 00000000 		.word	huart2
 6076 0360 00000000 		.word	byte
 6077 0364 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 6078 0368 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6079 036c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 150


 6080 0370 00000000 		.word	.LC16
 6081 0374 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6082              	.L313:
 582:ROSSerial/ros/node_handle.h ****   }
 6083              		.loc 8 582 0
 6084 0378 0123     		movs	r3, #1
 6085 037a 84F81C35 		strb	r3, [r4, #1308]
 6086              	.LVL733:
 6087              	.LBE821:
 6088              	.LBE820:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 6089              		.loc 8 361 0
 6090 037e C4F82055 		str	r5, [r4, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 6091              		.loc 8 362 0
 6092 0382 C4F82455 		str	r5, [r4, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 6093              		.loc 8 363 0
 6094 0386 4FF0FF30 		mov	r0, #-1
 6095 038a 41E1     		b	.L284
 6096              	.L348:
 367:ROSSerial/ros/node_handle.h ****           }
 6097              		.loc 8 367 0
 6098 038c 04F11806 		add	r6, r4, #24
 6099              	.LVL734:
 6100              	.LBB824:
 6101              	.LBB825:
 6102              	.LBB826:
 6103              	.LBB827:
 6104              		.loc 10 151 0
 6105 0390 FFF7FEFF 		bl	HAL_GetTick
 6106              	.LVL735:
 6107              	.LBE827:
 6108              	.LBE826:
 421:ROSSerial/ros/node_handle.h **** 
 6109              		.loc 8 421 0
 6110 0394 A368     		ldr	r3, [r4, #8]
 6111 0396 C01A     		subs	r0, r0, r3
 6112              	.LVL736:
 6113              	.LBB828:
 6114              	.LBB829:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6115              		.loc 1 38 0
 6116 0398 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6117              		.loc 1 39 0
 6118 039a 3346     		mov	r3, r6
 6119 039c 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 6120 039e 42EA0122 		orr	r2, r2, r1, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6121              		.loc 1 40 0
 6122 03a2 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 6123 03a4 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 6124              		.loc 1 41 0
 6125 03a8 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 6126 03aa 42EA0161 		orr	r1, r2, r1, lsl #24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 151


 6127              	.LVL737:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6128              		.loc 1 43 0
 6129 03ae 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6130              		.loc 1 44 0
 6131 03b0 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 6132 03b2 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6133              		.loc 1 45 0
 6134 03b6 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 6135 03b8 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 6136              		.loc 1 46 0
 6137 03bc DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6138 03be 42EA0362 		orr	r2, r2, r3, lsl #24
 6139              	.LVL738:
 6140              	.LBE829:
 6141              	.LBE828:
 424:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 6142              		.loc 8 424 0
 6143 03c2 964E     		ldr	r6, .L360
 6144 03c4 A6FB0073 		umull	r7, r3, r6, r0
 6145 03c8 9B09     		lsrs	r3, r3, #6
 6146 03ca 1944     		add	r1, r1, r3
 6147 03cc 0591     		str	r1, [sp, #20]
 425:ROSSerial/ros/node_handle.h **** 
 6148              		.loc 8 425 0
 6149 03ce 4FF47A78 		mov	r8, #1000
 6150 03d2 08FB1303 		mls	r3, r8, r3, r0
 6151 03d6 924F     		ldr	r7, .L360+4
 6152 03d8 07FB0323 		mla	r3, r7, r3, r2
 6153 03dc 0693     		str	r3, [sp, #24]
 6154              	.LVL739:
 6155              	.LBB830:
 6156              	.LBB831:
 6157              	.LBB832:
 6158              	.LBB833:
 6159              		.loc 10 151 0
 6160 03de FFF7FEFF 		bl	HAL_GetTick
 6161              	.LVL740:
 6162              	.LBE833:
 6163              	.LBE832:
 444:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 6164              		.loc 8 444 0
 6165 03e2 A6FB0023 		umull	r2, r3, r6, r0
 6166 03e6 9B09     		lsrs	r3, r3, #6
 6167 03e8 059A     		ldr	r2, [sp, #20]
 6168 03ea D21A     		subs	r2, r2, r3
 6169 03ec 013A     		subs	r2, r2, #1
 6170 03ee E260     		str	r2, [r4, #12]
 445:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 6171              		.loc 8 445 0
 6172 03f0 08FB1303 		mls	r3, r8, r3, r0
 6173 03f4 069A     		ldr	r2, [sp, #24]
 6174 03f6 07FB1323 		mls	r3, r7, r3, r2
 6175 03fa 8A4A     		ldr	r2, .L360+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 152


 6176 03fc 1A44     		add	r2, r2, r3
 6177 03fe 2146     		mov	r1, r4
 6178 0400 41F8102F 		str	r2, [r1, #16]!
 446:ROSSerial/ros/node_handle.h ****   }
 6179              		.loc 8 446 0
 6180 0404 04F10C00 		add	r0, r4, #12
 6181              	.LVL741:
 6182 0408 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 6183              	.LVL742:
 6184              	.LBE831:
 6185              	.LBE830:
 6186              	.LBB834:
 6187              	.LBB835:
 6188              		.loc 10 151 0
 6189 040c FFF7FEFF 		bl	HAL_GetTick
 6190              	.LVL743:
 6191              	.LBE835:
 6192              	.LBE834:
 428:ROSSerial/ros/node_handle.h ****   }
 6193              		.loc 8 428 0
 6194 0410 C4F82405 		str	r0, [r4, #1316]
 6195 0414 50E6     		b	.L287
 6196              	.LVL744:
 6197              	.L349:
 6198              	.LBE825:
 6199              	.LBE824:
 371:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 6200              		.loc 8 371 0
 6201 0416 04F5A668 		add	r8, r4, #1328
 6202 041a 04F11807 		add	r7, r4, #24
 6203              	.LVL745:
 6204              	.LBB836:
 6205              	.LBB837:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 6206              		.loc 4 116 0
 6207 041e 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 6208              	.LVL746:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 6209              		.loc 4 117 0
 6210 0420 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6211 0424 9E42     		cmp	r6, r3
 6212 0426 1ED8     		bhi	.L353
 6213              	.L317:
 6214              	.LVL747:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 6215              		.loc 4 120 0
 6216 0428 88F80460 		strb	r6, [r8, #4]
 6217              	.LVL748:
 6218              	.LBB838:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6219              		.loc 4 121 0
 6220 042c 0022     		movs	r2, #0
 6221              	.LBE838:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 6222              		.loc 4 119 0
 6223 042e 0426     		movs	r6, #4
 6224              	.LVL749:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 153


 6225              	.L319:
 6226              	.LBB840:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6227              		.loc 4 121 0
 6228 0430 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6229 0434 9342     		cmp	r3, r2
 6230 0436 1ED9     		bls	.L318
 6231              	.LBB839:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6232              		.loc 4 127 0
 6233 0438 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6234              		.loc 4 128 0
 6235 043a 711C     		adds	r1, r6, #1
 6236 043c 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6237 043e 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6238              		.loc 4 129 0
 6239 0442 B11C     		adds	r1, r6, #2
 6240 0444 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6241 0446 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 6242              		.loc 4 130 0
 6243 044a F11C     		adds	r1, r6, #3
 6244 044c 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6245 044e 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 6246              		.loc 4 131 0
 6247 0452 C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 6248              		.loc 4 132 0
 6249 0456 0436     		adds	r6, r6, #4
 6250              	.LVL750:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6251              		.loc 4 133 0
 6252 0458 D8F80C10 		ldr	r1, [r8, #12]
 6253 045c 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6254              	.LBE839:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6255              		.loc 4 121 0
 6256 0460 0132     		adds	r2, r2, #1
 6257              	.LVL751:
 6258 0462 D2B2     		uxtb	r2, r2
 6259              	.LVL752:
 6260 0464 E4E7     		b	.L319
 6261              	.LVL753:
 6262              	.L353:
 6263              	.LBE840:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6264              		.loc 4 118 0
 6265 0466 B100     		lsls	r1, r6, #2
 6266 0468 D8F80C00 		ldr	r0, [r8, #12]
 6267 046c FFF7FEFF 		bl	realloc
 6268              	.LVL754:
 6269 0470 C8F80C00 		str	r0, [r8, #12]
 6270 0474 D8E7     		b	.L317
 6271              	.LVL755:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 154


 6272              	.L318:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 6273              		.loc 4 135 0
 6274 0476 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6275              	.LVL756:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 6276              		.loc 4 136 0
 6277 047a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6278 047e 9945     		cmp	r9, r3
 6279 0480 1ED8     		bhi	.L354
 6280              	.LVL757:
 6281              	.L320:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 6282              		.loc 4 138 0
 6283 0482 0436     		adds	r6, r6, #4
 6284              	.LVL758:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 6285              		.loc 4 139 0
 6286 0484 88F81090 		strb	r9, [r8, #16]
 6287              	.LVL759:
 6288              	.LBB841:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6289              		.loc 4 140 0
 6290 0488 0022     		movs	r2, #0
 6291              	.LVL760:
 6292              	.L322:
 6293 048a 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6294 048e 9342     		cmp	r3, r2
 6295 0490 1FD9     		bls	.L321
 6296              	.LBB842:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6297              		.loc 4 146 0
 6298 0492 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6299              		.loc 4 147 0
 6300 0494 711C     		adds	r1, r6, #1
 6301 0496 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6302 0498 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6303              		.loc 4 148 0
 6304 049c B11C     		adds	r1, r6, #2
 6305 049e 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6306 04a0 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 6307              		.loc 4 149 0
 6308 04a4 F11C     		adds	r1, r6, #3
 6309 04a6 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6310 04a8 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 6311              		.loc 4 150 0
 6312 04ac C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 6313              		.loc 4 151 0
 6314 04b0 0436     		adds	r6, r6, #4
 6315              	.LVL761:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6316              		.loc 4 152 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 155


 6317 04b2 D8F81810 		ldr	r1, [r8, #24]
 6318 04b6 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6319              	.LBE842:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6320              		.loc 4 140 0
 6321 04ba 0132     		adds	r2, r2, #1
 6322              	.LVL762:
 6323 04bc D2B2     		uxtb	r2, r2
 6324              	.LVL763:
 6325 04be E4E7     		b	.L322
 6326              	.LVL764:
 6327              	.L354:
 6328              	.LBE841:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6329              		.loc 4 137 0
 6330 04c0 4FEA8901 		lsl	r1, r9, #2
 6331 04c4 D8F81800 		ldr	r0, [r8, #24]
 6332 04c8 FFF7FEFF 		bl	realloc
 6333              	.LVL765:
 6334 04cc C8F81800 		str	r0, [r8, #24]
 6335 04d0 D7E7     		b	.L320
 6336              	.LVL766:
 6337              	.L321:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 6338              		.loc 4 154 0
 6339 04d2 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6340              	.LVL767:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 6341              		.loc 4 155 0
 6342 04d6 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6343 04da 9945     		cmp	r9, r3
 6344 04dc 05D8     		bhi	.L355
 6345              	.LVL768:
 6346              	.L323:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 6347              		.loc 4 157 0
 6348 04de 321D     		adds	r2, r6, #4
 6349              	.LVL769:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 6350              		.loc 4 158 0
 6351 04e0 88F81C90 		strb	r9, [r8, #28]
 6352              	.LVL770:
 6353              	.LBB843:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6354              		.loc 4 159 0
 6355 04e4 4FF0000C 		mov	ip, #0
 6356 04e8 17E0     		b	.L327
 6357              	.LVL771:
 6358              	.L355:
 6359              	.LBE843:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6360              		.loc 4 156 0
 6361 04ea 4FEA8901 		lsl	r1, r9, #2
 6362 04ee D8F82400 		ldr	r0, [r8, #36]
 6363 04f2 FFF7FEFF 		bl	realloc
 6364              	.LVL772:
 6365 04f6 C8F82400 		str	r0, [r8, #36]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 156


 6366 04fa F0E7     		b	.L323
 6367              	.LVL773:
 6368              	.L325:
 6369              	.LBB847:
 6370              	.LBB844:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 6371              		.loc 4 166 0
 6372 04fc 531E     		subs	r3, r2, #1
 6373              	.LVL774:
 6374 04fe 0021     		movs	r1, #0
 6375 0500 F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 6376              		.loc 4 167 0
 6377 0502 731E     		subs	r3, r6, #1
 6378 0504 3B44     		add	r3, r3, r7
 6379 0506 C8F82030 		str	r3, [r8, #32]
 6380              	.LVL775:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6381              		.loc 4 169 0
 6382 050a D8F82410 		ldr	r1, [r8, #36]
 6383 050e 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 6384              	.LVL776:
 6385              	.LBE844:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6386              		.loc 4 159 0
 6387 0512 0CF1010C 		add	ip, ip, #1
 6388              	.LVL777:
 6389 0516 5FFA8CFC 		uxtb	ip, ip
 6390              	.LVL778:
 6391              	.L327:
 6392 051a 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6393 051e 6345     		cmp	r3, ip
 6394 0520 0AD9     		bls	.L324
 6395              	.LBB846:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 6396              		.loc 4 161 0
 6397 0522 B858     		ldr	r0, [r7, r2]	@ unaligned
 6398              	.LVL779:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 6399              		.loc 4 162 0
 6400 0524 161D     		adds	r6, r2, #4
 6401              	.LVL780:
 6402              	.LBB845:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6403              		.loc 4 163 0
 6404 0526 3346     		mov	r3, r6
 6405              	.LVL781:
 6406              	.L326:
 6407 0528 8219     		adds	r2, r0, r6
 6408 052a 9A42     		cmp	r2, r3
 6409 052c E6D9     		bls	.L325
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6410              		.loc 4 164 0
 6411 052e 5A1E     		subs	r2, r3, #1
 6412 0530 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 6413 0532 B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 157


 6414              		.loc 4 163 0
 6415 0534 0133     		adds	r3, r3, #1
 6416              	.LVL782:
 6417 0536 F7E7     		b	.L326
 6418              	.LVL783:
 6419              	.L324:
 6420              	.LBE845:
 6421              	.LBE846:
 6422              	.LBE847:
 6423              	.LBE837:
 6424              	.LBE836:
 372:ROSSerial/ros/node_handle.h ****           }
 6425              		.loc 8 372 0
 6426 0538 0123     		movs	r3, #1
 6427 053a 84F82C35 		strb	r3, [r4, #1324]
 6428 053e BBE5     		b	.L287
 6429              	.L350:
 376:ROSSerial/ros/node_handle.h ****           }
 6430              		.loc 8 376 0
 6431 0540 0023     		movs	r3, #0
 6432 0542 84F81C35 		strb	r3, [r4, #1308]
 6433 0546 B7E5     		b	.L287
 6434              	.L292:
 6435              	.LBE783:
 391:ROSSerial/ros/node_handle.h ****     {
 6436              		.loc 8 391 0
 6437 0548 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6438 054c 002B     		cmp	r3, #0
 6439 054e 62D0     		beq	.L335
 6440 0550 D4F82035 		ldr	r3, [r4, #1312]
 6441 0554 EB1A     		subs	r3, r5, r3
 6442 0556 40F6C412 		movw	r2, #2500
 6443 055a 9342     		cmp	r3, r2
 6444 055c 01D8     		bhi	.L356
 397:ROSSerial/ros/node_handle.h ****   }
 6445              		.loc 8 397 0
 6446 055e 0020     		movs	r0, #0
 6447              	.LVL784:
 6448              	.LBE780:
 6449              	.LBE779:
 239:ROSSerial/ros/node_handle.h ****   }
 6450              		.loc 8 239 0
 6451 0560 56E0     		b	.L284
 6452              	.LVL785:
 6453              	.L356:
 6454              	.LBB875:
 6455              	.LBB873:
 6456              	.LBB848:
 6457              	.LBB849:
 6458              	.LBB850:
 6459              	.LBB851:
  14:ROSSerial/std_msgs/Time.h ****   {
 6460              		.loc 1 14 0
 6461 0562 314B     		ldr	r3, .L360+12
 6462 0564 0193     		str	r3, [sp, #4]
 6463              	.LVL786:
 6464              	.LBB852:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 158


 6465              	.LBB853:
 6466              	.LBB854:
 6467              		.loc 11 51 0
 6468 0566 0026     		movs	r6, #0
 6469 0568 0296     		str	r6, [sp, #8]
 6470 056a 0396     		str	r6, [sp, #12]
 6471              	.LVL787:
 6472              	.LBE854:
 6473              	.LBE853:
 6474              	.LBE852:
 6475              	.LBE851:
 6476              	.LBE850:
 6477              	.LBB855:
 6478              	.LBB856:
 597:ROSSerial/ros/node_handle.h **** 
 6479              		.loc 8 597 0
 6480 056c 1B68     		ldr	r3, [r3]
 6481 056e 04F21F21 		addw	r1, r4, #543
 6482 0572 01A8     		add	r0, sp, #4
 6483              	.LVL788:
 6484 0574 9847     		blx	r3
 6485              	.LVL789:
 600:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 6486              		.loc 8 600 0
 6487 0576 FF23     		movs	r3, #255
 6488 0578 84F81832 		strb	r3, [r4, #536]
 601:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 6489              		.loc 8 601 0
 6490 057c FE23     		movs	r3, #254
 6491 057e 84F81932 		strb	r3, [r4, #537]
 602:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 6492              		.loc 8 602 0
 6493 0582 C3B2     		uxtb	r3, r0
 6494 0584 84F81A32 		strb	r3, [r4, #538]
 603:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 6495              		.loc 8 603 0
 6496 0588 C0F30722 		ubfx	r2, r0, #8, #8
 6497 058c 84F81B22 		strb	r2, [r4, #539]
 604:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 6498              		.loc 8 604 0
 6499 0590 1344     		add	r3, r3, r2
 6500 0592 DBB2     		uxtb	r3, r3
 6501 0594 DB43     		mvns	r3, r3
 6502 0596 84F81C32 		strb	r3, [r4, #540]
 605:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 6503              		.loc 8 605 0
 6504 059a 0A23     		movs	r3, #10
 6505 059c 84F81D32 		strb	r3, [r4, #541]
 606:ROSSerial/ros/node_handle.h **** 
 6506              		.loc 8 606 0
 6507 05a0 84F81E62 		strb	r6, [r4, #542]
 6508              	.LVL790:
 6509              	.LBB857:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6510              		.loc 8 610 0
 6511 05a4 0522     		movs	r2, #5
 6512              	.LBE857:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 159


 609:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 6513              		.loc 8 609 0
 6514 05a6 3346     		mov	r3, r6
 6515 05a8 04E0     		b	.L330
 6516              	.LVL791:
 6517              	.L357:
 6518              	.LBB858:
 611:ROSSerial/ros/node_handle.h ****     l += 7;
 6519              		.loc 8 611 0
 6520 05aa A118     		adds	r1, r4, r2
 6521 05ac 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 6522 05b0 0B44     		add	r3, r3, r1
 6523              	.LVL792:
 610:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6524              		.loc 8 610 0
 6525 05b2 0132     		adds	r2, r2, #1
 6526              	.LVL793:
 6527              	.L330:
 6528 05b4 C11D     		adds	r1, r0, #7
 6529 05b6 9142     		cmp	r1, r2
 6530 05b8 F7DC     		bgt	.L357
 6531              	.LVL794:
 6532              	.LBE858:
 613:ROSSerial/ros/node_handle.h ****     //printf("Sending message - %s, length %d\n",msg->getType(), l);
 6533              		.loc 8 613 0
 6534 05ba 5A42     		rsbs	r2, r3, #0
 6535              	.LVL795:
 6536 05bc DBB2     		uxtb	r3, r3
 6537              	.LVL796:
 6538 05be D2B2     		uxtb	r2, r2
 6539 05c0 58BF     		it	pl
 6540 05c2 5342     		rsbpl	r3, r2, #0
 6541 05c4 00F10802 		add	r2, r0, #8
 6542              	.LVL797:
 6543 05c8 DB43     		mvns	r3, r3
 6544 05ca 2144     		add	r1, r1, r4
 6545 05cc 81F81832 		strb	r3, [r1, #536]
 615:ROSSerial/ros/node_handle.h ****     {
 6546              		.loc 8 615 0
 6547 05d0 B2F5007F 		cmp	r2, #512
 6548 05d4 0DDC     		bgt	.L331
 6549              	.LVL798:
 6550              	.LBB859:
 6551              	.LBB860:
 121:ROSSerial/AT32hardware.h **** 		if(ret == HAL_TIMEOUT)
 6552              		.loc 10 121 0
 6553 05d6 0A23     		movs	r3, #10
 6554 05d8 92B2     		uxth	r2, r2
 6555              	.LVL799:
 6556 05da 04F50671 		add	r1, r4, #536
 6557              	.LVL800:
 6558 05de 1348     		ldr	r0, .L360+16
 6559              	.LVL801:
 6560 05e0 FFF7FEFF 		bl	HAL_UART_Transmit
 6561              	.LVL802:
 6562              	.L332:
 6563              	.LBE860:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 160


 6564              	.LBE859:
 6565              	.LBE856:
 6566              	.LBE855:
 6567              	.LBB867:
 6568              	.LBB868:
 6569              		.loc 10 151 0
 6570 05e4 FFF7FEFF 		bl	HAL_GetTick
 6571              	.LVL803:
 6572              	.LBE868:
 6573              	.LBE867:
 415:ROSSerial/ros/node_handle.h ****   }
 6574              		.loc 8 415 0
 6575 05e8 A060     		str	r0, [r4, #8]
 6576              	.LVL804:
 6577              	.LBE849:
 6578              	.LBE848:
 394:ROSSerial/ros/node_handle.h ****     }
 6579              		.loc 8 394 0
 6580 05ea C4F82055 		str	r5, [r4, #1312]
 397:ROSSerial/ros/node_handle.h ****   }
 6581              		.loc 8 397 0
 6582 05ee 0020     		movs	r0, #0
 6583 05f0 0EE0     		b	.L284
 6584              	.LVL805:
 6585              	.L331:
 6586              	.LBB871:
 6587              	.LBB870:
 6588              	.LBB869:
 6589              	.LBB866:
 6590              	.LBB861:
 6591              	.LBB862:
 6592              	.LBB863:
 6593              	.LBB864:
 6594              	.LBB865:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 6595              		.loc 3 13 0
 6596 05f2 0F4B     		ldr	r3, .L360+20
 6597 05f4 0493     		str	r3, [sp, #16]
 6598              	.LVL806:
 6599              	.LBE865:
 6600              	.LBE864:
 635:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 6601              		.loc 8 635 0
 6602 05f6 0323     		movs	r3, #3
 6603 05f8 8DF81430 		strb	r3, [sp, #20]
 636:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 6604              		.loc 8 636 0
 6605 05fc 0D4B     		ldr	r3, .L360+24
 6606 05fe 0693     		str	r3, [sp, #24]
 6607              		.loc 8 637 0
 6608 0600 04AA     		add	r2, sp, #16
 6609              	.LVL807:
 6610 0602 0721     		movs	r1, #7
 6611 0604 2046     		mov	r0, r4
 6612              	.LVL808:
 6613 0606 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6614              	.LVL809:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 161


 6615 060a EBE7     		b	.L332
 6616              	.LVL810:
 6617              	.L333:
 6618              	.LBE863:
 6619              	.LBE862:
 6620              	.LBE861:
 6621              	.LBE866:
 6622              	.LBE869:
 6623              	.LBE870:
 6624              	.LBE871:
 6625              	.LBB872:
 279:ROSSerial/ros/node_handle.h ****         }
 6626              		.loc 8 279 0
 6627 060c 6FF00100 		mvn	r0, #1
 6628              	.LVL811:
 6629              	.L284:
 6630              	.LBE872:
 6631              	.LBE873:
 6632              	.LBE875:
 240:ROSSerial/ros/node_handle.h **** 
 6633              		.loc 8 240 0
 6634 0610 0BB0     		add	sp, sp, #44
 6635              	.LCFI34:
 6636              		.cfi_remember_state
 6637              		.cfi_def_cfa_offset 28
 6638              		@ sp needed
 6639 0612 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6640              	.LVL812:
 6641              	.L335:
 6642              	.LCFI35:
 6643              		.cfi_restore_state
 6644              	.LBB876:
 6645              	.LBB874:
 397:ROSSerial/ros/node_handle.h ****   }
 6646              		.loc 8 397 0
 6647 0616 0020     		movs	r0, #0
 6648 0618 FAE7     		b	.L284
 6649              	.L361:
 6650 061a 00BF     		.align	2
 6651              	.L360:
 6652 061c D34D6210 		.word	274877907
 6653 0620 40420F00 		.word	1000000
 6654 0624 00CA9A3B 		.word	1000000000
 6655 0628 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6656 062c 00000000 		.word	huart2
 6657 0630 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 6658 0634 00000000 		.word	.LC16
 6659              	.LBE874:
 6660              	.LBE876:
 6661              		.cfi_endproc
 6662              	.LFE525:
 6663              		.fnend
 6665              		.section	.text._GLOBAL__sub_I_nh,"ax",%progbits
 6666              		.align	1
 6667              		.syntax unified
 6668              		.thumb
 6669              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 162


 6670              		.fpu fpv4-sp-d16
 6672              	_GLOBAL__sub_I_nh:
 6673              		.fnstart
 6674              	.LFB527:
 6675              		.loc 7 78 0
 6676              		.cfi_startproc
 6677              		@ args = 0, pretend = 0, frame = 0
 6678              		@ frame_needed = 0, uses_anonymous_args = 0
 6679 0000 08B5     		push	{r3, lr}
 6680              	.LCFI36:
 6681              		.cfi_def_cfa_offset 8
 6682              		.cfi_offset 3, -8
 6683              		.cfi_offset 14, -4
 6684              		.loc 7 78 0
 6685 0002 4FF6FF71 		movw	r1, #65535
 6686 0006 0120     		movs	r0, #1
 6687 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 6688              	.LVL813:
 6689 000c 08BD     		pop	{r3, pc}
 6690              		.cfi_endproc
 6691              	.LFE527:
 6692              		.cantunwind
 6693              		.fnend
 6695              		.section	.init_array,"aw",%init_array
 6696              		.align	2
 6697 0000 00000000 		.word	_GLOBAL__sub_I_nh(target1)
 6698              		.weak	_ZTVN8std_msgs4TimeE
 6699              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 6700              		.align	2
 6703              	_ZTVN8std_msgs4TimeE:
 6704 0000 00000000 		.word	0
 6705 0004 00000000 		.word	0
 6706 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 6707 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 6708 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 6709 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 6710              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 6711              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 6712              		.align	2
 6715              	_ZTVN14rosserial_msgs9TopicInfoE:
 6716 0000 00000000 		.word	0
 6717 0004 00000000 		.word	0
 6718 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 6719 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 6720 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 6721 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 6722              		.weak	_ZTVN14rosserial_msgs3LogE
 6723              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 6724              		.align	2
 6727              	_ZTVN14rosserial_msgs3LogE:
 6728 0000 00000000 		.word	0
 6729 0004 00000000 		.word	0
 6730 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 6731 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 6732 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 6733 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 6734              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 163


 6735              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 6736              		.align	2
 6739              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 6740 0000 00000000 		.word	0
 6741 0004 00000000 		.word	0
 6742 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 6743 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6744 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 6745 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 6746              		.weak	_ZTVN8std_msgs6HeaderE
 6747              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 6748              		.align	2
 6751              	_ZTVN8std_msgs6HeaderE:
 6752 0000 00000000 		.word	0
 6753 0004 00000000 		.word	0
 6754 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 6755 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 6756 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 6757 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 6758              		.weak	_ZTVN11sensor_msgs10JointStateE
 6759              		.section	.rodata._ZTVN11sensor_msgs10JointStateE,"aG",%progbits,_ZTVN11sensor_msgs10JointStateE,co
 6760              		.align	2
 6763              	_ZTVN11sensor_msgs10JointStateE:
 6764 0000 00000000 		.word	0
 6765 0004 00000000 		.word	0
 6766 0008 00000000 		.word	_ZNK11sensor_msgs10JointState9serializeEPh
 6767 000c 00000000 		.word	_ZN11sensor_msgs10JointState11deserializeEPh
 6768 0010 00000000 		.word	_ZN11sensor_msgs10JointState7getTypeEv
 6769 0014 00000000 		.word	_ZN11sensor_msgs10JointState6getMD5Ev
 6770              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 6771              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 6772              		.align	2
 6775              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 6776 0000 00000000 		.word	0
 6777 0004 00000000 		.word	0
 6778 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 6779 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 6780 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 6781              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 6782              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 6783              		.align	2
 6786              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 6787 0000 00000000 		.space	4
 6788              		.global	hovebotState
 6789              		.global	nh
 6790              		.section	.rodata
 6791              		.align	2
 6792              		.set	.LANCHOR3,. + 0
 6793              	.LC17:
 6794 0000 00000000 		.word	.LC0
 6795 0004 08000000 		.word	.LC1
 6796              		.section	.bss.hovebotState,"aw",%nobits
 6797              		.align	2
 6798              		.set	.LANCHOR2,. + 0
 6801              	hovebotState:
 6802 0000 00000000 		.space	4
 6803              		.section	.bss.nh,"aw",%nobits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 164


 6804              		.align	2
 6805              		.set	.LANCHOR1,. + 0
 6808              	nh:
 6809 0000 00000000 		.space	1368
 6809      00000000 
 6809      00000000 
 6809      00000000 
 6809      00000000 
 6810              		.section	.rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4,"aMS",%progbits,1
 6811              		.align	2
 6812              	.LC13:
 6813 0000 33303636 		.ascii	"3066dcd76a6cfaef579bd0f34173e9fd\000"
 6813      64636437 
 6813      36613663 
 6813      66616566 
 6813      35373962 
 6814              		.section	.rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4,"aMS",%progbits,1
 6815              		.align	2
 6816              	.LC12:
 6817 0000 73656E73 		.ascii	"sensor_msgs/JointState\000"
 6817      6F725F6D 
 6817      7367732F 
 6817      4A6F696E 
 6817      74537461 
 6818              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 6819              		.align	2
 6820              	.LC9:
 6821 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 6821      39386264 
 6821      61363539 
 6821      38313938 
 6821      36646466 
 6822              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 6823              		.align	2
 6824              	.LC8:
 6825 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 6825      64373331 
 6825      63323539 
 6825      33333236 
 6825      31636436 
 6826              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 6827              		.align	2
 6828              	.LC7:
 6829 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 6829      65726961 
 6829      6C5F6D73 
 6829      67732F4C 
 6829      6F6700
 6830              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 6831              		.align	2
 6832              	.LC6:
 6833 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 6833      31663838 
 6833      66633434 
 6833      38393266 
 6833      38633130 
 6834              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 165


 6835              		.align	2
 6836              	.LC5:
 6837 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 6837      65726961 
 6837      6C5F6D73 
 6837      67732F54 
 6837      6F706963 
 6838              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 6839              		.align	2
 6840              		.set	.LANCHOR0,. + 0
 6843              	_ZN14rosserial_msgsL12REQUESTPARAME:
 6844 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 6844      65726961 
 6844      6C5F6D73 
 6844      67732F52 
 6844      65717565 
 6845              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str
 6846              		.align	2
 6847              	.LC16:
 6848 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 6848      61676520 
 6848      66726F6D 
 6848      20646576 
 6848      69636520 
 6849 0033 66666572 		.ascii	"ffer.\000"
 6849      2E00
 6850              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 6851              		.align	2
 6852              	.LC4:
 6853 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 6853      36366337 
 6853      34633535 
 6853      32633331 
 6853      31666263 
 6854              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 6855              		.align	2
 6856              	.LC3:
 6857 0000 7374645F 		.ascii	"std_msgs/Time\000"
 6857      6D736773 
 6857      2F54696D 
 6857      6500
 6858              		.section	.rodata._ZN8std_msgs6Header6getMD5Ev.str1.4,"aMS",%progbits,1
 6859              		.align	2
 6860              	.LC11:
 6861 0000 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 6861      64656361 
 6861      65636263 
 6861      65373861 
 6861      62633362 
 6862              		.section	.rodata._ZN8std_msgs6Header7getTypeEv.str1.4,"aMS",%progbits,1
 6863              		.align	2
 6864              	.LC10:
 6865 0000 7374645F 		.ascii	"std_msgs/Header\000"
 6865      6D736773 
 6865      2F486561 
 6865      64657200 
 6866              		.section	.rodata.ros_init.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 166


 6867              		.align	2
 6868              	.LC14:
 6869 0000 4E6F6465 		.ascii	"Node init\000"
 6869      20696E69 
 6869      7400
 6870 000a 0000     		.space	2
 6871              	.LC15:
 6872 000c 686F7665 		.ascii	"hovebot_state\000"
 6872      626F745F 
 6872      73746174 
 6872      6500
 6873              		.section	.rodata.str1.4,"aMS",%progbits,1
 6874              		.align	2
 6875              	.LC0:
 6876 0000 6C656674 		.ascii	"left\000"
 6876      00
 6877 0005 000000   		.space	3
 6878              	.LC1:
 6879 0008 72696768 		.ascii	"right\000"
 6879      7400
 6880              		.text
 6881              	.Letext0:
 6882              		.file 12 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 6883              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 6884              		.file 14 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 6885              		.file 15 "Inc/system_at32f4xx.h"
 6886              		.file 16 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 6887              		.file 17 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 6888              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 6889              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 6890              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 6891              		.file 21 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 6892              		.file 22 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 6893              		.file 23 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 6894              		.file 24 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 6895              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 6896              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 6897              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 6898              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 6899              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 6900              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 6901              		.file 31 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 6902              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 6903              		.file 33 "<built-in>"
 6904              		.file 34 "ROSSerial/ros/duration.h"
 6905              		.file 35 "ROSSerial/ros/publisher.h"
 6906              		.file 36 "ROSSerial/ros.h"
 6907              		.file 37 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 6908              		.file 38 "Inc/control_structures.h"
 6909              		.file 39 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 6910              		.file 40 "Inc/ROS_subscribe.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 167


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ROS_main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:615    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:622    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:734    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:741    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 _ZN8std_msgs6Header7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:757    .text._ZN8std_msgs6Header7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:764    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:771    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 _ZN8std_msgs6Header6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:787    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 168


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:794    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:801    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 _ZN11sensor_msgs10JointState7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:818    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:825    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:832    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 _ZN11sensor_msgs10JointState6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:848    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:855    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:861    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1005   .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6775   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6739   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1014   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1021   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1040   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1047   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1297   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1304   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1391   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1398   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1515   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1522   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1571   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1578   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1773   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:1780   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 _ZNK11sensor_msgs10JointState9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:2283   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:2290   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 _ZN11sensor_msgs10JointState11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:2906   .text.ros_init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:2913   .text.ros_init:0000000000000000 ros_init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3079   .text.ros_init:00000000000000b4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6763   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 _ZTVN11sensor_msgs10JointStateE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6751   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 _ZTVN8std_msgs6HeaderE
         .ARM.exidx.text.ros_init:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3092   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3099   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3265   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:00000000000000b8 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6727   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3273   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3280   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3578   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000144 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3586   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3593   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3881   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000134 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6703   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 169


.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3900   .text.ros_run:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:3907   .text.ros_run:0000000000000000 ros_run
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:4471   .text.ros_run:00000000000002dc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6786   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:4486   .text.ros_run:0000000000000310 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:4978   .text.ros_run:00000000000005dc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6715   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:4987   .text.ros_run:00000000000005f4 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:5448   .text.ros_run:0000000000000800 $d
          .ARM.exidx.text.ros_run:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:5460   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:5467   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6072   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000350 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6084   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000378 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6652   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000061c $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6666   .text._GLOBAL__sub_I_nh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6672   .text._GLOBAL__sub_I_nh:0000000000000000 _GLOBAL__sub_I_nh
.ARM.exidx.text._GLOBAL__sub_I_nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6696   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6700   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6712   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6724   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6736   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6748   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6760   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6772   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6783   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6801   .bss.hovebotState:0000000000000000 hovebotState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6808   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6791   .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6797   .bss.hovebotState:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6804   .bss.nh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6811   .rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6815   .rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6819   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6823   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6827   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6831   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6835   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6839   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6843   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6846   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6851   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6855   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6859   .rodata._ZN8std_msgs6Header6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6863   .rodata._ZN8std_msgs6Header7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6867   .rodata.ros_init.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s:6874   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
realloc
strlen
memcpy
HAL_UART_Receive_IT
puts
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccmfhfUV.s 			page 170


_Z16rosSubscribeInitPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
byte
huart2
__aeabi_unwind_cpp_pr0
HAL_UART_Transmit
HAL_GetTick
g_RxRead
g_RxBuf
g_RxWritten
_ZN3ros16normalizeSecNSecERmS0_
