ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ROS_main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  17              		.align	1
  18              		.weak	_ZNK8std_msgs4Time9serializeEPh
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	_ZNK8std_msgs4Time9serializeEPh:
  25              		.fnstart
  26              	.LFB378:
  27              		.file 1 "ROSSerial/std_msgs/Time.h"
   1:ROSSerial/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:ROSSerial/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:ROSSerial/std_msgs/Time.h **** 
   4:ROSSerial/std_msgs/Time.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Time.h **** #include <string.h>
   6:ROSSerial/std_msgs/Time.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Time.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Time.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Time.h **** 
  10:ROSSerial/std_msgs/Time.h **** 
  11:ROSSerial/std_msgs/Time.h **** namespace std_msgs
  12:ROSSerial/std_msgs/Time.h **** {
  13:ROSSerial/std_msgs/Time.h **** 
  14:ROSSerial/std_msgs/Time.h ****   class Time : public ros::Msg
  15:ROSSerial/std_msgs/Time.h ****   {
  16:ROSSerial/std_msgs/Time.h ****     public:
  17:ROSSerial/std_msgs/Time.h ****       ros::Time data;
  18:ROSSerial/std_msgs/Time.h **** 
  19:ROSSerial/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  28              		.loc 1 19 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  20:ROSSerial/std_msgs/Time.h ****     {
  21:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  22:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  34              		.loc 1 22 0
  35 0000 4368     		ldr	r3, [r0, #4]
  36 0002 0B70     		strb	r3, [r1]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 2


  23:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  37              		.loc 1 23 0
  38 0004 4368     		ldr	r3, [r0, #4]
  39 0006 1B0A     		lsrs	r3, r3, #8
  40 0008 4B70     		strb	r3, [r1, #1]
  24:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  41              		.loc 1 24 0
  42 000a C388     		ldrh	r3, [r0, #6]
  43 000c 8B70     		strb	r3, [r1, #2]
  25:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  44              		.loc 1 25 0
  45 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  46 0010 CB70     		strb	r3, [r1, #3]
  47              	.LVL1:
  26:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  27:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  48              		.loc 1 27 0
  49 0012 8368     		ldr	r3, [r0, #8]
  50 0014 0B71     		strb	r3, [r1, #4]
  28:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  51              		.loc 1 28 0
  52 0016 8368     		ldr	r3, [r0, #8]
  53 0018 1B0A     		lsrs	r3, r3, #8
  54 001a 4B71     		strb	r3, [r1, #5]
  29:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  55              		.loc 1 29 0
  56 001c 4389     		ldrh	r3, [r0, #10]
  57 001e 8B71     		strb	r3, [r1, #6]
  30:ROSSerial/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  58              		.loc 1 30 0
  59 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  60 0022 CB71     		strb	r3, [r1, #7]
  61              	.LVL2:
  31:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  32:ROSSerial/std_msgs/Time.h ****       return offset;
  33:ROSSerial/std_msgs/Time.h ****     }
  62              		.loc 1 33 0
  63 0024 0820     		movs	r0, #8
  64              	.LVL3:
  65 0026 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE378:
  68              		.cantunwind
  69              		.fnend
  71              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  72              		.align	1
  73              		.weak	_ZN8std_msgs4Time11deserializeEPh
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	_ZN8std_msgs4Time11deserializeEPh:
  80              		.fnstart
  81              	.LFB379:
  34:ROSSerial/std_msgs/Time.h **** 
  35:ROSSerial/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  82              		.loc 1 35 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 3


  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL4:
  36:ROSSerial/std_msgs/Time.h ****     {
  37:ROSSerial/std_msgs/Time.h ****       int offset = 0;
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  88              		.loc 1 38 0
  89 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  90 0002 4360     		str	r3, [r0, #4]
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  91              		.loc 1 39 0
  92 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  93 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  94 000a 4360     		str	r3, [r0, #4]
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  95              		.loc 1 40 0
  96 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  97 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  98 0012 4360     		str	r3, [r0, #4]
  41:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99              		.loc 1 41 0
 100 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 101 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 102 001a 4360     		str	r3, [r0, #4]
 103              	.LVL5:
  42:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 104              		.loc 1 43 0
 105 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 106 001e 8360     		str	r3, [r0, #8]
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 107              		.loc 1 44 0
 108 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 109 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 110 0026 8360     		str	r3, [r0, #8]
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111              		.loc 1 45 0
 112 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 113 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 114 002e 8360     		str	r3, [r0, #8]
  46:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 115              		.loc 1 46 0
 116 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 117 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 118 0036 8360     		str	r3, [r0, #8]
 119              	.LVL6:
  47:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  48:ROSSerial/std_msgs/Time.h ****      return offset;
  49:ROSSerial/std_msgs/Time.h ****     }
 120              		.loc 1 49 0
 121 0038 0820     		movs	r0, #8
 122              	.LVL7:
 123 003a 7047     		bx	lr
 124              		.cfi_endproc
 125              	.LFE379:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 4


 126              		.cantunwind
 127              		.fnend
 129              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 130              		.align	1
 131              		.weak	_ZN8std_msgs4Time7getTypeEv
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_ZN8std_msgs4Time7getTypeEv:
 138              		.fnstart
 139              	.LFB380:
  50:ROSSerial/std_msgs/Time.h **** 
  51:ROSSerial/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 140              		.loc 1 51 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL8:
 146              		.loc 1 51 0
 147 0000 0048     		ldr	r0, .L4
 148              	.LVL9:
 149 0002 7047     		bx	lr
 150              	.L5:
 151              		.align	2
 152              	.L4:
 153 0004 00000000 		.word	.LC3
 154              		.cfi_endproc
 155              	.LFE380:
 156              		.cantunwind
 157              		.fnend
 159              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 160              		.align	1
 161              		.weak	_ZN8std_msgs4Time6getMD5Ev
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	_ZN8std_msgs4Time6getMD5Ev:
 168              		.fnstart
 169              	.LFB381:
  52:ROSSerial/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 170              		.loc 1 52 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL10:
 176              		.loc 1 52 0
 177 0000 0048     		ldr	r0, .L7
 178              	.LVL11:
 179 0002 7047     		bx	lr
 180              	.L8:
 181              		.align	2
 182              	.L7:
 183 0004 00000000 		.word	.LC4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 5


 184              		.cfi_endproc
 185              	.LFE381:
 186              		.cantunwind
 187              		.fnend
 189              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 190              		.align	1
 191              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 198              		.fnstart
 199              	.LFB383:
 200              		.file 2 "ROSSerial/rosserial_msgs/TopicInfo.h"
   1:ROSSerial/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:ROSSerial/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   4:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/TopicInfo.h **** 
   9:ROSSerial/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:ROSSerial/rosserial_msgs/TopicInfo.h **** {
  11:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
  14:ROSSerial/rosserial_msgs/TopicInfo.h ****     public:
  15:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:ROSSerial/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:ROSSerial/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:ROSSerial/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  31:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  34:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  37:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 6


  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  50:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  51:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  52:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  53:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  59:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  60:ROSSerial/rosserial_msgs/TopicInfo.h ****       return offset;
  61:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
  62:ROSSerial/rosserial_msgs/TopicInfo.h **** 
  63:ROSSerial/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 201              		.loc 2 63 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 207 0000 70B4     		push	{r4, r5, r6}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 6, -4
 213              	.LVL13:
  64:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
  65:ROSSerial/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  66:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 214              		.loc 2 66 0
 215 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 216 0004 8380     		strh	r3, [r0, #4]	@ movhi
  67:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 217              		.loc 2 67 0
 218 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 219 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 220 000c 8380     		strh	r3, [r0, #4]	@ movhi
 221              	.LVL14:
  68:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  69:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  70:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 222              		.loc 2 70 0
 223 000e D1F80250 		ldr	r5, [r1, #2]	@ unaligned
 224              	.LVL15:
 225              	.LBB156:
  71:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 72 0
 227 0012 0623     		movs	r3, #6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 7


 228              	.LVL16:
 229              	.L11:
 230              		.loc 2 72 0 is_stmt 0 discriminator 3
 231 0014 AA1D     		adds	r2, r5, #6
 232 0016 9A42     		cmp	r2, r3
 233 0018 04D9     		bls	.L10
  73:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 234              		.loc 2 73 0 is_stmt 1 discriminator 2
 235 001a 5A1E     		subs	r2, r3, #1
 236 001c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 237 001e 8C54     		strb	r4, [r1, r2]
  72:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 238              		.loc 2 72 0 discriminator 2
 239 0020 0133     		adds	r3, r3, #1
 240              	.LVL17:
 241 0022 F7E7     		b	.L11
 242              	.L10:
 243              	.LBE156:
  74:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  75:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 244              		.loc 2 75 0
 245 0024 0535     		adds	r5, r5, #5
 246              	.LVL18:
 247 0026 0023     		movs	r3, #0
 248              	.LVL19:
 249 0028 4B55     		strb	r3, [r1, r5]
  76:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 250              		.loc 2 76 0
 251 002a 4B1D     		adds	r3, r1, #5
 252 002c 8360     		str	r3, [r0, #8]
 253              	.LVL20:
  77:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  78:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  79:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 254              		.loc 2 79 0
 255 002e 8E58     		ldr	r6, [r1, r2]	@ unaligned
 256              	.LVL21:
  80:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 257              		.loc 2 80 0
 258 0030 141D     		adds	r4, r2, #4
 259              	.LVL22:
 260              	.LBB157:
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 261              		.loc 2 81 0
 262 0032 2346     		mov	r3, r4
 263              	.LVL23:
 264              	.L13:
 265              		.loc 2 81 0 is_stmt 0 discriminator 3
 266 0034 3219     		adds	r2, r6, r4
 267 0036 9A42     		cmp	r2, r3
 268 0038 04D9     		bls	.L12
  82:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 269              		.loc 2 82 0 is_stmt 1 discriminator 2
 270 003a 5A1E     		subs	r2, r3, #1
 271 003c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 272 003e 8D54     		strb	r5, [r1, r2]
  81:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 8


 273              		.loc 2 81 0 discriminator 2
 274 0040 0133     		adds	r3, r3, #1
 275              	.LVL24:
 276 0042 F7E7     		b	.L13
 277              	.L12:
 278              	.LBE157:
  83:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  84:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 279              		.loc 2 84 0
 280 0044 531E     		subs	r3, r2, #1
 281              	.LVL25:
 282 0046 0025     		movs	r5, #0
 283 0048 CD54     		strb	r5, [r1, r3]
  85:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 284              		.loc 2 85 0
 285 004a 013C     		subs	r4, r4, #1
 286              	.LVL26:
 287 004c 0C44     		add	r4, r4, r1
 288              	.LVL27:
 289 004e C460     		str	r4, [r0, #12]
 290              	.LVL28:
  86:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  87:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  88:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 291              		.loc 2 88 0
 292 0050 8E58     		ldr	r6, [r1, r2]	@ unaligned
 293              	.LVL29:
  89:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 294              		.loc 2 89 0
 295 0052 0432     		adds	r2, r2, #4
 296              	.LVL30:
 297              	.LBB158:
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 298              		.loc 2 90 0
 299 0054 1346     		mov	r3, r2
 300              	.LVL31:
 301              	.L15:
 302              		.loc 2 90 0 is_stmt 0 discriminator 3
 303 0056 B418     		adds	r4, r6, r2
 304 0058 9C42     		cmp	r4, r3
 305 005a 04D9     		bls	.L14
  91:ROSSerial/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 306              		.loc 2 91 0 is_stmt 1 discriminator 2
 307 005c 5C1E     		subs	r4, r3, #1
 308 005e CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 309 0060 0D55     		strb	r5, [r1, r4]
  90:ROSSerial/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 310              		.loc 2 90 0 discriminator 2
 311 0062 0133     		adds	r3, r3, #1
 312              	.LVL32:
 313 0064 F7E7     		b	.L15
 314              	.L14:
 315              	.LBE158:
  92:ROSSerial/rosserial_msgs/TopicInfo.h ****       }
  93:ROSSerial/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 316              		.loc 2 93 0
 317 0066 631E     		subs	r3, r4, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 9


 318              	.LVL33:
 319 0068 0025     		movs	r5, #0
 320 006a CD54     		strb	r5, [r1, r3]
  94:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 321              		.loc 2 94 0
 322 006c 013A     		subs	r2, r2, #1
 323 006e 0A44     		add	r2, r2, r1
 324 0070 0261     		str	r2, [r0, #16]
 325              	.LVL34:
  95:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  96:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
  97:ROSSerial/rosserial_msgs/TopicInfo.h ****         int32_t real;
  98:ROSSerial/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  99:ROSSerial/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 100:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 101:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 326              		.loc 2 101 0
 327 0072 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 102:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 328              		.loc 2 102 0
 329 0074 621C     		adds	r2, r4, #1
 330 0076 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 331 0078 43EA0223 		orr	r3, r3, r2, lsl #8
 103:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 332              		.loc 2 103 0
 333 007c A21C     		adds	r2, r4, #2
 334 007e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 335 0080 43EA0243 		orr	r3, r3, r2, lsl #16
 104:ROSSerial/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 336              		.loc 2 104 0
 337 0084 E21C     		adds	r2, r4, #3
 338 0086 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 339 0088 43EA0263 		orr	r3, r3, r2, lsl #24
 105:ROSSerial/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 340              		.loc 2 105 0
 341 008c 4361     		str	r3, [r0, #20]
 342              	.LVL35:
 106:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 107:ROSSerial/rosserial_msgs/TopicInfo.h ****      return offset;
 108:ROSSerial/rosserial_msgs/TopicInfo.h ****     }
 343              		.loc 2 108 0
 344 008e 201D     		adds	r0, r4, #4
 345              	.LVL36:
 346 0090 70BC     		pop	{r4, r5, r6}
 347              	.LCFI1:
 348              		.cfi_restore 6
 349              		.cfi_restore 5
 350              		.cfi_restore 4
 351              		.cfi_def_cfa_offset 0
 352 0092 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE383:
 355              		.cantunwind
 356              		.fnend
 358              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 359              		.align	1
 360              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 10


 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 367              		.fnstart
 368              	.LFB384:
 109:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 110:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 369              		.loc 2 110 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL37:
 375              		.loc 2 110 0
 376 0000 0048     		ldr	r0, .L18
 377              	.LVL38:
 378 0002 7047     		bx	lr
 379              	.L19:
 380              		.align	2
 381              	.L18:
 382 0004 00000000 		.word	.LC5
 383              		.cfi_endproc
 384              	.LFE384:
 385              		.cantunwind
 386              		.fnend
 388              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 389              		.align	1
 390              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 397              		.fnstart
 398              	.LFB385:
 111:ROSSerial/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 399              		.loc 2 111 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL39:
 405              		.loc 2 111 0
 406 0000 0048     		ldr	r0, .L21
 407              	.LVL40:
 408 0002 7047     		bx	lr
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0004 00000000 		.word	.LC6
 413              		.cfi_endproc
 414              	.LFE385:
 415              		.cantunwind
 416              		.fnend
 418              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 11


 419              		.align	1
 420              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	_ZN14rosserial_msgs3Log11deserializeEPh:
 427              		.fnstart
 428              	.LFB387:
 429              		.file 3 "ROSSerial/rosserial_msgs/Log.h"
   1:ROSSerial/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:ROSSerial/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:ROSSerial/rosserial_msgs/Log.h **** 
   4:ROSSerial/rosserial_msgs/Log.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/Log.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/Log.h **** 
   9:ROSSerial/rosserial_msgs/Log.h **** 
  10:ROSSerial/rosserial_msgs/Log.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/Log.h **** {
  12:ROSSerial/rosserial_msgs/Log.h **** 
  13:ROSSerial/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  14:ROSSerial/rosserial_msgs/Log.h ****   {
  15:ROSSerial/rosserial_msgs/Log.h ****     public:
  16:ROSSerial/rosserial_msgs/Log.h ****       uint8_t level;
  17:ROSSerial/rosserial_msgs/Log.h ****       const char* msg;
  18:ROSSerial/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  19:ROSSerial/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  20:ROSSerial/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  21:ROSSerial/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  22:ROSSerial/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  23:ROSSerial/rosserial_msgs/Log.h **** 
  24:ROSSerial/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  25:ROSSerial/rosserial_msgs/Log.h ****     {
  26:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  27:ROSSerial/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  28:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  29:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  30:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  31:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  32:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  33:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  34:ROSSerial/rosserial_msgs/Log.h ****       return offset;
  35:ROSSerial/rosserial_msgs/Log.h ****     }
  36:ROSSerial/rosserial_msgs/Log.h **** 
  37:ROSSerial/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 430              		.loc 3 37 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435              	.LVL41:
 436 0000 30B4     		push	{r4, r5}
 437              	.LCFI2:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 12


 440              		.cfi_offset 5, -4
 441              	.LVL42:
  38:ROSSerial/rosserial_msgs/Log.h ****     {
  39:ROSSerial/rosserial_msgs/Log.h ****       int offset = 0;
  40:ROSSerial/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 442              		.loc 3 40 0
 443 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444 0004 0371     		strb	r3, [r0, #4]
 445              	.LVL43:
  41:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  42:ROSSerial/rosserial_msgs/Log.h ****       uint32_t length_msg;
  43:ROSSerial/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 446              		.loc 3 43 0
 447 0006 D1F80150 		ldr	r5, [r1, #1]	@ unaligned
 448              	.LVL44:
 449              	.LBB159:
  44:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
  45:ROSSerial/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 450              		.loc 3 45 0
 451 000a 0523     		movs	r3, #5
 452              	.LVL45:
 453              	.L25:
 454              		.loc 3 45 0 is_stmt 0 discriminator 3
 455 000c 6A1D     		adds	r2, r5, #5
 456 000e 9A42     		cmp	r2, r3
 457 0010 04D9     		bls	.L24
  46:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 458              		.loc 3 46 0 is_stmt 1 discriminator 2
 459 0012 5A1E     		subs	r2, r3, #1
 460 0014 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 461 0016 8C54     		strb	r4, [r1, r2]
  45:ROSSerial/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 462              		.loc 3 45 0 discriminator 2
 463 0018 0133     		adds	r3, r3, #1
 464              	.LVL46:
 465 001a F7E7     		b	.L25
 466              	.L24:
 467              	.LBE159:
  47:ROSSerial/rosserial_msgs/Log.h ****       }
  48:ROSSerial/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 468              		.loc 3 48 0
 469 001c 0435     		adds	r5, r5, #4
 470              	.LVL47:
 471 001e 0023     		movs	r3, #0
 472              	.LVL48:
 473 0020 4B55     		strb	r3, [r1, r5]
  49:ROSSerial/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 474              		.loc 3 49 0
 475 0022 0431     		adds	r1, r1, #4
 476              	.LVL49:
 477 0024 8160     		str	r1, [r0, #8]
 478              	.LVL50:
  50:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
  51:ROSSerial/rosserial_msgs/Log.h ****      return offset;
  52:ROSSerial/rosserial_msgs/Log.h ****     }
 479              		.loc 3 52 0
 480 0026 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 13


 481              	.LVL51:
 482 0028 30BC     		pop	{r4, r5}
 483              	.LCFI3:
 484              		.cfi_restore 5
 485              		.cfi_restore 4
 486              		.cfi_def_cfa_offset 0
 487 002a 7047     		bx	lr
 488              		.cfi_endproc
 489              	.LFE387:
 490              		.cantunwind
 491              		.fnend
 493              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 494              		.align	1
 495              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	_ZN14rosserial_msgs3Log7getTypeEv:
 502              		.fnstart
 503              	.LFB388:
  53:ROSSerial/rosserial_msgs/Log.h **** 
  54:ROSSerial/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 504              		.loc 3 54 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL52:
 510              		.loc 3 54 0
 511 0000 0048     		ldr	r0, .L28
 512              	.LVL53:
 513 0002 7047     		bx	lr
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0004 00000000 		.word	.LC7
 518              		.cfi_endproc
 519              	.LFE388:
 520              		.cantunwind
 521              		.fnend
 523              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 524              		.align	1
 525              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_ZN14rosserial_msgs3Log6getMD5Ev:
 532              		.fnstart
 533              	.LFB389:
  55:ROSSerial/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 534              		.loc 3 55 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 14


 539              	.LVL54:
 540              		.loc 3 55 0
 541 0000 0048     		ldr	r0, .L31
 542              	.LVL55:
 543 0002 7047     		bx	lr
 544              	.L32:
 545              		.align	2
 546              	.L31:
 547 0004 00000000 		.word	.LC8
 548              		.cfi_endproc
 549              	.LFE389:
 550              		.cantunwind
 551              		.fnend
 553              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 554              		.align	1
 555              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 562              		.fnstart
 563              	.LFB396:
 564              		.file 4 "ROSSerial/rosserial_msgs/RequestParam.h"
   1:ROSSerial/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:ROSSerial/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:ROSSerial/rosserial_msgs/RequestParam.h **** 
   4:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   5:ROSSerial/rosserial_msgs/RequestParam.h **** #include <string.h>
   6:ROSSerial/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   7:ROSSerial/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   8:ROSSerial/rosserial_msgs/RequestParam.h **** 
   9:ROSSerial/rosserial_msgs/RequestParam.h **** 
  10:ROSSerial/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
  11:ROSSerial/rosserial_msgs/RequestParam.h **** {
  12:ROSSerial/rosserial_msgs/RequestParam.h **** 
  13:ROSSerial/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  14:ROSSerial/rosserial_msgs/RequestParam.h **** 
  15:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  16:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  17:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  18:ROSSerial/rosserial_msgs/RequestParam.h ****       const char* name;
  19:ROSSerial/rosserial_msgs/RequestParam.h **** 
  20:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  22:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  23:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  24:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  25:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  26:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  27:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  28:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
  29:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  30:ROSSerial/rosserial_msgs/RequestParam.h **** 
  31:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  32:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  33:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 15


  34:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  35:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  36:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
  37:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  38:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  39:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  40:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  41:ROSSerial/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  42:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_name;
  43:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
  44:ROSSerial/rosserial_msgs/RequestParam.h ****     }
  45:ROSSerial/rosserial_msgs/RequestParam.h **** 
  46:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  47:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  48:ROSSerial/rosserial_msgs/RequestParam.h **** 
  49:ROSSerial/rosserial_msgs/RequestParam.h ****   };
  50:ROSSerial/rosserial_msgs/RequestParam.h **** 
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  52:ROSSerial/rosserial_msgs/RequestParam.h ****   {
  53:ROSSerial/rosserial_msgs/RequestParam.h ****     public:
  54:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  55:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  56:ROSSerial/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  57:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  58:ROSSerial/rosserial_msgs/RequestParam.h ****       float st_floats;
  59:ROSSerial/rosserial_msgs/RequestParam.h ****       float * floats;
  60:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  61:ROSSerial/rosserial_msgs/RequestParam.h ****       char* st_strings;
  62:ROSSerial/rosserial_msgs/RequestParam.h ****       char* * strings;
  63:ROSSerial/rosserial_msgs/RequestParam.h **** 
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  65:ROSSerial/rosserial_msgs/RequestParam.h ****     {
  66:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  72:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  73:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
  74:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
  75:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_intsi;
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  82:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  88:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
  89:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
  90:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 16


  91:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_floatsi;
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
  98:ROSSerial/rosserial_msgs/RequestParam.h ****       }
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 107:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 109:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 110:ROSSerial/rosserial_msgs/RequestParam.h ****       return offset;
 111:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 112:ROSSerial/rosserial_msgs/RequestParam.h **** 
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 114:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 115:ROSSerial/rosserial_msgs/RequestParam.h ****       int offset = 0;
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 117:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 118:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 122:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 123:ROSSerial/rosserial_msgs/RequestParam.h ****         int32_t real;
 124:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 125:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 126:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 132:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 133:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 134:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 136:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 137:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 141:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 142:ROSSerial/rosserial_msgs/RequestParam.h ****         float real;
 143:ROSSerial/rosserial_msgs/RequestParam.h ****         uint32_t base;
 144:ROSSerial/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 145:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 17


 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 151:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 152:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 153:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 155:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 156:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 160:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 163:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 164:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 165:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 168:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 169:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 170:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 171:ROSSerial/rosserial_msgs/RequestParam.h ****      return offset;
 172:ROSSerial/rosserial_msgs/RequestParam.h ****     }
 173:ROSSerial/rosserial_msgs/RequestParam.h **** 
 174:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 565              		.loc 4 174 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570              	.LVL56:
 571              		.loc 4 174 0
 572 0000 0048     		ldr	r0, .L34
 573              	.LVL57:
 574 0002 7047     		bx	lr
 575              	.L35:
 576              		.align	2
 577              	.L34:
 578 0004 00000000 		.word	.LANCHOR0
 579              		.cfi_endproc
 580              	.LFE396:
 581              		.cantunwind
 582              		.fnend
 584              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 585              		.align	1
 586              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 593              		.fnstart
 594              	.LFB397:
 175:ROSSerial/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 595              		.loc 4 175 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 18


 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL58:
 601              		.loc 4 175 0
 602 0000 0048     		ldr	r0, .L37
 603              	.LVL59:
 604 0002 7047     		bx	lr
 605              	.L38:
 606              		.align	2
 607              	.L37:
 608 0004 00000000 		.word	.LC9
 609              		.cfi_endproc
 610              	.LFE397:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 615              		.align	1
 616              		.weak	_ZN8std_msgs6String11deserializeEPh
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	_ZN8std_msgs6String11deserializeEPh:
 623              		.fnstart
 624              	.LFB404:
 625              		.file 5 "ROSSerial/std_msgs/ROSString.h"
   1:ROSSerial/std_msgs/ROSString.h **** #ifndef _ROS_std_msgs_String_h
   2:ROSSerial/std_msgs/ROSString.h **** #define _ROS_std_msgs_String_h
   3:ROSSerial/std_msgs/ROSString.h **** 
   4:ROSSerial/std_msgs/ROSString.h **** #include <cstring>
   5:ROSSerial/std_msgs/ROSString.h **** #include <stdint.h>
   6:ROSSerial/std_msgs/ROSString.h **** #include <string.h>
   7:ROSSerial/std_msgs/ROSString.h **** #include <stdlib.h>
   8:ROSSerial/std_msgs/ROSString.h **** #include "ros/msg.h"
   9:ROSSerial/std_msgs/ROSString.h **** 
  10:ROSSerial/std_msgs/ROSString.h **** namespace std_msgs
  11:ROSSerial/std_msgs/ROSString.h **** {
  12:ROSSerial/std_msgs/ROSString.h **** 
  13:ROSSerial/std_msgs/ROSString.h ****   class String : public ros::Msg
  14:ROSSerial/std_msgs/ROSString.h ****   {
  15:ROSSerial/std_msgs/ROSString.h ****     public:
  16:ROSSerial/std_msgs/ROSString.h ****       const char* data;
  17:ROSSerial/std_msgs/ROSString.h **** 
  18:ROSSerial/std_msgs/ROSString.h ****     virtual int serialize(unsigned char *outbuffer) const
  19:ROSSerial/std_msgs/ROSString.h ****     {
  20:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  21:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data = strlen(this->data);
  22:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  23:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  24:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, this->data, length_data);
  25:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
  26:ROSSerial/std_msgs/ROSString.h ****       return offset;
  27:ROSSerial/std_msgs/ROSString.h ****     }
  28:ROSSerial/std_msgs/ROSString.h **** 
  29:ROSSerial/std_msgs/ROSString.h ****     virtual int deserialize(unsigned char *inbuffer)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 19


 626              		.loc 5 29 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL60:
 632 0000 30B4     		push	{r4, r5}
 633              	.LCFI4:
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 4, -8
 636              		.cfi_offset 5, -4
 637              	.LVL61:
  30:ROSSerial/std_msgs/ROSString.h ****     {
  31:ROSSerial/std_msgs/ROSString.h ****       int offset = 0;
  32:ROSSerial/std_msgs/ROSString.h ****       uint32_t length_data;
  33:ROSSerial/std_msgs/ROSString.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
 638              		.loc 5 33 0
 639 0002 0D68     		ldr	r5, [r1]	@ unaligned
 640              	.LVL62:
 641              	.LBB160:
  34:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
  35:ROSSerial/std_msgs/ROSString.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
 642              		.loc 5 35 0
 643 0004 0423     		movs	r3, #4
 644              	.LVL63:
 645              	.L41:
 646              		.loc 5 35 0 is_stmt 0 discriminator 3
 647 0006 2A1D     		adds	r2, r5, #4
 648 0008 9A42     		cmp	r2, r3
 649 000a 04D9     		bls	.L40
  36:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 650              		.loc 5 36 0 is_stmt 1 discriminator 2
 651 000c 5A1E     		subs	r2, r3, #1
 652 000e CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 653 0010 8C54     		strb	r4, [r1, r2]
  35:ROSSerial/std_msgs/ROSString.h ****           inbuffer[k-1]=inbuffer[k];
 654              		.loc 5 35 0 discriminator 2
 655 0012 0133     		adds	r3, r3, #1
 656              	.LVL64:
 657 0014 F7E7     		b	.L41
 658              	.L40:
 659              	.LBE160:
  37:ROSSerial/std_msgs/ROSString.h ****       }
  38:ROSSerial/std_msgs/ROSString.h ****       inbuffer[offset+length_data-1]=0;
 660              		.loc 5 38 0
 661 0016 0335     		adds	r5, r5, #3
 662              	.LVL65:
 663 0018 0023     		movs	r3, #0
 664              	.LVL66:
 665 001a 4B55     		strb	r3, [r1, r5]
  39:ROSSerial/std_msgs/ROSString.h ****       this->data = (char *)(inbuffer + offset-1);
 666              		.loc 5 39 0
 667 001c 0331     		adds	r1, r1, #3
 668              	.LVL67:
 669 001e 4160     		str	r1, [r0, #4]
 670              	.LVL68:
  40:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 20


  41:ROSSerial/std_msgs/ROSString.h ****      return offset;
  42:ROSSerial/std_msgs/ROSString.h ****     }
 671              		.loc 5 42 0
 672 0020 1046     		mov	r0, r2
 673              	.LVL69:
 674 0022 30BC     		pop	{r4, r5}
 675              	.LCFI5:
 676              		.cfi_restore 5
 677              		.cfi_restore 4
 678              		.cfi_def_cfa_offset 0
 679 0024 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE404:
 682              		.cantunwind
 683              		.fnend
 685              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 686              		.align	1
 687              		.weak	_ZN8std_msgs6String7getTypeEv
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	_ZN8std_msgs6String7getTypeEv:
 694              		.fnstart
 695              	.LFB405:
  43:ROSSerial/std_msgs/ROSString.h **** 
  44:ROSSerial/std_msgs/ROSString.h ****     const char * getType(){ return "std_msgs/String"; };
 696              		.loc 5 44 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701              	.LVL70:
 702              		.loc 5 44 0
 703 0000 0048     		ldr	r0, .L44
 704              	.LVL71:
 705 0002 7047     		bx	lr
 706              	.L45:
 707              		.align	2
 708              	.L44:
 709 0004 00000000 		.word	.LC10
 710              		.cfi_endproc
 711              	.LFE405:
 712              		.cantunwind
 713              		.fnend
 715              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 716              		.align	1
 717              		.weak	_ZN8std_msgs6String6getMD5Ev
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	_ZN8std_msgs6String6getMD5Ev:
 724              		.fnstart
 725              	.LFB406:
  45:ROSSerial/std_msgs/ROSString.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 726              		.loc 5 45 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 21


 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL72:
 732              		.loc 5 45 0
 733 0000 0048     		ldr	r0, .L47
 734              	.LVL73:
 735 0002 7047     		bx	lr
 736              	.L48:
 737              		.align	2
 738              	.L47:
 739 0004 00000000 		.word	.LC11
 740              		.cfi_endproc
 741              	.LFE406:
 742              		.cantunwind
 743              		.fnend
 745              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 746              		.align	1
 747              		.weak	_ZN8std_msgs6Header11deserializeEPh
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv4-sp-d16
 753              	_ZN8std_msgs6Header11deserializeEPh:
 754              		.fnstart
 755              	.LFB475:
 756              		.file 6 "ROSSerial/std_msgs/Header.h"
   1:ROSSerial/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:ROSSerial/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:ROSSerial/std_msgs/Header.h **** 
   4:ROSSerial/std_msgs/Header.h **** #include <stdint.h>
   5:ROSSerial/std_msgs/Header.h **** #include <string.h>
   6:ROSSerial/std_msgs/Header.h **** #include <stdlib.h>
   7:ROSSerial/std_msgs/Header.h **** #include "ros/msg.h"
   8:ROSSerial/std_msgs/Header.h **** #include "ros/time.h"
   9:ROSSerial/std_msgs/Header.h **** 
  10:ROSSerial/std_msgs/Header.h **** namespace std_msgs
  11:ROSSerial/std_msgs/Header.h **** {
  12:ROSSerial/std_msgs/Header.h **** 
  13:ROSSerial/std_msgs/Header.h ****   class Header : public ros::Msg
  14:ROSSerial/std_msgs/Header.h ****   {
  15:ROSSerial/std_msgs/Header.h ****     public:
  16:ROSSerial/std_msgs/Header.h ****       uint32_t seq;
  17:ROSSerial/std_msgs/Header.h ****       ros::Time stamp;
  18:ROSSerial/std_msgs/Header.h ****       const char* frame_id;
  19:ROSSerial/std_msgs/Header.h **** 
  20:ROSSerial/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  21:ROSSerial/std_msgs/Header.h ****     {
  22:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  26:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  27:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 22


  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  31:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  32:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  36:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  37:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  38:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  39:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  40:ROSSerial/std_msgs/Header.h ****       offset += 4;
  41:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  42:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  43:ROSSerial/std_msgs/Header.h ****       return offset;
  44:ROSSerial/std_msgs/Header.h ****     }
  45:ROSSerial/std_msgs/Header.h **** 
  46:ROSSerial/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
 757              		.loc 6 46 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL74:
 763 0000 30B4     		push	{r4, r5}
 764              	.LCFI6:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 5, -4
 768              	.LVL75:
  47:ROSSerial/std_msgs/Header.h ****     {
  48:ROSSerial/std_msgs/Header.h ****       int offset = 0;
  49:ROSSerial/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
 769              		.loc 6 49 0
 770 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 771 0004 4360     		str	r3, [r0, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 772              		.loc 6 50 0
 773 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 774 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 775 000c 4360     		str	r3, [r0, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 776              		.loc 6 51 0
 777 000e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 778 0010 43EA0243 		orr	r3, r3, r2, lsl #16
 779 0014 4360     		str	r3, [r0, #4]
  52:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 780              		.loc 6 52 0
 781 0016 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 782 0018 43EA0263 		orr	r3, r3, r2, lsl #24
 783 001c 4360     		str	r3, [r0, #4]
 784              	.LVL76:
  53:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 785              		.loc 6 54 0
 786 001e 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 787 0020 8360     		str	r3, [r0, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 23


 788              		.loc 6 55 0
 789 0022 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 790 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 791 0028 8360     		str	r3, [r0, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 792              		.loc 6 56 0
 793 002a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 794 002c 43EA0243 		orr	r3, r3, r2, lsl #16
 795 0030 8360     		str	r3, [r0, #8]
  57:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 796              		.loc 6 57 0
 797 0032 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 798 0034 43EA0263 		orr	r3, r3, r2, lsl #24
 799 0038 8360     		str	r3, [r0, #8]
 800              	.LVL77:
  58:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 801              		.loc 6 59 0
 802 003a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 803 003c C360     		str	r3, [r0, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 804              		.loc 6 60 0
 805 003e 4A7A     		ldrb	r2, [r1, #9]	@ zero_extendqisi2
 806 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 807 0044 C360     		str	r3, [r0, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 808              		.loc 6 61 0
 809 0046 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 810 0048 43EA0243 		orr	r3, r3, r2, lsl #16
 811 004c C360     		str	r3, [r0, #12]
  62:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 812              		.loc 6 62 0
 813 004e CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 814 0050 43EA0263 		orr	r3, r3, r2, lsl #24
 815 0054 C360     		str	r3, [r0, #12]
 816              	.LVL78:
  63:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  64:ROSSerial/std_msgs/Header.h ****       uint32_t length_frame_id;
  65:ROSSerial/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
 817              		.loc 6 65 0
 818 0056 CD68     		ldr	r5, [r1, #12]	@ unaligned
 819              	.LVL79:
 820              	.LBB162:
  66:ROSSerial/std_msgs/Header.h ****       offset += 4;
  67:ROSSerial/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
 821              		.loc 6 67 0
 822 0058 1023     		movs	r3, #16
 823              	.LVL80:
 824              	.L51:
 825              		.loc 6 67 0 is_stmt 0 discriminator 3
 826 005a 05F11002 		add	r2, r5, #16
 827 005e 9A42     		cmp	r2, r3
 828 0060 04D9     		bls	.L50
  68:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 829              		.loc 6 68 0 is_stmt 1 discriminator 2
 830 0062 5A1E     		subs	r2, r3, #1
 831 0064 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 24


 832 0066 8C54     		strb	r4, [r1, r2]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 833              		.loc 6 67 0 discriminator 2
 834 0068 0133     		adds	r3, r3, #1
 835              	.LVL81:
 836 006a F6E7     		b	.L51
 837              	.L50:
 838              	.LBE162:
  69:ROSSerial/std_msgs/Header.h ****       }
  70:ROSSerial/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
 839              		.loc 6 70 0
 840 006c 0F35     		adds	r5, r5, #15
 841              	.LVL82:
 842 006e 0023     		movs	r3, #0
 843              	.LVL83:
 844 0070 4B55     		strb	r3, [r1, r5]
  71:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 845              		.loc 6 71 0
 846 0072 0F31     		adds	r1, r1, #15
 847              	.LVL84:
 848 0074 0161     		str	r1, [r0, #16]
 849              	.LVL85:
  72:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
  73:ROSSerial/std_msgs/Header.h ****      return offset;
  74:ROSSerial/std_msgs/Header.h ****     }
 850              		.loc 6 74 0
 851 0076 1046     		mov	r0, r2
 852              	.LVL86:
 853 0078 30BC     		pop	{r4, r5}
 854              	.LCFI7:
 855              		.cfi_restore 5
 856              		.cfi_restore 4
 857              		.cfi_def_cfa_offset 0
 858 007a 7047     		bx	lr
 859              		.cfi_endproc
 860              	.LFE475:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs6Header7getTypeEv
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	_ZN8std_msgs6Header7getTypeEv:
 873              		.fnstart
 874              	.LFB476:
  75:ROSSerial/std_msgs/Header.h **** 
  76:ROSSerial/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 875              		.loc 6 76 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880              	.LVL87:
 881              		.loc 6 76 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 25


 882 0000 0048     		ldr	r0, .L54
 883              	.LVL88:
 884 0002 7047     		bx	lr
 885              	.L55:
 886              		.align	2
 887              	.L54:
 888 0004 00000000 		.word	.LC12
 889              		.cfi_endproc
 890              	.LFE476:
 891              		.cantunwind
 892              		.fnend
 894              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 895              		.align	1
 896              		.weak	_ZN8std_msgs6Header6getMD5Ev
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	_ZN8std_msgs6Header6getMD5Ev:
 903              		.fnstart
 904              	.LFB477:
  77:ROSSerial/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 905              		.loc 6 77 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL89:
 911              		.loc 6 77 0
 912 0000 0048     		ldr	r0, .L57
 913              	.LVL90:
 914 0002 7047     		bx	lr
 915              	.L58:
 916              		.align	2
 917              	.L57:
 918 0004 00000000 		.word	.LC13
 919              		.cfi_endproc
 920              	.LFE477:
 921              		.cantunwind
 922              		.fnend
 924              		.section	.text._ZN11sensor_msgs10JointState7getTypeEv,"axG",%progbits,_ZN11sensor_msgs10JointState
 925              		.align	1
 926              		.weak	_ZN11sensor_msgs10JointState7getTypeEv
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv4-sp-d16
 932              	_ZN11sensor_msgs10JointState7getTypeEv:
 933              		.fnstart
 934              	.LFB489:
 935              		.file 7 "ROSSerial/sensor_msgs/JointState.h"
   1:ROSSerial/sensor_msgs/JointState.h **** #ifndef _ROS_sensor_msgs_JointState_h
   2:ROSSerial/sensor_msgs/JointState.h **** #define _ROS_sensor_msgs_JointState_h
   3:ROSSerial/sensor_msgs/JointState.h **** 
   4:ROSSerial/sensor_msgs/JointState.h **** #include <stdint.h>
   5:ROSSerial/sensor_msgs/JointState.h **** #include <string.h>
   6:ROSSerial/sensor_msgs/JointState.h **** #include <stdlib.h>
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 26


   7:ROSSerial/sensor_msgs/JointState.h **** #include "ros/msg.h"
   8:ROSSerial/sensor_msgs/JointState.h **** #include "std_msgs/Header.h"
   9:ROSSerial/sensor_msgs/JointState.h **** 
  10:ROSSerial/sensor_msgs/JointState.h **** namespace sensor_msgs
  11:ROSSerial/sensor_msgs/JointState.h **** {
  12:ROSSerial/sensor_msgs/JointState.h **** 
  13:ROSSerial/sensor_msgs/JointState.h ****   class JointState : public ros::Msg
  14:ROSSerial/sensor_msgs/JointState.h ****   {
  15:ROSSerial/sensor_msgs/JointState.h ****     public:
  16:ROSSerial/sensor_msgs/JointState.h ****       typedef std_msgs::Header _header_type;
  17:ROSSerial/sensor_msgs/JointState.h ****       _header_type header;
  18:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_length;
  19:ROSSerial/sensor_msgs/JointState.h ****       typedef char* _name_type;
  20:ROSSerial/sensor_msgs/JointState.h ****       _name_type st_name;
  21:ROSSerial/sensor_msgs/JointState.h ****       _name_type * name;
  22:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_length;
  23:ROSSerial/sensor_msgs/JointState.h ****       typedef float _position_type;
  24:ROSSerial/sensor_msgs/JointState.h ****       _position_type st_position;
  25:ROSSerial/sensor_msgs/JointState.h ****       _position_type * position;
  26:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_length;
  27:ROSSerial/sensor_msgs/JointState.h ****       typedef float _velocity_type;
  28:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type st_velocity;
  29:ROSSerial/sensor_msgs/JointState.h ****       _velocity_type * velocity;
  30:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_length;
  31:ROSSerial/sensor_msgs/JointState.h ****       typedef float _effort_type;
  32:ROSSerial/sensor_msgs/JointState.h ****       _effort_type st_effort;
  33:ROSSerial/sensor_msgs/JointState.h ****       _effort_type * effort;
  34:ROSSerial/sensor_msgs/JointState.h **** 
  35:ROSSerial/sensor_msgs/JointState.h ****     JointState():
  36:ROSSerial/sensor_msgs/JointState.h ****       header(),
  37:ROSSerial/sensor_msgs/JointState.h ****       name_length(0), name(NULL),
  38:ROSSerial/sensor_msgs/JointState.h ****       position_length(0), position(NULL),
  39:ROSSerial/sensor_msgs/JointState.h ****       velocity_length(0), velocity(NULL),
  40:ROSSerial/sensor_msgs/JointState.h ****       effort_length(0), effort(NULL)
  41:ROSSerial/sensor_msgs/JointState.h ****     {
  42:ROSSerial/sensor_msgs/JointState.h ****     }
  43:ROSSerial/sensor_msgs/JointState.h **** 
  44:ROSSerial/sensor_msgs/JointState.h ****     virtual int serialize(unsigned char *outbuffer) const
  45:ROSSerial/sensor_msgs/JointState.h ****     {
  46:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  47:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.serialize(outbuffer + offset);
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->name_length >> (8 * 0)) & 0xFF;
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
  51:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
  52:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  53:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
  54:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
  55:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
  56:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
  57:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
  58:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
  59:ROSSerial/sensor_msgs/JointState.h ****       }
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->position_length >> (8 * 0)) & 0xFF;
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
  63:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 27


  64:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
  65:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
  66:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
  67:ROSSerial/sensor_msgs/JointState.h ****       }
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->velocity_length >> (8 * 0)) & 0xFF;
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
  71:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
  72:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
  73:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
  74:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
  75:ROSSerial/sensor_msgs/JointState.h ****       }
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 0) = (this->effort_length >> (8 * 0)) & 0xFF;
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
  79:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
  80:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
  81:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
  82:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
  83:ROSSerial/sensor_msgs/JointState.h ****       }
  84:ROSSerial/sensor_msgs/JointState.h ****       return offset;
  85:ROSSerial/sensor_msgs/JointState.h ****     }
  86:ROSSerial/sensor_msgs/JointState.h **** 
  87:ROSSerial/sensor_msgs/JointState.h ****     virtual int deserialize(unsigned char *inbuffer)
  88:ROSSerial/sensor_msgs/JointState.h ****     {
  89:ROSSerial/sensor_msgs/JointState.h ****       int offset = 0;
  90:ROSSerial/sensor_msgs/JointState.h ****       offset += this->header.deserialize(inbuffer + offset);
  91:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
  94:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
  95:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
  96:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
  97:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
  98:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
  99:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 100:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 101:ROSSerial/sensor_msgs/JointState.h ****       arrToVar(length_st_name, (inbuffer + offset));
 102:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 103:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 104:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 105:ROSSerial/sensor_msgs/JointState.h ****       }
 106:ROSSerial/sensor_msgs/JointState.h ****       inbuffer[offset+length_st_name-1]=0;
 107:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 108:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 109:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 110:ROSSerial/sensor_msgs/JointState.h ****       }
 111:ROSSerial/sensor_msgs/JointState.h ****       uint32_t position_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 114:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 115:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 116:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 117:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 118:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 119:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 120:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 28


 121:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 122:ROSSerial/sensor_msgs/JointState.h ****       }
 123:ROSSerial/sensor_msgs/JointState.h ****       uint32_t velocity_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 126:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 127:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 128:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 129:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 130:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 131:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 132:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 133:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 134:ROSSerial/sensor_msgs/JointState.h ****       }
 135:ROSSerial/sensor_msgs/JointState.h ****       uint32_t effort_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 138:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 139:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 140:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 141:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 142:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 143:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 144:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 145:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 146:ROSSerial/sensor_msgs/JointState.h ****       }
 147:ROSSerial/sensor_msgs/JointState.h ****      return offset;
 148:ROSSerial/sensor_msgs/JointState.h ****     }
 149:ROSSerial/sensor_msgs/JointState.h **** 
 150:ROSSerial/sensor_msgs/JointState.h ****     const char * getType(){ return "sensor_msgs/JointState"; };
 936              		.loc 7 150 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              		@ link register save eliminated.
 941              	.LVL91:
 942              		.loc 7 150 0
 943 0000 0048     		ldr	r0, .L60
 944              	.LVL92:
 945 0002 7047     		bx	lr
 946              	.L61:
 947              		.align	2
 948              	.L60:
 949 0004 00000000 		.word	.LC14
 950              		.cfi_endproc
 951              	.LFE489:
 952              		.cantunwind
 953              		.fnend
 955              		.section	.text._ZN11sensor_msgs10JointState6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs10JointState6
 956              		.align	1
 957              		.weak	_ZN11sensor_msgs10JointState6getMD5Ev
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	_ZN11sensor_msgs10JointState6getMD5Ev:
 964              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 29


 965              	.LFB490:
 151:ROSSerial/sensor_msgs/JointState.h ****     const char * getMD5(){ return "3066dcd76a6cfaef579bd0f34173e9fd"; };
 966              		.loc 7 151 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL93:
 972              		.loc 7 151 0
 973 0000 0048     		ldr	r0, .L63
 974              	.LVL94:
 975 0002 7047     		bx	lr
 976              	.L64:
 977              		.align	2
 978              	.L63:
 979 0004 00000000 		.word	.LC15
 980              		.cfi_endproc
 981              	.LFE490:
 982              		.cantunwind
 983              		.fnend
 985              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 986              		.align	1
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 990              		.fpu fpv4-sp-d16
 992              	_Z41__static_initialization_and_destruction_0ii:
 993              		.fnstart
 994              	.LFB528:
 995              		.file 8 "./Src/ROS_main.cpp"
   1:./Src/ROS_main.cpp **** /*
   2:./Src/ROS_main.cpp **** * Implement all ROS functions here.
   3:./Src/ROS_main.cpp **** */
   4:./Src/ROS_main.cpp **** 
   5:./Src/ROS_main.cpp **** #include "ros.h"
   6:./Src/ROS_main.cpp **** #include "ROS_subscribe.h"
   7:./Src/ROS_main.cpp **** #include "std_msgs/ROSString.h"
   8:./Src/ROS_main.cpp **** #include "sensor_msgs/JointState.h"
   9:./Src/ROS_main.cpp **** #include "hallinterrupts.h"
  10:./Src/ROS_main.cpp **** #include "defines.h"
  11:./Src/ROS_main.cpp **** 
  12:./Src/ROS_main.cpp **** extern volatile WHEEL_POSN_STRUCT wheel_posn[2];
  13:./Src/ROS_main.cpp **** extern int pwms[2];
  14:./Src/ROS_main.cpp **** 
  15:./Src/ROS_main.cpp **** uint32_t publish_time = 0;
  16:./Src/ROS_main.cpp **** extern "C" 
  17:./Src/ROS_main.cpp **** {
  18:./Src/ROS_main.cpp ****     void ros_init(void);
  19:./Src/ROS_main.cpp ****     void ros_run(void);
  20:./Src/ROS_main.cpp ****     void publish_hovebot_state(void);
  21:./Src/ROS_main.cpp ****     void wheels_pwm_set(void);
  22:./Src/ROS_main.cpp **** }
  23:./Src/ROS_main.cpp **** 
  24:./Src/ROS_main.cpp **** using namespace ros;
  25:./Src/ROS_main.cpp **** 
  26:./Src/ROS_main.cpp **** ros::NodeHandle nh; /* ROS node handle */
  27:./Src/ROS_main.cpp **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 30


  28:./Src/ROS_main.cpp **** ros::PublisherType *hovebotState;
  29:./Src/ROS_main.cpp **** ros::PublisherType *chatter;
  30:./Src/ROS_main.cpp **** 
  31:./Src/ROS_main.cpp **** 
  32:./Src/ROS_main.cpp **** void ros_init()
  33:./Src/ROS_main.cpp **** {
  34:./Src/ROS_main.cpp ****     nh.initNode();
  35:./Src/ROS_main.cpp ****     //nh.setSpinTimeout(5); //timeout after 5ms
  36:./Src/ROS_main.cpp **** 
  37:./Src/ROS_main.cpp ****     /* Register Publisher hovebot_state  */
  38:./Src/ROS_main.cpp ****     sensor_msgs::JointState tmpVar;
  39:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hoverbot_state",  &tmpVar);
  40:./Src/ROS_main.cpp **** 
  41:./Src/ROS_main.cpp ****     /* Register Publisher chatter  */
  42:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  43:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &tmpStr);
  44:./Src/ROS_main.cpp **** 
  45:./Src/ROS_main.cpp ****     /* Register Subscriber */
  46:./Src/ROS_main.cpp ****     rosSubscribeWheelsCmd(&nh);
  47:./Src/ROS_main.cpp **** }
  48:./Src/ROS_main.cpp **** 
  49:./Src/ROS_main.cpp **** void publish_hovebot_state(void)
  50:./Src/ROS_main.cpp **** {
  51:./Src/ROS_main.cpp ****     sensor_msgs::JointState wheelPositions; //This has to be local variable. for some reason.
  52:./Src/ROS_main.cpp ****     char *names[2] = {"LEFT","RIGHT"};
  53:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[LEFT].ticks,wheel_posn[RIGHT].ticks};
  54:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[LEFT].rpm, wheel_posn[RIGHT].rpm};
  55:./Src/ROS_main.cpp ****     float effort[2] = {pwms[LEFT], pwms[RIGHT]};
  56:./Src/ROS_main.cpp **** 
  57:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
  58:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
  59:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
  60:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
  61:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
  62:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
  63:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
  64:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
  65:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
  66:./Src/ROS_main.cpp **** 
  67:./Src/ROS_main.cpp ****     //Note: If message (wheelPositions) is declared outside function/globally publish1 doesn't work
  68:./Src/ROS_main.cpp ****     //may be constructor is not getting called.
  69:./Src/ROS_main.cpp ****     int retval = nh.publish1(hovebotState->topic_id, &wheelPositions); 
  70:./Src/ROS_main.cpp ****     if(retval < 0)
  71:./Src/ROS_main.cpp ****     {
  72:./Src/ROS_main.cpp ****         printf("hoverbot_state publish1 failed %d\n",retval);
  73:./Src/ROS_main.cpp ****     }
  74:./Src/ROS_main.cpp **** 
  75:./Src/ROS_main.cpp **** #ifdef DEBUG
  76:./Src/ROS_main.cpp ****     char buf[512];
  77:./Src/ROS_main.cpp ****     std_msgs::String tmpStr;
  78:./Src/ROS_main.cpp ****     tmpStr.data = buf;
  79:./Src/ROS_main.cpp ****     int motor=0;
  80:./Src/ROS_main.cpp ****     int rpm = 1000*wheel_posn[motor].rpm;
  81:./Src/ROS_main.cpp ****     // sprintf(buf,"%d:%d:rpm=%d:%ld:%lu:%d\n",motor,wheel_posn[motor].hall,rpm,
  82:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks,wheel_posn[motor].millis_at_tick,
  83:./Src/ROS_main.cpp ****     //     wheel_posn[motor].ticks_at_prev_rotation);
  84:./Src/ROS_main.cpp ****     sprintf(buf,"%d: Hello world\n",publish_time);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 31


  85:./Src/ROS_main.cpp ****     //int retval2 = nh.publish1(chatter->topic_id, &tmpStr);
  86:./Src/ROS_main.cpp **** #endif
  87:./Src/ROS_main.cpp **** }
  88:./Src/ROS_main.cpp **** 
  89:./Src/ROS_main.cpp **** void ros_run()
  90:./Src/ROS_main.cpp **** {
  91:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
  92:./Src/ROS_main.cpp **** 
  93:./Src/ROS_main.cpp ****     if(nh.spinOnce1() != 0)
  94:./Src/ROS_main.cpp ****     {
  95:./Src/ROS_main.cpp ****         printf("%lu:ERROR: spinOnce1 returned error probably SPIN_TIMEOUT\n",now);
  96:./Src/ROS_main.cpp ****         return;
  97:./Src/ROS_main.cpp ****     }
  98:./Src/ROS_main.cpp ****     //Publish every 100ms (10Hz)
  99:./Src/ROS_main.cpp ****     if ((now - publish_time) > 100) {
 100:./Src/ROS_main.cpp ****         //printf("publishing %ld, %ld\n",now, (now - publish_time));
 101:./Src/ROS_main.cpp ****         publish_hovebot_state();
 102:./Src/ROS_main.cpp ****         publish_time = now;
 103:./Src/ROS_main.cpp ****     }
 104:./Src/ROS_main.cpp ****     wheels_pwm_set();
 105:./Src/ROS_main.cpp **** }...
 996              		.loc 8 105 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001              	.LVL95:
 1002              		.loc 8 105 0
 1003 0000 0128     		cmp	r0, #1
 1004 0002 00D0     		beq	.L75
 1005              	.LVL96:
 1006              	.L65:
 1007 0004 7047     		bx	lr
 1008              	.LVL97:
 1009              	.L75:
 1010              		.loc 8 105 0 is_stmt 0 discriminator 1
 1011 0006 4FF6FF73 		movw	r3, #65535
 1012 000a 9942     		cmp	r1, r3
 1013 000c FAD1     		bne	.L65
 1014              	.LVL98:
 1015              	.LBB176:
 1016              	.LBB177:
 1017              	.LBB178:
 1018              		.file 9 "ROSSerial/ros/node_handle.h"
   1:ROSSerial/ros/node_handle.h **** /*
   2:ROSSerial/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/node_handle.h ****  *
   4:ROSSerial/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/node_handle.h ****  * All rights reserved.
   6:ROSSerial/ros/node_handle.h ****  *
   7:ROSSerial/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/node_handle.h ****  * are met:
  10:ROSSerial/ros/node_handle.h ****  *
  11:ROSSerial/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 32


  14:ROSSerial/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/node_handle.h ****  *    with the distribution.
  17:ROSSerial/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/node_handle.h ****  *
  21:ROSSerial/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/node_handle.h ****  */
  34:ROSSerial/ros/node_handle.h **** 
  35:ROSSerial/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:ROSSerial/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:ROSSerial/ros/node_handle.h **** 
  38:ROSSerial/ros/node_handle.h **** #include <stdint.h>
  39:ROSSerial/ros/node_handle.h **** 
  40:ROSSerial/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:ROSSerial/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:ROSSerial/ros/node_handle.h **** #include "std_msgs/ROSString.h"
  45:ROSSerial/ros/node_handle.h **** #include "ros/msg.h"
  46:ROSSerial/ros/node_handle.h **** 
  47:ROSSerial/ros/node_handle.h **** namespace ros
  48:ROSSerial/ros/node_handle.h **** {
  49:ROSSerial/ros/node_handle.h **** 
  50:ROSSerial/ros/node_handle.h **** class NodeHandleBase_
  51:ROSSerial/ros/node_handle.h **** {
  52:ROSSerial/ros/node_handle.h **** public:
  53:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:ROSSerial/ros/node_handle.h ****   virtual bool connected() = 0;
  56:ROSSerial/ros/node_handle.h **** };
  57:ROSSerial/ros/node_handle.h **** }
  58:ROSSerial/ros/node_handle.h **** 
  59:ROSSerial/ros/node_handle.h **** #include "ros/publisher.h"
  60:ROSSerial/ros/node_handle.h **** #include "ros/subscriber.h"
  61:ROSSerial/ros/node_handle.h **** #include "ros/service_server.h"
  62:ROSSerial/ros/node_handle.h **** #include "ros/service_client.h"
  63:ROSSerial/ros/node_handle.h **** #include "std_msgs/UInt16.h"
  64:ROSSerial/ros/node_handle.h **** 
  65:ROSSerial/ros/node_handle.h **** namespace ros
  66:ROSSerial/ros/node_handle.h **** {
  67:ROSSerial/ros/node_handle.h **** 
  68:ROSSerial/ros/node_handle.h **** const int SPIN_OK = 0;
  69:ROSSerial/ros/node_handle.h **** const int SPIN_ERR = -1;
  70:ROSSerial/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 33


  71:ROSSerial/ros/node_handle.h **** 
  72:ROSSerial/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  73:ROSSerial/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  74:ROSSerial/ros/node_handle.h **** 
  75:ROSSerial/ros/node_handle.h **** /*
  76:ROSSerial/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:ROSSerial/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:ROSSerial/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:ROSSerial/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:ROSSerial/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:ROSSerial/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:ROSSerial/ros/node_handle.h ****  */
  83:ROSSerial/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:ROSSerial/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:ROSSerial/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:ROSSerial/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:ROSSerial/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:ROSSerial/ros/node_handle.h **** 
  95:ROSSerial/ros/node_handle.h **** 
  96:ROSSerial/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:ROSSerial/ros/node_handle.h **** 
  98:ROSSerial/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:ROSSerial/ros/node_handle.h **** 
 100:ROSSerial/ros/node_handle.h **** typedef struct
 101:ROSSerial/ros/node_handle.h **** {
 102:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 103:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 104:ROSSerial/ros/node_handle.h ****     const char* message_type;
 105:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 106:ROSSerial/ros/node_handle.h ****     void (*callback)(const Msg& );
 107:ROSSerial/ros/node_handle.h **** } SubscriberType;
 108:ROSSerial/ros/node_handle.h **** 
 109:ROSSerial/ros/node_handle.h **** typedef struct
 110:ROSSerial/ros/node_handle.h **** {
 111:ROSSerial/ros/node_handle.h ****     uint16_t topic_id;
 112:ROSSerial/ros/node_handle.h ****     const char* topic_name;
 113:ROSSerial/ros/node_handle.h ****     const Msg* msg; 
 114:ROSSerial/ros/node_handle.h ****     const char* message_type;
 115:ROSSerial/ros/node_handle.h ****     const char* md5sum;
 116:ROSSerial/ros/node_handle.h **** } PublisherType;
 117:ROSSerial/ros/node_handle.h **** 
 118:ROSSerial/ros/node_handle.h **** /* Node Handle */
 119:ROSSerial/ros/node_handle.h **** template<class Hardware,
 120:ROSSerial/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 121:ROSSerial/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 122:ROSSerial/ros/node_handle.h ****          int INPUT_SIZE = 512,
 123:ROSSerial/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 124:ROSSerial/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 125:ROSSerial/ros/node_handle.h **** {
 126:ROSSerial/ros/node_handle.h **** protected:
 127:ROSSerial/ros/node_handle.h ****   Hardware hardware_;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 34


 128:ROSSerial/ros/node_handle.h **** 
 129:ROSSerial/ros/node_handle.h ****   /* time used for syncing */
 130:ROSSerial/ros/node_handle.h ****   uint32_t rt_time;
 131:ROSSerial/ros/node_handle.h **** 
 132:ROSSerial/ros/node_handle.h ****   /* used for computing current time */
 133:ROSSerial/ros/node_handle.h ****   uint32_t sec_offset, nsec_offset;
 134:ROSSerial/ros/node_handle.h **** 
 135:ROSSerial/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 136:ROSSerial/ros/node_handle.h ****   uint32_t spin_timeout_;
 137:ROSSerial/ros/node_handle.h **** 
 138:ROSSerial/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE];
 139:ROSSerial/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE];
 140:ROSSerial/ros/node_handle.h **** 
 141:ROSSerial/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS];
 142:ROSSerial/ros/node_handle.h ****   PublisherType publishers2[MAX_PUBLISHERS];
 143:ROSSerial/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 144:ROSSerial/ros/node_handle.h ****   SubscriberType subscribers2[MAX_SUBSCRIBERS];
 145:ROSSerial/ros/node_handle.h **** 
 146:ROSSerial/ros/node_handle.h ****   /*
 147:ROSSerial/ros/node_handle.h ****    * Setup Functions
 148:ROSSerial/ros/node_handle.h ****    */
 149:ROSSerial/ros/node_handle.h **** public:
 150:ROSSerial/ros/node_handle.h ****   NodeHandle_() : configured_(false)
 1019              		.loc 9 150 0 is_stmt 1
 1020 000e 244A     		ldr	r2, .L76
 1021 0010 244B     		ldr	r3, .L76+4
 1022 0012 1360     		str	r3, [r2]
 1023 0014 0023     		movs	r3, #0
 1024 0016 82F81C35 		strb	r3, [r2, #1308]
 1025              	.LVL99:
 1026              	.LBB179:
 1027              	.LBB180:
  51:ROSSerial/rosserial_msgs/RequestParam.h ****   {
 1028              		.loc 4 51 0
 1029 001a 2349     		ldr	r1, .L76+8
 1030              	.LVL100:
 1031 001c C2F83015 		str	r1, [r2, #1328]
 1032              	.LVL101:
 1033              	.L68:
 1034              	.LBE180:
 1035              	.LBE179:
 1036              	.LBB181:
 1037              	.LBB182:
 151:ROSSerial/ros/node_handle.h ****   {
 152:ROSSerial/ros/node_handle.h **** 
 153:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_PUBLISHERS; i++) {
 1038              		.loc 9 153 0
 1039 0020 042B     		cmp	r3, #4
 1040 0022 0CD8     		bhi	.L72
 154:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1041              		.loc 9 154 0
 1042 0024 1E48     		ldr	r0, .L76
 1043 0026 03F58372 		add	r2, r3, #262
 1044 002a 0021     		movs	r1, #0
 1045 002c 40F82210 		str	r1, [r0, r2, lsl #2]
 155:ROSSerial/ros/node_handle.h ****       publishers2[i].topic_id = 0;
 1046              		.loc 9 155 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 35


 1047 0030 1422     		movs	r2, #20
 1048 0032 02FB0302 		mla	r2, r2, r3, r0
 1049 0036 A2F82C14 		strh	r1, [r2, #1068]	@ movhi
 153:ROSSerial/ros/node_handle.h ****       publishers[i] = 0;
 1050              		.loc 9 153 0
 1051 003a 0133     		adds	r3, r3, #1
 1052              	.LVL102:
 1053 003c F0E7     		b	.L68
 1054              	.L72:
 1055              	.LBE182:
 1056              	.LBB183:
 156:ROSSerial/ros/node_handle.h ****     }
 157:ROSSerial/ros/node_handle.h **** 
 158:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++) {
 1057              		.loc 9 158 0
 1058 003e 0023     		movs	r3, #0
 1059              	.LVL103:
 1060              	.L67:
 1061 0040 042B     		cmp	r3, #4
 1062 0042 0CD8     		bhi	.L73
 159:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1063              		.loc 9 159 0
 1064 0044 1648     		ldr	r0, .L76
 1065 0046 03F59272 		add	r2, r3, #292
 1066 004a 0021     		movs	r1, #0
 1067 004c 40F82210 		str	r1, [r0, r2, lsl #2]
 160:ROSSerial/ros/node_handle.h ****       subscribers2[i].topic_id = 0;
 1068              		.loc 9 160 0
 1069 0050 1422     		movs	r2, #20
 1070 0052 02FB0302 		mla	r2, r2, r3, r0
 1071 0056 A2F8A414 		strh	r1, [r2, #1188]	@ movhi
 158:ROSSerial/ros/node_handle.h ****       subscribers[i] = 0;
 1072              		.loc 9 158 0
 1073 005a 0133     		adds	r3, r3, #1
 1074              	.LVL104:
 1075 005c F0E7     		b	.L67
 1076              	.L73:
 1077              	.LBE183:
 1078              	.LBB184:
 161:ROSSerial/ros/node_handle.h ****     }
 162:ROSSerial/ros/node_handle.h **** 
 163:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < INPUT_SIZE; i++)
 1079              		.loc 9 163 0
 1080 005e 0023     		movs	r3, #0
 1081              	.LVL105:
 1082              	.L69:
 1083 0060 B3F5007F 		cmp	r3, #512
 1084 0064 05D2     		bcs	.L74
 164:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1085              		.loc 9 164 0
 1086 0066 0E4A     		ldr	r2, .L76
 1087 0068 1A44     		add	r2, r2, r3
 1088 006a 0021     		movs	r1, #0
 1089 006c 1176     		strb	r1, [r2, #24]
 163:ROSSerial/ros/node_handle.h ****       message_in[i] = 0;
 1090              		.loc 9 163 0
 1091 006e 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 36


 1092              	.LVL106:
 1093 0070 F6E7     		b	.L69
 1094              	.L74:
 1095              	.LBE184:
 1096              	.LBB185:
 165:ROSSerial/ros/node_handle.h **** 
 166:ROSSerial/ros/node_handle.h ****     for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 1097              		.loc 9 166 0
 1098 0072 0023     		movs	r3, #0
 1099              	.LVL107:
 1100              	.L70:
 1101 0074 B3F5007F 		cmp	r3, #512
 1102 0078 06D2     		bcs	.L71
 167:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1103              		.loc 9 167 0
 1104 007a 094A     		ldr	r2, .L76
 1105 007c 1A44     		add	r2, r2, r3
 1106 007e 0021     		movs	r1, #0
 1107 0080 82F81812 		strb	r1, [r2, #536]
 166:ROSSerial/ros/node_handle.h ****       message_out[i] = 0;
 1108              		.loc 9 166 0
 1109 0084 0133     		adds	r3, r3, #1
 1110              	.LVL108:
 1111 0086 F5E7     		b	.L70
 1112              	.L71:
 1113              	.LBE185:
 168:ROSSerial/ros/node_handle.h **** 
 169:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 1114              		.loc 9 169 0
 1115 0088 054B     		ldr	r3, .L76
 1116              	.LVL109:
 1117 008a 0022     		movs	r2, #0
 1118 008c 83F83425 		strb	r2, [r3, #1332]
 170:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 1119              		.loc 9 170 0
 1120 0090 C3F83C25 		str	r2, [r3, #1340]
 171:ROSSerial/ros/node_handle.h ****     req_param_resp.floats_length = 0;
 1121              		.loc 9 171 0
 1122 0094 83F84025 		strb	r2, [r3, #1344]
 172:ROSSerial/ros/node_handle.h ****     req_param_resp.floats = NULL;
 1123              		.loc 9 172 0
 1124 0098 C3F84825 		str	r2, [r3, #1352]
 173:ROSSerial/ros/node_handle.h ****     req_param_resp.ints_length = 0;
 174:ROSSerial/ros/node_handle.h ****     req_param_resp.ints = NULL;
 175:ROSSerial/ros/node_handle.h **** 
 176:ROSSerial/ros/node_handle.h ****     spin_timeout_ = 0;
 1125              		.loc 9 176 0
 1126 009c 5A61     		str	r2, [r3, #20]
 1127              	.LBE181:
 1128              	.LBE178:
 1129              	.LBE177:
 1130              	.LBE176:
 1131              		.loc 8 105 0
 1132 009e B1E7     		b	.L65
 1133              	.L77:
 1134              		.align	2
 1135              	.L76:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 37


 1136 00a0 00000000 		.word	.LANCHOR1
 1137 00a4 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE+8
 1138 00a8 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 1139              		.cfi_endproc
 1140              	.LFE528:
 1141              		.cantunwind
 1142              		.fnend
 1144              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv,"axG",%progbi
 1145              		.align	1
 1146              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 1147              		.syntax unified
 1148              		.thumb
 1149              		.thumb_func
 1150              		.fpu fpv4-sp-d16
 1152              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:
 1153              		.fnstart
 1154              	.LFB531:
 177:ROSSerial/ros/node_handle.h ****   }
 178:ROSSerial/ros/node_handle.h **** 
 179:ROSSerial/ros/node_handle.h ****   Hardware* getHardware()
 180:ROSSerial/ros/node_handle.h ****   {
 181:ROSSerial/ros/node_handle.h ****     return &hardware_;
 182:ROSSerial/ros/node_handle.h ****   }
 183:ROSSerial/ros/node_handle.h **** 
 184:ROSSerial/ros/node_handle.h ****   /* Start serial, initialize buffers */
 185:ROSSerial/ros/node_handle.h ****   void initNode()
 186:ROSSerial/ros/node_handle.h ****   {
 187:ROSSerial/ros/node_handle.h ****     hardware_.init();
 188:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 189:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 190:ROSSerial/ros/node_handle.h ****     index_ = 0;
 191:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 192:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 193:ROSSerial/ros/node_handle.h ****   };
 194:ROSSerial/ros/node_handle.h **** 
 195:ROSSerial/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 196:ROSSerial/ros/node_handle.h ****   void initNode(char *portName)
 197:ROSSerial/ros/node_handle.h ****   {
 198:ROSSerial/ros/node_handle.h ****     hardware_.init(portName);
 199:ROSSerial/ros/node_handle.h ****     mode_ = 0;
 200:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 201:ROSSerial/ros/node_handle.h ****     index_ = 0;
 202:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 203:ROSSerial/ros/node_handle.h ****   };
 204:ROSSerial/ros/node_handle.h **** 
 205:ROSSerial/ros/node_handle.h ****   /**
 206:ROSSerial/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 207:ROSSerial/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 208:ROSSerial/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 209:ROSSerial/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 210:ROSSerial/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 211:ROSSerial/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 212:ROSSerial/ros/node_handle.h ****    */
 213:ROSSerial/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 214:ROSSerial/ros/node_handle.h ****   {
 215:ROSSerial/ros/node_handle.h ****      spin_timeout_ = timeout;
 216:ROSSerial/ros/node_handle.h ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 38


 217:ROSSerial/ros/node_handle.h **** 
 218:ROSSerial/ros/node_handle.h **** protected:
 219:ROSSerial/ros/node_handle.h ****   //State machine variables for spinOnce
 220:ROSSerial/ros/node_handle.h ****   int mode_;
 221:ROSSerial/ros/node_handle.h ****   int bytes_;
 222:ROSSerial/ros/node_handle.h ****   int topic_;
 223:ROSSerial/ros/node_handle.h ****   int index_;
 224:ROSSerial/ros/node_handle.h ****   int checksum_;
 225:ROSSerial/ros/node_handle.h **** 
 226:ROSSerial/ros/node_handle.h ****   bool configured_;
 227:ROSSerial/ros/node_handle.h **** 
 228:ROSSerial/ros/node_handle.h ****   /* used for syncing the time */
 229:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_time;
 230:ROSSerial/ros/node_handle.h ****   uint32_t last_sync_receive_time;
 231:ROSSerial/ros/node_handle.h ****   uint32_t last_msg_timeout_time;
 232:ROSSerial/ros/node_handle.h **** 
 233:ROSSerial/ros/node_handle.h **** public:
 234:ROSSerial/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 235:ROSSerial/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 236:ROSSerial/ros/node_handle.h ****    */
 237:ROSSerial/ros/node_handle.h **** 
 238:ROSSerial/ros/node_handle.h ****   virtual int spinOnce() {
 239:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 240:ROSSerial/ros/node_handle.h ****   }
 241:ROSSerial/ros/node_handle.h **** 
 242:ROSSerial/ros/node_handle.h **** //calling spinOnce() directly from spin_task gives stackoverflow
 243:ROSSerial/ros/node_handle.h ****   int spinOnce1()
 244:ROSSerial/ros/node_handle.h ****   {
 245:ROSSerial/ros/node_handle.h ****     static void (*s_CallBack)(char *);
 246:ROSSerial/ros/node_handle.h ****     
 247:ROSSerial/ros/node_handle.h ****     //printf("spinOnce\n");
 248:ROSSerial/ros/node_handle.h ****     /* restart if timed out */
 249:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 250:ROSSerial/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 251:ROSSerial/ros/node_handle.h ****     {
 252:ROSSerial/ros/node_handle.h ****       //printf("spinOnce  setting configured_ false %lu, %lu, %ld\n",c_time, 
 253:ROSSerial/ros/node_handle.h ****       //        last_sync_receive_time, (c_time-last_sync_receive_time));
 254:ROSSerial/ros/node_handle.h ****       configured_ = false;
 255:ROSSerial/ros/node_handle.h ****     }
 256:ROSSerial/ros/node_handle.h **** 
 257:ROSSerial/ros/node_handle.h ****     /* reset if message has timed out */
 258:ROSSerial/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 259:ROSSerial/ros/node_handle.h ****     {
 260:ROSSerial/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 261:ROSSerial/ros/node_handle.h ****       {
 262:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 263:ROSSerial/ros/node_handle.h ****       }
 264:ROSSerial/ros/node_handle.h ****     }
 265:ROSSerial/ros/node_handle.h **** 
 266:ROSSerial/ros/node_handle.h ****     /* while available buffer, read data */
 267:ROSSerial/ros/node_handle.h ****     while (true)
 268:ROSSerial/ros/node_handle.h ****     {
 269:ROSSerial/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 270:ROSSerial/ros/node_handle.h ****       if (spin_timeout_ > 0)
 271:ROSSerial/ros/node_handle.h ****       {
 272:ROSSerial/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 273:ROSSerial/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 39


 274:ROSSerial/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 275:ROSSerial/ros/node_handle.h ****         // and start fresh.
 276:ROSSerial/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 277:ROSSerial/ros/node_handle.h ****         {
 278:ROSSerial/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 279:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 280:ROSSerial/ros/node_handle.h ****         }
 281:ROSSerial/ros/node_handle.h ****       }
 282:ROSSerial/ros/node_handle.h ****       int data = hardware_.read();
 283:ROSSerial/ros/node_handle.h ****       if (data < 0)
 284:ROSSerial/ros/node_handle.h ****         break;
 285:ROSSerial/ros/node_handle.h ****       checksum_ += data;
 286:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 287:ROSSerial/ros/node_handle.h ****       {
 288:ROSSerial/ros/node_handle.h ****         message_in[index_++] = data;
 289:ROSSerial/ros/node_handle.h ****         bytes_--;
 290:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 291:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 292:ROSSerial/ros/node_handle.h ****       }
 293:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 294:ROSSerial/ros/node_handle.h ****       {
 295:ROSSerial/ros/node_handle.h ****         if (data == 0xff)
 296:ROSSerial/ros/node_handle.h ****         {
 297:ROSSerial/ros/node_handle.h ****           mode_++;
 298:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 299:ROSSerial/ros/node_handle.h ****         }
 300:ROSSerial/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 301:ROSSerial/ros/node_handle.h ****         {
 302:ROSSerial/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 303:ROSSerial/ros/node_handle.h ****           configured_ = false;
 304:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 305:ROSSerial/ros/node_handle.h ****         }
 306:ROSSerial/ros/node_handle.h ****       }
 307:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 308:ROSSerial/ros/node_handle.h ****       {
 309:ROSSerial/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 310:ROSSerial/ros/node_handle.h ****         {
 311:ROSSerial/ros/node_handle.h ****           mode_++;
 312:ROSSerial/ros/node_handle.h ****         }
 313:ROSSerial/ros/node_handle.h ****         else
 314:ROSSerial/ros/node_handle.h ****         {
 315:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 316:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 317:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 318:ROSSerial/ros/node_handle.h ****         }
 319:ROSSerial/ros/node_handle.h ****       }
 320:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 321:ROSSerial/ros/node_handle.h ****       {
 322:ROSSerial/ros/node_handle.h ****         bytes_ = data;
 323:ROSSerial/ros/node_handle.h ****         index_ = 0;
 324:ROSSerial/ros/node_handle.h ****         mode_++;
 325:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 326:ROSSerial/ros/node_handle.h ****       }
 327:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 328:ROSSerial/ros/node_handle.h ****       {
 329:ROSSerial/ros/node_handle.h ****         bytes_ += data << 8;
 330:ROSSerial/ros/node_handle.h ****         mode_++;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 40


 331:ROSSerial/ros/node_handle.h ****       }
 332:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 333:ROSSerial/ros/node_handle.h ****       {
 334:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 335:ROSSerial/ros/node_handle.h ****           mode_++;
 336:ROSSerial/ros/node_handle.h ****         else
 337:ROSSerial/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 338:ROSSerial/ros/node_handle.h ****       }
 339:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 340:ROSSerial/ros/node_handle.h ****       {
 341:ROSSerial/ros/node_handle.h ****         topic_ = data;
 342:ROSSerial/ros/node_handle.h ****         mode_++;
 343:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 344:ROSSerial/ros/node_handle.h ****       }
 345:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 346:ROSSerial/ros/node_handle.h ****       {
 347:ROSSerial/ros/node_handle.h ****         topic_ += data << 8;
 348:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 349:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 350:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 351:ROSSerial/ros/node_handle.h ****       }
 352:ROSSerial/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 353:ROSSerial/ros/node_handle.h ****       {
 354:ROSSerial/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 355:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 356:ROSSerial/ros/node_handle.h ****         {
 357:ROSSerial/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 358:ROSSerial/ros/node_handle.h ****           {
 359:ROSSerial/ros/node_handle.h ****             requestSyncTime();
 360:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 361:ROSSerial/ros/node_handle.h ****             last_sync_time = c_time;
 362:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 363:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 364:ROSSerial/ros/node_handle.h ****           }
 365:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 366:ROSSerial/ros/node_handle.h ****           {
 367:ROSSerial/ros/node_handle.h ****             syncTime(message_in);
 368:ROSSerial/ros/node_handle.h ****           }
 369:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 370:ROSSerial/ros/node_handle.h ****           {
 371:ROSSerial/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 372:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 373:ROSSerial/ros/node_handle.h ****           }
 374:ROSSerial/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 375:ROSSerial/ros/node_handle.h ****           {
 376:ROSSerial/ros/node_handle.h ****             configured_ = false;
 377:ROSSerial/ros/node_handle.h ****           }
 378:ROSSerial/ros/node_handle.h ****           else
 379:ROSSerial/ros/node_handle.h ****           {
 380:ROSSerial/ros/node_handle.h ****             if (subscribers2[topic_ - 100].topic_id != 0) {
 381:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 382:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 383:ROSSerial/ros/node_handle.h ****               s_CallBack(message_in);
 384:ROSSerial/ros/node_handle.h ****             }
 385:ROSSerial/ros/node_handle.h ****           }
 386:ROSSerial/ros/node_handle.h ****         }
 387:ROSSerial/ros/node_handle.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 41


 388:ROSSerial/ros/node_handle.h ****     }
 389:ROSSerial/ros/node_handle.h **** 
 390:ROSSerial/ros/node_handle.h ****     /* occasionally sync time */
 391:ROSSerial/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 392:ROSSerial/ros/node_handle.h ****     {
 393:ROSSerial/ros/node_handle.h ****       //printf("Resetting sync time %lu, %lu, %ld\n",c_time, last_sync_time, (c_time-last_sync_time
 394:ROSSerial/ros/node_handle.h ****       requestSyncTime(); 
 395:ROSSerial/ros/node_handle.h ****       last_sync_time = c_time;
 396:ROSSerial/ros/node_handle.h ****     }
 397:ROSSerial/ros/node_handle.h **** 
 398:ROSSerial/ros/node_handle.h ****     return SPIN_OK;
 399:ROSSerial/ros/node_handle.h ****   }
 400:ROSSerial/ros/node_handle.h **** 
 401:ROSSerial/ros/node_handle.h **** 
 402:ROSSerial/ros/node_handle.h ****   /* Are we connected to the PC? */
 403:ROSSerial/ros/node_handle.h ****   virtual bool connected()
 1155              		.loc 9 403 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160              	.LVL110:
 404:ROSSerial/ros/node_handle.h ****   {
 405:ROSSerial/ros/node_handle.h ****     return configured_;
 406:ROSSerial/ros/node_handle.h ****   };
 1161              		.loc 9 406 0
 1162 0000 90F81C05 		ldrb	r0, [r0, #1308]	@ zero_extendqisi2
 1163              	.LVL111:
 1164 0004 7047     		bx	lr
 1165              		.cfi_endproc
 1166              	.LFE531:
 1167              		.cantunwind
 1168              		.fnend
 1170              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1171              		.align	1
 1172              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1176              		.fpu fpv4-sp-d16
 1178              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1179              		.fnstart
 1180              	.LFB395:
 113:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1181              		.loc 4 113 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              	.LVL112:
 1186 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1187              	.LCFI8:
 1188              		.cfi_def_cfa_offset 24
 1189              		.cfi_offset 3, -24
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 42


 1194              		.cfi_offset 14, -4
 1195 0002 0646     		mov	r6, r0
 1196 0004 0D46     		mov	r5, r1
 1197              	.LVL113:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1198              		.loc 4 116 0
 1199 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1200              	.LVL114:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1201              		.loc 4 117 0
 1202 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1203 000a A342     		cmp	r3, r4
 1204 000c 1AD3     		bcc	.L92
 1205              	.LVL115:
 1206              	.L80:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1207              		.loc 4 120 0
 1208 000e 3471     		strb	r4, [r6, #4]
 1209              	.LVL116:
 1210              	.LBB193:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1211              		.loc 4 121 0
 1212 0010 0022     		movs	r2, #0
 1213              	.LBE193:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 1214              		.loc 4 119 0
 1215 0012 0424     		movs	r4, #4
 1216              	.LVL117:
 1217              	.L82:
 1218              	.LBB195:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1219              		.loc 4 121 0 discriminator 3
 1220 0014 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1221 0016 9342     		cmp	r3, r2
 1222 0018 1AD9     		bls	.L81
 1223              	.LBB194:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1224              		.loc 4 127 0 discriminator 2
 1225 001a 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1226              		.loc 4 128 0 discriminator 2
 1227 001c 611C     		adds	r1, r4, #1
 1228 001e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1229 0020 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1230              		.loc 4 129 0 discriminator 2
 1231 0024 A11C     		adds	r1, r4, #2
 1232 0026 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1233 0028 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 1234              		.loc 4 130 0 discriminator 2
 1235 002c E11C     		adds	r1, r4, #3
 1236 002e 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1237 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1238              		.loc 4 131 0 discriminator 2
 1239 0034 B360     		str	r3, [r6, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 43


 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 1240              		.loc 4 132 0 discriminator 2
 1241 0036 0434     		adds	r4, r4, #4
 1242              	.LVL118:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1243              		.loc 4 133 0 discriminator 2
 1244 0038 F168     		ldr	r1, [r6, #12]
 1245 003a 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1246              	.LBE194:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1247              		.loc 4 121 0 discriminator 2
 1248 003e 0132     		adds	r2, r2, #1
 1249              	.LVL119:
 1250 0040 D2B2     		uxtb	r2, r2
 1251              	.LVL120:
 1252 0042 E7E7     		b	.L82
 1253              	.LVL121:
 1254              	.L92:
 1255              	.LBE195:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1256              		.loc 4 118 0
 1257 0044 A100     		lsls	r1, r4, #2
 1258              	.LVL122:
 1259 0046 C068     		ldr	r0, [r0, #12]
 1260              	.LVL123:
 1261 0048 FFF7FEFF 		bl	realloc
 1262              	.LVL124:
 1263 004c F060     		str	r0, [r6, #12]
 1264 004e DEE7     		b	.L80
 1265              	.LVL125:
 1266              	.L81:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1267              		.loc 4 135 0
 1268 0050 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1269              	.LVL126:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1270              		.loc 4 136 0
 1271 0052 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1272 0054 BB42     		cmp	r3, r7
 1273 0056 1AD3     		bcc	.L93
 1274              	.LVL127:
 1275              	.L83:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 1276              		.loc 4 138 0
 1277 0058 0434     		adds	r4, r4, #4
 1278              	.LVL128:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1279              		.loc 4 139 0
 1280 005a 3774     		strb	r7, [r6, #16]
 1281              	.LVL129:
 1282              	.LBB196:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1283              		.loc 4 140 0
 1284 005c 0022     		movs	r2, #0
 1285              	.LVL130:
 1286              	.L85:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 44


 1287              		.loc 4 140 0 is_stmt 0 discriminator 3
 1288 005e 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 1289 0060 9342     		cmp	r3, r2
 1290 0062 1AD9     		bls	.L84
 1291              	.LBB197:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1292              		.loc 4 146 0 is_stmt 1 discriminator 2
 1293 0064 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1294              		.loc 4 147 0 discriminator 2
 1295 0066 611C     		adds	r1, r4, #1
 1296 0068 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1297 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1298              		.loc 4 148 0 discriminator 2
 1299 006e A11C     		adds	r1, r4, #2
 1300 0070 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1301 0072 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 1302              		.loc 4 149 0 discriminator 2
 1303 0076 E11C     		adds	r1, r4, #3
 1304 0078 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 1305 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 1306              		.loc 4 150 0 discriminator 2
 1307 007e 7361     		str	r3, [r6, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 1308              		.loc 4 151 0 discriminator 2
 1309 0080 0434     		adds	r4, r4, #4
 1310              	.LVL131:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1311              		.loc 4 152 0 discriminator 2
 1312 0082 B169     		ldr	r1, [r6, #24]
 1313 0084 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 1314              	.LBE197:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1315              		.loc 4 140 0 discriminator 2
 1316 0088 0132     		adds	r2, r2, #1
 1317              	.LVL132:
 1318 008a D2B2     		uxtb	r2, r2
 1319              	.LVL133:
 1320 008c E7E7     		b	.L85
 1321              	.LVL134:
 1322              	.L93:
 1323              	.LBE196:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1324              		.loc 4 137 0
 1325 008e B900     		lsls	r1, r7, #2
 1326 0090 B069     		ldr	r0, [r6, #24]
 1327 0092 FFF7FEFF 		bl	realloc
 1328              	.LVL135:
 1329 0096 B061     		str	r0, [r6, #24]
 1330 0098 DEE7     		b	.L83
 1331              	.LVL136:
 1332              	.L84:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 1333              		.loc 4 154 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 45


 1334 009a 2F5D     		ldrb	r7, [r5, r4]	@ zero_extendqisi2
 1335              	.LVL137:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 1336              		.loc 4 155 0
 1337 009c 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1338 009e BB42     		cmp	r3, r7
 1339 00a0 04D3     		bcc	.L94
 1340              	.LVL138:
 1341              	.L86:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 1342              		.loc 4 157 0
 1343 00a2 201D     		adds	r0, r4, #4
 1344              	.LVL139:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1345              		.loc 4 158 0
 1346 00a4 3777     		strb	r7, [r6, #28]
 1347              	.LVL140:
 1348              	.LBB198:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1349              		.loc 4 159 0
 1350 00a6 4FF0000C 		mov	ip, #0
 1351 00aa 12E0     		b	.L90
 1352              	.LVL141:
 1353              	.L94:
 1354              	.LBE198:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 1355              		.loc 4 156 0
 1356 00ac B900     		lsls	r1, r7, #2
 1357 00ae 706A     		ldr	r0, [r6, #36]
 1358 00b0 FFF7FEFF 		bl	realloc
 1359              	.LVL142:
 1360 00b4 7062     		str	r0, [r6, #36]
 1361 00b6 F4E7     		b	.L86
 1362              	.LVL143:
 1363              	.L88:
 1364              	.LBB202:
 1365              	.LBB199:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 1366              		.loc 4 166 0 discriminator 2
 1367 00b8 431E     		subs	r3, r0, #1
 1368              	.LVL144:
 1369 00ba 0022     		movs	r2, #0
 1370 00bc EA54     		strb	r2, [r5, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 1371              		.loc 4 167 0 discriminator 2
 1372 00be 013C     		subs	r4, r4, #1
 1373 00c0 2C44     		add	r4, r4, r5
 1374 00c2 3462     		str	r4, [r6, #32]
 1375              	.LVL145:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1376              		.loc 4 169 0 discriminator 2
 1377 00c4 736A     		ldr	r3, [r6, #36]
 1378 00c6 43F82C40 		str	r4, [r3, ip, lsl #2]	@ unaligned
 1379              	.LVL146:
 1380              	.LBE199:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1381              		.loc 4 159 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 46


 1382 00ca 0CF1010C 		add	ip, ip, #1
 1383              	.LVL147:
 1384 00ce 5FFA8CFC 		uxtb	ip, ip
 1385              	.LVL148:
 1386              	.L90:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 1387              		.loc 4 159 0 is_stmt 0 discriminator 1
 1388 00d2 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
 1389 00d4 6345     		cmp	r3, ip
 1390 00d6 0AD9     		bls	.L79
 1391              	.LBB201:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1392              		.loc 4 161 0 is_stmt 1
 1393 00d8 2F58     		ldr	r7, [r5, r0]	@ unaligned
 1394              	.LVL149:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 1395              		.loc 4 162 0
 1396 00da 041D     		adds	r4, r0, #4
 1397              	.LVL150:
 1398              	.LBB200:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1399              		.loc 4 163 0
 1400 00dc 2346     		mov	r3, r4
 1401              	.LVL151:
 1402              	.L89:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1403              		.loc 4 163 0 is_stmt 0 discriminator 3
 1404 00de 3819     		adds	r0, r7, r4
 1405 00e0 9842     		cmp	r0, r3
 1406 00e2 E9D9     		bls	.L88
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1407              		.loc 4 164 0 is_stmt 1 discriminator 2
 1408 00e4 5A1E     		subs	r2, r3, #1
 1409 00e6 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 1410 00e8 A954     		strb	r1, [r5, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1411              		.loc 4 163 0 discriminator 2
 1412 00ea 0133     		adds	r3, r3, #1
 1413              	.LVL152:
 1414 00ec F7E7     		b	.L89
 1415              	.LVL153:
 1416              	.L79:
 1417              	.LBE200:
 1418              	.LBE201:
 1419              	.LBE202:
 172:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1420              		.loc 4 172 0
 1421 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE395:
 1424              		.cantunwind
 1425              		.fnend
 1427              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1428              		.align	1
 1429              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1430              		.syntax unified
 1431              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 47


 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	_ZNK8std_msgs6Header9serializeEPh:
 1436              		.fnstart
 1437              	.LFB474:
  20:ROSSerial/std_msgs/Header.h ****     {
 1438              		.loc 6 20 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              	.LVL154:
 1443 0000 70B5     		push	{r4, r5, r6, lr}
 1444              	.LCFI9:
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 0546     		mov	r5, r0
 1451 0004 0C46     		mov	r4, r1
 1452              	.LVL155:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1453              		.loc 6 23 0
 1454 0006 4368     		ldr	r3, [r0, #4]
 1455 0008 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1456              		.loc 6 24 0
 1457 000a 4368     		ldr	r3, [r0, #4]
 1458 000c 1B0A     		lsrs	r3, r3, #8
 1459 000e 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1460              		.loc 6 25 0
 1461 0010 C388     		ldrh	r3, [r0, #6]
 1462 0012 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1463              		.loc 6 26 0
 1464 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1465 0016 CB70     		strb	r3, [r1, #3]
 1466              	.LVL156:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1467              		.loc 6 28 0
 1468 0018 8368     		ldr	r3, [r0, #8]
 1469 001a 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1470              		.loc 6 29 0
 1471 001c 8368     		ldr	r3, [r0, #8]
 1472 001e 1B0A     		lsrs	r3, r3, #8
 1473 0020 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1474              		.loc 6 30 0
 1475 0022 4389     		ldrh	r3, [r0, #10]
 1476 0024 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1477              		.loc 6 31 0
 1478 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1479 0028 CB71     		strb	r3, [r1, #7]
 1480              	.LVL157:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 48


  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1481              		.loc 6 33 0
 1482 002a C368     		ldr	r3, [r0, #12]
 1483 002c 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1484              		.loc 6 34 0
 1485 002e C368     		ldr	r3, [r0, #12]
 1486 0030 1B0A     		lsrs	r3, r3, #8
 1487 0032 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1488              		.loc 6 35 0
 1489 0034 C389     		ldrh	r3, [r0, #14]
 1490 0036 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1491              		.loc 6 36 0
 1492 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1493 003a CB72     		strb	r3, [r1, #11]
 1494              	.LVL158:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1495              		.loc 6 38 0
 1496 003c 0069     		ldr	r0, [r0, #16]
 1497              	.LVL159:
 1498 003e FFF7FEFF 		bl	strlen
 1499              	.LVL160:
 1500 0042 0646     		mov	r6, r0
 1501              	.LVL161:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 1502              		.loc 6 39 0
 1503 0044 E060     		str	r0, [r4, #12]	@ unaligned
 1504              	.LVL162:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 1505              		.loc 6 41 0
 1506 0046 0246     		mov	r2, r0
 1507 0048 2969     		ldr	r1, [r5, #16]
 1508 004a 04F11000 		add	r0, r4, #16
 1509              	.LVL163:
 1510 004e FFF7FEFF 		bl	memcpy
 1511              	.LVL164:
  44:ROSSerial/std_msgs/Header.h **** 
 1512              		.loc 6 44 0
 1513 0052 06F11000 		add	r0, r6, #16
 1514              	.LVL165:
 1515 0056 70BD     		pop	{r4, r5, r6, pc}
 1516              		.cfi_endproc
 1517              	.LFE474:
 1518              		.cantunwind
 1519              		.fnend
 1521              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 1522              		.align	1
 1523              		.weak	_ZNK8std_msgs6String9serializeEPh
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	_ZNK8std_msgs6String9serializeEPh:
 1530              		.fnstart
 1531              	.LFB403:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 49


  18:ROSSerial/std_msgs/ROSString.h ****     {
 1532              		.loc 5 18 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL166:
 1537 0000 70B5     		push	{r4, r5, r6, lr}
 1538              	.LCFI10:
 1539              		.cfi_def_cfa_offset 16
 1540              		.cfi_offset 4, -16
 1541              		.cfi_offset 5, -12
 1542              		.cfi_offset 6, -8
 1543              		.cfi_offset 14, -4
 1544 0002 0646     		mov	r6, r0
 1545 0004 0C46     		mov	r4, r1
 1546              	.LVL167:
  21:ROSSerial/std_msgs/ROSString.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 1547              		.loc 5 21 0
 1548 0006 4068     		ldr	r0, [r0, #4]
 1549              	.LVL168:
 1550 0008 FFF7FEFF 		bl	strlen
 1551              	.LVL169:
 1552 000c 0546     		mov	r5, r0
 1553              	.LVL170:
  22:ROSSerial/std_msgs/ROSString.h ****       offset += 4;
 1554              		.loc 5 22 0
 1555 000e 2046     		mov	r0, r4
 1556              	.LVL171:
 1557 0010 40F8045B 		str	r5, [r0], #4	@ unaligned
 1558              	.LVL172:
  24:ROSSerial/std_msgs/ROSString.h ****       offset += length_data;
 1559              		.loc 5 24 0
 1560 0014 2A46     		mov	r2, r5
 1561 0016 7168     		ldr	r1, [r6, #4]
 1562 0018 FFF7FEFF 		bl	memcpy
 1563              	.LVL173:
  27:ROSSerial/std_msgs/ROSString.h **** 
 1564              		.loc 5 27 0
 1565 001c 281D     		adds	r0, r5, #4
 1566              	.LVL174:
 1567 001e 70BD     		pop	{r4, r5, r6, pc}
 1568              		.cfi_endproc
 1569              	.LFE403:
 1570              		.cantunwind
 1571              		.fnend
 1573              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1574              		.align	1
 1575              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1579              		.fpu fpv4-sp-d16
 1581              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1582              		.fnstart
 1583              	.LFB386:
  24:ROSSerial/rosserial_msgs/Log.h ****     {
 1584              		.loc 3 24 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 50


 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 0
 1587              		@ frame_needed = 0, uses_anonymous_args = 0
 1588              	.LVL175:
 1589 0000 70B5     		push	{r4, r5, r6, lr}
 1590              	.LCFI11:
 1591              		.cfi_def_cfa_offset 16
 1592              		.cfi_offset 4, -16
 1593              		.cfi_offset 5, -12
 1594              		.cfi_offset 6, -8
 1595              		.cfi_offset 14, -4
 1596 0002 0646     		mov	r6, r0
 1597 0004 0D46     		mov	r5, r1
 1598              	.LVL176:
  27:ROSSerial/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1599              		.loc 3 27 0
 1600 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1601 0008 0B70     		strb	r3, [r1]
 1602              	.LVL177:
  29:ROSSerial/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1603              		.loc 3 29 0
 1604 000a 8068     		ldr	r0, [r0, #8]
 1605              	.LVL178:
 1606 000c FFF7FEFF 		bl	strlen
 1607              	.LVL179:
 1608 0010 0446     		mov	r4, r0
 1609              	.LVL180:
  30:ROSSerial/rosserial_msgs/Log.h ****       offset += 4;
 1610              		.loc 3 30 0
 1611 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1612              	.LVL181:
  32:ROSSerial/rosserial_msgs/Log.h ****       offset += length_msg;
 1613              		.loc 3 32 0
 1614 0016 0246     		mov	r2, r0
 1615 0018 B168     		ldr	r1, [r6, #8]
 1616 001a 681D     		adds	r0, r5, #5
 1617              	.LVL182:
 1618 001c FFF7FEFF 		bl	memcpy
 1619              	.LVL183:
  35:ROSSerial/rosserial_msgs/Log.h **** 
 1620              		.loc 3 35 0
 1621 0020 601D     		adds	r0, r4, #5
 1622              	.LVL184:
 1623 0022 70BD     		pop	{r4, r5, r6, pc}
 1624              		.cfi_endproc
 1625              	.LFE386:
 1626              		.cantunwind
 1627              		.fnend
 1629              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1630              		.align	1
 1631              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu fpv4-sp-d16
 1637              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1638              		.fnstart
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 51


 1639              	.LFB382:
  29:ROSSerial/rosserial_msgs/TopicInfo.h ****     {
 1640              		.loc 2 29 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              	.LVL185:
 1645 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1646              	.LCFI12:
 1647              		.cfi_def_cfa_offset 24
 1648              		.cfi_offset 4, -24
 1649              		.cfi_offset 5, -20
 1650              		.cfi_offset 6, -16
 1651              		.cfi_offset 7, -12
 1652              		.cfi_offset 8, -8
 1653              		.cfi_offset 14, -4
 1654 0004 0646     		mov	r6, r0
 1655 0006 0C46     		mov	r4, r1
 1656              	.LVL186:
  32:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1657              		.loc 2 32 0
 1658 0008 8388     		ldrh	r3, [r0, #4]
 1659 000a 0B70     		strb	r3, [r1]
  33:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1660              		.loc 2 33 0
 1661 000c 8388     		ldrh	r3, [r0, #4]
 1662 000e 1B0A     		lsrs	r3, r3, #8
 1663 0010 4B70     		strb	r3, [r1, #1]
 1664              	.LVL187:
  35:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1665              		.loc 2 35 0
 1666 0012 8068     		ldr	r0, [r0, #8]
 1667              	.LVL188:
 1668 0014 FFF7FEFF 		bl	strlen
 1669              	.LVL189:
 1670 0018 0746     		mov	r7, r0
 1671              	.LVL190:
  36:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1672              		.loc 2 36 0
 1673 001a C4F80200 		str	r0, [r4, #2]	@ unaligned
 1674              	.LVL191:
  38:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1675              		.loc 2 38 0
 1676 001e 0246     		mov	r2, r0
 1677 0020 B168     		ldr	r1, [r6, #8]
 1678 0022 A01D     		adds	r0, r4, #6
 1679              	.LVL192:
 1680 0024 FFF7FEFF 		bl	memcpy
 1681              	.LVL193:
  39:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1682              		.loc 2 39 0
 1683 0028 07F10608 		add	r8, r7, #6
 1684              	.LVL194:
  40:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1685              		.loc 2 40 0
 1686 002c F068     		ldr	r0, [r6, #12]
 1687 002e FFF7FEFF 		bl	strlen
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 52


 1688              	.LVL195:
 1689 0032 0546     		mov	r5, r0
 1690              	.LVL196:
  41:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1691              		.loc 2 41 0
 1692 0034 44F80800 		str	r0, [r4, r8]	@ unaligned
  42:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1693              		.loc 2 42 0
 1694 0038 0A37     		adds	r7, r7, #10
 1695              	.LVL197:
  43:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1696              		.loc 2 43 0
 1697 003a 0246     		mov	r2, r0
 1698 003c F168     		ldr	r1, [r6, #12]
 1699 003e E019     		adds	r0, r4, r7
 1700              	.LVL198:
 1701 0040 FFF7FEFF 		bl	memcpy
 1702              	.LVL199:
  44:ROSSerial/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1703              		.loc 2 44 0
 1704 0044 2F44     		add	r7, r7, r5
 1705              	.LVL200:
  45:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1706              		.loc 2 45 0
 1707 0046 3069     		ldr	r0, [r6, #16]
 1708 0048 FFF7FEFF 		bl	strlen
 1709              	.LVL201:
 1710 004c 0546     		mov	r5, r0
 1711              	.LVL202:
  46:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1712              		.loc 2 46 0
 1713 004e E051     		str	r0, [r4, r7]	@ unaligned
  47:ROSSerial/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 1714              		.loc 2 47 0
 1715 0050 0437     		adds	r7, r7, #4
 1716              	.LVL203:
  48:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1717              		.loc 2 48 0
 1718 0052 0246     		mov	r2, r0
 1719 0054 3169     		ldr	r1, [r6, #16]
 1720 0056 E019     		adds	r0, r4, r7
 1721              	.LVL204:
 1722 0058 FFF7FEFF 		bl	memcpy
 1723              	.LVL205:
  49:ROSSerial/rosserial_msgs/TopicInfo.h ****       union {
 1724              		.loc 2 49 0
 1725 005c E819     		adds	r0, r5, r7
 1726              	.LVL206:
  54:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1727              		.loc 2 54 0
 1728 005e 7369     		ldr	r3, [r6, #20]
  55:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1729              		.loc 2 55 0
 1730 0060 2354     		strb	r3, [r4, r0]
  56:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1731              		.loc 2 56 0
 1732 0062 190A     		lsrs	r1, r3, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 53


 1733 0064 421C     		adds	r2, r0, #1
 1734 0066 A154     		strb	r1, [r4, r2]
  57:ROSSerial/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1735              		.loc 2 57 0
 1736 0068 190C     		lsrs	r1, r3, #16
 1737 006a 821C     		adds	r2, r0, #2
 1738 006c A154     		strb	r1, [r4, r2]
  58:ROSSerial/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1739              		.loc 2 58 0
 1740 006e 1B0E     		lsrs	r3, r3, #24
 1741 0070 C21C     		adds	r2, r0, #3
 1742 0072 A354     		strb	r3, [r4, r2]
 1743              	.LVL207:
  61:ROSSerial/rosserial_msgs/TopicInfo.h **** 
 1744              		.loc 2 61 0
 1745 0074 0430     		adds	r0, r0, #4
 1746              	.LVL208:
 1747 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1748              		.cfi_endproc
 1749              	.LFE382:
 1750              		.cantunwind
 1751              		.fnend
 1753              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1754              		.align	1
 1755              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1756              		.syntax unified
 1757              		.thumb
 1758              		.thumb_func
 1759              		.fpu fpv4-sp-d16
 1761              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1762              		.fnstart
 1763              	.LFB394:
  64:ROSSerial/rosserial_msgs/RequestParam.h ****     {
 1764              		.loc 4 64 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL209:
 1769 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1770              	.LCFI13:
 1771              		.cfi_def_cfa_offset 24
 1772              		.cfi_offset 4, -24
 1773              		.cfi_offset 5, -20
 1774              		.cfi_offset 6, -16
 1775              		.cfi_offset 7, -12
 1776              		.cfi_offset 8, -8
 1777              		.cfi_offset 14, -4
 1778 0004 0546     		mov	r5, r0
 1779 0006 0C46     		mov	r4, r1
 1780              	.LVL210:
  67:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1781              		.loc 4 67 0
 1782 0008 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 1783 000a 0B70     		strb	r3, [r1]
 1784              	.LVL211:
  68:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1785              		.loc 4 68 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 54


 1786 000c 0022     		movs	r2, #0
 1787 000e 4A70     		strb	r2, [r1, #1]
 1788              	.LVL212:
  69:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1789              		.loc 4 69 0
 1790 0010 8A70     		strb	r2, [r1, #2]
 1791              	.LVL213:
  70:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1792              		.loc 4 70 0
 1793 0012 CA70     		strb	r2, [r1, #3]
 1794              	.LVL214:
 1795 0014 0423     		movs	r3, #4
 1796              	.LVL215:
 1797              	.L105:
 1798              	.LBB203:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1799              		.loc 4 71 0 discriminator 3
 1800 0016 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 1801 0018 9142     		cmp	r1, r2
 1802 001a 10D9     		bls	.L104
 1803              	.LBB204:
  76:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1804              		.loc 4 76 0 discriminator 2
 1805 001c E968     		ldr	r1, [r5, #12]
 1806 001e 51F82210 		ldr	r1, [r1, r2, lsl #2]
  77:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1807              		.loc 4 77 0 discriminator 2
 1808 0022 E154     		strb	r1, [r4, r3]
  78:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1809              		.loc 4 78 0 discriminator 2
 1810 0024 0E0A     		lsrs	r6, r1, #8
 1811 0026 581C     		adds	r0, r3, #1
 1812 0028 2654     		strb	r6, [r4, r0]
  79:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1813              		.loc 4 79 0 discriminator 2
 1814 002a 0E0C     		lsrs	r6, r1, #16
 1815 002c 981C     		adds	r0, r3, #2
 1816 002e 2654     		strb	r6, [r4, r0]
  80:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1817              		.loc 4 80 0 discriminator 2
 1818 0030 090E     		lsrs	r1, r1, #24
 1819 0032 D81C     		adds	r0, r3, #3
 1820 0034 2154     		strb	r1, [r4, r0]
  81:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1821              		.loc 4 81 0 discriminator 2
 1822 0036 0433     		adds	r3, r3, #4
 1823              	.LVL216:
 1824              	.LBE204:
  71:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1825              		.loc 4 71 0 discriminator 2
 1826 0038 0132     		adds	r2, r2, #1
 1827              	.LVL217:
 1828 003a D2B2     		uxtb	r2, r2
 1829              	.LVL218:
 1830 003c EBE7     		b	.L105
 1831              	.L104:
 1832              	.LBE203:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 55


  83:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1833              		.loc 4 83 0
 1834 003e 591C     		adds	r1, r3, #1
 1835              	.LVL219:
 1836 0040 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 1837              	.LVL220:
 1838 0042 E254     		strb	r2, [r4, r3]
  84:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1839              		.loc 4 84 0
 1840 0044 981C     		adds	r0, r3, #2
 1841              	.LVL221:
 1842 0046 0022     		movs	r2, #0
 1843 0048 6254     		strb	r2, [r4, r1]
  85:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1844              		.loc 4 85 0
 1845 004a D91C     		adds	r1, r3, #3
 1846              	.LVL222:
 1847 004c 2254     		strb	r2, [r4, r0]
  86:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1848              		.loc 4 86 0
 1849 004e 0433     		adds	r3, r3, #4
 1850              	.LVL223:
 1851 0050 6254     		strb	r2, [r4, r1]
 1852              	.LVL224:
 1853              	.L107:
 1854              	.LBB205:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1855              		.loc 4 87 0 discriminator 3
 1856 0052 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1857 0054 9142     		cmp	r1, r2
 1858 0056 10D9     		bls	.L106
 1859              	.LBB206:
  92:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1860              		.loc 4 92 0 discriminator 2
 1861 0058 A969     		ldr	r1, [r5, #24]
 1862 005a 51F82210 		ldr	r1, [r1, r2, lsl #2]
  93:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1863              		.loc 4 93 0 discriminator 2
 1864 005e E154     		strb	r1, [r4, r3]
  94:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1865              		.loc 4 94 0 discriminator 2
 1866 0060 0E0A     		lsrs	r6, r1, #8
 1867 0062 581C     		adds	r0, r3, #1
 1868 0064 2654     		strb	r6, [r4, r0]
  95:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1869              		.loc 4 95 0 discriminator 2
 1870 0066 0E0C     		lsrs	r6, r1, #16
 1871 0068 981C     		adds	r0, r3, #2
 1872 006a 2654     		strb	r6, [r4, r0]
  96:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1873              		.loc 4 96 0 discriminator 2
 1874 006c 090E     		lsrs	r1, r1, #24
 1875 006e D81C     		adds	r0, r3, #3
 1876 0070 2154     		strb	r1, [r4, r0]
  97:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1877              		.loc 4 97 0 discriminator 2
 1878 0072 0433     		adds	r3, r3, #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 56


 1879              	.LVL225:
 1880              	.LBE206:
  87:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 1881              		.loc 4 87 0 discriminator 2
 1882 0074 0132     		adds	r2, r2, #1
 1883              	.LVL226:
 1884 0076 D2B2     		uxtb	r2, r2
 1885              	.LVL227:
 1886 0078 EBE7     		b	.L107
 1887              	.L106:
 1888              	.LBE205:
  99:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1889              		.loc 4 99 0
 1890 007a 5A1C     		adds	r2, r3, #1
 1891              	.LVL228:
 1892 007c 297F     		ldrb	r1, [r5, #28]	@ zero_extendqisi2
 1893 007e E154     		strb	r1, [r4, r3]
 100:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1894              		.loc 4 100 0
 1895 0080 991C     		adds	r1, r3, #2
 1896              	.LVL229:
 1897 0082 4FF00008 		mov	r8, #0
 1898 0086 04F80280 		strb	r8, [r4, r2]
 101:ROSSerial/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1899              		.loc 4 101 0
 1900 008a DA1C     		adds	r2, r3, #3
 1901              	.LVL230:
 1902 008c 04F80180 		strb	r8, [r4, r1]
 102:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1903              		.loc 4 102 0
 1904 0090 1E1D     		adds	r6, r3, #4
 1905              	.LVL231:
 1906 0092 04F80280 		strb	r8, [r4, r2]
 1907              	.LVL232:
 1908              	.L109:
 1909              	.LBB207:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1910              		.loc 4 103 0 discriminator 3
 1911 0096 2B7F     		ldrb	r3, [r5, #28]	@ zero_extendqisi2
 1912 0098 4345     		cmp	r3, r8
 1913 009a 14D9     		bls	.L103
 1914              	.LBB208:
 104:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1915              		.loc 4 104 0 discriminator 2
 1916 009c 6B6A     		ldr	r3, [r5, #36]
 1917 009e 53F82800 		ldr	r0, [r3, r8, lsl #2]
 1918 00a2 FFF7FEFF 		bl	strlen
 1919              	.LVL233:
 1920 00a6 0746     		mov	r7, r0
 1921              	.LVL234:
 105:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 1922              		.loc 4 105 0 discriminator 2
 1923 00a8 A051     		str	r0, [r4, r6]	@ unaligned
 106:ROSSerial/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1924              		.loc 4 106 0 discriminator 2
 1925 00aa 0436     		adds	r6, r6, #4
 1926              	.LVL235:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 57


 107:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1927              		.loc 4 107 0 discriminator 2
 1928 00ac 6B6A     		ldr	r3, [r5, #36]
 1929 00ae 0246     		mov	r2, r0
 1930 00b0 53F82810 		ldr	r1, [r3, r8, lsl #2]
 1931 00b4 A019     		adds	r0, r4, r6
 1932              	.LVL236:
 1933 00b6 FFF7FEFF 		bl	memcpy
 1934              	.LVL237:
 108:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 1935              		.loc 4 108 0 discriminator 2
 1936 00ba 3E44     		add	r6, r6, r7
 1937              	.LVL238:
 1938              	.LBE208:
 103:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1939              		.loc 4 103 0 discriminator 2
 1940 00bc 08F10108 		add	r8, r8, #1
 1941              	.LVL239:
 1942 00c0 5FFA88F8 		uxtb	r8, r8
 1943              	.LVL240:
 1944 00c4 E7E7     		b	.L109
 1945              	.L103:
 1946              	.LBE207:
 111:ROSSerial/rosserial_msgs/RequestParam.h **** 
 1947              		.loc 4 111 0
 1948 00c6 3046     		mov	r0, r6
 1949 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1950              		.cfi_endproc
 1951              	.LFE394:
 1952              		.cantunwind
 1953              		.fnend
 1955              		.section	.text._ZNK11sensor_msgs10JointState9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs10Joint
 1956              		.align	1
 1957              		.weak	_ZNK11sensor_msgs10JointState9serializeEPh
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1961              		.fpu fpv4-sp-d16
 1963              	_ZNK11sensor_msgs10JointState9serializeEPh:
 1964              		.fnstart
 1965              	.LFB487:
  44:ROSSerial/sensor_msgs/JointState.h ****     {
 1966              		.loc 7 44 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              	.LVL241:
 1971 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1972              	.LCFI14:
 1973              		.cfi_def_cfa_offset 32
 1974              		.cfi_offset 3, -32
 1975              		.cfi_offset 4, -28
 1976              		.cfi_offset 5, -24
 1977              		.cfi_offset 6, -20
 1978              		.cfi_offset 7, -16
 1979              		.cfi_offset 8, -12
 1980              		.cfi_offset 9, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 58


 1981              		.cfi_offset 14, -4
 1982 0004 0646     		mov	r6, r0
 1983 0006 0D46     		mov	r5, r1
 1984              	.LVL242:
 1985              	.LBB224:
 1986              	.LBB225:
  23:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1987              		.loc 6 23 0
 1988 0008 8368     		ldr	r3, [r0, #8]
 1989 000a 0B70     		strb	r3, [r1]
  24:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1990              		.loc 6 24 0
 1991 000c 8368     		ldr	r3, [r0, #8]
 1992 000e 1B0A     		lsrs	r3, r3, #8
 1993 0010 4B70     		strb	r3, [r1, #1]
  25:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1994              		.loc 6 25 0
 1995 0012 4389     		ldrh	r3, [r0, #10]
 1996 0014 8B70     		strb	r3, [r1, #2]
  26:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1997              		.loc 6 26 0
 1998 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1999 0018 CB70     		strb	r3, [r1, #3]
 2000              	.LVL243:
  28:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 2001              		.loc 6 28 0
 2002 001a C368     		ldr	r3, [r0, #12]
 2003 001c 0B71     		strb	r3, [r1, #4]
  29:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 2004              		.loc 6 29 0
 2005 001e C368     		ldr	r3, [r0, #12]
 2006 0020 1B0A     		lsrs	r3, r3, #8
 2007 0022 4B71     		strb	r3, [r1, #5]
  30:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 2008              		.loc 6 30 0
 2009 0024 C389     		ldrh	r3, [r0, #14]
 2010 0026 8B71     		strb	r3, [r1, #6]
  31:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2011              		.loc 6 31 0
 2012 0028 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 2013 002a CB71     		strb	r3, [r1, #7]
 2014              	.LVL244:
  33:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 2015              		.loc 6 33 0
 2016 002c 0369     		ldr	r3, [r0, #16]
 2017 002e 0B72     		strb	r3, [r1, #8]
  34:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 2018              		.loc 6 34 0
 2019 0030 0369     		ldr	r3, [r0, #16]
 2020 0032 1B0A     		lsrs	r3, r3, #8
 2021 0034 4B72     		strb	r3, [r1, #9]
  35:ROSSerial/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 2022              		.loc 6 35 0
 2023 0036 438A     		ldrh	r3, [r0, #18]
 2024 0038 8B72     		strb	r3, [r1, #10]
  36:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2025              		.loc 6 36 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 59


 2026 003a C37C     		ldrb	r3, [r0, #19]	@ zero_extendqisi2
 2027 003c CB72     		strb	r3, [r1, #11]
 2028              	.LVL245:
  38:ROSSerial/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 2029              		.loc 6 38 0
 2030 003e 4069     		ldr	r0, [r0, #20]
 2031              	.LVL246:
 2032 0040 FFF7FEFF 		bl	strlen
 2033              	.LVL247:
 2034 0044 0446     		mov	r4, r0
 2035              	.LVL248:
  39:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2036              		.loc 6 39 0
 2037 0046 E860     		str	r0, [r5, #12]	@ unaligned
 2038              	.LVL249:
  41:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2039              		.loc 6 41 0
 2040 0048 0246     		mov	r2, r0
 2041 004a 7169     		ldr	r1, [r6, #20]
 2042 004c 05F11000 		add	r0, r5, #16
 2043              	.LVL250:
 2044 0050 FFF7FEFF 		bl	memcpy
 2045              	.LVL251:
  42:ROSSerial/std_msgs/Header.h ****       return offset;
 2046              		.loc 6 42 0
 2047 0054 04F11003 		add	r3, r4, #16
 2048              	.LVL252:
 2049              	.LBE225:
 2050              	.LBE224:
  48:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->name_length >> (8 * 1)) & 0xFF;
 2051              		.loc 7 48 0
 2052 0058 B269     		ldr	r2, [r6, #24]
 2053 005a EA54     		strb	r2, [r5, r3]
  49:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->name_length >> (8 * 2)) & 0xFF;
 2054              		.loc 7 49 0
 2055 005c B369     		ldr	r3, [r6, #24]
 2056 005e 1B0A     		lsrs	r3, r3, #8
 2057 0060 04F11102 		add	r2, r4, #17
 2058 0064 AB54     		strb	r3, [r5, r2]
  50:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->name_length >> (8 * 3)) & 0xFF;
 2059              		.loc 7 50 0
 2060 0066 728B     		ldrh	r2, [r6, #26]
 2061 0068 04F11203 		add	r3, r4, #18
 2062 006c EA54     		strb	r2, [r5, r3]
  51:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2063              		.loc 7 51 0
 2064 006e F27E     		ldrb	r2, [r6, #27]	@ zero_extendqisi2
 2065 0070 04F11303 		add	r3, r4, #19
 2066 0074 EA54     		strb	r2, [r5, r3]
  52:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2067              		.loc 7 52 0
 2068 0076 1434     		adds	r4, r4, #20
 2069              	.LVL253:
 2070              	.LBB226:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2071              		.loc 7 53 0
 2072 0078 4FF00008 		mov	r8, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 60


 2073 007c 0AE0     		b	.L115
 2074              	.LVL254:
 2075              	.L113:
 2076              	.LBB227:
  56:ROSSerial/sensor_msgs/JointState.h ****       memcpy(outbuffer + offset, this->name[i], length_namei);
 2077              		.loc 7 56 0 discriminator 2
 2078 007e 0434     		adds	r4, r4, #4
 2079              	.LVL255:
  57:ROSSerial/sensor_msgs/JointState.h ****       offset += length_namei;
 2080              		.loc 7 57 0 discriminator 2
 2081 0080 336A     		ldr	r3, [r6, #32]
 2082 0082 3A46     		mov	r2, r7
 2083 0084 53F80910 		ldr	r1, [r3, r9]
 2084 0088 2819     		adds	r0, r5, r4
 2085 008a FFF7FEFF 		bl	memcpy
 2086              	.LVL256:
  58:ROSSerial/sensor_msgs/JointState.h ****       }
 2087              		.loc 7 58 0 discriminator 2
 2088 008e 3C44     		add	r4, r4, r7
 2089              	.LVL257:
 2090              	.LBE227:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2091              		.loc 7 53 0 discriminator 2
 2092 0090 08F10108 		add	r8, r8, #1
 2093              	.LVL258:
 2094              	.L115:
  53:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_namei = strlen(this->name[i]);
 2095              		.loc 7 53 0 is_stmt 0 discriminator 3
 2096 0094 B369     		ldr	r3, [r6, #24]
 2097 0096 4345     		cmp	r3, r8
 2098 0098 12D9     		bls	.L112
 2099              	.LBB230:
  54:ROSSerial/sensor_msgs/JointState.h ****       varToArr(outbuffer + offset, length_namei);
 2100              		.loc 7 54 0 is_stmt 1 discriminator 2
 2101 009a 336A     		ldr	r3, [r6, #32]
 2102 009c 4FEA8809 		lsl	r9, r8, #2
 2103 00a0 53F82800 		ldr	r0, [r3, r8, lsl #2]
 2104 00a4 FFF7FEFF 		bl	strlen
 2105              	.LVL259:
 2106 00a8 0746     		mov	r7, r0
 2107              	.LVL260:
  55:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2108              		.loc 7 55 0 discriminator 2
 2109 00aa 2046     		mov	r0, r4
 2110              	.LVL261:
 2111              	.LBB228:
 2112              	.LBB229:
 2113              		.file 10 "ROSSerial/ros/msg.h"
   1:ROSSerial/ros/msg.h **** /*
   2:ROSSerial/ros/msg.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/msg.h ****  *
   4:ROSSerial/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/msg.h ****  * All rights reserved.
   6:ROSSerial/ros/msg.h ****  *
   7:ROSSerial/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/msg.h ****  * are met:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 61


  10:ROSSerial/ros/msg.h ****  *
  11:ROSSerial/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/msg.h ****  *    with the distribution.
  17:ROSSerial/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/msg.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/msg.h ****  *
  21:ROSSerial/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/msg.h ****  */
  34:ROSSerial/ros/msg.h **** 
  35:ROSSerial/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:ROSSerial/ros/msg.h **** #define _ROS_MSG_H_
  37:ROSSerial/ros/msg.h **** 
  38:ROSSerial/ros/msg.h **** #include <stdint.h>
  39:ROSSerial/ros/msg.h **** #include <stddef.h>
  40:ROSSerial/ros/msg.h **** 
  41:ROSSerial/ros/msg.h **** namespace ros
  42:ROSSerial/ros/msg.h **** {
  43:ROSSerial/ros/msg.h **** 
  44:ROSSerial/ros/msg.h **** /* Base Message Type */
  45:ROSSerial/ros/msg.h **** class Msg
  46:ROSSerial/ros/msg.h **** {
  47:ROSSerial/ros/msg.h **** public:
  48:ROSSerial/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  49:ROSSerial/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  50:ROSSerial/ros/msg.h ****   virtual const char * getType() = 0;
  51:ROSSerial/ros/msg.h ****   virtual const char * getMD5() = 0;
  52:ROSSerial/ros/msg.h **** 
  53:ROSSerial/ros/msg.h ****   /**
  54:ROSSerial/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  55:ROSSerial/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  56:ROSSerial/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  57:ROSSerial/ros/msg.h ****    *
  58:ROSSerial/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  59:ROSSerial/ros/msg.h ****    * @param[in] f value to serialize.
  60:ROSSerial/ros/msg.h ****    *
  61:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  62:ROSSerial/ros/msg.h ****    *
  63:ROSSerial/ros/msg.h ****    */
  64:ROSSerial/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  65:ROSSerial/ros/msg.h ****   {
  66:ROSSerial/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 62


  67:ROSSerial/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
  68:ROSSerial/ros/msg.h ****     if (exp != 0)
  69:ROSSerial/ros/msg.h ****     {
  70:ROSSerial/ros/msg.h ****       exp += 1023 - 127;
  71:ROSSerial/ros/msg.h ****     }
  72:ROSSerial/ros/msg.h **** 
  73:ROSSerial/ros/msg.h ****     int32_t sig = *val;
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
  81:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  82:ROSSerial/ros/msg.h **** 
  83:ROSSerial/ros/msg.h ****     // Mark negative bit as necessary.
  84:ROSSerial/ros/msg.h ****     if (f < 0)
  85:ROSSerial/ros/msg.h ****     {
  86:ROSSerial/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
  87:ROSSerial/ros/msg.h ****     }
  88:ROSSerial/ros/msg.h **** 
  89:ROSSerial/ros/msg.h ****     return 8;
  90:ROSSerial/ros/msg.h ****   }
  91:ROSSerial/ros/msg.h **** 
  92:ROSSerial/ros/msg.h ****   /**
  93:ROSSerial/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  94:ROSSerial/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  95:ROSSerial/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  96:ROSSerial/ros/msg.h ****    *
  97:ROSSerial/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  98:ROSSerial/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  99:ROSSerial/ros/msg.h ****    *
 100:ROSSerial/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 101:ROSSerial/ros/msg.h ****    */
 102:ROSSerial/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 103:ROSSerial/ros/msg.h ****   {
 104:ROSSerial/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 105:ROSSerial/ros/msg.h ****     inbuffer += 3;
 106:ROSSerial/ros/msg.h **** 
 107:ROSSerial/ros/msg.h ****     // Copy truncated mantissa.
 108:ROSSerial/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 111:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 112:ROSSerial/ros/msg.h **** 
 113:ROSSerial/ros/msg.h ****     // Copy truncated exponent.
 114:ROSSerial/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 115:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 116:ROSSerial/ros/msg.h ****     if (exp != 0)
 117:ROSSerial/ros/msg.h ****     {
 118:ROSSerial/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 119:ROSSerial/ros/msg.h ****     }
 120:ROSSerial/ros/msg.h **** 
 121:ROSSerial/ros/msg.h ****     // Copy negative sign.
 122:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 123:ROSSerial/ros/msg.h **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 63


 124:ROSSerial/ros/msg.h ****     return 8;
 125:ROSSerial/ros/msg.h ****   }
 126:ROSSerial/ros/msg.h **** 
 127:ROSSerial/ros/msg.h ****   // Copy data from variable into a byte array
 128:ROSSerial/ros/msg.h ****   template<typename A, typename V>
 129:ROSSerial/ros/msg.h ****   static void varToArr(A arr, const V var)
 130:ROSSerial/ros/msg.h ****   {
 131:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2114              		.loc 10 131 0 discriminator 2
 2115 00ac 0023     		movs	r3, #0
 2116              	.LVL262:
 2117              	.L114:
 2118              		.loc 10 131 0 is_stmt 0
 2119 00ae 032B     		cmp	r3, #3
 2120 00b0 E5D8     		bhi	.L113
 132:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2121              		.loc 10 132 0 is_stmt 1
 2122 00b2 DA00     		lsls	r2, r3, #3
 2123 00b4 27FA02F2 		lsr	r2, r7, r2
 2124 00b8 C118     		adds	r1, r0, r3
 2125 00ba 6A54     		strb	r2, [r5, r1]
 131:ROSSerial/ros/msg.h ****       arr[i] = (var >> (8 * i));
 2126              		.loc 10 131 0
 2127 00bc 0133     		adds	r3, r3, #1
 2128              	.LVL263:
 2129 00be F6E7     		b	.L114
 2130              	.LVL264:
 2131              	.L112:
 2132              	.LBE229:
 2133              	.LBE228:
 2134              	.LBE230:
 2135              	.LBE226:
  60:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->position_length >> (8 * 1)) & 0xFF;
 2136              		.loc 7 60 0
 2137 00c0 736A     		ldr	r3, [r6, #36]
 2138 00c2 2B55     		strb	r3, [r5, r4]
  61:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->position_length >> (8 * 2)) & 0xFF;
 2139              		.loc 7 61 0
 2140 00c4 736A     		ldr	r3, [r6, #36]
 2141 00c6 1B0A     		lsrs	r3, r3, #8
 2142 00c8 621C     		adds	r2, r4, #1
 2143 00ca AB54     		strb	r3, [r5, r2]
  62:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->position_length >> (8 * 3)) & 0xFF;
 2144              		.loc 7 62 0
 2145 00cc F28C     		ldrh	r2, [r6, #38]
 2146 00ce A31C     		adds	r3, r4, #2
 2147 00d0 EA54     		strb	r2, [r5, r3]
  63:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2148              		.loc 7 63 0
 2149 00d2 96F82720 		ldrb	r2, [r6, #39]	@ zero_extendqisi2
 2150 00d6 E31C     		adds	r3, r4, #3
 2151 00d8 EA54     		strb	r2, [r5, r3]
  64:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2152              		.loc 7 64 0
 2153 00da 201D     		adds	r0, r4, #4
 2154              	.LVL265:
 2155              	.LBB231:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 64


  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2156              		.loc 7 65 0
 2157 00dc 0027     		movs	r7, #0
 2158 00de 17E0     		b	.L120
 2159              	.LVL266:
 2160              	.L117:
 2161              	.LBB232:
 2162              	.LBB233:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2163              		.loc 10 74 0
 2164 00e0 0024     		movs	r4, #0
 2165 00e2 1470     		strb	r4, [r2]
 2166              	.LVL267:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2167              		.loc 10 75 0
 2168 00e4 5470     		strb	r4, [r2, #1]
 2169              	.LVL268:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2170              		.loc 10 76 0
 2171 00e6 9470     		strb	r4, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2172              		.loc 10 77 0
 2173 00e8 5C01     		lsls	r4, r3, #5
 2174              	.LVL269:
 2175 00ea D470     		strb	r4, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2176              		.loc 10 78 0
 2177 00ec DC10     		asrs	r4, r3, #3
 2178              	.LVL270:
 2179 00ee 1471     		strb	r4, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2180              		.loc 10 79 0
 2181 00f0 DC12     		asrs	r4, r3, #11
 2182              	.LVL271:
 2183 00f2 5471     		strb	r4, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2184              		.loc 10 80 0
 2185 00f4 C3F3C343 		ubfx	r3, r3, #19, #4
 2186              	.LVL272:
 2187 00f8 43EA0113 		orr	r3, r3, r1, lsl #4
 2188 00fc 9371     		strb	r3, [r2, #6]
 2189              	.LVL273:
  81:ROSSerial/ros/msg.h **** 
 2190              		.loc 10 81 0
 2191 00fe 0909     		lsrs	r1, r1, #4
 2192              	.LVL274:
 2193 0100 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2194              		.loc 10 84 0
 2195 0102 F5EEC07A 		vcmpe.f32	s15, #0
 2196 0106 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2197 010a 13D4     		bmi	.L135
 2198              	.L118:
 2199              	.LVL275:
 2200              	.LBE233:
 2201              	.LBE232:
  66:ROSSerial/sensor_msgs/JointState.h ****       }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 65


 2202              		.loc 7 66 0
 2203 010c 0830     		adds	r0, r0, #8
 2204              	.LVL276:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2205              		.loc 7 65 0
 2206 010e 0137     		adds	r7, r7, #1
 2207              	.LVL277:
 2208              	.L120:
  65:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->position[i]);
 2209              		.loc 7 65 0 is_stmt 0 discriminator 3
 2210 0110 736A     		ldr	r3, [r6, #36]
 2211 0112 BB42     		cmp	r3, r7
 2212 0114 12D9     		bls	.L116
  66:ROSSerial/sensor_msgs/JointState.h ****       }
 2213              		.loc 7 66 0 is_stmt 1 discriminator 2
 2214 0116 2A18     		adds	r2, r5, r0
 2215 0118 F36A     		ldr	r3, [r6, #44]
 2216 011a 03EB8703 		add	r3, r3, r7, lsl #2
 2217 011e D3ED007A 		vldr.32	s15, [r3]
 2218              	.LVL278:
 2219              	.LBB235:
 2220              	.LBB234:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2221              		.loc 10 67 0 discriminator 2
 2222 0122 17EE903A 		vmov	r3, s15	@ int
 2223 0126 C3F3C751 		ubfx	r1, r3, #23, #8
 2224              	.LVL279:
  68:ROSSerial/ros/msg.h ****     {
 2225              		.loc 10 68 0 discriminator 2
 2226 012a 0029     		cmp	r1, #0
 2227 012c D8D0     		beq	.L117
  70:ROSSerial/ros/msg.h ****     }
 2228              		.loc 10 70 0
 2229 012e 01F56071 		add	r1, r1, #896
 2230              	.LVL280:
 2231 0132 D5E7     		b	.L117
 2232              	.LVL281:
 2233              	.L135:
  86:ROSSerial/ros/msg.h ****     }
 2234              		.loc 10 86 0
 2235 0134 61F07F01 		orn	r1, r1, #127
 2236 0138 D171     		strb	r1, [r2, #7]
 2237 013a E7E7     		b	.L118
 2238              	.LVL282:
 2239              	.L116:
 2240              	.LBE234:
 2241              	.LBE235:
 2242              	.LBE231:
  68:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->velocity_length >> (8 * 1)) & 0xFF;
 2243              		.loc 7 68 0
 2244 013c 336B     		ldr	r3, [r6, #48]
 2245 013e 2B54     		strb	r3, [r5, r0]
  69:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->velocity_length >> (8 * 2)) & 0xFF;
 2246              		.loc 7 69 0
 2247 0140 336B     		ldr	r3, [r6, #48]
 2248 0142 1B0A     		lsrs	r3, r3, #8
 2249 0144 421C     		adds	r2, r0, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 66


 2250 0146 AB54     		strb	r3, [r5, r2]
  70:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->velocity_length >> (8 * 3)) & 0xFF;
 2251              		.loc 7 70 0
 2252 0148 728E     		ldrh	r2, [r6, #50]
 2253 014a 831C     		adds	r3, r0, #2
 2254 014c EA54     		strb	r2, [r5, r3]
  71:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2255              		.loc 7 71 0
 2256 014e 96F83320 		ldrb	r2, [r6, #51]	@ zero_extendqisi2
 2257 0152 C31C     		adds	r3, r0, #3
 2258 0154 EA54     		strb	r2, [r5, r3]
  72:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2259              		.loc 7 72 0
 2260 0156 0430     		adds	r0, r0, #4
 2261              	.LVL283:
 2262              	.LBB236:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2263              		.loc 7 73 0
 2264 0158 0024     		movs	r4, #0
 2265 015a 17E0     		b	.L125
 2266              	.LVL284:
 2267              	.L122:
 2268              	.LBB237:
 2269              	.LBB238:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2270              		.loc 10 74 0
 2271 015c 0027     		movs	r7, #0
 2272 015e 1770     		strb	r7, [r2]
 2273              	.LVL285:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2274              		.loc 10 75 0
 2275 0160 5770     		strb	r7, [r2, #1]
 2276              	.LVL286:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2277              		.loc 10 76 0
 2278 0162 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2279              		.loc 10 77 0
 2280 0164 5F01     		lsls	r7, r3, #5
 2281              	.LVL287:
 2282 0166 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2283              		.loc 10 78 0
 2284 0168 DF10     		asrs	r7, r3, #3
 2285              	.LVL288:
 2286 016a 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2287              		.loc 10 79 0
 2288 016c DF12     		asrs	r7, r3, #11
 2289              	.LVL289:
 2290 016e 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2291              		.loc 10 80 0
 2292 0170 C3F3C343 		ubfx	r3, r3, #19, #4
 2293              	.LVL290:
 2294 0174 43EA0113 		orr	r3, r3, r1, lsl #4
 2295 0178 9371     		strb	r3, [r2, #6]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 67


 2296              	.LVL291:
  81:ROSSerial/ros/msg.h **** 
 2297              		.loc 10 81 0
 2298 017a 0909     		lsrs	r1, r1, #4
 2299              	.LVL292:
 2300 017c D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2301              		.loc 10 84 0
 2302 017e F5EEC07A 		vcmpe.f32	s15, #0
 2303 0182 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2304 0186 13D4     		bmi	.L136
 2305              	.L123:
 2306              	.LVL293:
 2307              	.LBE238:
 2308              	.LBE237:
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2309              		.loc 7 74 0
 2310 0188 0830     		adds	r0, r0, #8
 2311              	.LVL294:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2312              		.loc 7 73 0
 2313 018a 0134     		adds	r4, r4, #1
 2314              	.LVL295:
 2315              	.L125:
  73:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->velocity[i]);
 2316              		.loc 7 73 0 is_stmt 0 discriminator 3
 2317 018c 336B     		ldr	r3, [r6, #48]
 2318 018e A342     		cmp	r3, r4
 2319 0190 12D9     		bls	.L121
  74:ROSSerial/sensor_msgs/JointState.h ****       }
 2320              		.loc 7 74 0 is_stmt 1 discriminator 2
 2321 0192 2A18     		adds	r2, r5, r0
 2322 0194 B36B     		ldr	r3, [r6, #56]
 2323 0196 03EB8403 		add	r3, r3, r4, lsl #2
 2324 019a D3ED007A 		vldr.32	s15, [r3]
 2325              	.LVL296:
 2326              	.LBB240:
 2327              	.LBB239:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2328              		.loc 10 67 0 discriminator 2
 2329 019e 17EE903A 		vmov	r3, s15	@ int
 2330 01a2 C3F3C751 		ubfx	r1, r3, #23, #8
 2331              	.LVL297:
  68:ROSSerial/ros/msg.h ****     {
 2332              		.loc 10 68 0 discriminator 2
 2333 01a6 0029     		cmp	r1, #0
 2334 01a8 D8D0     		beq	.L122
  70:ROSSerial/ros/msg.h ****     }
 2335              		.loc 10 70 0
 2336 01aa 01F56071 		add	r1, r1, #896
 2337              	.LVL298:
 2338 01ae D5E7     		b	.L122
 2339              	.LVL299:
 2340              	.L136:
  86:ROSSerial/ros/msg.h ****     }
 2341              		.loc 10 86 0
 2342 01b0 61F07F01 		orn	r1, r1, #127
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 68


 2343 01b4 D171     		strb	r1, [r2, #7]
 2344 01b6 E7E7     		b	.L123
 2345              	.LVL300:
 2346              	.L121:
 2347              	.LBE239:
 2348              	.LBE240:
 2349              	.LBE236:
  76:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 1) = (this->effort_length >> (8 * 1)) & 0xFF;
 2350              		.loc 7 76 0
 2351 01b8 F36B     		ldr	r3, [r6, #60]
 2352 01ba 2B54     		strb	r3, [r5, r0]
  77:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 2) = (this->effort_length >> (8 * 2)) & 0xFF;
 2353              		.loc 7 77 0
 2354 01bc F36B     		ldr	r3, [r6, #60]
 2355 01be 1B0A     		lsrs	r3, r3, #8
 2356 01c0 421C     		adds	r2, r0, #1
 2357 01c2 AB54     		strb	r3, [r5, r2]
  78:ROSSerial/sensor_msgs/JointState.h ****       *(outbuffer + offset + 3) = (this->effort_length >> (8 * 3)) & 0xFF;
 2358              		.loc 7 78 0
 2359 01c4 F28F     		ldrh	r2, [r6, #62]
 2360 01c6 831C     		adds	r3, r0, #2
 2361 01c8 EA54     		strb	r2, [r5, r3]
  79:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2362              		.loc 7 79 0
 2363 01ca 96F83F20 		ldrb	r2, [r6, #63]	@ zero_extendqisi2
 2364 01ce C31C     		adds	r3, r0, #3
 2365 01d0 EA54     		strb	r2, [r5, r3]
  80:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2366              		.loc 7 80 0
 2367 01d2 0430     		adds	r0, r0, #4
 2368              	.LVL301:
 2369              	.LBB241:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2370              		.loc 7 81 0
 2371 01d4 0024     		movs	r4, #0
 2372              	.LVL302:
 2373 01d6 17E0     		b	.L130
 2374              	.LVL303:
 2375              	.L127:
 2376              	.LBB242:
 2377              	.LBB243:
  74:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2378              		.loc 10 74 0
 2379 01d8 0027     		movs	r7, #0
 2380 01da 1770     		strb	r7, [r2]
 2381              	.LVL304:
  75:ROSSerial/ros/msg.h ****     *(outbuffer++) = 0;
 2382              		.loc 10 75 0
 2383 01dc 5770     		strb	r7, [r2, #1]
 2384              	.LVL305:
  76:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2385              		.loc 10 76 0
 2386 01de 9770     		strb	r7, [r2, #2]
  77:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2387              		.loc 10 77 0
 2388 01e0 5F01     		lsls	r7, r3, #5
 2389              	.LVL306:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 69


 2390 01e2 D770     		strb	r7, [r2, #3]
  78:ROSSerial/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2391              		.loc 10 78 0
 2392 01e4 DF10     		asrs	r7, r3, #3
 2393              	.LVL307:
 2394 01e6 1771     		strb	r7, [r2, #4]
  79:ROSSerial/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2395              		.loc 10 79 0
 2396 01e8 DF12     		asrs	r7, r3, #11
 2397              	.LVL308:
 2398 01ea 5771     		strb	r7, [r2, #5]
  80:ROSSerial/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2399              		.loc 10 80 0
 2400 01ec C3F3C343 		ubfx	r3, r3, #19, #4
 2401              	.LVL309:
 2402 01f0 43EA0113 		orr	r3, r3, r1, lsl #4
 2403 01f4 9371     		strb	r3, [r2, #6]
 2404              	.LVL310:
  81:ROSSerial/ros/msg.h **** 
 2405              		.loc 10 81 0
 2406 01f6 0909     		lsrs	r1, r1, #4
 2407              	.LVL311:
 2408 01f8 D171     		strb	r1, [r2, #7]
  84:ROSSerial/ros/msg.h ****     {
 2409              		.loc 10 84 0
 2410 01fa F5EEC07A 		vcmpe.f32	s15, #0
 2411 01fe F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2412 0202 13D4     		bmi	.L137
 2413              	.L128:
 2414              	.LVL312:
 2415              	.LBE243:
 2416              	.LBE242:
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2417              		.loc 7 82 0
 2418 0204 0830     		adds	r0, r0, #8
 2419              	.LVL313:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2420              		.loc 7 81 0
 2421 0206 0134     		adds	r4, r4, #1
 2422              	.LVL314:
 2423              	.L130:
  81:ROSSerial/sensor_msgs/JointState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->effort[i]);
 2424              		.loc 7 81 0 is_stmt 0 discriminator 3
 2425 0208 F36B     		ldr	r3, [r6, #60]
 2426 020a A342     		cmp	r3, r4
 2427 020c 12D9     		bls	.L111
  82:ROSSerial/sensor_msgs/JointState.h ****       }
 2428              		.loc 7 82 0 is_stmt 1 discriminator 2
 2429 020e 2A18     		adds	r2, r5, r0
 2430 0210 736C     		ldr	r3, [r6, #68]
 2431 0212 03EB8403 		add	r3, r3, r4, lsl #2
 2432 0216 D3ED007A 		vldr.32	s15, [r3]
 2433              	.LVL315:
 2434              	.LBB245:
 2435              	.LBB244:
  67:ROSSerial/ros/msg.h ****     if (exp != 0)
 2436              		.loc 10 67 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 70


 2437 021a 17EE903A 		vmov	r3, s15	@ int
 2438 021e C3F3C751 		ubfx	r1, r3, #23, #8
 2439              	.LVL316:
  68:ROSSerial/ros/msg.h ****     {
 2440              		.loc 10 68 0 discriminator 2
 2441 0222 0029     		cmp	r1, #0
 2442 0224 D8D0     		beq	.L127
  70:ROSSerial/ros/msg.h ****     }
 2443              		.loc 10 70 0
 2444 0226 01F56071 		add	r1, r1, #896
 2445              	.LVL317:
 2446 022a D5E7     		b	.L127
 2447              	.LVL318:
 2448              	.L137:
  86:ROSSerial/ros/msg.h ****     }
 2449              		.loc 10 86 0
 2450 022c 61F07F01 		orn	r1, r1, #127
 2451 0230 D171     		strb	r1, [r2, #7]
 2452 0232 E7E7     		b	.L128
 2453              	.LVL319:
 2454              	.L111:
 2455              	.LBE244:
 2456              	.LBE245:
 2457              	.LBE241:
  85:ROSSerial/sensor_msgs/JointState.h **** 
 2458              		.loc 7 85 0
 2459 0234 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2460              		.cfi_endproc
 2461              	.LFE487:
 2462              		.cantunwind
 2463              		.fnend
 2465              		.section	.text._ZN11sensor_msgs10JointState11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs10Join
 2466              		.align	1
 2467              		.weak	_ZN11sensor_msgs10JointState11deserializeEPh
 2468              		.syntax unified
 2469              		.thumb
 2470              		.thumb_func
 2471              		.fpu fpv4-sp-d16
 2473              	_ZN11sensor_msgs10JointState11deserializeEPh:
 2474              		.fnstart
 2475              	.LFB488:
  87:ROSSerial/sensor_msgs/JointState.h ****     {
 2476              		.loc 7 87 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
 2480              	.LVL320:
 2481 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2482              	.LCFI15:
 2483              		.cfi_def_cfa_offset 24
 2484              		.cfi_offset 3, -24
 2485              		.cfi_offset 4, -20
 2486              		.cfi_offset 5, -16
 2487              		.cfi_offset 6, -12
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 0446     		mov	r4, r0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 71


 2491 0004 0D46     		mov	r5, r1
 2492              	.LVL321:
  90:ROSSerial/sensor_msgs/JointState.h ****       uint32_t name_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 2493              		.loc 7 90 0
 2494 0006 021D     		adds	r2, r0, #4
 2495              	.LVL322:
 2496              	.LBB264:
 2497              	.LBB265:
  49:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2498              		.loc 6 49 0
 2499 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2500 000a 5360     		str	r3, [r2, #4]
  50:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2501              		.loc 6 50 0
 2502 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 2503              	.LVL323:
 2504 000e 43EA0123 		orr	r3, r3, r1, lsl #8
 2505 0012 5360     		str	r3, [r2, #4]
  51:ROSSerial/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2506              		.loc 6 51 0
 2507 0014 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2508 0016 43EA0143 		orr	r3, r3, r1, lsl #16
 2509 001a 5360     		str	r3, [r2, #4]
  52:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2510              		.loc 6 52 0
 2511 001c E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 2512 001e 43EA0163 		orr	r3, r3, r1, lsl #24
 2513 0022 5360     		str	r3, [r2, #4]
 2514              	.LVL324:
  54:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2515              		.loc 6 54 0
 2516 0024 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2517 0026 9360     		str	r3, [r2, #8]
  55:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2518              		.loc 6 55 0
 2519 0028 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 2520 002a 43EA0123 		orr	r3, r3, r1, lsl #8
 2521 002e 9360     		str	r3, [r2, #8]
  56:ROSSerial/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2522              		.loc 6 56 0
 2523 0030 A979     		ldrb	r1, [r5, #6]	@ zero_extendqisi2
 2524 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 2525 0036 9360     		str	r3, [r2, #8]
  57:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2526              		.loc 6 57 0
 2527 0038 E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 2528 003a 43EA0163 		orr	r3, r3, r1, lsl #24
 2529 003e 9360     		str	r3, [r2, #8]
 2530              	.LVL325:
  59:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2531              		.loc 6 59 0
 2532 0040 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 2533 0042 D360     		str	r3, [r2, #12]
  60:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2534              		.loc 6 60 0
 2535 0044 697A     		ldrb	r1, [r5, #9]	@ zero_extendqisi2
 2536 0046 43EA0123 		orr	r3, r3, r1, lsl #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 72


 2537 004a D360     		str	r3, [r2, #12]
  61:ROSSerial/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2538              		.loc 6 61 0
 2539 004c A97A     		ldrb	r1, [r5, #10]	@ zero_extendqisi2
 2540 004e 43EA0143 		orr	r3, r3, r1, lsl #16
 2541 0052 D360     		str	r3, [r2, #12]
  62:ROSSerial/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2542              		.loc 6 62 0
 2543 0054 E97A     		ldrb	r1, [r5, #11]	@ zero_extendqisi2
 2544 0056 43EA0163 		orr	r3, r3, r1, lsl #24
 2545 005a D360     		str	r3, [r2, #12]
 2546              	.LVL326:
  65:ROSSerial/std_msgs/Header.h ****       offset += 4;
 2547              		.loc 6 65 0
 2548 005c EF68     		ldr	r7, [r5, #12]	@ unaligned
 2549              	.LVL327:
 2550              	.LBB266:
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2551              		.loc 6 67 0
 2552 005e 1023     		movs	r3, #16
 2553              	.LVL328:
 2554              	.L140:
 2555 0060 07F11006 		add	r6, r7, #16
 2556 0064 9E42     		cmp	r6, r3
 2557 0066 04D9     		bls	.L139
  68:ROSSerial/std_msgs/Header.h ****       }
 2558              		.loc 6 68 0
 2559 0068 591E     		subs	r1, r3, #1
 2560 006a E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 2561 006c 6854     		strb	r0, [r5, r1]
  67:ROSSerial/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2562              		.loc 6 67 0
 2563 006e 0133     		adds	r3, r3, #1
 2564              	.LVL329:
 2565 0070 F6E7     		b	.L140
 2566              	.L139:
 2567              	.LBE266:
  70:ROSSerial/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2568              		.loc 6 70 0
 2569 0072 0F37     		adds	r7, r7, #15
 2570              	.LVL330:
 2571 0074 0023     		movs	r3, #0
 2572              	.LVL331:
 2573 0076 EB55     		strb	r3, [r5, r7]
  71:ROSSerial/std_msgs/Header.h ****       offset += length_frame_id;
 2574              		.loc 6 71 0
 2575 0078 05F10F03 		add	r3, r5, #15
 2576 007c 1361     		str	r3, [r2, #16]
 2577              	.LVL332:
 2578              	.LBE265:
 2579              	.LBE264:
  91:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2580              		.loc 7 91 0
 2581 007e AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2582              	.LVL333:
  92:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2583              		.loc 7 92 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 73


 2584 0080 731C     		adds	r3, r6, #1
 2585 0082 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2586 0084 47EA0327 		orr	r7, r7, r3, lsl #8
 2587              	.LVL334:
  93:ROSSerial/sensor_msgs/JointState.h ****       name_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2588              		.loc 7 93 0
 2589 0088 B31C     		adds	r3, r6, #2
 2590 008a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2591 008c 47EA0347 		orr	r7, r7, r3, lsl #16
 2592              	.LVL335:
  94:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->name_length);
 2593              		.loc 7 94 0
 2594 0090 F31C     		adds	r3, r6, #3
 2595 0092 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2596 0094 47EA0367 		orr	r7, r7, r3, lsl #24
 2597              	.LVL336:
  95:ROSSerial/sensor_msgs/JointState.h ****       if(name_lengthT > name_length)
 2598              		.loc 7 95 0
 2599 0098 0436     		adds	r6, r6, #4
 2600              	.LVL337:
  96:ROSSerial/sensor_msgs/JointState.h ****         this->name = (char**)realloc(this->name, name_lengthT * sizeof(char*));
 2601              		.loc 7 96 0
 2602 009a A369     		ldr	r3, [r4, #24]
 2603 009c BB42     		cmp	r3, r7
 2604 009e 02D3     		bcc	.L161
 2605              	.L141:
  98:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < name_length; i++){
 2606              		.loc 7 98 0
 2607 00a0 A761     		str	r7, [r4, #24]
 2608              	.LVL338:
 2609              	.LBB267:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2610              		.loc 7 99 0
 2611 00a2 0020     		movs	r0, #0
 2612 00a4 1AE0     		b	.L147
 2613              	.LVL339:
 2614              	.L161:
 2615              	.LBE267:
  97:ROSSerial/sensor_msgs/JointState.h ****       name_length = name_lengthT;
 2616              		.loc 7 97 0
 2617 00a6 B900     		lsls	r1, r7, #2
 2618 00a8 206A     		ldr	r0, [r4, #32]
 2619 00aa FFF7FEFF 		bl	realloc
 2620              	.LVL340:
 2621 00ae 2062     		str	r0, [r4, #32]
 2622 00b0 F6E7     		b	.L141
 2623              	.LVL341:
 2624              	.L143:
 2625              	.LBB274:
 2626              	.LBB268:
 102:ROSSerial/sensor_msgs/JointState.h ****       for(unsigned int k= offset; k< offset+length_st_name; ++k){
 2627              		.loc 7 102 0
 2628 00b2 0436     		adds	r6, r6, #4
 2629              	.LVL342:
 2630              	.LBB269:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2631              		.loc 7 103 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 74


 2632 00b4 3346     		mov	r3, r6
 2633              	.LVL343:
 2634              	.L146:
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2635              		.loc 7 103 0 is_stmt 0 discriminator 3
 2636 00b6 B118     		adds	r1, r6, r2
 2637 00b8 9942     		cmp	r1, r3
 2638 00ba 04D9     		bls	.L145
 104:ROSSerial/sensor_msgs/JointState.h ****       }
 2639              		.loc 7 104 0 is_stmt 1 discriminator 2
 2640 00bc 591E     		subs	r1, r3, #1
 2641 00be EF5C     		ldrb	r7, [r5, r3]	@ zero_extendqisi2
 2642 00c0 6F54     		strb	r7, [r5, r1]
 103:ROSSerial/sensor_msgs/JointState.h ****           inbuffer[k-1]=inbuffer[k];
 2643              		.loc 7 103 0 discriminator 2
 2644 00c2 0133     		adds	r3, r3, #1
 2645              	.LVL344:
 2646 00c4 F7E7     		b	.L146
 2647              	.L145:
 2648              	.LBE269:
 106:ROSSerial/sensor_msgs/JointState.h ****       this->st_name = (char *)(inbuffer + offset-1);
 2649              		.loc 7 106 0 discriminator 2
 2650 00c6 4B1E     		subs	r3, r1, #1
 2651              	.LVL345:
 2652 00c8 0022     		movs	r2, #0
 2653              	.LVL346:
 2654 00ca EA54     		strb	r2, [r5, r3]
 107:ROSSerial/sensor_msgs/JointState.h ****       offset += length_st_name;
 2655              		.loc 7 107 0 discriminator 2
 2656 00cc 013E     		subs	r6, r6, #1
 2657 00ce AB19     		adds	r3, r5, r6
 2658 00d0 E361     		str	r3, [r4, #28]
 108:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->name[i]), &(this->st_name), sizeof(char*));
 2659              		.loc 7 108 0 discriminator 2
 2660 00d2 0E46     		mov	r6, r1
 2661              	.LVL347:
 109:ROSSerial/sensor_msgs/JointState.h ****       }
 2662              		.loc 7 109 0 discriminator 2
 2663 00d4 226A     		ldr	r2, [r4, #32]
 2664 00d6 42F82030 		str	r3, [r2, r0, lsl #2]	@ unaligned
 2665              	.LBE268:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2666              		.loc 7 99 0 discriminator 2
 2667 00da 0130     		adds	r0, r0, #1
 2668              	.LVL348:
 2669              	.L147:
  99:ROSSerial/sensor_msgs/JointState.h ****       uint32_t length_st_name;
 2670              		.loc 7 99 0 is_stmt 0 discriminator 1
 2671 00dc A369     		ldr	r3, [r4, #24]
 2672 00de 8342     		cmp	r3, r0
 2673 00e0 0CD9     		bls	.L142
 2674              	.LBB273:
 101:ROSSerial/sensor_msgs/JointState.h ****       offset += 4;
 2675              		.loc 7 101 0 is_stmt 1
 2676 00e2 B446     		mov	ip, r6
 2677              	.LVL349:
 2678              	.LBB270:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 75


 2679              	.LBB271:
 133:ROSSerial/ros/msg.h ****   }
 134:ROSSerial/ros/msg.h **** 
 135:ROSSerial/ros/msg.h ****   // Copy data from a byte array into variable
 136:ROSSerial/ros/msg.h ****   template<typename V, typename A>
 137:ROSSerial/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 138:ROSSerial/ros/msg.h ****   {
 139:ROSSerial/ros/msg.h ****     var = 0;
 2680              		.loc 10 139 0
 2681 00e4 0022     		movs	r2, #0
 2682              	.LBB272:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2683              		.loc 10 140 0
 2684 00e6 1346     		mov	r3, r2
 2685              	.LVL350:
 2686              	.L144:
 2687 00e8 032B     		cmp	r3, #3
 2688 00ea E2D8     		bhi	.L143
 141:ROSSerial/ros/msg.h ****       var |= (arr[i] << (8 * i));
 2689              		.loc 10 141 0
 2690 00ec 05EB0C01 		add	r1, r5, ip
 2691 00f0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 2692 00f2 DF00     		lsls	r7, r3, #3
 2693 00f4 B940     		lsls	r1, r1, r7
 2694 00f6 0A43     		orrs	r2, r2, r1
 2695              	.LVL351:
 140:ROSSerial/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 2696              		.loc 10 140 0
 2697 00f8 0133     		adds	r3, r3, #1
 2698              	.LVL352:
 2699 00fa F5E7     		b	.L144
 2700              	.LVL353:
 2701              	.L142:
 2702              	.LBE272:
 2703              	.LBE271:
 2704              	.LBE270:
 2705              	.LBE273:
 2706              	.LBE274:
 111:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2707              		.loc 7 111 0
 2708 00fc AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2709              	.LVL354:
 112:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2710              		.loc 7 112 0
 2711 00fe 731C     		adds	r3, r6, #1
 2712 0100 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2713 0102 47EA0327 		orr	r7, r7, r3, lsl #8
 2714              	.LVL355:
 113:ROSSerial/sensor_msgs/JointState.h ****       position_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2715              		.loc 7 113 0
 2716 0106 B31C     		adds	r3, r6, #2
 2717 0108 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2718 010a 47EA0347 		orr	r7, r7, r3, lsl #16
 2719              	.LVL356:
 114:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->position_length);
 2720              		.loc 7 114 0
 2721 010e F31C     		adds	r3, r6, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 76


 2722 0110 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2723 0112 47EA0367 		orr	r7, r7, r3, lsl #24
 2724              	.LVL357:
 115:ROSSerial/sensor_msgs/JointState.h ****       if(position_lengthT > position_length)
 2725              		.loc 7 115 0
 2726 0116 0436     		adds	r6, r6, #4
 2727              	.LVL358:
 116:ROSSerial/sensor_msgs/JointState.h ****         this->position = (float*)realloc(this->position, position_lengthT * sizeof(float));
 2728              		.loc 7 116 0
 2729 0118 636A     		ldr	r3, [r4, #36]
 2730 011a BB42     		cmp	r3, r7
 2731 011c 02D3     		bcc	.L162
 2732              	.LVL359:
 2733              	.L148:
 118:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < position_length; i++){
 2734              		.loc 7 118 0
 2735 011e 6762     		str	r7, [r4, #36]
 2736              	.LVL360:
 2737              	.LBB275:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2738              		.loc 7 119 0
 2739 0120 0020     		movs	r0, #0
 2740 0122 12E0     		b	.L151
 2741              	.LVL361:
 2742              	.L162:
 2743              	.LBE275:
 117:ROSSerial/sensor_msgs/JointState.h ****       position_length = position_lengthT;
 2744              		.loc 7 117 0
 2745 0124 B900     		lsls	r1, r7, #2
 2746 0126 E06A     		ldr	r0, [r4, #44]
 2747              	.LVL362:
 2748 0128 FFF7FEFF 		bl	realloc
 2749              	.LVL363:
 2750 012c E062     		str	r0, [r4, #44]
 2751 012e F6E7     		b	.L148
 2752              	.LVL364:
 2753              	.L150:
 2754              	.LBB280:
 2755              	.LBB276:
 2756              	.LBB277:
 122:ROSSerial/ros/msg.h **** 
 2757              		.loc 10 122 0
 2758 0130 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2759 0132 1B06     		lsls	r3, r3, #24
 2760 0134 03F00043 		and	r3, r3, #-2147483648
 2761 0138 A26A     		ldr	r2, [r4, #40]
 2762 013a 1343     		orrs	r3, r3, r2
 2763 013c A362     		str	r3, [r4, #40]
 2764              	.LVL365:
 2765              	.LBE277:
 2766              	.LBE276:
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2767              		.loc 7 120 0
 2768 013e 0836     		adds	r6, r6, #8
 2769              	.LVL366:
 121:ROSSerial/sensor_msgs/JointState.h ****       }
 2770              		.loc 7 121 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 77


 2771 0140 E36A     		ldr	r3, [r4, #44]
 2772 0142 A26A     		ldr	r2, [r4, #40]	@ unaligned
 2773 0144 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2774              		.loc 7 119 0
 2775 0148 0130     		adds	r0, r0, #1
 2776              	.LVL367:
 2777              	.L151:
 119:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_position));
 2778              		.loc 7 119 0 is_stmt 0 discriminator 3
 2779 014a 636A     		ldr	r3, [r4, #36]
 2780 014c 8342     		cmp	r3, r0
 2781 014e 1FD9     		bls	.L149
 120:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->position[i]), &(this->st_position), sizeof(float));
 2782              		.loc 7 120 0 is_stmt 1 discriminator 2
 2783 0150 A919     		adds	r1, r5, r6
 2784              	.LVL368:
 2785              	.LBB279:
 2786              	.LBB278:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2787              		.loc 10 108 0 discriminator 2
 2788 0152 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2789 0154 5B09     		lsrs	r3, r3, #5
 2790 0156 A362     		str	r3, [r4, #40]
 2791              	.LVL369:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2792              		.loc 10 109 0 discriminator 2
 2793 0158 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2794 015a 43EAC203 		orr	r3, r3, r2, lsl #3
 2795 015e A362     		str	r3, [r4, #40]
 2796              	.LVL370:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2797              		.loc 10 110 0 discriminator 2
 2798 0160 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2799 0162 43EAC223 		orr	r3, r3, r2, lsl #11
 2800 0166 A362     		str	r3, [r4, #40]
 111:ROSSerial/ros/msg.h **** 
 2801              		.loc 10 111 0 discriminator 2
 2802 0168 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2803 016a D204     		lsls	r2, r2, #19
 2804 016c 02F4F002 		and	r2, r2, #7864320
 2805 0170 1343     		orrs	r3, r3, r2
 2806 0172 A362     		str	r3, [r4, #40]
 2807              	.LVL371:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2808              		.loc 10 114 0 discriminator 2
 2809 0174 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2810              	.LVL372:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2811              		.loc 10 115 0 discriminator 2
 2812 0176 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2813 0178 1201     		lsls	r2, r2, #4
 2814 017a 02F4FE62 		and	r2, r2, #2032
 2815              	.LVL373:
 116:ROSSerial/ros/msg.h ****     {
 2816              		.loc 10 116 0 discriminator 2
 2817 017e 52EA1712 		orrs	r2, r2, r7, lsr #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 78


 2818              	.LVL374:
 2819 0182 D5D0     		beq	.L150
 118:ROSSerial/ros/msg.h ****     }
 2820              		.loc 10 118 0
 2821 0184 A2F56072 		sub	r2, r2, #896
 2822              	.LVL375:
 2823 0188 43EAC253 		orr	r3, r3, r2, lsl #23
 2824 018c A362     		str	r3, [r4, #40]
 2825 018e CFE7     		b	.L150
 2826              	.LVL376:
 2827              	.L149:
 2828              	.LBE278:
 2829              	.LBE279:
 2830              	.LBE280:
 123:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2831              		.loc 7 123 0
 2832 0190 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2833              	.LVL377:
 124:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2834              		.loc 7 124 0
 2835 0192 731C     		adds	r3, r6, #1
 2836 0194 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2837 0196 47EA0327 		orr	r7, r7, r3, lsl #8
 2838              	.LVL378:
 125:ROSSerial/sensor_msgs/JointState.h ****       velocity_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2839              		.loc 7 125 0
 2840 019a B31C     		adds	r3, r6, #2
 2841 019c EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2842 019e 47EA0347 		orr	r7, r7, r3, lsl #16
 2843              	.LVL379:
 126:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->velocity_length);
 2844              		.loc 7 126 0
 2845 01a2 F31C     		adds	r3, r6, #3
 2846 01a4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2847 01a6 47EA0367 		orr	r7, r7, r3, lsl #24
 2848              	.LVL380:
 127:ROSSerial/sensor_msgs/JointState.h ****       if(velocity_lengthT > velocity_length)
 2849              		.loc 7 127 0
 2850 01aa 0436     		adds	r6, r6, #4
 2851              	.LVL381:
 128:ROSSerial/sensor_msgs/JointState.h ****         this->velocity = (float*)realloc(this->velocity, velocity_lengthT * sizeof(float));
 2852              		.loc 7 128 0
 2853 01ac 236B     		ldr	r3, [r4, #48]
 2854 01ae BB42     		cmp	r3, r7
 2855 01b0 02D3     		bcc	.L163
 2856              	.LVL382:
 2857              	.L152:
 130:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < velocity_length; i++){
 2858              		.loc 7 130 0
 2859 01b2 2763     		str	r7, [r4, #48]
 2860              	.LVL383:
 2861              	.LBB281:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2862              		.loc 7 131 0
 2863 01b4 0020     		movs	r0, #0
 2864 01b6 12E0     		b	.L155
 2865              	.LVL384:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 79


 2866              	.L163:
 2867              	.LBE281:
 129:ROSSerial/sensor_msgs/JointState.h ****       velocity_length = velocity_lengthT;
 2868              		.loc 7 129 0
 2869 01b8 B900     		lsls	r1, r7, #2
 2870 01ba A06B     		ldr	r0, [r4, #56]
 2871              	.LVL385:
 2872 01bc FFF7FEFF 		bl	realloc
 2873              	.LVL386:
 2874 01c0 A063     		str	r0, [r4, #56]
 2875 01c2 F6E7     		b	.L152
 2876              	.LVL387:
 2877              	.L154:
 2878              	.LBB286:
 2879              	.LBB282:
 2880              	.LBB283:
 122:ROSSerial/ros/msg.h **** 
 2881              		.loc 10 122 0
 2882 01c4 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2883 01c6 1B06     		lsls	r3, r3, #24
 2884 01c8 03F00043 		and	r3, r3, #-2147483648
 2885 01cc 626B     		ldr	r2, [r4, #52]
 2886 01ce 1343     		orrs	r3, r3, r2
 2887 01d0 6363     		str	r3, [r4, #52]
 2888              	.LVL388:
 2889              	.LBE283:
 2890              	.LBE282:
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2891              		.loc 7 132 0
 2892 01d2 0836     		adds	r6, r6, #8
 2893              	.LVL389:
 133:ROSSerial/sensor_msgs/JointState.h ****       }
 2894              		.loc 7 133 0
 2895 01d4 A36B     		ldr	r3, [r4, #56]
 2896 01d6 626B     		ldr	r2, [r4, #52]	@ unaligned
 2897 01d8 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2898              		.loc 7 131 0
 2899 01dc 0130     		adds	r0, r0, #1
 2900              	.LVL390:
 2901              	.L155:
 131:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_velocity));
 2902              		.loc 7 131 0 is_stmt 0 discriminator 3
 2903 01de 236B     		ldr	r3, [r4, #48]
 2904 01e0 8342     		cmp	r3, r0
 2905 01e2 1FD9     		bls	.L153
 132:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->velocity[i]), &(this->st_velocity), sizeof(float));
 2906              		.loc 7 132 0 is_stmt 1 discriminator 2
 2907 01e4 A919     		adds	r1, r5, r6
 2908              	.LVL391:
 2909              	.LBB285:
 2910              	.LBB284:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2911              		.loc 10 108 0 discriminator 2
 2912 01e6 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2913 01e8 5B09     		lsrs	r3, r3, #5
 2914 01ea 6363     		str	r3, [r4, #52]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 80


 2915              	.LVL392:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2916              		.loc 10 109 0 discriminator 2
 2917 01ec 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2918 01ee 43EAC203 		orr	r3, r3, r2, lsl #3
 2919 01f2 6363     		str	r3, [r4, #52]
 2920              	.LVL393:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2921              		.loc 10 110 0 discriminator 2
 2922 01f4 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 2923 01f6 43EAC223 		orr	r3, r3, r2, lsl #11
 2924 01fa 6363     		str	r3, [r4, #52]
 111:ROSSerial/ros/msg.h **** 
 2925              		.loc 10 111 0 discriminator 2
 2926 01fc 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2927 01fe D204     		lsls	r2, r2, #19
 2928 0200 02F4F002 		and	r2, r2, #7864320
 2929 0204 1343     		orrs	r3, r3, r2
 2930 0206 6363     		str	r3, [r4, #52]
 2931              	.LVL394:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2932              		.loc 10 114 0 discriminator 2
 2933 0208 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 2934              	.LVL395:
 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 2935              		.loc 10 115 0 discriminator 2
 2936 020a CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 2937 020c 1201     		lsls	r2, r2, #4
 2938 020e 02F4FE62 		and	r2, r2, #2032
 2939              	.LVL396:
 116:ROSSerial/ros/msg.h ****     {
 2940              		.loc 10 116 0 discriminator 2
 2941 0212 52EA1712 		orrs	r2, r2, r7, lsr #4
 2942              	.LVL397:
 2943 0216 D5D0     		beq	.L154
 118:ROSSerial/ros/msg.h ****     }
 2944              		.loc 10 118 0
 2945 0218 A2F56072 		sub	r2, r2, #896
 2946              	.LVL398:
 2947 021c 43EAC253 		orr	r3, r3, r2, lsl #23
 2948 0220 6363     		str	r3, [r4, #52]
 2949 0222 CFE7     		b	.L154
 2950              	.LVL399:
 2951              	.L153:
 2952              	.LBE284:
 2953              	.LBE285:
 2954              	.LBE286:
 135:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2955              		.loc 7 135 0
 2956 0224 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2957              	.LVL400:
 136:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 2958              		.loc 7 136 0
 2959 0226 731C     		adds	r3, r6, #1
 2960 0228 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2961 022a 47EA0327 		orr	r7, r7, r3, lsl #8
 2962              	.LVL401:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 81


 137:ROSSerial/sensor_msgs/JointState.h ****       effort_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2963              		.loc 7 137 0
 2964 022e B31C     		adds	r3, r6, #2
 2965 0230 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2966 0232 47EA0347 		orr	r7, r7, r3, lsl #16
 2967              	.LVL402:
 138:ROSSerial/sensor_msgs/JointState.h ****       offset += sizeof(this->effort_length);
 2968              		.loc 7 138 0
 2969 0236 F31C     		adds	r3, r6, #3
 2970 0238 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 2971 023a 47EA0367 		orr	r7, r7, r3, lsl #24
 2972              	.LVL403:
 139:ROSSerial/sensor_msgs/JointState.h ****       if(effort_lengthT > effort_length)
 2973              		.loc 7 139 0
 2974 023e 0436     		adds	r6, r6, #4
 2975              	.LVL404:
 140:ROSSerial/sensor_msgs/JointState.h ****         this->effort = (float*)realloc(this->effort, effort_lengthT * sizeof(float));
 2976              		.loc 7 140 0
 2977 0240 E36B     		ldr	r3, [r4, #60]
 2978 0242 BB42     		cmp	r3, r7
 2979 0244 02D3     		bcc	.L164
 2980              	.LVL405:
 2981              	.L156:
 142:ROSSerial/sensor_msgs/JointState.h ****       for( uint32_t i = 0; i < effort_length; i++){
 2982              		.loc 7 142 0
 2983 0246 E763     		str	r7, [r4, #60]
 2984              	.LVL406:
 2985              	.LBB287:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 2986              		.loc 7 143 0
 2987 0248 0020     		movs	r0, #0
 2988 024a 12E0     		b	.L159
 2989              	.LVL407:
 2990              	.L164:
 2991              	.LBE287:
 141:ROSSerial/sensor_msgs/JointState.h ****       effort_length = effort_lengthT;
 2992              		.loc 7 141 0
 2993 024c B900     		lsls	r1, r7, #2
 2994 024e 606C     		ldr	r0, [r4, #68]
 2995              	.LVL408:
 2996 0250 FFF7FEFF 		bl	realloc
 2997              	.LVL409:
 2998 0254 6064     		str	r0, [r4, #68]
 2999 0256 F6E7     		b	.L156
 3000              	.LVL410:
 3001              	.L158:
 3002              	.LBB292:
 3003              	.LBB288:
 3004              	.LBB289:
 122:ROSSerial/ros/msg.h **** 
 3005              		.loc 10 122 0
 3006 0258 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 3007 025a 1B06     		lsls	r3, r3, #24
 3008 025c 03F00043 		and	r3, r3, #-2147483648
 3009 0260 226C     		ldr	r2, [r4, #64]
 3010 0262 1343     		orrs	r3, r3, r2
 3011 0264 2364     		str	r3, [r4, #64]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 82


 3012              	.LVL411:
 3013              	.LBE289:
 3014              	.LBE288:
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3015              		.loc 7 144 0
 3016 0266 0836     		adds	r6, r6, #8
 3017              	.LVL412:
 145:ROSSerial/sensor_msgs/JointState.h ****       }
 3018              		.loc 7 145 0
 3019 0268 636C     		ldr	r3, [r4, #68]
 3020 026a 226C     		ldr	r2, [r4, #64]	@ unaligned
 3021 026c 43F82020 		str	r2, [r3, r0, lsl #2]	@ unaligned
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3022              		.loc 7 143 0
 3023 0270 0130     		adds	r0, r0, #1
 3024              	.LVL413:
 3025              	.L159:
 143:ROSSerial/sensor_msgs/JointState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->st_effort));
 3026              		.loc 7 143 0 is_stmt 0 discriminator 3
 3027 0272 E36B     		ldr	r3, [r4, #60]
 3028 0274 8342     		cmp	r3, r0
 3029 0276 1FD9     		bls	.L138
 144:ROSSerial/sensor_msgs/JointState.h ****         memcpy( &(this->effort[i]), &(this->st_effort), sizeof(float));
 3030              		.loc 7 144 0 is_stmt 1 discriminator 2
 3031 0278 A919     		adds	r1, r5, r6
 3032              	.LVL414:
 3033              	.LBB291:
 3034              	.LBB290:
 108:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3035              		.loc 10 108 0 discriminator 2
 3036 027a CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 3037 027c 5B09     		lsrs	r3, r3, #5
 3038 027e 2364     		str	r3, [r4, #64]
 3039              	.LVL415:
 109:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3040              		.loc 10 109 0 discriminator 2
 3041 0280 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 3042 0282 43EAC203 		orr	r3, r3, r2, lsl #3
 3043 0286 2364     		str	r3, [r4, #64]
 3044              	.LVL416:
 110:ROSSerial/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3045              		.loc 10 110 0 discriminator 2
 3046 0288 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 3047 028a 43EAC223 		orr	r3, r3, r2, lsl #11
 3048 028e 2364     		str	r3, [r4, #64]
 111:ROSSerial/ros/msg.h **** 
 3049              		.loc 10 111 0 discriminator 2
 3050 0290 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 3051 0292 D204     		lsls	r2, r2, #19
 3052 0294 02F4F002 		and	r2, r2, #7864320
 3053 0298 1343     		orrs	r3, r3, r2
 3054 029a 2364     		str	r3, [r4, #64]
 3055              	.LVL417:
 114:ROSSerial/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3056              		.loc 10 114 0 discriminator 2
 3057 029c 8F79     		ldrb	r7, [r1, #6]	@ zero_extendqisi2
 3058              	.LVL418:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 83


 115:ROSSerial/ros/msg.h ****     if (exp != 0)
 3059              		.loc 10 115 0 discriminator 2
 3060 029e CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 3061 02a0 1201     		lsls	r2, r2, #4
 3062 02a2 02F4FE62 		and	r2, r2, #2032
 3063              	.LVL419:
 116:ROSSerial/ros/msg.h ****     {
 3064              		.loc 10 116 0 discriminator 2
 3065 02a6 52EA1712 		orrs	r2, r2, r7, lsr #4
 3066              	.LVL420:
 3067 02aa D5D0     		beq	.L158
 118:ROSSerial/ros/msg.h ****     }
 3068              		.loc 10 118 0
 3069 02ac A2F56072 		sub	r2, r2, #896
 3070              	.LVL421:
 3071 02b0 43EAC253 		orr	r3, r3, r2, lsl #23
 3072 02b4 2364     		str	r3, [r4, #64]
 3073 02b6 CFE7     		b	.L158
 3074              	.LVL422:
 3075              	.L138:
 3076              	.LBE290:
 3077              	.LBE291:
 3078              	.LBE292:
 148:ROSSerial/sensor_msgs/JointState.h **** 
 3079              		.loc 7 148 0
 3080 02b8 3046     		mov	r0, r6
 3081              	.LVL423:
 3082 02ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3083              		.cfi_endproc
 3084              	.LFE488:
 3085              		.cantunwind
 3086              		.fnend
 3088              		.section	.text.ros_init,"ax",%progbits
 3089              		.align	1
 3090              		.global	ros_init
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv4-sp-d16
 3096              	ros_init:
 3097              		.fnstart
 3098              	.LFB491:
  33:./Src/ROS_main.cpp **** {
 3099              		.loc 8 33 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 80
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3104              		.save {r4, r5, r6, r7, r8, lr}
 3105              	.LCFI16:
 3106              		.cfi_def_cfa_offset 24
 3107              		.cfi_offset 4, -24
 3108              		.cfi_offset 5, -20
 3109              		.cfi_offset 6, -16
 3110              		.cfi_offset 7, -12
 3111              		.cfi_offset 8, -8
 3112              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 84


 3113              		.pad #80
 3114 0004 94B0     		sub	sp, sp, #80
 3115              	.LCFI17:
 3116              		.cfi_def_cfa_offset 104
 3117              	.LVL424:
 3118              	.LBB316:
 3119              	.LBB317:
 3120              	.LBB318:
 3121              	.LBB319:
 3122              		.file 11 "ROSSerial/AT32hardware.h"
   1:ROSSerial/AT32hardware.h **** /*
   2:ROSSerial/AT32hardware.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/AT32hardware.h ****  *
   4:ROSSerial/AT32hardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/AT32hardware.h ****  * All rights reserved.
   6:ROSSerial/AT32hardware.h ****  *
   7:ROSSerial/AT32hardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/AT32hardware.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/AT32hardware.h ****  * are met:
  10:ROSSerial/AT32hardware.h ****  *
  11:ROSSerial/AT32hardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/AT32hardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/AT32hardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/AT32hardware.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/AT32hardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/AT32hardware.h ****  *    with the distribution.
  17:ROSSerial/AT32hardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/AT32hardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/AT32hardware.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/AT32hardware.h ****  *
  21:ROSSerial/AT32hardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/AT32hardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/AT32hardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/AT32hardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/AT32hardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/AT32hardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/AT32hardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/AT32hardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/AT32hardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/AT32hardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/AT32hardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/AT32hardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/AT32hardware.h ****  */
  34:ROSSerial/AT32hardware.h **** 
  35:ROSSerial/AT32hardware.h **** #ifndef STM32HARDWARE_H_
  36:ROSSerial/AT32hardware.h **** #define STM32HARDWARE_H_
  37:ROSSerial/AT32hardware.h **** 
  38:ROSSerial/AT32hardware.h **** #include "stm32f1xx_hal.h"
  39:ROSSerial/AT32hardware.h **** #include <stdio.h>
  40:ROSSerial/AT32hardware.h **** #include "setup.h"
  41:ROSSerial/AT32hardware.h **** 
  42:ROSSerial/AT32hardware.h **** extern UART_HandleTypeDef huart2; 
  43:ROSSerial/AT32hardware.h **** 
  44:ROSSerial/AT32hardware.h **** extern uint8_t g_RxBuf[];
  45:ROSSerial/AT32hardware.h **** extern uint8_t byte;		/* receive byte */
  46:ROSSerial/AT32hardware.h **** extern uint8_t g_RxRead;
  47:ROSSerial/AT32hardware.h **** extern uint8_t g_RxWritten;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 85


  48:ROSSerial/AT32hardware.h **** 
  49:ROSSerial/AT32hardware.h **** class STM32Hardware
  50:ROSSerial/AT32hardware.h **** {
  51:ROSSerial/AT32hardware.h **** public:
  52:ROSSerial/AT32hardware.h **** 	STM32Hardware()
  53:ROSSerial/AT32hardware.h **** 	{
  54:ROSSerial/AT32hardware.h **** 	}
  55:ROSSerial/AT32hardware.h **** 
  56:ROSSerial/AT32hardware.h **** 	/*
  57:ROSSerial/AT32hardware.h **** 	 * Method: init
  58:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  59:ROSSerial/AT32hardware.h **** 	 *   Initialize the STM32 hardware specific to ROS like UART
  60:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  61:ROSSerial/AT32hardware.h **** 	 *   returns: none
  62:ROSSerial/AT32hardware.h **** 	 */
  63:ROSSerial/AT32hardware.h **** 	void init(void)
  64:ROSSerial/AT32hardware.h **** 	{
  65:ROSSerial/AT32hardware.h **** 		if(HAL_UART_Receive_IT(&huart2, &byte, 1) != 0)
 3123              		.loc 11 65 0
 3124 0006 0122     		movs	r2, #1
 3125 0008 4549     		ldr	r1, .L177
 3126 000a 4648     		ldr	r0, .L177+4
 3127 000c FFF7FEFF 		bl	HAL_UART_Receive_IT
 3128              	.LVL425:
 3129              	.LBE319:
 3130              	.LBE318:
 188:ROSSerial/ros/node_handle.h ****     bytes_ = 0;
 3131              		.loc 9 188 0
 3132 0010 454B     		ldr	r3, .L177+8
 3133 0012 0024     		movs	r4, #0
 3134 0014 C3F80845 		str	r4, [r3, #1288]
 189:ROSSerial/ros/node_handle.h ****     index_ = 0;
 3135              		.loc 9 189 0
 3136 0018 C3F80C45 		str	r4, [r3, #1292]
 190:ROSSerial/ros/node_handle.h ****     topic_ = 0;
 3137              		.loc 9 190 0
 3138 001c C3F81445 		str	r4, [r3, #1300]
 191:ROSSerial/ros/node_handle.h ****     printf("Node init\n");
 3139              		.loc 9 191 0
 3140 0020 C3F81045 		str	r4, [r3, #1296]
 192:ROSSerial/ros/node_handle.h ****   };
 3141              		.loc 9 192 0
 3142 0024 4148     		ldr	r0, .L177+12
 3143 0026 FFF7FEFF 		bl	puts
 3144              	.LVL426:
 3145              	.LBE317:
 3146              	.LBE316:
 3147              	.LBB320:
 3148              	.LBB321:
 3149              	.LBB322:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3150              		.loc 7 40 0
 3151 002a 414B     		ldr	r3, .L177+16
 3152 002c 0293     		str	r3, [sp, #8]
 3153 002e 0494     		str	r4, [sp, #16]
 3154 0030 0794     		str	r4, [sp, #28]
 3155              	.LVL427:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 86


 3156              	.LBB323:
 3157              	.LBB324:
  13:ROSSerial/std_msgs/Header.h ****   {
 3158              		.loc 6 13 0
 3159 0032 404B     		ldr	r3, .L177+20
 3160 0034 0393     		str	r3, [sp, #12]
 3161              	.LVL428:
 3162              	.LBB325:
 3163              	.LBB326:
 3164              	.LBB327:
 3165              		.file 12 "ROSSerial/ros/time.h"
   1:ROSSerial/ros/time.h **** /*
   2:ROSSerial/ros/time.h ****  * Software License Agreement (BSD License)
   3:ROSSerial/ros/time.h ****  *
   4:ROSSerial/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:ROSSerial/ros/time.h ****  * All rights reserved.
   6:ROSSerial/ros/time.h ****  *
   7:ROSSerial/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:ROSSerial/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:ROSSerial/ros/time.h ****  * are met:
  10:ROSSerial/ros/time.h ****  *
  11:ROSSerial/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:ROSSerial/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:ROSSerial/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:ROSSerial/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:ROSSerial/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:ROSSerial/ros/time.h ****  *    with the distribution.
  17:ROSSerial/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:ROSSerial/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:ROSSerial/ros/time.h ****  *    from this software without specific prior written permission.
  20:ROSSerial/ros/time.h ****  *
  21:ROSSerial/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:ROSSerial/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:ROSSerial/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:ROSSerial/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:ROSSerial/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:ROSSerial/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:ROSSerial/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:ROSSerial/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:ROSSerial/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:ROSSerial/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:ROSSerial/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:ROSSerial/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:ROSSerial/ros/time.h ****  */
  34:ROSSerial/ros/time.h **** 
  35:ROSSerial/ros/time.h **** #ifndef ROS_TIME_H_
  36:ROSSerial/ros/time.h **** #define ROS_TIME_H_
  37:ROSSerial/ros/time.h **** 
  38:ROSSerial/ros/time.h **** #include "ros/duration.h"
  39:ROSSerial/ros/time.h **** #include <math.h>
  40:ROSSerial/ros/time.h **** #include <stdint.h>
  41:ROSSerial/ros/time.h **** 
  42:ROSSerial/ros/time.h **** namespace ros
  43:ROSSerial/ros/time.h **** {
  44:ROSSerial/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:ROSSerial/ros/time.h **** 
  46:ROSSerial/ros/time.h **** class Time
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 87


  47:ROSSerial/ros/time.h **** {
  48:ROSSerial/ros/time.h **** public:
  49:ROSSerial/ros/time.h ****   uint32_t sec, nsec;
  50:ROSSerial/ros/time.h **** 
  51:ROSSerial/ros/time.h ****   Time() : sec(0), nsec(0) {}
 3166              		.loc 12 51 0
 3167 0036 0594     		str	r4, [sp, #20]
 3168 0038 0694     		str	r4, [sp, #24]
 3169              	.LVL429:
 3170              	.LBE327:
 3171              	.LBE326:
 3172              	.LBE325:
 3173              	.LBE324:
 3174              	.LBE323:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3175              		.loc 7 40 0
 3176 003a 0894     		str	r4, [sp, #32]
 3177 003c 0A94     		str	r4, [sp, #40]
 3178 003e 0B94     		str	r4, [sp, #44]
 3179 0040 0D94     		str	r4, [sp, #52]
 3180 0042 0E94     		str	r4, [sp, #56]
 3181 0044 1094     		str	r4, [sp, #64]
 3182 0046 1194     		str	r4, [sp, #68]
 3183 0048 1394     		str	r4, [sp, #76]
 3184              	.LVL430:
 3185              	.L168:
 3186              	.LBE322:
 3187              	.LBE321:
 3188              	.LBE320:
 3189              	.LBB328:
 3190              	.LBB329:
 3191              	.LBB330:
 407:ROSSerial/ros/node_handle.h **** 
 408:ROSSerial/ros/node_handle.h ****   /********************************************************************
 409:ROSSerial/ros/node_handle.h ****    * Time functions
 410:ROSSerial/ros/node_handle.h ****    */
 411:ROSSerial/ros/node_handle.h **** 
 412:ROSSerial/ros/node_handle.h ****   void requestSyncTime()
 413:ROSSerial/ros/node_handle.h ****   {
 414:ROSSerial/ros/node_handle.h ****     if(last_sync_receive_time < rt_time)
 415:ROSSerial/ros/node_handle.h ****     {
 416:ROSSerial/ros/node_handle.h ****       //printf("skip requestSyncTime as one is pending %lu\n",hardware_.time());
 417:ROSSerial/ros/node_handle.h ****       return;
 418:ROSSerial/ros/node_handle.h ****     }
 419:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 420:ROSSerial/ros/node_handle.h ****     rt_time = hardware_.time();
 421:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 422:ROSSerial/ros/node_handle.h ****     publish1(TopicInfo::ID_TIME, &t);
 423:ROSSerial/ros/node_handle.h ****     //printf("end requestSyncTime  rt_time=%lu\n",hardware_.time());
 424:ROSSerial/ros/node_handle.h ****   }
 425:ROSSerial/ros/node_handle.h **** 
 426:ROSSerial/ros/node_handle.h ****   void syncTime(uint8_t * data)
 427:ROSSerial/ros/node_handle.h ****   {
 428:ROSSerial/ros/node_handle.h ****     std_msgs::Time t;
 429:ROSSerial/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 430:ROSSerial/ros/node_handle.h **** 
 431:ROSSerial/ros/node_handle.h ****     t.deserialize(data);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 88


 432:ROSSerial/ros/node_handle.h ****     t.data.sec += offset / 1000;
 433:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 434:ROSSerial/ros/node_handle.h **** 
 435:ROSSerial/ros/node_handle.h ****     this->setNow(t.data);
 436:ROSSerial/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 437:ROSSerial/ros/node_handle.h ****     //printf("syncTime c_time=%lu, offset=%ld\n",c_time,offset);
 438:ROSSerial/ros/node_handle.h ****     last_sync_receive_time = c_time;
 439:ROSSerial/ros/node_handle.h ****   }
 440:ROSSerial/ros/node_handle.h **** 
 441:ROSSerial/ros/node_handle.h ****   Time now()
 442:ROSSerial/ros/node_handle.h ****   {
 443:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 444:ROSSerial/ros/node_handle.h ****     Time current_time;
 445:ROSSerial/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 446:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 447:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 448:ROSSerial/ros/node_handle.h ****     return current_time;
 449:ROSSerial/ros/node_handle.h ****   }
 450:ROSSerial/ros/node_handle.h **** 
 451:ROSSerial/ros/node_handle.h ****   void setNow(Time & new_now)
 452:ROSSerial/ros/node_handle.h ****   {
 453:ROSSerial/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 454:ROSSerial/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 455:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 456:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 457:ROSSerial/ros/node_handle.h ****   }
 458:ROSSerial/ros/node_handle.h **** 
 459:ROSSerial/ros/node_handle.h ****   /********************************************************************
 460:ROSSerial/ros/node_handle.h ****    * Topic Management
 461:ROSSerial/ros/node_handle.h ****    */
 462:ROSSerial/ros/node_handle.h **** 
 463:ROSSerial/ros/node_handle.h ****    /* Register a new publisher without C++ template */
 464:ROSSerial/ros/node_handle.h ****   PublisherType* addPublisher(char * topic_name, Msg * msg)
 465:ROSSerial/ros/node_handle.h ****   {
 466:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 3192              		.loc 9 466 0
 3193 004a 042C     		cmp	r4, #4
 3194 004c 2CDC     		bgt	.L172
 467:ROSSerial/ros/node_handle.h ****     {
 468:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id == 0) {// empty slot}
 3195              		.loc 9 468 0
 3196 004e 04EB8403 		add	r3, r4, r4, lsl #2
 3197 0052 354A     		ldr	r2, .L177+8
 3198 0054 02EB8303 		add	r3, r2, r3, lsl #2
 3199 0058 B3F82C34 		ldrh	r3, [r3, #1068]
 3200 005c 0BB1     		cbz	r3, .L175
 466:ROSSerial/ros/node_handle.h ****     {
 3201              		.loc 9 466 0
 3202 005e 0134     		adds	r4, r4, #1
 3203              	.LVL431:
 3204 0060 F3E7     		b	.L168
 3205              	.L175:
 469:ROSSerial/ros/node_handle.h **** 
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_id = i + 100 + MAX_SUBSCRIBERS;
 3206              		.loc 9 470 0
 3207 0062 04F16903 		add	r3, r4, #105
 3208 0066 1546     		mov	r5, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 89


 3209 0068 A600     		lsls	r6, r4, #2
 3210 006a 3719     		adds	r7, r6, r4
 3211 006c 02EB8707 		add	r7, r2, r7, lsl #2
 3212 0070 A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3213              		.loc 9 471 0
 3214 0074 304B     		ldr	r3, .L177+24
 3215 0076 C7F83034 		str	r3, [r7, #1072]
 472:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3216              		.loc 9 472 0
 3217 007a 0DF10808 		add	r8, sp, #8
 3218              	.LVL432:
 3219 007e C7F83484 		str	r8, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3220              		.loc 9 473 0
 3221 0082 029B     		ldr	r3, [sp, #8]
 3222 0084 9B68     		ldr	r3, [r3, #8]
 3223 0086 4046     		mov	r0, r8
 3224 0088 9847     		blx	r3
 3225              	.LVL433:
 3226 008a C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3227              		.loc 9 474 0
 3228 008e 029B     		ldr	r3, [sp, #8]
 3229 0090 DB68     		ldr	r3, [r3, #12]
 3230 0092 4046     		mov	r0, r8
 3231 0094 9847     		blx	r3
 3232              	.LVL434:
 3233 0096 C7F83C04 		str	r0, [r7, #1084]
 475:ROSSerial/ros/node_handle.h **** 
 476:ROSSerial/ros/node_handle.h ****         return &publishers2[i];
 3234              		.loc 9 476 0
 3235 009a 3319     		adds	r3, r6, r4
 3236 009c 9B00     		lsls	r3, r3, #2
 3237 009e 03F58563 		add	r3, r3, #1064
 3238 00a2 2B44     		add	r3, r3, r5
 3239 00a4 0433     		adds	r3, r3, #4
 3240 00a6 00E0     		b	.L166
 3241              	.LVL435:
 3242              	.L172:
 3243              	.LBE330:
 477:ROSSerial/ros/node_handle.h ****       }
 478:ROSSerial/ros/node_handle.h ****     }
 479:ROSSerial/ros/node_handle.h ****     return nullptr;
 3244              		.loc 9 479 0
 3245 00a8 0023     		movs	r3, #0
 3246              	.L166:
 3247              	.LVL436:
 3248              	.LBE329:
 3249              	.LBE328:
  39:./Src/ROS_main.cpp ****     hovebotState = nh.addPublisher("hoverbot_state",  &tmpVar);
 3250              		.loc 8 39 0
 3251 00aa 244A     		ldr	r2, .L177+28
 3252 00ac 1360     		str	r3, [r2]
 3253              	.LVL437:
 3254              	.LBB331:
 3255              	.LBB332:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 90


  13:ROSSerial/std_msgs/ROSString.h ****   {
 3256              		.loc 5 13 0
 3257 00ae 244B     		ldr	r3, .L177+32
 3258 00b0 0093     		str	r3, [sp]
 3259              	.LVL438:
 3260              	.LBE332:
 3261              	.LBE331:
 3262              	.LBB333:
 3263              	.LBB334:
 3264              	.LBB335:
 466:ROSSerial/ros/node_handle.h ****     {
 3265              		.loc 9 466 0
 3266 00b2 0024     		movs	r4, #0
 3267              	.L171:
 3268              	.LVL439:
 3269 00b4 042C     		cmp	r4, #4
 3270 00b6 2ADC     		bgt	.L173
 468:ROSSerial/ros/node_handle.h **** 
 3271              		.loc 9 468 0
 3272 00b8 04EB8403 		add	r3, r4, r4, lsl #2
 3273 00bc 1A4A     		ldr	r2, .L177+8
 3274 00be 02EB8303 		add	r3, r2, r3, lsl #2
 3275 00c2 B3F82C34 		ldrh	r3, [r3, #1068]
 3276 00c6 0BB1     		cbz	r3, .L176
 466:ROSSerial/ros/node_handle.h ****     {
 3277              		.loc 9 466 0
 3278 00c8 0134     		adds	r4, r4, #1
 3279              	.LVL440:
 3280 00ca F3E7     		b	.L171
 3281              	.L176:
 470:ROSSerial/ros/node_handle.h ****         publishers2[i].topic_name = topic_name;
 3282              		.loc 9 470 0
 3283 00cc 04F16903 		add	r3, r4, #105
 3284 00d0 1546     		mov	r5, r2
 3285 00d2 A600     		lsls	r6, r4, #2
 3286 00d4 3719     		adds	r7, r6, r4
 3287 00d6 02EB8707 		add	r7, r2, r7, lsl #2
 3288 00da A7F82C34 		strh	r3, [r7, #1068]	@ movhi
 471:ROSSerial/ros/node_handle.h ****         publishers2[i].msg = msg;
 3289              		.loc 9 471 0
 3290 00de 194B     		ldr	r3, .L177+36
 3291 00e0 C7F83034 		str	r3, [r7, #1072]
 472:ROSSerial/ros/node_handle.h ****         publishers2[i].message_type = msg->getType();
 3292              		.loc 9 472 0
 3293 00e4 C7F834D4 		str	sp, [r7, #1076]
 473:ROSSerial/ros/node_handle.h ****         publishers2[i].md5sum = msg->getMD5();
 3294              		.loc 9 473 0
 3295 00e8 009B     		ldr	r3, [sp]
 3296 00ea 9B68     		ldr	r3, [r3, #8]
 3297 00ec 6846     		mov	r0, sp
 3298 00ee 9847     		blx	r3
 3299              	.LVL441:
 3300 00f0 C7F83804 		str	r0, [r7, #1080]
 474:ROSSerial/ros/node_handle.h **** 
 3301              		.loc 9 474 0
 3302 00f4 009B     		ldr	r3, [sp]
 3303 00f6 DB68     		ldr	r3, [r3, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 91


 3304 00f8 6846     		mov	r0, sp
 3305 00fa 9847     		blx	r3
 3306              	.LVL442:
 3307 00fc C7F83C04 		str	r0, [r7, #1084]
 476:ROSSerial/ros/node_handle.h ****       }
 3308              		.loc 9 476 0
 3309 0100 3319     		adds	r3, r6, r4
 3310 0102 9B00     		lsls	r3, r3, #2
 3311 0104 03F58563 		add	r3, r3, #1064
 3312 0108 2B44     		add	r3, r3, r5
 3313 010a 0433     		adds	r3, r3, #4
 3314 010c 00E0     		b	.L169
 3315              	.L173:
 3316              	.LBE335:
 3317              		.loc 9 479 0
 3318 010e 0023     		movs	r3, #0
 3319              	.L169:
 3320              	.LVL443:
 3321              	.LBE334:
 3322              	.LBE333:
  43:./Src/ROS_main.cpp ****     chatter = nh.addPublisher("chatter",  &tmpStr);
 3323              		.loc 8 43 0
 3324 0110 0D4A     		ldr	r2, .L177+40
 3325 0112 1360     		str	r3, [r2]
  46:./Src/ROS_main.cpp ****     rosSubscribeWheelsCmd(&nh);
 3326              		.loc 8 46 0
 3327 0114 0448     		ldr	r0, .L177+8
 3328 0116 FFF7FEFF 		bl	_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 3329              	.LVL444:
  47:./Src/ROS_main.cpp **** }
 3330              		.loc 8 47 0
 3331 011a 14B0     		add	sp, sp, #80
 3332              	.LCFI18:
 3333              		.cfi_def_cfa_offset 24
 3334              		@ sp needed
 3335 011c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3336              	.L178:
 3337              		.align	2
 3338              	.L177:
 3339 0120 00000000 		.word	byte
 3340 0124 00000000 		.word	huart2
 3341 0128 00000000 		.word	.LANCHOR1
 3342 012c 00000000 		.word	.LC16
 3343 0130 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
 3344 0134 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 3345 0138 0C000000 		.word	.LC17
 3346 013c 00000000 		.word	.LANCHOR2
 3347 0140 08000000 		.word	_ZTVN8std_msgs6StringE+8
 3348 0144 1C000000 		.word	.LC18
 3349 0148 00000000 		.word	.LANCHOR3
 3350              		.cfi_endproc
 3351              	.LFE491:
 3352              		.fnend
 3354              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE,"axG"
 3355              		.align	1
 3356              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3357              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 92


 3358              		.thumb
 3359              		.thumb_func
 3360              		.fpu fpv4-sp-d16
 3362              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:
 3363              		.fnstart
 3364              	.LFB511:
 480:ROSSerial/ros/node_handle.h ****   }
 481:ROSSerial/ros/node_handle.h **** 
 482:ROSSerial/ros/node_handle.h ****   /* Register a new publisher */
 483:ROSSerial/ros/node_handle.h ****   bool advertise(Publisher & p)
 484:ROSSerial/ros/node_handle.h ****   {
 485:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 486:ROSSerial/ros/node_handle.h ****     {
 487:ROSSerial/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 488:ROSSerial/ros/node_handle.h ****       {
 489:ROSSerial/ros/node_handle.h ****         publishers[i] = &p;
 490:ROSSerial/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 491:ROSSerial/ros/node_handle.h ****         p.nh_ = this;
 492:ROSSerial/ros/node_handle.h ****         return true;
 493:ROSSerial/ros/node_handle.h ****       }
 494:ROSSerial/ros/node_handle.h ****     }
 495:ROSSerial/ros/node_handle.h ****     return false;
 496:ROSSerial/ros/node_handle.h ****   }
 497:ROSSerial/ros/node_handle.h **** 
 498:ROSSerial/ros/node_handle.h ****   /* Register a new subscriber */
 499:ROSSerial/ros/node_handle.h ****   template<typename SubscriberT>
 500:ROSSerial/ros/node_handle.h ****   bool subscribe(SubscriberT& s)
 501:ROSSerial/ros/node_handle.h ****   {
 502:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 503:ROSSerial/ros/node_handle.h ****     {
 504:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 505:ROSSerial/ros/node_handle.h ****       {
 506:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&s);
 507:ROSSerial/ros/node_handle.h ****         s.id_ = i + 100;
 508:ROSSerial/ros/node_handle.h ****         return true;
 509:ROSSerial/ros/node_handle.h ****       }
 510:ROSSerial/ros/node_handle.h ****     }
 511:ROSSerial/ros/node_handle.h ****     return false;
 512:ROSSerial/ros/node_handle.h ****   }
 513:ROSSerial/ros/node_handle.h **** 
 514:ROSSerial/ros/node_handle.h ****   bool addSubscriber(SubscriberType sub)
 515:ROSSerial/ros/node_handle.h ****   {
 516:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 517:ROSSerial/ros/node_handle.h ****     {
 518:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id == 0) {// empty slot}
 519:ROSSerial/ros/node_handle.h ****         void * ptr = &subscribers2[i];
 520:ROSSerial/ros/node_handle.h ****         memcpy(ptr, &sub, sizeof(sub));
 521:ROSSerial/ros/node_handle.h ****         subscribers2[i].topic_id = i + 100;
 522:ROSSerial/ros/node_handle.h ****         printf("Registered %s with id %d\n", \
 523:ROSSerial/ros/node_handle.h ****           subscribers2[i].topic_name,subscribers2[i].topic_id);
 524:ROSSerial/ros/node_handle.h ****         return true;
 525:ROSSerial/ros/node_handle.h ****       }
 526:ROSSerial/ros/node_handle.h ****     }
 527:ROSSerial/ros/node_handle.h ****     return false;
 528:ROSSerial/ros/node_handle.h ****   }
 529:ROSSerial/ros/node_handle.h **** 
 530:ROSSerial/ros/node_handle.h ****   /* Register a new Service Server */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 93


 531:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 532:ROSSerial/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 533:ROSSerial/ros/node_handle.h ****   {
 534:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 535:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 536:ROSSerial/ros/node_handle.h ****     {
 537:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 538:ROSSerial/ros/node_handle.h ****       {
 539:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 540:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 541:ROSSerial/ros/node_handle.h ****         return v;
 542:ROSSerial/ros/node_handle.h ****       }
 543:ROSSerial/ros/node_handle.h ****     }
 544:ROSSerial/ros/node_handle.h ****     return false;
 545:ROSSerial/ros/node_handle.h ****   }
 546:ROSSerial/ros/node_handle.h **** 
 547:ROSSerial/ros/node_handle.h ****   /* Register a new Service Client */
 548:ROSSerial/ros/node_handle.h ****   template<typename MReq, typename MRes>
 549:ROSSerial/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 550:ROSSerial/ros/node_handle.h ****   {
 551:ROSSerial/ros/node_handle.h ****     bool v = advertise(srv.pub);
 552:ROSSerial/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 553:ROSSerial/ros/node_handle.h ****     {
 554:ROSSerial/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 555:ROSSerial/ros/node_handle.h ****       {
 556:ROSSerial/ros/node_handle.h ****         subscribers[i] = static_cast<Subscriber_*>(&srv);
 557:ROSSerial/ros/node_handle.h ****         srv.id_ = i + 100;
 558:ROSSerial/ros/node_handle.h ****         return v;
 559:ROSSerial/ros/node_handle.h ****       }
 560:ROSSerial/ros/node_handle.h ****     }
 561:ROSSerial/ros/node_handle.h ****     return false;
 562:ROSSerial/ros/node_handle.h ****   }
 563:ROSSerial/ros/node_handle.h **** 
 564:ROSSerial/ros/node_handle.h ****   void negotiateTopics()
 565:ROSSerial/ros/node_handle.h ****   {
 566:ROSSerial/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 567:ROSSerial/ros/node_handle.h ****     int i;
 568:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 569:ROSSerial/ros/node_handle.h ****     {
 570:ROSSerial/ros/node_handle.h ****       if (publishers2[i].topic_id != 0) // non-empty slot
 571:ROSSerial/ros/node_handle.h ****       {
 572:ROSSerial/ros/node_handle.h ****         ti.topic_id = publishers2[i].topic_id;
 573:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 574:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 575:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 576:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 577:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 578:ROSSerial/ros/node_handle.h ****       }
 579:ROSSerial/ros/node_handle.h ****     }
 580:ROSSerial/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 581:ROSSerial/ros/node_handle.h ****     {
 582:ROSSerial/ros/node_handle.h ****       if (subscribers2[i].topic_id != 0) // non-empty slot
 583:ROSSerial/ros/node_handle.h ****       {
 584:ROSSerial/ros/node_handle.h ****         ti.topic_id = subscribers2[i].topic_id;
 585:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 586:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 587:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 94


 588:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 589:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 590:ROSSerial/ros/node_handle.h ****       }
 591:ROSSerial/ros/node_handle.h ****     }
 592:ROSSerial/ros/node_handle.h ****     configured_ = true;
 593:ROSSerial/ros/node_handle.h ****   }
 594:ROSSerial/ros/node_handle.h **** 
 595:ROSSerial/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg)
 596:ROSSerial/ros/node_handle.h ****   {
 597:ROSSerial/ros/node_handle.h ****     return publish1(id, msg);
 598:ROSSerial/ros/node_handle.h ****   }
 599:ROSSerial/ros/node_handle.h **** 
 600:ROSSerial/ros/node_handle.h ****   int publish1(int id, Msg * msg)
 3365              		.loc 9 600 0
 3366              		.cfi_startproc
 3367              		@ args = 0, pretend = 0, frame = 16
 3368              		@ frame_needed = 0, uses_anonymous_args = 0
 3369              	.LVL445:
 3370 0000 30B5     		push	{r4, r5, lr}
 3371              		.save {r4, r5, lr}
 3372              	.LCFI19:
 3373              		.cfi_def_cfa_offset 12
 3374              		.cfi_offset 4, -12
 3375              		.cfi_offset 5, -8
 3376              		.cfi_offset 14, -4
 3377              		.pad #20
 3378 0002 85B0     		sub	sp, sp, #20
 3379              	.LCFI20:
 3380              		.cfi_def_cfa_offset 32
 601:ROSSerial/ros/node_handle.h ****   {
 602:ROSSerial/ros/node_handle.h ****     // if(id == TopicInfo::ID_TIME)
 603:ROSSerial/ros/node_handle.h ****     // {
 604:ROSSerial/ros/node_handle.h ****     //   printf("time=%lu, in nh.publsh %d %x\n",hardware_.time(), id, msg);
 605:ROSSerial/ros/node_handle.h ****     // }
 606:ROSSerial/ros/node_handle.h ****     if (id >= 100 && !configured_) {
 3381              		.loc 9 606 0
 3382 0004 6329     		cmp	r1, #99
 3383 0006 03DD     		ble	.L180
 3384              		.loc 9 606 0 is_stmt 0 discriminator 1
 3385 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3386 000c 002B     		cmp	r3, #0
 3387 000e 5DD0     		beq	.L185
 3388              	.L180:
 3389 0010 0D46     		mov	r5, r1
 3390 0012 0446     		mov	r4, r0
 607:ROSSerial/ros/node_handle.h ****       return 0;
 608:ROSSerial/ros/node_handle.h ****     }
 609:ROSSerial/ros/node_handle.h ****     // if(id == TopicInfo::ID_TIME)
 610:ROSSerial/ros/node_handle.h ****     //   printf("in nh.publsh %s\n",msg->getType());
 611:ROSSerial/ros/node_handle.h ****     /* serialize message */
 612:ROSSerial/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 3391              		.loc 9 612 0 is_stmt 1
 3392 0014 1368     		ldr	r3, [r2]
 3393 0016 1B68     		ldr	r3, [r3]
 3394 0018 00F21F21 		addw	r1, r0, #543
 3395              	.LVL446:
 3396 001c 1046     		mov	r0, r2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 95


 3397              	.LVL447:
 3398 001e 9847     		blx	r3
 3399              	.LVL448:
 613:ROSSerial/ros/node_handle.h **** 
 614:ROSSerial/ros/node_handle.h ****     /* setup the header */
 615:ROSSerial/ros/node_handle.h ****     message_out[0] = 0xff;
 3400              		.loc 9 615 0
 3401 0020 FF23     		movs	r3, #255
 3402 0022 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3403              		.loc 9 616 0
 3404 0026 FE23     		movs	r3, #254
 3405 0028 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3406              		.loc 9 617 0
 3407 002c C3B2     		uxtb	r3, r0
 3408 002e 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3409              		.loc 9 618 0
 3410 0032 C0F30722 		ubfx	r2, r0, #8, #8
 3411 0036 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3412              		.loc 9 619 0
 3413 003a 1344     		add	r3, r3, r2
 3414 003c DBB2     		uxtb	r3, r3
 3415 003e DB43     		mvns	r3, r3
 3416 0040 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3417              		.loc 9 620 0
 3418 0044 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3419              		.loc 9 621 0
 3420 0048 45F30721 		sbfx	r1, r5, #8, #8
 3421 004c 84F81E12 		strb	r1, [r4, #542]
 3422              	.LVL449:
 3423              	.LBB352:
 622:ROSSerial/ros/node_handle.h **** 
 623:ROSSerial/ros/node_handle.h ****     /* calculate checksum */
 624:ROSSerial/ros/node_handle.h ****     int chk = 0;
 625:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3424              		.loc 9 625 0
 3425 0050 0522     		movs	r2, #5
 3426              	.LBE352:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3427              		.loc 9 624 0
 3428 0052 0023     		movs	r3, #0
 3429              	.LVL450:
 3430              	.L183:
 3431              	.LBB353:
 3432              		.loc 9 625 0 discriminator 3
 3433 0054 C11D     		adds	r1, r0, #7
 3434 0056 9142     		cmp	r1, r2
 3435 0058 05DD     		ble	.L182
 626:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3436              		.loc 9 626 0 discriminator 2
 3437 005a A118     		adds	r1, r4, r2
 3438 005c 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 96


 3439 0060 0B44     		add	r3, r3, r1
 3440              	.LVL451:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3441              		.loc 9 625 0 discriminator 2
 3442 0062 0132     		adds	r2, r2, #1
 3443              	.LVL452:
 3444 0064 F6E7     		b	.L183
 3445              	.L182:
 3446              	.LVL453:
 3447              	.LBE353:
 627:ROSSerial/ros/node_handle.h ****     l += 7;
 628:ROSSerial/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 3448              		.loc 9 628 0
 3449 0066 5A42     		rsbs	r2, r3, #0
 3450              	.LVL454:
 3451 0068 DBB2     		uxtb	r3, r3
 3452              	.LVL455:
 3453 006a D2B2     		uxtb	r2, r2
 3454 006c 58BF     		it	pl
 3455 006e 5342     		rsbpl	r3, r2, #0
 3456 0070 00F10805 		add	r5, r0, #8
 3457              	.LVL456:
 3458 0074 DB43     		mvns	r3, r3
 3459 0076 2144     		add	r1, r1, r4
 3460 0078 81F81832 		strb	r3, [r1, #536]
 629:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 630:ROSSerial/ros/node_handle.h ****     //  printf("Sending message - %s, length %d\n",msg->getType(), l);
 631:ROSSerial/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 3461              		.loc 9 631 0
 3462 007c B5F5007F 		cmp	r5, #512
 3463 0080 12DC     		bgt	.L184
 632:ROSSerial/ros/node_handle.h ****     {
 633:ROSSerial/ros/node_handle.h ****       hardware_.write(message_out, l);
 3464              		.loc 9 633 0
 3465 0082 04F50674 		add	r4, r4, #536
 3466              	.LVL457:
 3467              	.LBB354:
 3468              	.LBB355:
  66:ROSSerial/AT32hardware.h **** 		{
  67:ROSSerial/AT32hardware.h **** 			return ;
  68:ROSSerial/AT32hardware.h **** 		}
  69:ROSSerial/AT32hardware.h **** 	}
  70:ROSSerial/AT32hardware.h **** 
  71:ROSSerial/AT32hardware.h **** 	/*
  72:ROSSerial/AT32hardware.h ****      * Method: read
  73:ROSSerial/AT32hardware.h **** 	 * ----------------------------
  74:ROSSerial/AT32hardware.h **** 	 *   Read a byte of data from ROS connection
  75:ROSSerial/AT32hardware.h **** 	 *   parameters: none
  76:ROSSerial/AT32hardware.h **** 	 *   returns: data, or -1 if there are no data
  77:ROSSerial/AT32hardware.h **** 	 */
  78:ROSSerial/AT32hardware.h **** 	int read(void)
  79:ROSSerial/AT32hardware.h **** 	{
  80:ROSSerial/AT32hardware.h **** 		int ucData = -1;
  81:ROSSerial/AT32hardware.h **** 		
  82:ROSSerial/AT32hardware.h **** 		if(g_RxRead < g_RxWritten)
  83:ROSSerial/AT32hardware.h **** 		{
  84:ROSSerial/AT32hardware.h **** 			ucData = g_RxBuf[g_RxRead++];
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 97


  85:ROSSerial/AT32hardware.h **** 		}
  86:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE &&  g_RxRead == g_RxWritten )
  87:ROSSerial/AT32hardware.h **** 		{
  88:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
  89:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
  90:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
  91:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
  92:ROSSerial/AT32hardware.h **** 		}
  93:ROSSerial/AT32hardware.h **** 		else if (g_RxWritten < RX_BUF_SIZE && g_RxWritten > g_RxRead)
  94:ROSSerial/AT32hardware.h **** 		{
  95:ROSSerial/AT32hardware.h **** 			printf("How did this happen? %d %d\n",g_RxRead,g_RxWritten);
  96:ROSSerial/AT32hardware.h **** 		}
  97:ROSSerial/AT32hardware.h **** 		
  98:ROSSerial/AT32hardware.h **** 		
  99:ROSSerial/AT32hardware.h **** 		if(g_RxRead == RX_BUF_SIZE )
 100:ROSSerial/AT32hardware.h **** 		{
 101:ROSSerial/AT32hardware.h **** 			g_RxRead = 0;
 102:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 103:ROSSerial/AT32hardware.h **** 			//Enable the interrupt so we can read again.
 104:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 105:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 106:ROSSerial/AT32hardware.h **** 		}
 107:ROSSerial/AT32hardware.h **** 		return ucData;
 108:ROSSerial/AT32hardware.h **** 	}
 109:ROSSerial/AT32hardware.h **** 
 110:ROSSerial/AT32hardware.h **** 	/*
 111:ROSSerial/AT32hardware.h **** 	 * Method: write
 112:ROSSerial/AT32hardware.h ****      * ----------------------------
 113:ROSSerial/AT32hardware.h **** 	 *   Send data to ROS connection
 114:ROSSerial/AT32hardware.h **** 	 *   parameters: pointer to data array, length of data
 115:ROSSerial/AT32hardware.h **** 	 *   returns: none
 116:ROSSerial/AT32hardware.h **** 	 */
 117:ROSSerial/AT32hardware.h **** 	void write(uint8_t* data, uint32_t length)
 118:ROSSerial/AT32hardware.h **** 	{
 119:ROSSerial/AT32hardware.h **** 		// printf("printing %d\n",length);
 120:ROSSerial/AT32hardware.h **** 		/* Without Interrupt we can still publish chatter at 111.6Hz or 9ms per message */
 121:ROSSerial/AT32hardware.h **** 		HAL_StatusTypeDef ret = HAL_UART_Transmit(&huart2, (uint8_t *)data, length, 20);
 3469              		.loc 11 121 0
 3470 0086 1423     		movs	r3, #20
 3471 0088 AAB2     		uxth	r2, r5
 3472 008a 2146     		mov	r1, r4
 3473 008c 1048     		ldr	r0, .L188
 3474 008e FFF7FEFF 		bl	HAL_UART_Transmit
 3475              	.LVL458:
 122:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3476              		.loc 11 122 0
 3477 0092 0146     		mov	r1, r0
 3478 0094 10B9     		cbnz	r0, .L187
 3479              	.LVL459:
 3480              	.L179:
 3481              	.LBE355:
 3482              	.LBE354:
 634:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 635:ROSSerial/ros/node_handle.h ****       // {
 636:ROSSerial/ros/node_handle.h ****       //   printf("%lu:sent write message - %s, length %d\n",hardware_.time(), msg->getType(), l);
 637:ROSSerial/ros/node_handle.h ****       // }
 638:ROSSerial/ros/node_handle.h ****         
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 98


 639:ROSSerial/ros/node_handle.h ****       return l;
 640:ROSSerial/ros/node_handle.h ****     }
 641:ROSSerial/ros/node_handle.h ****     else
 642:ROSSerial/ros/node_handle.h ****     {
 643:ROSSerial/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 644:ROSSerial/ros/node_handle.h ****       printf("Message from device dropped: message larger than buffer.");
 645:ROSSerial/ros/node_handle.h ****       return -1;
 646:ROSSerial/ros/node_handle.h ****     }
 647:ROSSerial/ros/node_handle.h ****   }
 3483              		.loc 9 647 0
 3484 0096 2846     		mov	r0, r5
 3485 0098 05B0     		add	sp, sp, #20
 3486              	.LCFI21:
 3487              		.cfi_remember_state
 3488              		.cfi_def_cfa_offset 12
 3489              		@ sp needed
 3490 009a 30BD     		pop	{r4, r5, pc}
 3491              	.LVL460:
 3492              	.L187:
 3493              	.LCFI22:
 3494              		.cfi_restore_state
 3495              	.LBB357:
 3496              	.LBB356:
 123:ROSSerial/AT32hardware.h **** 		{
 124:ROSSerial/AT32hardware.h **** 			printf("HAL write error %d %lu - %s\n",ret,length, data);
 3497              		.loc 11 124 0
 3498 009c 2346     		mov	r3, r4
 3499 009e 2A46     		mov	r2, r5
 3500 00a0 0C48     		ldr	r0, .L188+4
 3501              	.LVL461:
 3502 00a2 FFF7FEFF 		bl	printf
 3503              	.LVL462:
 3504 00a6 F6E7     		b	.L179
 3505              	.LVL463:
 3506              	.L184:
 3507              	.LBE356:
 3508              	.LBE357:
 3509              	.LBB358:
 3510              	.LBB359:
 3511              	.LBB360:
 3512              	.LBB361:
 3513              	.LBB362:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3514              		.loc 3 13 0
 3515 00a8 0B4B     		ldr	r3, .L188+8
 3516 00aa 0193     		str	r3, [sp, #4]
 3517              	.LVL464:
 3518              	.LBE362:
 3519              	.LBE361:
 648:ROSSerial/ros/node_handle.h **** 
 649:ROSSerial/ros/node_handle.h ****   /********************************************************************
 650:ROSSerial/ros/node_handle.h ****    * Logging
 651:ROSSerial/ros/node_handle.h ****    */
 652:ROSSerial/ros/node_handle.h **** 
 653:ROSSerial/ros/node_handle.h **** private:
 654:ROSSerial/ros/node_handle.h ****   void log(char byte, const char * msg)
 655:ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 99


 656:ROSSerial/ros/node_handle.h ****     rosserial_msgs::Log l;
 657:ROSSerial/ros/node_handle.h ****     l.level = byte;
 3520              		.loc 9 657 0
 3521 00ac 0323     		movs	r3, #3
 3522 00ae 8DF80830 		strb	r3, [sp, #8]
 658:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3523              		.loc 9 658 0
 3524 00b2 0A4D     		ldr	r5, .L188+12
 3525              	.LVL465:
 3526 00b4 0395     		str	r5, [sp, #12]
 659:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3527              		.loc 9 659 0
 3528 00b6 01AA     		add	r2, sp, #4
 3529 00b8 0721     		movs	r1, #7
 3530 00ba 2046     		mov	r0, r4
 3531              	.LVL466:
 3532 00bc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3533              	.LVL467:
 3534              	.LBE360:
 3535              	.LBE359:
 3536              	.LBE358:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3537              		.loc 9 644 0
 3538 00c0 2846     		mov	r0, r5
 3539 00c2 FFF7FEFF 		bl	printf
 3540              	.LVL468:
 645:ROSSerial/ros/node_handle.h ****     }
 3541              		.loc 9 645 0
 3542 00c6 4FF0FF35 		mov	r5, #-1
 3543 00ca E4E7     		b	.L179
 3544              	.LVL469:
 3545              	.L185:
 607:ROSSerial/ros/node_handle.h ****     }
 3546              		.loc 9 607 0
 3547 00cc 0025     		movs	r5, #0
 3548 00ce E2E7     		b	.L179
 3549              	.L189:
 3550              		.align	2
 3551              	.L188:
 3552 00d0 00000000 		.word	huart2
 3553 00d4 00000000 		.word	.LC19
 3554 00d8 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3555 00dc 20000000 		.word	.LC20
 3556              		.cfi_endproc
 3557              	.LFE511:
 3558              		.fnend
 3560              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE,"axG"
 3561              		.align	1
 3562              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 3563              		.syntax unified
 3564              		.thumb
 3565              		.thumb_func
 3566              		.fpu fpv4-sp-d16
 3568              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:
 3569              		.fnstart
 3570              	.LFB529:
 595:ROSSerial/ros/node_handle.h ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 100


 3571              		.loc 9 595 0
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 24
 3574              		@ frame_needed = 0, uses_anonymous_args = 0
 3575              	.LVL470:
 3576 0000 30B5     		push	{r4, r5, lr}
 3577              		.save {r4, r5, lr}
 3578              	.LCFI23:
 3579              		.cfi_def_cfa_offset 12
 3580              		.cfi_offset 4, -12
 3581              		.cfi_offset 5, -8
 3582              		.cfi_offset 14, -4
 3583              		.pad #28
 3584 0002 87B0     		sub	sp, sp, #28
 3585              	.LCFI24:
 3586              		.cfi_def_cfa_offset 40
 3587              	.LVL471:
 3588              	.LBB385:
 3589              	.LBB386:
 606:ROSSerial/ros/node_handle.h ****       return 0;
 3590              		.loc 9 606 0
 3591 0004 6329     		cmp	r1, #99
 3592 0006 04DD     		ble	.L191
 3593 0008 90F81C35 		ldrb	r3, [r0, #1308]	@ zero_extendqisi2
 3594 000c 002B     		cmp	r3, #0
 3595 000e 00F0AE80 		beq	.L200
 3596              	.L191:
 3597 0012 0D46     		mov	r5, r1
 3598 0014 0446     		mov	r4, r0
 612:ROSSerial/ros/node_handle.h **** 
 3599              		.loc 9 612 0
 3600 0016 1368     		ldr	r3, [r2]
 3601 0018 1B68     		ldr	r3, [r3]
 3602 001a 00F21F21 		addw	r1, r0, #543
 3603              	.LVL472:
 3604 001e 1046     		mov	r0, r2
 3605              	.LVL473:
 3606 0020 9847     		blx	r3
 3607              	.LVL474:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3608              		.loc 9 615 0
 3609 0022 FF23     		movs	r3, #255
 3610 0024 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3611              		.loc 9 616 0
 3612 0028 FE23     		movs	r3, #254
 3613 002a 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3614              		.loc 9 617 0
 3615 002e C3B2     		uxtb	r3, r0
 3616 0030 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3617              		.loc 9 618 0
 3618 0034 C0F30722 		ubfx	r2, r0, #8, #8
 3619 0038 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3620              		.loc 9 619 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 101


 3621 003c 1344     		add	r3, r3, r2
 3622 003e DBB2     		uxtb	r3, r3
 3623 0040 DB43     		mvns	r3, r3
 3624 0042 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3625              		.loc 9 620 0
 3626 0046 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 3627              		.loc 9 621 0
 3628 004a 45F30721 		sbfx	r1, r5, #8, #8
 3629 004e 84F81E12 		strb	r1, [r4, #542]
 3630              	.LVL475:
 3631              	.LBB387:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3632              		.loc 9 625 0
 3633 0052 0522     		movs	r2, #5
 3634              	.LBE387:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 3635              		.loc 9 624 0
 3636 0054 0023     		movs	r3, #0
 3637              	.LVL476:
 3638              	.L194:
 3639              	.LBB388:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3640              		.loc 9 625 0
 3641 0056 C11D     		adds	r1, r0, #7
 3642 0058 9142     		cmp	r1, r2
 3643 005a 05DD     		ble	.L193
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 3644              		.loc 9 626 0
 3645 005c A118     		adds	r1, r4, r2
 3646 005e 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3647 0062 0B44     		add	r3, r3, r1
 3648              	.LVL477:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3649              		.loc 9 625 0
 3650 0064 0132     		adds	r2, r2, #1
 3651              	.LVL478:
 3652 0066 F6E7     		b	.L194
 3653              	.L193:
 3654              	.LVL479:
 3655              	.LBE388:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3656              		.loc 9 628 0
 3657 0068 5A42     		rsbs	r2, r3, #0
 3658              	.LVL480:
 3659 006a DBB2     		uxtb	r3, r3
 3660              	.LVL481:
 3661 006c D2B2     		uxtb	r2, r2
 3662 006e 58BF     		it	pl
 3663 0070 5342     		rsbpl	r3, r2, #0
 3664 0072 00F10805 		add	r5, r0, #8
 3665              	.LVL482:
 3666 0076 DB43     		mvns	r3, r3
 3667 0078 2144     		add	r1, r1, r4
 3668 007a 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 102


 3669              		.loc 9 631 0
 3670 007e B5F5007F 		cmp	r5, #512
 3671 0082 12DC     		bgt	.L195
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 3672              		.loc 9 633 0
 3673 0084 04F50674 		add	r4, r4, #536
 3674              	.LVL483:
 3675              	.LBB389:
 3676              	.LBB390:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3677              		.loc 11 121 0
 3678 0088 1423     		movs	r3, #20
 3679 008a AAB2     		uxth	r2, r5
 3680 008c 2146     		mov	r1, r4
 3681 008e 3948     		ldr	r0, .L204
 3682 0090 FFF7FEFF 		bl	HAL_UART_Transmit
 3683              	.LVL484:
 122:ROSSerial/AT32hardware.h **** 		{
 3684              		.loc 11 122 0
 3685 0094 0146     		mov	r1, r0
 3686 0096 10B9     		cbnz	r0, .L202
 3687              	.LVL485:
 3688              	.L190:
 3689              	.LBE390:
 3690              	.LBE389:
 3691              	.LBE386:
 3692              	.LBE385:
 598:ROSSerial/ros/node_handle.h **** 
 3693              		.loc 9 598 0
 3694 0098 2846     		mov	r0, r5
 3695 009a 07B0     		add	sp, sp, #28
 3696              	.LCFI25:
 3697              		.cfi_remember_state
 3698              		.cfi_def_cfa_offset 12
 3699              		@ sp needed
 3700 009c 30BD     		pop	{r4, r5, pc}
 3701              	.LVL486:
 3702              	.L202:
 3703              	.LCFI26:
 3704              		.cfi_restore_state
 3705              	.LBB416:
 3706              	.LBB415:
 3707              	.LBB392:
 3708              	.LBB391:
 3709              		.loc 11 124 0
 3710 009e 2346     		mov	r3, r4
 3711 00a0 2A46     		mov	r2, r5
 3712 00a2 3548     		ldr	r0, .L204+4
 3713              	.LVL487:
 3714 00a4 FFF7FEFF 		bl	printf
 3715              	.LVL488:
 3716 00a8 F6E7     		b	.L190
 3717              	.LVL489:
 3718              	.L195:
 3719              	.LBE391:
 3720              	.LBE392:
 3721              	.LBB393:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 103


 3722              	.LBB394:
 3723              	.LBB395:
 3724              	.LBB396:
 3725              	.LBB397:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3726              		.loc 3 13 0
 3727 00aa 344B     		ldr	r3, .L204+8
 3728 00ac 0093     		str	r3, [sp]
 3729              	.LVL490:
 3730              	.LBE397:
 3731              	.LBE396:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 3732              		.loc 9 657 0
 3733 00ae 0322     		movs	r2, #3
 3734 00b0 8DF80420 		strb	r2, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3735              		.loc 9 658 0
 3736 00b4 324A     		ldr	r2, .L204+12
 3737 00b6 0292     		str	r2, [sp, #8]
 3738              	.LVL491:
 3739              	.LBB398:
 3740              	.LBB399:
 612:ROSSerial/ros/node_handle.h **** 
 3741              		.loc 9 612 0
 3742 00b8 1B68     		ldr	r3, [r3]
 3743 00ba 04F21F21 		addw	r1, r4, #543
 3744 00be 6846     		mov	r0, sp
 3745 00c0 9847     		blx	r3
 3746              	.LVL492:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 3747              		.loc 9 615 0
 3748 00c2 FF23     		movs	r3, #255
 3749 00c4 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 3750              		.loc 9 616 0
 3751 00c8 FE23     		movs	r3, #254
 3752 00ca 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 3753              		.loc 9 617 0
 3754 00ce C3B2     		uxtb	r3, r0
 3755 00d0 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 3756              		.loc 9 618 0
 3757 00d4 C0F30722 		ubfx	r2, r0, #8, #8
 3758 00d8 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 3759              		.loc 9 619 0
 3760 00dc 1344     		add	r3, r3, r2
 3761 00de DBB2     		uxtb	r3, r3
 3762 00e0 DB43     		mvns	r3, r3
 3763 00e2 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 3764              		.loc 9 620 0
 3765 00e6 0723     		movs	r3, #7
 3766 00e8 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 3767              		.loc 9 621 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 104


 3768 00ec 0023     		movs	r3, #0
 3769 00ee 84F81E32 		strb	r3, [r4, #542]
 3770              	.LVL493:
 3771              	.LBB400:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3772              		.loc 9 625 0
 3773 00f2 0522     		movs	r2, #5
 3774              	.LVL494:
 3775              	.L197:
 3776 00f4 C11D     		adds	r1, r0, #7
 3777 00f6 9142     		cmp	r1, r2
 3778 00f8 05DD     		ble	.L196
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 3779              		.loc 9 626 0
 3780 00fa A118     		adds	r1, r4, r2
 3781 00fc 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 3782 0100 0B44     		add	r3, r3, r1
 3783              	.LVL495:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 3784              		.loc 9 625 0
 3785 0102 0132     		adds	r2, r2, #1
 3786              	.LVL496:
 3787 0104 F6E7     		b	.L197
 3788              	.L196:
 3789              	.LVL497:
 3790              	.LBE400:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 3791              		.loc 9 628 0
 3792 0106 5A42     		rsbs	r2, r3, #0
 3793              	.LVL498:
 3794 0108 DBB2     		uxtb	r3, r3
 3795              	.LVL499:
 3796 010a D2B2     		uxtb	r2, r2
 3797 010c 58BF     		it	pl
 3798 010e 5342     		rsbpl	r3, r2, #0
 3799 0110 00F10805 		add	r5, r0, #8
 3800              	.LVL500:
 3801 0114 DB43     		mvns	r3, r3
 3802 0116 2144     		add	r1, r1, r4
 3803 0118 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 3804              		.loc 9 631 0
 3805 011c B5F5007F 		cmp	r5, #512
 3806 0120 15DC     		bgt	.L198
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 3807              		.loc 9 633 0
 3808 0122 04F50674 		add	r4, r4, #536
 3809              	.LVL501:
 3810              	.LBB401:
 3811              	.LBB402:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 3812              		.loc 11 121 0
 3813 0126 1423     		movs	r3, #20
 3814 0128 AAB2     		uxth	r2, r5
 3815 012a 2146     		mov	r1, r4
 3816 012c 1148     		ldr	r0, .L204
 3817 012e FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 105


 3818              	.LVL502:
 122:ROSSerial/AT32hardware.h **** 		{
 3819              		.loc 11 122 0
 3820 0132 0146     		mov	r1, r0
 3821 0134 28B9     		cbnz	r0, .L203
 3822              	.LVL503:
 3823              	.L199:
 3824              	.LBE402:
 3825              	.LBE401:
 3826              	.LBE399:
 3827              	.LBE398:
 3828              	.LBE395:
 3829              	.LBE394:
 3830              	.LBE393:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3831              		.loc 9 644 0
 3832 0136 1248     		ldr	r0, .L204+12
 3833 0138 FFF7FEFF 		bl	printf
 3834              	.LVL504:
 645:ROSSerial/ros/node_handle.h ****     }
 3835              		.loc 9 645 0
 3836 013c 4FF0FF35 		mov	r5, #-1
 3837 0140 AAE7     		b	.L190
 3838              	.LVL505:
 3839              	.L203:
 3840              	.LBB414:
 3841              	.LBB413:
 3842              	.LBB412:
 3843              	.LBB411:
 3844              	.LBB410:
 3845              	.LBB404:
 3846              	.LBB403:
 3847              		.loc 11 124 0
 3848 0142 2346     		mov	r3, r4
 3849 0144 2A46     		mov	r2, r5
 3850 0146 0C48     		ldr	r0, .L204+4
 3851              	.LVL506:
 3852 0148 FFF7FEFF 		bl	printf
 3853              	.LVL507:
 3854 014c F3E7     		b	.L199
 3855              	.LVL508:
 3856              	.L198:
 3857              	.LBE403:
 3858              	.LBE404:
 3859              	.LBB405:
 3860              	.LBB406:
 3861              	.LBB407:
 3862              	.LBB408:
 3863              	.LBB409:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 3864              		.loc 3 13 0
 3865 014e 0B4B     		ldr	r3, .L204+8
 3866 0150 0393     		str	r3, [sp, #12]
 3867              	.LVL509:
 3868              	.LBE409:
 3869              	.LBE408:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 106


 3870              		.loc 9 657 0
 3871 0152 0323     		movs	r3, #3
 3872 0154 8DF81030 		strb	r3, [sp, #16]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3873              		.loc 9 658 0
 3874 0158 094D     		ldr	r5, .L204+12
 3875              	.LVL510:
 3876 015a 0595     		str	r5, [sp, #20]
 3877              		.loc 9 659 0
 3878 015c 03AA     		add	r2, sp, #12
 3879 015e 0721     		movs	r1, #7
 3880 0160 2046     		mov	r0, r4
 3881              	.LVL511:
 3882 0162 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 3883              	.LVL512:
 3884              	.LBE407:
 3885              	.LBE406:
 3886              	.LBE405:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 3887              		.loc 9 644 0
 3888 0166 2846     		mov	r0, r5
 3889 0168 FFF7FEFF 		bl	printf
 3890              	.LVL513:
 3891 016c E3E7     		b	.L199
 3892              	.LVL514:
 3893              	.L200:
 3894              	.LBE410:
 3895              	.LBE411:
 3896              	.LBE412:
 3897              	.LBE413:
 3898              	.LBE414:
 607:ROSSerial/ros/node_handle.h ****     }
 3899              		.loc 9 607 0
 3900 016e 0025     		movs	r5, #0
 3901              	.LVL515:
 3902              	.LBE415:
 3903              	.LBE416:
 597:ROSSerial/ros/node_handle.h ****   }
 3904              		.loc 9 597 0
 3905 0170 92E7     		b	.L190
 3906              	.L205:
 3907 0172 00BF     		.align	2
 3908              	.L204:
 3909 0174 00000000 		.word	huart2
 3910 0178 00000000 		.word	.LC19
 3911 017c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3912 0180 20000000 		.word	.LC20
 3913              		.cfi_endproc
 3914              	.LFE529:
 3915              		.fnend
 3917              		.section	.text.publish_hovebot_state,"ax",%progbits
 3918              		.align	1
 3919              		.global	publish_hovebot_state
 3920              		.syntax unified
 3921              		.thumb
 3922              		.thumb_func
 3923              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 107


 3925              	publish_hovebot_state:
 3926              		.fnstart
 3927              	.LFB495:
  50:./Src/ROS_main.cpp **** {
 3928              		.loc 8 50 0
 3929              		.cfi_startproc
 3930              		@ args = 0, pretend = 0, frame = 136
 3931              		@ frame_needed = 0, uses_anonymous_args = 0
 3932 0000 30B5     		push	{r4, r5, lr}
 3933              		.save {r4, r5, lr}
 3934              	.LCFI27:
 3935              		.cfi_def_cfa_offset 12
 3936              		.cfi_offset 4, -12
 3937              		.cfi_offset 5, -8
 3938              		.cfi_offset 14, -4
 3939              		.pad #140
 3940 0002 A3B0     		sub	sp, sp, #140
 3941              	.LCFI28:
 3942              		.cfi_def_cfa_offset 152
 3943              	.LVL516:
 3944              	.LBB455:
 3945              	.LBB456:
 3946              	.LBB457:
  40:ROSSerial/sensor_msgs/JointState.h ****     {
 3947              		.loc 7 40 0
 3948 0004 8B4B     		ldr	r3, .L222
 3949 0006 0E93     		str	r3, [sp, #56]
 3950 0008 0023     		movs	r3, #0
 3951 000a 1093     		str	r3, [sp, #64]
 3952 000c 1393     		str	r3, [sp, #76]
 3953              	.LVL517:
 3954              	.LBB458:
 3955              	.LBB459:
  13:ROSSerial/std_msgs/Header.h ****   {
 3956              		.loc 6 13 0
 3957 000e 8A4A     		ldr	r2, .L222+4
 3958 0010 0F92     		str	r2, [sp, #60]
 3959              	.LVL518:
 3960              	.LBB460:
 3961              	.LBB461:
 3962              	.LBB462:
 3963              		.loc 12 51 0
 3964 0012 1193     		str	r3, [sp, #68]
 3965 0014 1293     		str	r3, [sp, #72]
 3966              	.LVL519:
 3967              	.LBE462:
 3968              	.LBE461:
 3969              	.LBE460:
 3970              	.LBE459:
 3971              	.LBE458:
 3972              	.LBE457:
 3973              	.LBE456:
 3974              	.LBE455:
  52:./Src/ROS_main.cpp ****     char *names[2] = {"LEFT","RIGHT"};
 3975              		.loc 8 52 0
 3976 0016 894B     		ldr	r3, .L222+8
 3977 0018 0CAA     		add	r2, sp, #48
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 108


 3978 001a 93E80300 		ldm	r3, {r0, r1}
 3979 001e 82E80300 		stm	r2, {r0, r1}
  53:./Src/ROS_main.cpp ****     float position[2] = {wheel_posn[LEFT].ticks,wheel_posn[RIGHT].ticks};
 3980              		.loc 8 53 0
 3981 0022 874B     		ldr	r3, .L222+12
 3982 0024 D3ED057A 		vldr.32	s15, [r3, #20]	@ int
 3983 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 3984 002c CDED0A7A 		vstr.32	s15, [sp, #40]
 3985 0030 D3ED0F7A 		vldr.32	s15, [r3, #60]	@ int
 3986 0034 F8EEE77A 		vcvt.f32.s32	s15, s15
 3987 0038 CDED0B7A 		vstr.32	s15, [sp, #44]
  54:./Src/ROS_main.cpp ****     float velocity[2] = {wheel_posn[LEFT].rpm, wheel_posn[RIGHT].rpm};
 3988              		.loc 8 54 0
 3989 003c 1969     		ldr	r1, [r3, #16]	@ float
 3990 003e 0891     		str	r1, [sp, #32]	@ float
 3991 0040 9B6B     		ldr	r3, [r3, #56]	@ float
 3992 0042 0993     		str	r3, [sp, #36]	@ float
  55:./Src/ROS_main.cpp ****     float effort[2] = {pwms[LEFT], pwms[RIGHT]};
 3993              		.loc 8 55 0
 3994 0044 7F4B     		ldr	r3, .L222+16
 3995 0046 D3ED007A 		vldr.32	s15, [r3]	@ int
 3996 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 3997 004e CDED067A 		vstr.32	s15, [sp, #24]
 3998 0052 D3ED017A 		vldr.32	s15, [r3, #4]	@ int
 3999 0056 F8EEE77A 		vcvt.f32.s32	s15, s15
 4000 005a CDED077A 		vstr.32	s15, [sp, #28]
  57:./Src/ROS_main.cpp ****     wheelPositions.name = (char **) &names;
 4001              		.loc 8 57 0
 4002 005e 1692     		str	r2, [sp, #88]
  58:./Src/ROS_main.cpp ****     wheelPositions.name_length = 2;
 4003              		.loc 8 58 0
 4004 0060 0223     		movs	r3, #2
 4005 0062 1493     		str	r3, [sp, #80]
  59:./Src/ROS_main.cpp ****     wheelPositions.position = (float *) &position;
 4006              		.loc 8 59 0
 4007 0064 0AAA     		add	r2, sp, #40
 4008 0066 1992     		str	r2, [sp, #100]
  60:./Src/ROS_main.cpp ****     wheelPositions.position_length = 2;
 4009              		.loc 8 60 0
 4010 0068 1793     		str	r3, [sp, #92]
  61:./Src/ROS_main.cpp ****     wheelPositions.velocity = (float *) &velocity;
 4011              		.loc 8 61 0
 4012 006a 08AA     		add	r2, sp, #32
 4013 006c 1C92     		str	r2, [sp, #112]
  62:./Src/ROS_main.cpp ****     wheelPositions.velocity_length = 2;
 4014              		.loc 8 62 0
 4015 006e 1A93     		str	r3, [sp, #104]
  63:./Src/ROS_main.cpp ****     wheelPositions.effort_length = 2;
 4016              		.loc 8 63 0
 4017 0070 1D93     		str	r3, [sp, #116]
  64:./Src/ROS_main.cpp ****     wheelPositions.effort = (float *) &effort;
 4018              		.loc 8 64 0
 4019 0072 06AB     		add	r3, sp, #24
 4020 0074 1F93     		str	r3, [sp, #124]
 4021              	.LVL520:
 4022              	.LBB463:
 4023              	.LBB464:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 109


 4024              	.LBB465:
 4025              	.LBB466:
 125:ROSSerial/AT32hardware.h **** 		}
 126:ROSSerial/AT32hardware.h **** 		
 127:ROSSerial/AT32hardware.h **** 		// /* Try Interrupt - Has delayed byte problem. */
 128:ROSSerial/AT32hardware.h **** 		// if(HAL_UART_Transmit_IT(&huart2, (uint8_t *)data, length)!= HAL_OK)
 129:ROSSerial/AT32hardware.h ****   		// {
 130:ROSSerial/AT32hardware.h **** 		// 	HAL_Delay(10); 
 131:ROSSerial/AT32hardware.h **** 		// 	printf("delayed bytes %d\n",length); 
 132:ROSSerial/AT32hardware.h **** 		// }
 133:ROSSerial/AT32hardware.h **** 
 134:ROSSerial/AT32hardware.h **** 		// else
 135:ROSSerial/AT32hardware.h **** 		// {
 136:ROSSerial/AT32hardware.h **** 		// 	printf("sent %d bytes over Interrupt\n",length);
 137:ROSSerial/AT32hardware.h **** 		// }
 138:ROSSerial/AT32hardware.h **** 		
 139:ROSSerial/AT32hardware.h **** 	}
 140:ROSSerial/AT32hardware.h **** 
 141:ROSSerial/AT32hardware.h **** 	/*
 142:ROSSerial/AT32hardware.h **** 	 * Method: time
 143:ROSSerial/AT32hardware.h **** 	 * ----------------------------
 144:ROSSerial/AT32hardware.h ****      *   Returns milliseconds since start of program
 145:ROSSerial/AT32hardware.h **** 	 *   parameters: none
 146:ROSSerial/AT32hardware.h **** 	 *   returns: time in milliseconds
 147:ROSSerial/AT32hardware.h **** 	 */
 148:ROSSerial/AT32hardware.h **** 	uint32_t time(void)
 149:ROSSerial/AT32hardware.h **** 	{
 150:ROSSerial/AT32hardware.h **** 		//return (uint32_t) xTaskGetTickCount();
 151:ROSSerial/AT32hardware.h **** 		return HAL_GetTick();
 4026              		.loc 11 151 0
 4027 0076 FFF7FEFF 		bl	HAL_GetTick
 4028              	.LVL521:
 4029              	.LBE466:
 4030              	.LBE465:
 445:ROSSerial/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 4031              		.loc 9 445 0
 4032 007a 734B     		ldr	r3, .L222+20
 4033 007c A3FB0023 		umull	r2, r3, r3, r0
 4034 0080 9B09     		lsrs	r3, r3, #6
 4035 0082 7249     		ldr	r1, .L222+24
 4036 0084 CA68     		ldr	r2, [r1, #12]
 4037 0086 1A44     		add	r2, r2, r3
 4038 0088 2092     		str	r2, [sp, #128]
 446:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 4039              		.loc 9 446 0
 4040 008a 4FF47A72 		mov	r2, #1000
 4041 008e 02FB1303 		mls	r3, r2, r3, r0
 4042 0092 0869     		ldr	r0, [r1, #16]
 4043              	.LVL522:
 4044 0094 6E4A     		ldr	r2, .L222+28
 4045 0096 02FB0303 		mla	r3, r2, r3, r0
 4046 009a 2193     		str	r3, [sp, #132]
 447:ROSSerial/ros/node_handle.h ****     return current_time;
 4047              		.loc 9 447 0
 4048 009c 20AC     		add	r4, sp, #128
 4049 009e 21A9     		add	r1, sp, #132
 4050 00a0 2046     		mov	r0, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 110


 4051 00a2 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4052              	.LVL523:
 4053              	.LBE464:
 4054              	.LBE463:
  65:./Src/ROS_main.cpp ****     wheelPositions.header.stamp = nh.now();
 4055              		.loc 8 65 0
 4056 00a6 11AB     		add	r3, sp, #68
 4057 00a8 94E80300 		ldm	r4, {r0, r1}
 4058 00ac 83E80300 		stm	r3, {r0, r1}
  69:./Src/ROS_main.cpp ****     int retval = nh.publish1(hovebotState->topic_id, &wheelPositions); 
 4059              		.loc 8 69 0
 4060 00b0 684B     		ldr	r3, .L222+32
 4061 00b2 1B68     		ldr	r3, [r3]
 4062 00b4 1D88     		ldrh	r5, [r3]
 4063              	.LVL524:
 4064              	.LBB467:
 4065              	.LBB468:
 606:ROSSerial/ros/node_handle.h ****       return 0;
 4066              		.loc 9 606 0
 4067 00b6 632D     		cmp	r5, #99
 4068 00b8 05DD     		ble	.L207
 4069 00ba 644B     		ldr	r3, .L222+24
 4070 00bc 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4071 00c0 002B     		cmp	r3, #0
 4072 00c2 00F0AF80 		beq	.L217
 4073              	.L207:
 612:ROSSerial/ros/node_handle.h **** 
 4074              		.loc 9 612 0
 4075 00c6 614C     		ldr	r4, .L222+24
 4076 00c8 0E9B     		ldr	r3, [sp, #56]
 4077 00ca 1B68     		ldr	r3, [r3]
 4078 00cc 04F21F21 		addw	r1, r4, #543
 4079 00d0 0EA8     		add	r0, sp, #56
 4080              	.LVL525:
 4081 00d2 9847     		blx	r3
 4082              	.LVL526:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4083              		.loc 9 615 0
 4084 00d4 FF23     		movs	r3, #255
 4085 00d6 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4086              		.loc 9 616 0
 4087 00da FE23     		movs	r3, #254
 4088 00dc 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4089              		.loc 9 617 0
 4090 00e0 C3B2     		uxtb	r3, r0
 4091 00e2 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4092              		.loc 9 618 0
 4093 00e6 C0F30722 		ubfx	r2, r0, #8, #8
 4094 00ea 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4095              		.loc 9 619 0
 4096 00ee 1344     		add	r3, r3, r2
 4097 00f0 DBB2     		uxtb	r3, r3
 4098 00f2 DB43     		mvns	r3, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 111


 4099 00f4 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4100              		.loc 9 620 0
 4101 00f8 84F81D52 		strb	r5, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4102              		.loc 9 621 0
 4103 00fc 45F30725 		sbfx	r5, r5, #8, #8
 4104              	.LVL527:
 4105 0100 84F81E52 		strb	r5, [r4, #542]
 4106              	.LVL528:
 4107              	.LBB469:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4108              		.loc 9 625 0
 4109 0104 0523     		movs	r3, #5
 4110              	.LBE469:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4111              		.loc 9 624 0
 4112 0106 0024     		movs	r4, #0
 4113              	.LVL529:
 4114              	.L210:
 4115              	.LBB470:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4116              		.loc 9 625 0
 4117 0108 C21D     		adds	r2, r0, #7
 4118 010a 9A42     		cmp	r2, r3
 4119 010c 06DD     		ble	.L209
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4120              		.loc 9 626 0
 4121 010e 4F4A     		ldr	r2, .L222+24
 4122 0110 1A44     		add	r2, r2, r3
 4123 0112 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4124 0116 1444     		add	r4, r4, r2
 4125              	.LVL530:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4126              		.loc 9 625 0
 4127 0118 0133     		adds	r3, r3, #1
 4128              	.LVL531:
 4129 011a F5E7     		b	.L210
 4130              	.L209:
 4131              	.LVL532:
 4132              	.LBE470:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4133              		.loc 9 628 0
 4134 011c 6342     		rsbs	r3, r4, #0
 4135              	.LVL533:
 4136 011e E4B2     		uxtb	r4, r4
 4137              	.LVL534:
 4138 0120 DBB2     		uxtb	r3, r3
 4139 0122 58BF     		it	pl
 4140 0124 5C42     		rsbpl	r4, r3, #0
 4141 0126 00F10805 		add	r5, r0, #8
 4142              	.LVL535:
 4143 012a E443     		mvns	r4, r4
 4144 012c 474B     		ldr	r3, .L222+24
 4145 012e 1A44     		add	r2, r2, r3
 4146 0130 82F81842 		strb	r4, [r2, #536]
 631:ROSSerial/ros/node_handle.h ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 112


 4147              		.loc 9 631 0
 4148 0134 B5F5007F 		cmp	r5, #512
 4149 0138 11DC     		bgt	.L211
 4150              	.LVL536:
 4151              	.LBB471:
 4152              	.LBB472:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4153              		.loc 11 121 0
 4154 013a 1423     		movs	r3, #20
 4155 013c AAB2     		uxth	r2, r5
 4156 013e 4649     		ldr	r1, .L222+36
 4157 0140 4648     		ldr	r0, .L222+40
 4158 0142 FFF7FEFF 		bl	HAL_UART_Transmit
 4159              	.LVL537:
 122:ROSSerial/AT32hardware.h **** 		{
 4160              		.loc 11 122 0
 4161 0146 0146     		mov	r1, r0
 4162 0148 18B9     		cbnz	r0, .L219
 4163              	.LVL538:
 4164              	.L208:
 4165              	.LBE472:
 4166              	.LBE471:
 4167              	.LBE468:
 4168              	.LBE467:
  70:./Src/ROS_main.cpp ****     if(retval < 0)
 4169              		.loc 8 70 0
 4170 014a 002D     		cmp	r5, #0
 4171 014c 6CDB     		blt	.L220
 4172              	.L206:
  87:./Src/ROS_main.cpp **** }
 4173              		.loc 8 87 0
 4174 014e 23B0     		add	sp, sp, #140
 4175              	.LCFI29:
 4176              		.cfi_remember_state
 4177              		.cfi_def_cfa_offset 12
 4178              		@ sp needed
 4179 0150 30BD     		pop	{r4, r5, pc}
 4180              	.LVL539:
 4181              	.L219:
 4182              	.LCFI30:
 4183              		.cfi_restore_state
 4184              	.LBB498:
 4185              	.LBB497:
 4186              	.LBB474:
 4187              	.LBB473:
 124:ROSSerial/AT32hardware.h **** 		}
 4188              		.loc 11 124 0
 4189 0152 414B     		ldr	r3, .L222+36
 4190 0154 2A46     		mov	r2, r5
 4191 0156 4248     		ldr	r0, .L222+44
 4192              	.LVL540:
 4193 0158 FFF7FEFF 		bl	printf
 4194              	.LVL541:
 4195 015c F5E7     		b	.L208
 4196              	.LVL542:
 4197              	.L211:
 4198              	.LBE473:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 113


 4199              	.LBE474:
 4200              	.LBB475:
 4201              	.LBB476:
 4202              	.LBB477:
 4203              	.LBB478:
 4204              	.LBB479:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4205              		.loc 3 13 0
 4206 015e 414B     		ldr	r3, .L222+48
 4207 0160 0093     		str	r3, [sp]
 4208              	.LVL543:
 4209              	.LBE479:
 4210              	.LBE478:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4211              		.loc 9 657 0
 4212 0162 0322     		movs	r2, #3
 4213 0164 8DF80420 		strb	r2, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4214              		.loc 9 658 0
 4215 0168 3F4A     		ldr	r2, .L222+52
 4216 016a 0292     		str	r2, [sp, #8]
 4217              	.LVL544:
 4218              	.LBB480:
 4219              	.LBB481:
 612:ROSSerial/ros/node_handle.h **** 
 4220              		.loc 9 612 0
 4221 016c 374C     		ldr	r4, .L222+24
 4222 016e 1B68     		ldr	r3, [r3]
 4223 0170 04F21F21 		addw	r1, r4, #543
 4224 0174 6846     		mov	r0, sp
 4225 0176 9847     		blx	r3
 4226              	.LVL545:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4227              		.loc 9 615 0
 4228 0178 FF23     		movs	r3, #255
 4229 017a 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4230              		.loc 9 616 0
 4231 017e FE23     		movs	r3, #254
 4232 0180 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4233              		.loc 9 617 0
 4234 0184 C3B2     		uxtb	r3, r0
 4235 0186 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4236              		.loc 9 618 0
 4237 018a C0F30722 		ubfx	r2, r0, #8, #8
 4238 018e 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4239              		.loc 9 619 0
 4240 0192 1344     		add	r3, r3, r2
 4241 0194 DBB2     		uxtb	r3, r3
 4242 0196 DB43     		mvns	r3, r3
 4243 0198 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4244              		.loc 9 620 0
 4245 019c 0723     		movs	r3, #7
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 114


 4246 019e 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4247              		.loc 9 621 0
 4248 01a2 0023     		movs	r3, #0
 4249 01a4 84F81E32 		strb	r3, [r4, #542]
 4250              	.LVL546:
 4251              	.LBB482:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4252              		.loc 9 625 0
 4253 01a8 0522     		movs	r2, #5
 4254              	.LVL547:
 4255              	.L213:
 4256 01aa C11D     		adds	r1, r0, #7
 4257 01ac 9142     		cmp	r1, r2
 4258 01ae 06DD     		ble	.L212
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4259              		.loc 9 626 0
 4260 01b0 2649     		ldr	r1, .L222+24
 4261 01b2 1144     		add	r1, r1, r2
 4262 01b4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 4263 01b8 0B44     		add	r3, r3, r1
 4264              	.LVL548:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4265              		.loc 9 625 0
 4266 01ba 0132     		adds	r2, r2, #1
 4267              	.LVL549:
 4268 01bc F5E7     		b	.L213
 4269              	.L212:
 4270              	.LVL550:
 4271              	.LBE482:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4272              		.loc 9 628 0
 4273 01be 5A42     		rsbs	r2, r3, #0
 4274              	.LVL551:
 4275 01c0 DBB2     		uxtb	r3, r3
 4276              	.LVL552:
 4277 01c2 D2B2     		uxtb	r2, r2
 4278 01c4 58BF     		it	pl
 4279 01c6 5342     		rsbpl	r3, r2, #0
 4280 01c8 00F10804 		add	r4, r0, #8
 4281              	.LVL553:
 4282 01cc DB43     		mvns	r3, r3
 4283 01ce 1F4A     		ldr	r2, .L222+24
 4284 01d0 1144     		add	r1, r1, r2
 4285 01d2 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 4286              		.loc 9 631 0
 4287 01d6 B4F5007F 		cmp	r4, #512
 4288 01da 13DC     		bgt	.L214
 4289              	.LVL554:
 4290              	.LBB483:
 4291              	.LBB484:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4292              		.loc 11 121 0
 4293 01dc 1423     		movs	r3, #20
 4294 01de A2B2     		uxth	r2, r4
 4295 01e0 1D49     		ldr	r1, .L222+36
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 115


 4296 01e2 1E48     		ldr	r0, .L222+40
 4297 01e4 FFF7FEFF 		bl	HAL_UART_Transmit
 4298              	.LVL555:
 122:ROSSerial/AT32hardware.h **** 		{
 4299              		.loc 11 122 0
 4300 01e8 0146     		mov	r1, r0
 4301 01ea 28B9     		cbnz	r0, .L221
 4302              	.LVL556:
 4303              	.L215:
 4304              	.LBE484:
 4305              	.LBE483:
 4306              	.LBE481:
 4307              	.LBE480:
 4308              	.LBE477:
 4309              	.LBE476:
 4310              	.LBE475:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4311              		.loc 9 644 0
 4312 01ec 1E48     		ldr	r0, .L222+52
 4313 01ee FFF7FEFF 		bl	printf
 4314              	.LVL557:
 645:ROSSerial/ros/node_handle.h ****     }
 4315              		.loc 9 645 0
 4316 01f2 4FF0FF35 		mov	r5, #-1
 4317              	.LVL558:
 4318 01f6 A8E7     		b	.L208
 4319              	.LVL559:
 4320              	.L221:
 4321              	.LBB496:
 4322              	.LBB495:
 4323              	.LBB494:
 4324              	.LBB493:
 4325              	.LBB492:
 4326              	.LBB486:
 4327              	.LBB485:
 124:ROSSerial/AT32hardware.h **** 		}
 4328              		.loc 11 124 0
 4329 01f8 174B     		ldr	r3, .L222+36
 4330 01fa 2246     		mov	r2, r4
 4331 01fc 1848     		ldr	r0, .L222+44
 4332              	.LVL560:
 4333 01fe FFF7FEFF 		bl	printf
 4334              	.LVL561:
 4335 0202 F3E7     		b	.L215
 4336              	.LVL562:
 4337              	.L214:
 4338              	.LBE485:
 4339              	.LBE486:
 4340              	.LBB487:
 4341              	.LBB488:
 4342              	.LBB489:
 4343              	.LBB490:
 4344              	.LBB491:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4345              		.loc 3 13 0
 4346 0204 174B     		ldr	r3, .L222+48
 4347 0206 0393     		str	r3, [sp, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 116


 4348              	.LVL563:
 4349              	.LBE491:
 4350              	.LBE490:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4351              		.loc 9 657 0
 4352 0208 0323     		movs	r3, #3
 4353 020a 8DF81030 		strb	r3, [sp, #16]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4354              		.loc 9 658 0
 4355 020e 164C     		ldr	r4, .L222+52
 4356              	.LVL564:
 4357 0210 0594     		str	r4, [sp, #20]
 4358              		.loc 9 659 0
 4359 0212 03AA     		add	r2, sp, #12
 4360 0214 0721     		movs	r1, #7
 4361 0216 0D48     		ldr	r0, .L222+24
 4362              	.LVL565:
 4363 0218 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4364              	.LVL566:
 4365              	.LBE489:
 4366              	.LBE488:
 4367              	.LBE487:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4368              		.loc 9 644 0
 4369 021c 2046     		mov	r0, r4
 4370 021e FFF7FEFF 		bl	printf
 4371              	.LVL567:
 4372 0222 E3E7     		b	.L215
 4373              	.LVL568:
 4374              	.L217:
 4375              	.LBE492:
 4376              	.LBE493:
 4377              	.LBE494:
 4378              	.LBE495:
 4379              	.LBE496:
 607:ROSSerial/ros/node_handle.h ****     }
 4380              		.loc 9 607 0
 4381 0224 0025     		movs	r5, #0
 4382              	.LVL569:
 4383 0226 90E7     		b	.L208
 4384              	.LVL570:
 4385              	.L220:
 4386              	.LBE497:
 4387              	.LBE498:
  72:./Src/ROS_main.cpp ****         printf("hoverbot_state publish1 failed %d\n",retval);
 4388              		.loc 8 72 0
 4389 0228 2946     		mov	r1, r5
 4390 022a 1048     		ldr	r0, .L222+56
 4391 022c FFF7FEFF 		bl	printf
 4392              	.LVL571:
  87:./Src/ROS_main.cpp **** }
 4393              		.loc 8 87 0
 4394 0230 8DE7     		b	.L206
 4395              	.L223:
 4396 0232 00BF     		.align	2
 4397              	.L222:
 4398 0234 08000000 		.word	_ZTVN11sensor_msgs10JointStateE+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 117


 4399 0238 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4400 023c 00000000 		.word	.LANCHOR4
 4401 0240 00000000 		.word	wheel_posn
 4402 0244 00000000 		.word	pwms
 4403 0248 D34D6210 		.word	274877907
 4404 024c 00000000 		.word	.LANCHOR1
 4405 0250 40420F00 		.word	1000000
 4406 0254 00000000 		.word	.LANCHOR2
 4407 0258 18020000 		.word	.LANCHOR1+536
 4408 025c 00000000 		.word	huart2
 4409 0260 00000000 		.word	.LC19
 4410 0264 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4411 0268 20000000 		.word	.LC20
 4412 026c 00000000 		.word	.LC22
 4413              		.cfi_endproc
 4414              	.LFE495:
 4415              		.fnend
 4417              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv,"axG",
 4418              		.align	1
 4419              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 4420              		.syntax unified
 4421              		.thumb
 4422              		.thumb_func
 4423              		.fpu fpv4-sp-d16
 4425              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:
 4426              		.fnstart
 4427              	.LFB514:
 412:ROSSerial/ros/node_handle.h ****   {
 4428              		.loc 9 412 0
 4429              		.cfi_startproc
 4430              		@ args = 0, pretend = 0, frame = 24
 4431              		@ frame_needed = 0, uses_anonymous_args = 0
 4432              	.LVL572:
 414:ROSSerial/ros/node_handle.h ****     {
 4433              		.loc 9 414 0
 4434 0000 D0F82425 		ldr	r2, [r0, #1316]
 4435 0004 8368     		ldr	r3, [r0, #8]
 4436 0006 9A42     		cmp	r2, r3
 4437 0008 00D2     		bcs	.L235
 4438 000a 7047     		bx	lr
 4439              	.L235:
 412:ROSSerial/ros/node_handle.h ****   {
 4440              		.loc 9 412 0
 4441 000c 70B5     		push	{r4, r5, r6, lr}
 4442              		.save {r4, r5, r6, lr}
 4443              	.LCFI31:
 4444              		.cfi_def_cfa_offset 16
 4445              		.cfi_offset 4, -16
 4446              		.cfi_offset 5, -12
 4447              		.cfi_offset 6, -8
 4448              		.cfi_offset 14, -4
 4449              		.pad #24
 4450 000e 86B0     		sub	sp, sp, #24
 4451              	.LCFI32:
 4452              		.cfi_def_cfa_offset 40
 4453 0010 0446     		mov	r4, r0
 4454              	.LVL573:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 118


 4455              	.LBB526:
 4456              	.LBB527:
  14:ROSSerial/std_msgs/Time.h ****   {
 4457              		.loc 1 14 0
 4458 0012 304B     		ldr	r3, .L237
 4459 0014 0393     		str	r3, [sp, #12]
 4460              	.LVL574:
 4461              	.LBB528:
 4462              	.LBB529:
 4463              	.LBB530:
 4464              		.loc 12 51 0
 4465 0016 0025     		movs	r5, #0
 4466 0018 0495     		str	r5, [sp, #16]
 4467 001a 0595     		str	r5, [sp, #20]
 4468              	.LVL575:
 4469              	.LBE530:
 4470              	.LBE529:
 4471              	.LBE528:
 4472              	.LBE527:
 4473              	.LBE526:
 4474              	.LBB531:
 4475              	.LBB532:
 4476              		.loc 11 151 0
 4477 001c FFF7FEFF 		bl	HAL_GetTick
 4478              	.LVL576:
 4479              	.LBE532:
 4480              	.LBE531:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 4481              		.loc 9 420 0
 4482 0020 A060     		str	r0, [r4, #8]
 4483              	.LVL577:
 4484              	.LBB533:
 4485              	.LBB534:
 612:ROSSerial/ros/node_handle.h **** 
 4486              		.loc 9 612 0
 4487 0022 039B     		ldr	r3, [sp, #12]
 4488 0024 1B68     		ldr	r3, [r3]
 4489 0026 04F21F21 		addw	r1, r4, #543
 4490 002a 03A8     		add	r0, sp, #12
 4491              	.LVL578:
 4492 002c 9847     		blx	r3
 4493              	.LVL579:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4494              		.loc 9 615 0
 4495 002e FF23     		movs	r3, #255
 4496 0030 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 4497              		.loc 9 616 0
 4498 0034 FE23     		movs	r3, #254
 4499 0036 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 4500              		.loc 9 617 0
 4501 003a C3B2     		uxtb	r3, r0
 4502 003c 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 4503              		.loc 9 618 0
 4504 0040 C0F30722 		ubfx	r2, r0, #8, #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 119


 4505 0044 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 4506              		.loc 9 619 0
 4507 0048 1344     		add	r3, r3, r2
 4508 004a DBB2     		uxtb	r3, r3
 4509 004c DB43     		mvns	r3, r3
 4510 004e 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 4511              		.loc 9 620 0
 4512 0052 0A23     		movs	r3, #10
 4513 0054 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 4514              		.loc 9 621 0
 4515 0058 84F81E52 		strb	r5, [r4, #542]
 4516              	.LVL580:
 4517              	.LBB535:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4518              		.loc 9 625 0
 4519 005c 0521     		movs	r1, #5
 4520              	.LBE535:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 4521              		.loc 9 624 0
 4522 005e 2B46     		mov	r3, r5
 4523              	.LVL581:
 4524              	.L227:
 4525              	.LBB536:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4526              		.loc 9 625 0
 4527 0060 C51D     		adds	r5, r0, #7
 4528 0062 8D42     		cmp	r5, r1
 4529 0064 05DD     		ble	.L226
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 4530              		.loc 9 626 0
 4531 0066 6218     		adds	r2, r4, r1
 4532 0068 92F81822 		ldrb	r2, [r2, #536]	@ zero_extendqisi2
 4533 006c 1344     		add	r3, r3, r2
 4534              	.LVL582:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 4535              		.loc 9 625 0
 4536 006e 0131     		adds	r1, r1, #1
 4537              	.LVL583:
 4538 0070 F6E7     		b	.L227
 4539              	.L226:
 4540              	.LVL584:
 4541              	.LBE536:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 4542              		.loc 9 628 0
 4543 0072 5A42     		rsbs	r2, r3, #0
 4544 0074 DBB2     		uxtb	r3, r3
 4545              	.LVL585:
 4546 0076 D2B2     		uxtb	r2, r2
 4547 0078 58BF     		it	pl
 4548 007a 5342     		rsbpl	r3, r2, #0
 4549 007c 00F10806 		add	r6, r0, #8
 4550              	.LVL586:
 4551 0080 DB43     		mvns	r3, r3
 4552 0082 2544     		add	r5, r5, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 120


 4553 0084 85F81832 		strb	r3, [r5, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 4554              		.loc 9 631 0
 4555 0088 B6F5007F 		cmp	r6, #512
 4556 008c 11DC     		bgt	.L228
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 4557              		.loc 9 633 0
 4558 008e 04F50674 		add	r4, r4, #536
 4559              	.LVL587:
 4560              	.LBB537:
 4561              	.LBB538:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 4562              		.loc 11 121 0
 4563 0092 1423     		movs	r3, #20
 4564 0094 B2B2     		uxth	r2, r6
 4565 0096 2146     		mov	r1, r4
 4566              	.LVL588:
 4567 0098 0F48     		ldr	r0, .L237+4
 4568 009a FFF7FEFF 		bl	HAL_UART_Transmit
 4569              	.LVL589:
 122:ROSSerial/AT32hardware.h **** 		{
 4570              		.loc 11 122 0
 4571 009e 0146     		mov	r1, r0
 4572 00a0 08B9     		cbnz	r0, .L236
 4573              	.LVL590:
 4574              	.L224:
 4575              	.LBE538:
 4576              	.LBE537:
 4577              	.LBE534:
 4578              	.LBE533:
 424:ROSSerial/ros/node_handle.h **** 
 4579              		.loc 9 424 0
 4580 00a2 06B0     		add	sp, sp, #24
 4581              	.LCFI33:
 4582              		.cfi_remember_state
 4583              		.cfi_def_cfa_offset 16
 4584              		@ sp needed
 4585 00a4 70BD     		pop	{r4, r5, r6, pc}
 4586              	.LVL591:
 4587              	.L236:
 4588              	.LCFI34:
 4589              		.cfi_restore_state
 4590              	.LBB547:
 4591              	.LBB546:
 4592              	.LBB540:
 4593              	.LBB539:
 124:ROSSerial/AT32hardware.h **** 		}
 4594              		.loc 11 124 0
 4595 00a6 2346     		mov	r3, r4
 4596 00a8 3246     		mov	r2, r6
 4597 00aa 0C48     		ldr	r0, .L237+8
 4598              	.LVL592:
 4599 00ac FFF7FEFF 		bl	printf
 4600              	.LVL593:
 4601 00b0 F7E7     		b	.L224
 4602              	.LVL594:
 4603              	.L228:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 121


 4604              	.LBE539:
 4605              	.LBE540:
 4606              	.LBB541:
 4607              	.LBB542:
 4608              	.LBB543:
 4609              	.LBB544:
 4610              	.LBB545:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 4611              		.loc 3 13 0
 4612 00b2 0B4B     		ldr	r3, .L237+12
 4613 00b4 0093     		str	r3, [sp]
 4614              	.LVL595:
 4615              	.LBE545:
 4616              	.LBE544:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 4617              		.loc 9 657 0
 4618 00b6 0323     		movs	r3, #3
 4619 00b8 8DF80430 		strb	r3, [sp, #4]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4620              		.loc 9 658 0
 4621 00bc 094D     		ldr	r5, .L237+16
 4622 00be 0295     		str	r5, [sp, #8]
 4623              		.loc 9 659 0
 4624 00c0 6A46     		mov	r2, sp
 4625 00c2 0721     		movs	r1, #7
 4626              	.LVL596:
 4627 00c4 2046     		mov	r0, r4
 4628 00c6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 4629              	.LVL597:
 4630              	.LBE543:
 4631              	.LBE542:
 4632              	.LBE541:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 4633              		.loc 9 644 0
 4634 00ca 2846     		mov	r0, r5
 4635 00cc FFF7FEFF 		bl	printf
 4636              	.LVL598:
 4637 00d0 E7E7     		b	.L224
 4638              	.L238:
 4639 00d2 00BF     		.align	2
 4640              	.L237:
 4641 00d4 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4642 00d8 00000000 		.word	huart2
 4643 00dc 00000000 		.word	.LC19
 4644 00e0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4645 00e4 20000000 		.word	.LC20
 4646              	.LBE546:
 4647              	.LBE547:
 4648              		.cfi_endproc
 4649              	.LFE514:
 4650              		.fnend
 4652              		.section	.text.ros_run,"ax",%progbits
 4653              		.align	1
 4654              		.global	ros_run
 4655              		.syntax unified
 4656              		.thumb
 4657              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 122


 4658              		.fpu fpv4-sp-d16
 4660              	ros_run:
 4661              		.fnstart
 4662              	.LFB496:
  90:./Src/ROS_main.cpp **** {
 4663              		.loc 8 90 0
 4664              		.cfi_startproc
 4665              		@ args = 0, pretend = 0, frame = 40
 4666              		@ frame_needed = 0, uses_anonymous_args = 0
 4667 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4668              		.save {r4, r5, r6, r7, r8, r9, lr}
 4669              	.LCFI35:
 4670              		.cfi_def_cfa_offset 28
 4671              		.cfi_offset 4, -28
 4672              		.cfi_offset 5, -24
 4673              		.cfi_offset 6, -20
 4674              		.cfi_offset 7, -16
 4675              		.cfi_offset 8, -12
 4676              		.cfi_offset 9, -8
 4677              		.cfi_offset 14, -4
 4678              		.pad #44
 4679 0004 8BB0     		sub	sp, sp, #44
 4680              	.LCFI36:
 4681              		.cfi_def_cfa_offset 72
  91:./Src/ROS_main.cpp ****     uint32_t now = HAL_GetTick();
 4682              		.loc 8 91 0
 4683 0006 FFF7FEFF 		bl	HAL_GetTick
 4684              	.LVL599:
 4685 000a 0546     		mov	r5, r0
 4686              	.LVL600:
 4687              	.LBB633:
 4688              	.LBB634:
 4689              	.LBB635:
 4690              	.LBB636:
 4691              		.loc 11 151 0
 4692 000c FFF7FEFF 		bl	HAL_GetTick
 4693              	.LVL601:
 4694 0010 0446     		mov	r4, r0
 4695              	.LVL602:
 4696              	.LBE636:
 4697              	.LBE635:
 250:ROSSerial/ros/node_handle.h ****     {
 4698              		.loc 9 250 0
 4699 0012 B44B     		ldr	r3, .L321
 4700 0014 D3F82435 		ldr	r3, [r3, #1316]
 4701 0018 C31A     		subs	r3, r0, r3
 4702 001a 42F6F822 		movw	r2, #11000
 4703 001e 9342     		cmp	r3, r2
 4704 0020 03D9     		bls	.L240
 254:ROSSerial/ros/node_handle.h ****     }
 4705              		.loc 9 254 0
 4706 0022 B04B     		ldr	r3, .L321
 4707 0024 0022     		movs	r2, #0
 4708 0026 83F81C25 		strb	r2, [r3, #1308]
 4709              	.L240:
 258:ROSSerial/ros/node_handle.h ****     {
 4710              		.loc 9 258 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 123


 4711 002a AE4B     		ldr	r3, .L321
 4712 002c D3F80835 		ldr	r3, [r3, #1288]
 4713 0030 002B     		cmp	r3, #0
 4714 0032 4BD0     		beq	.L242
 260:ROSSerial/ros/node_handle.h ****       {
 4715              		.loc 9 260 0
 4716 0034 AB4B     		ldr	r3, .L321
 4717 0036 D3F82835 		ldr	r3, [r3, #1320]
 4718 003a 9C42     		cmp	r4, r3
 4719 003c 46D9     		bls	.L242
 262:ROSSerial/ros/node_handle.h ****       }
 4720              		.loc 9 262 0
 4721 003e A94B     		ldr	r3, .L321
 4722 0040 0022     		movs	r2, #0
 4723 0042 C3F80825 		str	r2, [r3, #1288]
 4724 0046 41E0     		b	.L242
 4725              	.LVL603:
 4726              	.L300:
 4727              	.LBB637:
 4728              	.LBB638:
 4729              	.LBB639:
  84:ROSSerial/AT32hardware.h **** 		}
 4730              		.loc 11 84 0
 4731 0048 591C     		adds	r1, r3, #1
 4732 004a A74A     		ldr	r2, .L321+4
 4733 004c 1170     		strb	r1, [r2]
 4734 004e A74A     		ldr	r2, .L321+8
 4735 0050 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 4736              	.LVL604:
 4737              	.L246:
 4738              	.LBE639:
 4739              	.LBE638:
 283:ROSSerial/ros/node_handle.h ****         break;
 4740              		.loc 9 283 0
 4741 0052 0028     		cmp	r0, #0
 4742 0054 C0F2C082 		blt	.L247
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4743              		.loc 9 285 0
 4744 0058 A24B     		ldr	r3, .L321
 4745 005a D3F81825 		ldr	r2, [r3, #1304]
 4746 005e 0244     		add	r2, r2, r0
 4747 0060 C3F81825 		str	r2, [r3, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 4748              		.loc 9 286 0
 4749 0064 D3F80835 		ldr	r3, [r3, #1288]
 4750 0068 072B     		cmp	r3, #7
 4751 006a 1ED0     		beq	.L299
 293:ROSSerial/ros/node_handle.h ****       {
 4752              		.loc 9 293 0
 4753 006c 002B     		cmp	r3, #0
 4754 006e 51D1     		bne	.L250
 295:ROSSerial/ros/node_handle.h ****         {
 4755              		.loc 9 295 0
 4756 0070 FF28     		cmp	r0, #255
 4757 0072 41D1     		bne	.L251
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4758              		.loc 9 297 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 124


 4759 0074 9B4A     		ldr	r2, .L321
 4760 0076 0133     		adds	r3, r3, #1
 4761 0078 C2F80835 		str	r3, [r2, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 4762              		.loc 9 298 0
 4763 007c 04F11403 		add	r3, r4, #20
 4764 0080 C2F82835 		str	r3, [r2, #1320]
 4765 0084 22E0     		b	.L242
 4766              	.LVL605:
 4767              	.L301:
 4768              	.LBB642:
 4769              	.LBB640:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 4770              		.loc 11 88 0
 4771 0086 0023     		movs	r3, #0
 4772 0088 974A     		ldr	r2, .L321+4
 4773 008a 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 4774              		.loc 11 89 0
 4775 008c 984A     		ldr	r2, .L321+12
 4776 008e 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 4777              		.loc 11 90 0
 4778 0090 9848     		ldr	r0, .L321+16
 4779 0092 0268     		ldr	r2, [r0]
 4780 0094 D368     		ldr	r3, [r2, #12]
 4781 0096 43F04003 		orr	r3, r3, #64
 4782 009a D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 4783              		.loc 11 91 0
 4784 009c 0122     		movs	r2, #1
 4785 009e 9649     		ldr	r1, .L321+20
 4786 00a0 FFF7FEFF 		bl	HAL_UART_Receive_IT
 4787              	.LVL606:
  80:ROSSerial/AT32hardware.h **** 		
 4788              		.loc 11 80 0
 4789 00a4 4FF0FF30 		mov	r0, #-1
 4790 00a8 D3E7     		b	.L246
 4791              	.LVL607:
 4792              	.L299:
 4793              	.LBE640:
 4794              	.LBE642:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 4795              		.loc 9 288 0
 4796 00aa 8E4B     		ldr	r3, .L321
 4797 00ac D3F81425 		ldr	r2, [r3, #1300]
 4798 00b0 511C     		adds	r1, r2, #1
 4799 00b2 C3F81415 		str	r1, [r3, #1300]
 4800 00b6 1A44     		add	r2, r2, r3
 4801 00b8 1076     		strb	r0, [r2, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4802              		.loc 9 289 0
 4803 00ba D3F80C25 		ldr	r2, [r3, #1292]
 4804 00be 013A     		subs	r2, r2, #1
 4805 00c0 C3F80C25 		str	r2, [r3, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4806              		.loc 9 290 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 125


 4807 00c4 12B9     		cbnz	r2, .L242
 291:ROSSerial/ros/node_handle.h ****       }
 4808              		.loc 9 291 0
 4809 00c6 0822     		movs	r2, #8
 4810 00c8 C3F80825 		str	r2, [r3, #1288]
 4811              	.L242:
 270:ROSSerial/ros/node_handle.h ****       {
 4812              		.loc 9 270 0
 4813 00cc 854B     		ldr	r3, .L321
 4814 00ce 5B69     		ldr	r3, [r3, #20]
 4815 00d0 3BB1     		cbz	r3, .L243
 4816              	.LVL608:
 4817              	.LBB643:
 4818              	.LBB644:
 4819              		.loc 11 151 0
 4820 00d2 FFF7FEFF 		bl	HAL_GetTick
 4821              	.LVL609:
 4822              	.LBE644:
 4823              	.LBE643:
 276:ROSSerial/ros/node_handle.h ****         {
 4824              		.loc 9 276 0
 4825 00d6 001B     		subs	r0, r0, r4
 4826 00d8 824B     		ldr	r3, .L321
 4827 00da 5B69     		ldr	r3, [r3, #20]
 4828 00dc 9842     		cmp	r0, r3
 4829 00de 00F20383 		bhi	.L294
 4830              	.L243:
 4831              	.LVL610:
 4832              	.LBB645:
 4833              	.LBB641:
  82:ROSSerial/AT32hardware.h **** 		{
 4834              		.loc 11 82 0
 4835 00e2 814B     		ldr	r3, .L321+4
 4836 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4837 00e6 824A     		ldr	r2, .L321+12
 4838 00e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4839 00ea 9342     		cmp	r3, r2
 4840 00ec ACD3     		bcc	.L300
  86:ROSSerial/AT32hardware.h **** 		{
 4841              		.loc 11 86 0
 4842 00ee 9342     		cmp	r3, r2
 4843 00f0 C9D0     		beq	.L301
  80:ROSSerial/AT32hardware.h **** 		
 4844              		.loc 11 80 0
 4845 00f2 4FF0FF30 		mov	r0, #-1
 4846 00f6 ACE7     		b	.L246
 4847              	.LVL611:
 4848              	.L251:
 4849              	.LBE641:
 4850              	.LBE645:
 4851              	.LBB646:
 4852              	.LBB647:
 4853              		.loc 11 151 0
 4854 00f8 FFF7FEFF 		bl	HAL_GetTick
 4855              	.LVL612:
 4856              	.LBE647:
 4857              	.LBE646:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 126


 300:ROSSerial/ros/node_handle.h ****         {
 4858              		.loc 9 300 0
 4859 00fc 001B     		subs	r0, r0, r4
 4860 00fe 41F28833 		movw	r3, #5000
 4861 0102 9842     		cmp	r0, r3
 4862 0104 E2D9     		bls	.L242
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4863              		.loc 9 303 0
 4864 0106 774B     		ldr	r3, .L321
 4865 0108 0022     		movs	r2, #0
 4866 010a 83F81C25 		strb	r2, [r3, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 4867              		.loc 9 304 0
 4868 010e 6FF00103 		mvn	r3, #1
 4869 0112 EBE2     		b	.L244
 4870              	.L250:
 307:ROSSerial/ros/node_handle.h ****       {
 4871              		.loc 9 307 0
 4872 0114 012B     		cmp	r3, #1
 4873 0116 3ED0     		beq	.L302
 320:ROSSerial/ros/node_handle.h ****       {
 4874              		.loc 9 320 0
 4875 0118 022B     		cmp	r3, #2
 4876 011a 00F0B280 		beq	.L303
 327:ROSSerial/ros/node_handle.h ****       {
 4877              		.loc 9 327 0
 4878 011e 032B     		cmp	r3, #3
 4879 0120 00F0BB80 		beq	.L304
 332:ROSSerial/ros/node_handle.h ****       {
 4880              		.loc 9 332 0
 4881 0124 042B     		cmp	r3, #4
 4882 0126 00F0C380 		beq	.L305
 339:ROSSerial/ros/node_handle.h ****       {
 4883              		.loc 9 339 0
 4884 012a 052B     		cmp	r3, #5
 4885 012c 00F0D180 		beq	.L306
 345:ROSSerial/ros/node_handle.h ****       {
 4886              		.loc 9 345 0
 4887 0130 062B     		cmp	r3, #6
 4888 0132 00F0EF80 		beq	.L307
 352:ROSSerial/ros/node_handle.h ****       {
 4889              		.loc 9 352 0
 4890 0136 082B     		cmp	r3, #8
 4891 0138 C8D1     		bne	.L242
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4892              		.loc 9 354 0
 4893 013a 6A4B     		ldr	r3, .L321
 4894 013c 0021     		movs	r1, #0
 4895 013e C3F80815 		str	r1, [r3, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 4896              		.loc 9 355 0
 4897 0142 8B1A     		subs	r3, r1, r2
 4898 0144 D2B2     		uxtb	r2, r2
 4899 0146 DBB2     		uxtb	r3, r3
 4900 0148 58BF     		it	pl
 4901 014a 5A42     		rsbpl	r2, r3, #0
 4902 014c FF2A     		cmp	r2, #255
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 127


 4903 014e BDD1     		bne	.L242
 357:ROSSerial/ros/node_handle.h ****           {
 4904              		.loc 9 357 0
 4905 0150 644B     		ldr	r3, .L321
 4906 0152 D3F81065 		ldr	r6, [r3, #1296]
 4907 0156 002E     		cmp	r6, #0
 4908 0158 00F0F080 		beq	.L308
 365:ROSSerial/ros/node_handle.h ****           {
 4909              		.loc 9 365 0
 4910 015c 0A2E     		cmp	r6, #10
 4911 015e 00F04381 		beq	.L309
 369:ROSSerial/ros/node_handle.h ****           {
 4912              		.loc 9 369 0
 4913 0162 062E     		cmp	r6, #6
 4914 0164 00F08481 		beq	.L310
 374:ROSSerial/ros/node_handle.h ****           {
 4915              		.loc 9 374 0
 4916 0168 0B2E     		cmp	r6, #11
 4917 016a 00F03082 		beq	.L311
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 4918              		.loc 9 380 0
 4919 016e 643E     		subs	r6, r6, #100
 4920 0170 06EB8602 		add	r2, r6, r6, lsl #2
 4921 0174 5B4B     		ldr	r3, .L321
 4922 0176 03EB8203 		add	r3, r3, r2, lsl #2
 4923 017a B3F8A434 		ldrh	r3, [r3, #1188]
 4924 017e 002B     		cmp	r3, #0
 4925 0180 A4D0     		beq	.L242
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 4926              		.loc 9 381 0
 4927 0182 5848     		ldr	r0, .L321
 4928 0184 00EB8206 		add	r6, r0, r2, lsl #2
 4929 0188 D6F8B434 		ldr	r3, [r6, #1204]
 4930 018c 5B4A     		ldr	r2, .L321+24
 4931 018e 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 4932              		.loc 9 383 0
 4933 0190 1830     		adds	r0, r0, #24
 4934 0192 9847     		blx	r3
 4935              	.LVL613:
 4936 0194 9AE7     		b	.L242
 4937              	.L302:
 309:ROSSerial/ros/node_handle.h ****         {
 4938              		.loc 9 309 0
 4939 0196 FE28     		cmp	r0, #254
 4940 0198 3FD0     		beq	.L312
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 4941              		.loc 9 315 0
 4942 019a 524B     		ldr	r3, .L321
 4943 019c 0022     		movs	r2, #0
 4944 019e C3F80825 		str	r2, [r3, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4945              		.loc 9 316 0
 4946 01a2 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 4947 01a6 002B     		cmp	r3, #0
 4948 01a8 90D1     		bne	.L242
 4949              	.LVL614:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 128


 4950              	.LBB648:
 4951              	.LBB649:
 414:ROSSerial/ros/node_handle.h ****     {
 4952              		.loc 9 414 0
 4953 01aa 4E4B     		ldr	r3, .L321
 4954 01ac D3F82425 		ldr	r2, [r3, #1316]
 4955 01b0 9B68     		ldr	r3, [r3, #8]
 4956 01b2 9A42     		cmp	r2, r3
 4957 01b4 8AD3     		bcc	.L242
 4958              	.LVL615:
 4959              	.LBB650:
 4960              	.LBB651:
  14:ROSSerial/std_msgs/Time.h ****   {
 4961              		.loc 1 14 0
 4962 01b6 524B     		ldr	r3, .L321+28
 4963 01b8 0193     		str	r3, [sp, #4]
 4964              	.LVL616:
 4965              	.LBB652:
 4966              	.LBB653:
 4967              	.LBB654:
 4968              		.loc 12 51 0
 4969 01ba 0026     		movs	r6, #0
 4970 01bc 0296     		str	r6, [sp, #8]
 4971 01be 0396     		str	r6, [sp, #12]
 4972              	.LVL617:
 4973              	.LBE654:
 4974              	.LBE653:
 4975              	.LBE652:
 4976              	.LBE651:
 4977              	.LBE650:
 4978              	.LBB655:
 4979              	.LBB656:
 4980              		.loc 11 151 0
 4981 01c0 FFF7FEFF 		bl	HAL_GetTick
 4982              	.LVL618:
 4983              	.LBE656:
 4984              	.LBE655:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 4985              		.loc 9 420 0
 4986 01c4 474F     		ldr	r7, .L321
 4987 01c6 B860     		str	r0, [r7, #8]
 4988              	.LVL619:
 4989              	.LBB657:
 4990              	.LBB658:
 612:ROSSerial/ros/node_handle.h **** 
 4991              		.loc 9 612 0
 4992 01c8 019B     		ldr	r3, [sp, #4]
 4993 01ca 1B68     		ldr	r3, [r3]
 4994 01cc 07F21F21 		addw	r1, r7, #543
 4995 01d0 01A8     		add	r0, sp, #4
 4996              	.LVL620:
 4997 01d2 9847     		blx	r3
 4998              	.LVL621:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 4999              		.loc 9 615 0
 5000 01d4 FF23     		movs	r3, #255
 5001 01d6 87F81832 		strb	r3, [r7, #536]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 129


 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5002              		.loc 9 616 0
 5003 01da FE23     		movs	r3, #254
 5004 01dc 87F81932 		strb	r3, [r7, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5005              		.loc 9 617 0
 5006 01e0 C3B2     		uxtb	r3, r0
 5007 01e2 87F81A32 		strb	r3, [r7, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5008              		.loc 9 618 0
 5009 01e6 C0F30722 		ubfx	r2, r0, #8, #8
 5010 01ea 87F81B22 		strb	r2, [r7, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5011              		.loc 9 619 0
 5012 01ee 1344     		add	r3, r3, r2
 5013 01f0 DBB2     		uxtb	r3, r3
 5014 01f2 DB43     		mvns	r3, r3
 5015 01f4 87F81C32 		strb	r3, [r7, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5016              		.loc 9 620 0
 5017 01f8 0A23     		movs	r3, #10
 5018 01fa 87F81D32 		strb	r3, [r7, #541]
 621:ROSSerial/ros/node_handle.h **** 
 5019              		.loc 9 621 0
 5020 01fe 87F81E62 		strb	r6, [r7, #542]
 5021              	.LVL622:
 5022              	.LBB659:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5023              		.loc 9 625 0
 5024 0202 0522     		movs	r2, #5
 5025              	.LBE659:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5026              		.loc 9 624 0
 5027 0204 3346     		mov	r3, r6
 5028              	.LVL623:
 5029              	.L256:
 5030              	.LBB660:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5031              		.loc 9 625 0
 5032 0206 C11D     		adds	r1, r0, #7
 5033 0208 9142     		cmp	r1, r2
 5034 020a 0BDD     		ble	.L255
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 5035              		.loc 9 626 0
 5036 020c 3549     		ldr	r1, .L321
 5037 020e 1144     		add	r1, r1, r2
 5038 0210 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5039 0214 0B44     		add	r3, r3, r1
 5040              	.LVL624:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5041              		.loc 9 625 0
 5042 0216 0132     		adds	r2, r2, #1
 5043              	.LVL625:
 5044 0218 F5E7     		b	.L256
 5045              	.LVL626:
 5046              	.L312:
 5047              	.LBE660:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 130


 5048              	.LBE658:
 5049              	.LBE657:
 5050              	.LBE649:
 5051              	.LBE648:
 311:ROSSerial/ros/node_handle.h ****         }
 5052              		.loc 9 311 0
 5053 021a 0133     		adds	r3, r3, #1
 5054 021c 314A     		ldr	r2, .L321
 5055 021e C2F80835 		str	r3, [r2, #1288]
 5056 0222 53E7     		b	.L242
 5057              	.LVL627:
 5058              	.L255:
 5059              	.LBB671:
 5060              	.LBB670:
 5061              	.LBB669:
 5062              	.LBB668:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 5063              		.loc 9 628 0
 5064 0224 5A42     		rsbs	r2, r3, #0
 5065              	.LVL628:
 5066 0226 DBB2     		uxtb	r3, r3
 5067              	.LVL629:
 5068 0228 D2B2     		uxtb	r2, r2
 5069 022a 58BF     		it	pl
 5070 022c 5342     		rsbpl	r3, r2, #0
 5071 022e 00F10806 		add	r6, r0, #8
 5072              	.LVL630:
 5073 0232 DB43     		mvns	r3, r3
 5074 0234 2B4A     		ldr	r2, .L321
 5075 0236 1144     		add	r1, r1, r2
 5076 0238 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 5077              		.loc 9 631 0
 5078 023c B6F5007F 		cmp	r6, #512
 5079 0240 0FDC     		bgt	.L257
 5080              	.LVL631:
 5081              	.LBB661:
 5082              	.LBB662:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 5083              		.loc 11 121 0
 5084 0242 1423     		movs	r3, #20
 5085 0244 B2B2     		uxth	r2, r6
 5086 0246 2F49     		ldr	r1, .L321+32
 5087 0248 2A48     		ldr	r0, .L321+16
 5088 024a FFF7FEFF 		bl	HAL_UART_Transmit
 5089              	.LVL632:
 122:ROSSerial/AT32hardware.h **** 		{
 5090              		.loc 11 122 0
 5091 024e 0146     		mov	r1, r0
 5092 0250 0028     		cmp	r0, #0
 5093 0252 3FF43BAF 		beq	.L242
 124:ROSSerial/AT32hardware.h **** 		}
 5094              		.loc 11 124 0
 5095 0256 2B4B     		ldr	r3, .L321+32
 5096 0258 3246     		mov	r2, r6
 5097 025a 2B48     		ldr	r0, .L321+36
 5098              	.LVL633:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 131


 5099 025c FFF7FEFF 		bl	printf
 5100              	.LVL634:
 5101 0260 34E7     		b	.L242
 5102              	.LVL635:
 5103              	.L257:
 5104              	.LBE662:
 5105              	.LBE661:
 5106              	.LBB663:
 5107              	.LBB664:
 5108              	.LBB665:
 5109              	.LBB666:
 5110              	.LBB667:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5111              		.loc 3 13 0
 5112 0262 2A4B     		ldr	r3, .L321+40
 5113 0264 0493     		str	r3, [sp, #16]
 5114              	.LVL636:
 5115              	.LBE667:
 5116              	.LBE666:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5117              		.loc 9 657 0
 5118 0266 0323     		movs	r3, #3
 5119 0268 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5120              		.loc 9 658 0
 5121 026c 284E     		ldr	r6, .L321+44
 5122              	.LVL637:
 5123 026e 0696     		str	r6, [sp, #24]
 5124              		.loc 9 659 0
 5125 0270 04AA     		add	r2, sp, #16
 5126 0272 0721     		movs	r1, #7
 5127 0274 1B48     		ldr	r0, .L321
 5128              	.LVL638:
 5129 0276 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5130              	.LVL639:
 5131              	.LBE665:
 5132              	.LBE664:
 5133              	.LBE663:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 5134              		.loc 9 644 0
 5135 027a 3046     		mov	r0, r6
 5136 027c FFF7FEFF 		bl	printf
 5137              	.LVL640:
 5138 0280 24E7     		b	.L242
 5139              	.LVL641:
 5140              	.L303:
 5141              	.LBE668:
 5142              	.LBE669:
 5143              	.LBE670:
 5144              	.LBE671:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 5145              		.loc 9 322 0
 5146 0282 184A     		ldr	r2, .L321
 5147 0284 C2F80C05 		str	r0, [r2, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 5148              		.loc 9 323 0
 5149 0288 0021     		movs	r1, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 132


 5150 028a C2F81415 		str	r1, [r2, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 5151              		.loc 9 324 0
 5152 028e 0133     		adds	r3, r3, #1
 5153 0290 C2F80835 		str	r3, [r2, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 5154              		.loc 9 325 0
 5155 0294 C2F81805 		str	r0, [r2, #1304]
 5156 0298 18E7     		b	.L242
 5157              	.L304:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 5158              		.loc 9 329 0
 5159 029a 124A     		ldr	r2, .L321
 5160 029c D2F80C15 		ldr	r1, [r2, #1292]
 5161 02a0 01EB0020 		add	r0, r1, r0, lsl #8
 5162 02a4 C2F80C05 		str	r0, [r2, #1292]
 330:ROSSerial/ros/node_handle.h ****       }
 5163              		.loc 9 330 0
 5164 02a8 0133     		adds	r3, r3, #1
 5165 02aa C2F80835 		str	r3, [r2, #1288]
 5166 02ae 0DE7     		b	.L242
 5167              	.L305:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 5168              		.loc 9 334 0
 5169 02b0 5142     		rsbs	r1, r2, #0
 5170 02b2 D2B2     		uxtb	r2, r2
 5171 02b4 C9B2     		uxtb	r1, r1
 5172 02b6 58BF     		it	pl
 5173 02b8 4A42     		rsbpl	r2, r1, #0
 5174 02ba FF2A     		cmp	r2, #255
 5175 02bc 04D0     		beq	.L313
 337:ROSSerial/ros/node_handle.h ****       }
 5176              		.loc 9 337 0
 5177 02be 094B     		ldr	r3, .L321
 5178 02c0 0022     		movs	r2, #0
 5179 02c2 C3F80825 		str	r2, [r3, #1288]
 5180 02c6 01E7     		b	.L242
 5181              	.L313:
 335:ROSSerial/ros/node_handle.h ****         else
 5182              		.loc 9 335 0
 5183 02c8 0133     		adds	r3, r3, #1
 5184 02ca 064A     		ldr	r2, .L321
 5185 02cc C2F80835 		str	r3, [r2, #1288]
 5186 02d0 FCE6     		b	.L242
 5187              	.L306:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 5188              		.loc 9 341 0
 5189 02d2 044A     		ldr	r2, .L321
 5190 02d4 C2F81005 		str	r0, [r2, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 5191              		.loc 9 342 0
 5192 02d8 0133     		adds	r3, r3, #1
 5193 02da C2F80835 		str	r3, [r2, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 5194              		.loc 9 343 0
 5195 02de C2F81805 		str	r0, [r2, #1304]
 5196 02e2 F3E6     		b	.L242
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 133


 5197              	.L322:
 5198              		.align	2
 5199              	.L321:
 5200 02e4 00000000 		.word	.LANCHOR1
 5201 02e8 00000000 		.word	g_RxRead
 5202 02ec 00000000 		.word	g_RxBuf
 5203 02f0 00000000 		.word	g_RxWritten
 5204 02f4 00000000 		.word	huart2
 5205 02f8 00000000 		.word	byte
 5206 02fc 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 5207 0300 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5208 0304 18020000 		.word	.LANCHOR1+536
 5209 0308 00000000 		.word	.LC19
 5210 030c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5211 0310 20000000 		.word	.LC20
 5212              	.L307:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 5213              		.loc 9 347 0
 5214 0314 BE4B     		ldr	r3, .L323
 5215 0316 D3F81025 		ldr	r2, [r3, #1296]
 5216 031a 02EB0022 		add	r2, r2, r0, lsl #8
 5217 031e C3F81025 		str	r2, [r3, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 5218              		.loc 9 348 0
 5219 0322 0722     		movs	r2, #7
 5220 0324 C3F80825 		str	r2, [r3, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 5221              		.loc 9 349 0
 5222 0328 D3F80C35 		ldr	r3, [r3, #1292]
 5223 032c 002B     		cmp	r3, #0
 5224 032e 7FF4CDAE 		bne	.L242
 350:ROSSerial/ros/node_handle.h ****       }
 5225              		.loc 9 350 0
 5226 0332 B74B     		ldr	r3, .L323
 5227 0334 0822     		movs	r2, #8
 5228 0336 C3F80825 		str	r2, [r3, #1288]
 5229 033a C7E6     		b	.L242
 5230              	.L308:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 5231              		.loc 9 359 0
 5232 033c 1846     		mov	r0, r3
 5233 033e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 5234              	.LVL642:
 5235              	.LBB672:
 5236              	.LBB673:
 5237              	.LBB674:
 5238              	.LBB675:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 5239              		.loc 2 12 0
 5240 0342 B44B     		ldr	r3, .L323+4
 5241 0344 0493     		str	r3, [sp, #16]
 5242              	.LVL643:
 5243              	.LBE675:
 5244              	.LBE674:
 568:ROSSerial/ros/node_handle.h ****     {
 5245              		.loc 9 568 0
 5246 0346 3746     		mov	r7, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 134


 5247 0348 00E0     		b	.L268
 5248              	.LVL644:
 5249              	.L267:
 5250 034a 0137     		adds	r7, r7, #1
 5251              	.LVL645:
 5252              	.L268:
 5253 034c 042F     		cmp	r7, #4
 5254 034e 1FDC     		bgt	.L266
 570:ROSSerial/ros/node_handle.h ****       {
 5255              		.loc 9 570 0
 5256 0350 07EB8702 		add	r2, r7, r7, lsl #2
 5257 0354 AE4B     		ldr	r3, .L323
 5258 0356 03EB8203 		add	r3, r3, r2, lsl #2
 5259 035a B3F82C34 		ldrh	r3, [r3, #1068]
 5260 035e 002B     		cmp	r3, #0
 5261 0360 F3D0     		beq	.L267
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 5262              		.loc 9 572 0
 5263 0362 ADF81430 		strh	r3, [sp, #20]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 5264              		.loc 9 573 0
 5265 0366 AA48     		ldr	r0, .L323
 5266 0368 00EB8203 		add	r3, r0, r2, lsl #2
 5267 036c D3F83024 		ldr	r2, [r3, #1072]
 5268 0370 0692     		str	r2, [sp, #24]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 5269              		.loc 9 574 0
 5270 0372 D3F83824 		ldr	r2, [r3, #1080]
 5271 0376 0792     		str	r2, [sp, #28]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 5272              		.loc 9 575 0
 5273 0378 D3F83C34 		ldr	r3, [r3, #1084]
 5274 037c 0893     		str	r3, [sp, #32]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 5275              		.loc 9 576 0
 5276 037e 4FF40073 		mov	r3, #512
 5277 0382 0993     		str	r3, [sp, #36]
 577:ROSSerial/ros/node_handle.h ****       }
 5278              		.loc 9 577 0
 5279 0384 04AA     		add	r2, sp, #16
 5280 0386 0021     		movs	r1, #0
 5281 0388 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5282              	.LVL646:
 5283 038c DDE7     		b	.L267
 5284              	.LVL647:
 5285              	.L270:
 580:ROSSerial/ros/node_handle.h ****     {
 5286              		.loc 9 580 0
 5287 038e 0136     		adds	r6, r6, #1
 5288              	.LVL648:
 5289              	.L266:
 5290 0390 042E     		cmp	r6, #4
 5291 0392 1EDC     		bgt	.L269
 582:ROSSerial/ros/node_handle.h ****       {
 5292              		.loc 9 582 0
 5293 0394 06EB8602 		add	r2, r6, r6, lsl #2
 5294 0398 9D4B     		ldr	r3, .L323
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 135


 5295 039a 03EB8203 		add	r3, r3, r2, lsl #2
 5296 039e B3F8A434 		ldrh	r3, [r3, #1188]
 5297 03a2 002B     		cmp	r3, #0
 5298 03a4 F3D0     		beq	.L270
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 5299              		.loc 9 584 0
 5300 03a6 ADF81430 		strh	r3, [sp, #20]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 5301              		.loc 9 585 0
 5302 03aa 9948     		ldr	r0, .L323
 5303 03ac 00EB8203 		add	r3, r0, r2, lsl #2
 5304 03b0 D3F8A824 		ldr	r2, [r3, #1192]
 5305 03b4 0692     		str	r2, [sp, #24]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 5306              		.loc 9 586 0
 5307 03b6 D3F8AC24 		ldr	r2, [r3, #1196]
 5308 03ba 0792     		str	r2, [sp, #28]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 5309              		.loc 9 587 0
 5310 03bc D3F8B034 		ldr	r3, [r3, #1200]
 5311 03c0 0893     		str	r3, [sp, #32]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 5312              		.loc 9 588 0
 5313 03c2 4FF40073 		mov	r3, #512
 5314 03c6 0993     		str	r3, [sp, #36]
 589:ROSSerial/ros/node_handle.h ****       }
 5315              		.loc 9 589 0
 5316 03c8 04AA     		add	r2, sp, #16
 5317 03ca 0121     		movs	r1, #1
 5318 03cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5319              	.LVL649:
 5320 03d0 DDE7     		b	.L270
 5321              	.L269:
 592:ROSSerial/ros/node_handle.h ****   }
 5322              		.loc 9 592 0
 5323 03d2 8F4B     		ldr	r3, .L323
 5324 03d4 0122     		movs	r2, #1
 5325 03d6 83F81C25 		strb	r2, [r3, #1308]
 5326              	.LVL650:
 5327              	.LBE673:
 5328              	.LBE672:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 5329              		.loc 9 361 0
 5330 03da C3F82045 		str	r4, [r3, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 5331              		.loc 9 362 0
 5332 03de C3F82445 		str	r4, [r3, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 5333              		.loc 9 363 0
 5334 03e2 4FF0FF33 		mov	r3, #-1
 5335 03e6 81E1     		b	.L244
 5336              	.L309:
 5337              	.LVL651:
 5338              	.LBB676:
 5339              	.LBB677:
 5340              	.LBB678:
 5341              	.LBB679:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 136


 5342              		.loc 11 151 0
 5343 03e8 FFF7FEFF 		bl	HAL_GetTick
 5344              	.LVL652:
 5345              	.LBE679:
 5346              	.LBE678:
 429:ROSSerial/ros/node_handle.h **** 
 5347              		.loc 9 429 0
 5348 03ec 884E     		ldr	r6, .L323
 5349 03ee B368     		ldr	r3, [r6, #8]
 5350 03f0 C01A     		subs	r0, r0, r3
 5351              	.LVL653:
 5352              	.LBB680:
 5353              	.LBB681:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5354              		.loc 1 38 0
 5355 03f2 337E     		ldrb	r3, [r6, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5356              		.loc 1 39 0
 5357 03f4 727E     		ldrb	r2, [r6, #25]	@ zero_extendqisi2
 5358 03f6 43EA0223 		orr	r3, r3, r2, lsl #8
  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5359              		.loc 1 40 0
 5360 03fa B27E     		ldrb	r2, [r6, #26]	@ zero_extendqisi2
 5361 03fc 43EA0243 		orr	r3, r3, r2, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 5362              		.loc 1 41 0
 5363 0400 F17E     		ldrb	r1, [r6, #27]	@ zero_extendqisi2
 5364 0402 43EA0161 		orr	r1, r3, r1, lsl #24
 5365              	.LVL654:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5366              		.loc 1 43 0
 5367 0406 337F     		ldrb	r3, [r6, #28]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5368              		.loc 1 44 0
 5369 0408 727F     		ldrb	r2, [r6, #29]	@ zero_extendqisi2
 5370 040a 43EA0223 		orr	r3, r3, r2, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5371              		.loc 1 45 0
 5372 040e B27F     		ldrb	r2, [r6, #30]	@ zero_extendqisi2
 5373 0410 43EA0243 		orr	r3, r3, r2, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 5374              		.loc 1 46 0
 5375 0414 F27F     		ldrb	r2, [r6, #31]	@ zero_extendqisi2
 5376 0416 43EA0262 		orr	r2, r3, r2, lsl #24
 5377              	.LVL655:
 5378              	.LBE681:
 5379              	.LBE680:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 5380              		.loc 9 432 0
 5381 041a 7F4F     		ldr	r7, .L323+8
 5382 041c A7FB00C3 		umull	ip, r3, r7, r0
 5383 0420 9B09     		lsrs	r3, r3, #6
 5384 0422 1944     		add	r1, r1, r3
 5385 0424 0591     		str	r1, [sp, #20]
 433:ROSSerial/ros/node_handle.h **** 
 5386              		.loc 9 433 0
 5387 0426 4FF47A79 		mov	r9, #1000
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 137


 5388 042a 09FB1303 		mls	r3, r9, r3, r0
 5389 042e DFF8F481 		ldr	r8, .L323+20
 5390 0432 08FB0323 		mla	r3, r8, r3, r2
 5391 0436 0693     		str	r3, [sp, #24]
 5392              	.LVL656:
 5393              	.LBB682:
 5394              	.LBB683:
 5395              	.LBB684:
 5396              	.LBB685:
 5397              		.loc 11 151 0
 5398 0438 FFF7FEFF 		bl	HAL_GetTick
 5399              	.LVL657:
 5400              	.LBE685:
 5401              	.LBE684:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 5402              		.loc 9 454 0
 5403 043c A7FB0023 		umull	r2, r3, r7, r0
 5404 0440 9B09     		lsrs	r3, r3, #6
 5405 0442 059A     		ldr	r2, [sp, #20]
 5406 0444 D21A     		subs	r2, r2, r3
 5407 0446 013A     		subs	r2, r2, #1
 5408 0448 F260     		str	r2, [r6, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 5409              		.loc 9 455 0
 5410 044a 09FB1303 		mls	r3, r9, r3, r0
 5411 044e 069A     		ldr	r2, [sp, #24]
 5412 0450 08FB1323 		mls	r3, r8, r3, r2
 5413 0454 714A     		ldr	r2, .L323+12
 5414 0456 1A44     		add	r2, r2, r3
 5415 0458 3146     		mov	r1, r6
 5416 045a 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 5417              		.loc 9 456 0
 5418 045e 06F10C00 		add	r0, r6, #12
 5419              	.LVL658:
 5420 0462 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 5421              	.LVL659:
 5422              	.LBE683:
 5423              	.LBE682:
 5424              	.LBB686:
 5425              	.LBB687:
 5426              		.loc 11 151 0
 5427 0466 FFF7FEFF 		bl	HAL_GetTick
 5428              	.LVL660:
 5429              	.LBE687:
 5430              	.LBE686:
 438:ROSSerial/ros/node_handle.h ****   }
 5431              		.loc 9 438 0
 5432 046a C6F82405 		str	r0, [r6, #1316]
 5433 046e 2DE6     		b	.L242
 5434              	.LVL661:
 5435              	.L310:
 5436              	.LBE677:
 5437              	.LBE676:
 5438              	.LBB688:
 5439              	.LBB689:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 138


 5440              		.loc 4 116 0
 5441 0470 674B     		ldr	r3, .L323
 5442 0472 1E7E     		ldrb	r6, [r3, #24]	@ zero_extendqisi2
 5443              	.LVL662:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 5444              		.loc 4 117 0
 5445 0474 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5446 0478 9E42     		cmp	r6, r3
 5447 047a 23D8     		bhi	.L314
 5448              	.L273:
 5449              	.LVL663:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 5450              		.loc 4 120 0
 5451 047c 644B     		ldr	r3, .L323
 5452 047e 83F83465 		strb	r6, [r3, #1332]
 5453              	.LVL664:
 5454              	.LBB690:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5455              		.loc 4 121 0
 5456 0482 0022     		movs	r2, #0
 5457              	.LBE690:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 5458              		.loc 4 119 0
 5459 0484 0426     		movs	r6, #4
 5460              	.LVL665:
 5461              	.L275:
 5462              	.LBB692:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5463              		.loc 4 121 0
 5464 0486 624B     		ldr	r3, .L323
 5465 0488 93F83435 		ldrb	r3, [r3, #1332]	@ zero_extendqisi2
 5466 048c 9342     		cmp	r3, r2
 5467 048e 22D9     		bls	.L274
 5468              	.LBB691:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5469              		.loc 4 127 0
 5470 0490 5F48     		ldr	r0, .L323
 5471 0492 00F11801 		add	r1, r0, #24
 5472 0496 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5473              		.loc 4 128 0
 5474 0498 771C     		adds	r7, r6, #1
 5475 049a CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5476 049c 43EA0723 		orr	r3, r3, r7, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5477              		.loc 4 129 0
 5478 04a0 B71C     		adds	r7, r6, #2
 5479 04a2 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5480 04a4 43EA0743 		orr	r3, r3, r7, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 5481              		.loc 4 130 0
 5482 04a8 F71C     		adds	r7, r6, #3
 5483 04aa C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 5484 04ac 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 5485              		.loc 4 131 0
 5486 04b0 C0F83835 		str	r3, [r0, #1336]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 139


 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 5487              		.loc 4 132 0
 5488 04b4 0436     		adds	r6, r6, #4
 5489              	.LVL666:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5490              		.loc 4 133 0
 5491 04b6 D0F83C15 		ldr	r1, [r0, #1340]
 5492 04ba 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5493              	.LBE691:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5494              		.loc 4 121 0
 5495 04be 0132     		adds	r2, r2, #1
 5496              	.LVL667:
 5497 04c0 D2B2     		uxtb	r2, r2
 5498              	.LVL668:
 5499 04c2 E0E7     		b	.L275
 5500              	.LVL669:
 5501              	.L314:
 5502              	.LBE692:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5503              		.loc 4 118 0
 5504 04c4 524F     		ldr	r7, .L323
 5505 04c6 B100     		lsls	r1, r6, #2
 5506 04c8 D7F83C05 		ldr	r0, [r7, #1340]
 5507 04cc FFF7FEFF 		bl	realloc
 5508              	.LVL670:
 5509 04d0 C7F83C05 		str	r0, [r7, #1340]
 5510 04d4 D2E7     		b	.L273
 5511              	.LVL671:
 5512              	.L274:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 5513              		.loc 4 135 0
 5514 04d6 4E4B     		ldr	r3, .L323
 5515 04d8 03F11802 		add	r2, r3, #24
 5516              	.LVL672:
 5517 04dc 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
 5518              	.LVL673:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 5519              		.loc 4 136 0
 5520 04de 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5521 04e2 9F42     		cmp	r7, r3
 5522 04e4 24D8     		bhi	.L315
 5523              	.L276:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 5524              		.loc 4 138 0
 5525 04e6 0436     		adds	r6, r6, #4
 5526              	.LVL674:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 5527              		.loc 4 139 0
 5528 04e8 494B     		ldr	r3, .L323
 5529 04ea 83F84075 		strb	r7, [r3, #1344]
 5530              	.LVL675:
 5531              	.LBB693:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5532              		.loc 4 140 0
 5533 04ee 0022     		movs	r2, #0
 5534              	.LVL676:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 140


 5535              	.L278:
 5536 04f0 474B     		ldr	r3, .L323
 5537 04f2 93F84035 		ldrb	r3, [r3, #1344]	@ zero_extendqisi2
 5538 04f6 9342     		cmp	r3, r2
 5539 04f8 24D9     		bls	.L277
 5540              	.LBB694:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 5541              		.loc 4 146 0
 5542 04fa 4548     		ldr	r0, .L323
 5543 04fc 00F11801 		add	r1, r0, #24
 5544 0500 8B5D     		ldrb	r3, [r1, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 5545              		.loc 4 147 0
 5546 0502 771C     		adds	r7, r6, #1
 5547 0504 CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5548 0506 43EA0723 		orr	r3, r3, r7, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 5549              		.loc 4 148 0
 5550 050a B71C     		adds	r7, r6, #2
 5551 050c CF5D     		ldrb	r7, [r1, r7]	@ zero_extendqisi2
 5552 050e 43EA0743 		orr	r3, r3, r7, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 5553              		.loc 4 149 0
 5554 0512 F71C     		adds	r7, r6, #3
 5555 0514 C95D     		ldrb	r1, [r1, r7]	@ zero_extendqisi2
 5556 0516 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 5557              		.loc 4 150 0
 5558 051a 00F24451 		addw	r1, r0, #1348
 5559 051e 0B60     		str	r3, [r1]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 5560              		.loc 4 151 0
 5561 0520 0436     		adds	r6, r6, #4
 5562              	.LVL677:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5563              		.loc 4 152 0
 5564 0522 D0F84815 		ldr	r1, [r0, #1352]
 5565 0526 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 5566              	.LBE694:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 5567              		.loc 4 140 0
 5568 052a 0132     		adds	r2, r2, #1
 5569              	.LVL678:
 5570 052c D2B2     		uxtb	r2, r2
 5571              	.LVL679:
 5572 052e DFE7     		b	.L278
 5573              	.LVL680:
 5574              	.L315:
 5575              	.LBE693:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5576              		.loc 4 137 0
 5577 0530 A2F11808 		sub	r8, r2, #24
 5578 0534 B900     		lsls	r1, r7, #2
 5579 0536 D8F84805 		ldr	r0, [r8, #1352]
 5580 053a FFF7FEFF 		bl	realloc
 5581              	.LVL681:
 5582 053e C8F84805 		str	r0, [r8, #1352]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 141


 5583 0542 D0E7     		b	.L276
 5584              	.LVL682:
 5585              	.L277:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 5586              		.loc 4 154 0
 5587 0544 324B     		ldr	r3, .L323
 5588 0546 03F11802 		add	r2, r3, #24
 5589              	.LVL683:
 5590 054a 975D     		ldrb	r7, [r2, r6]	@ zero_extendqisi2
 5591              	.LVL684:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 5592              		.loc 4 155 0
 5593 054c 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 5594 0550 9F42     		cmp	r7, r3
 5595 0552 06D8     		bhi	.L316
 5596              	.L279:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 5597              		.loc 4 157 0
 5598 0554 321D     		adds	r2, r6, #4
 5599              	.LVL685:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 5600              		.loc 4 158 0
 5601 0556 2E4B     		ldr	r3, .L323
 5602 0558 83F84C75 		strb	r7, [r3, #1356]
 5603              	.LVL686:
 5604              	.LBB695:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5605              		.loc 4 159 0
 5606 055c 4FF0000C 		mov	ip, #0
 5607 0560 1BE0     		b	.L283
 5608              	.LVL687:
 5609              	.L316:
 5610              	.LBE695:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 5611              		.loc 4 156 0
 5612 0562 A2F11808 		sub	r8, r2, #24
 5613 0566 B900     		lsls	r1, r7, #2
 5614 0568 D8F85405 		ldr	r0, [r8, #1364]
 5615 056c FFF7FEFF 		bl	realloc
 5616              	.LVL688:
 5617 0570 C8F85405 		str	r0, [r8, #1364]
 5618 0574 EEE7     		b	.L279
 5619              	.LVL689:
 5620              	.L281:
 5621              	.LBB699:
 5622              	.LBB696:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 5623              		.loc 4 166 0
 5624 0576 2649     		ldr	r1, .L323
 5625 0578 01F11803 		add	r3, r1, #24
 5626              	.LVL690:
 5627 057c 501E     		subs	r0, r2, #1
 5628 057e 0027     		movs	r7, #0
 5629              	.LVL691:
 5630 0580 1F54     		strb	r7, [r3, r0]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 5631              		.loc 4 167 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 142


 5632 0582 013E     		subs	r6, r6, #1
 5633 0584 1E44     		add	r6, r6, r3
 5634 0586 C1F85065 		str	r6, [r1, #1360]
 5635              	.LVL692:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5636              		.loc 4 169 0
 5637 058a D1F85435 		ldr	r3, [r1, #1364]
 5638 058e 43F82C60 		str	r6, [r3, ip, lsl #2]	@ unaligned
 5639              	.LBE696:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 5640              		.loc 4 159 0
 5641 0592 0CF1010C 		add	ip, ip, #1
 5642              	.LVL693:
 5643 0596 5FFA8CFC 		uxtb	ip, ip
 5644              	.LVL694:
 5645              	.L283:
 5646 059a 1D4B     		ldr	r3, .L323
 5647 059c 93F84C35 		ldrb	r3, [r3, #1356]	@ zero_extendqisi2
 5648 05a0 6345     		cmp	r3, ip
 5649 05a2 0FD9     		bls	.L280
 5650              	.LBB698:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 5651              		.loc 4 161 0
 5652 05a4 1E4B     		ldr	r3, .L323+16
 5653 05a6 9F58     		ldr	r7, [r3, r2]	@ unaligned
 5654              	.LVL695:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 5655              		.loc 4 162 0
 5656 05a8 161D     		adds	r6, r2, #4
 5657              	.LVL696:
 5658              	.LBB697:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5659              		.loc 4 163 0
 5660 05aa 3346     		mov	r3, r6
 5661              	.LVL697:
 5662              	.L282:
 5663 05ac BA19     		adds	r2, r7, r6
 5664 05ae 9A42     		cmp	r2, r3
 5665 05b0 E1D9     		bls	.L281
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 5666              		.loc 4 164 0
 5667 05b2 174A     		ldr	r2, .L323
 5668 05b4 02F11800 		add	r0, r2, #24
 5669 05b8 591E     		subs	r1, r3, #1
 5670 05ba 1A44     		add	r2, r2, r3
 5671 05bc 127E     		ldrb	r2, [r2, #24]	@ zero_extendqisi2
 5672 05be 4254     		strb	r2, [r0, r1]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 5673              		.loc 4 163 0
 5674 05c0 0133     		adds	r3, r3, #1
 5675              	.LVL698:
 5676 05c2 F3E7     		b	.L282
 5677              	.LVL699:
 5678              	.L280:
 5679              	.LBE697:
 5680              	.LBE698:
 5681              	.LBE699:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 143


 5682              	.LBE689:
 5683              	.LBE688:
 372:ROSSerial/ros/node_handle.h ****           }
 5684              		.loc 9 372 0
 5685 05c4 124B     		ldr	r3, .L323
 5686 05c6 0122     		movs	r2, #1
 5687 05c8 83F82C25 		strb	r2, [r3, #1324]
 5688 05cc 7EE5     		b	.L242
 5689              	.L311:
 376:ROSSerial/ros/node_handle.h ****           }
 5690              		.loc 9 376 0
 5691 05ce 104B     		ldr	r3, .L323
 5692 05d0 0022     		movs	r2, #0
 5693 05d2 83F81C25 		strb	r2, [r3, #1308]
 5694 05d6 79E5     		b	.L242
 5695              	.L247:
 5696              	.LBE637:
 391:ROSSerial/ros/node_handle.h ****     {
 5697              		.loc 9 391 0
 5698 05d8 0D4B     		ldr	r3, .L323
 5699 05da 93F81C35 		ldrb	r3, [r3, #1308]	@ zero_extendqisi2
 5700 05de 002B     		cmp	r3, #0
 5701 05e0 00F08F80 		beq	.L296
 5702 05e4 0A4B     		ldr	r3, .L323
 5703 05e6 D3F82035 		ldr	r3, [r3, #1312]
 5704 05ea E31A     		subs	r3, r4, r3
 5705 05ec 40F6C412 		movw	r2, #2500
 5706 05f0 9342     		cmp	r3, r2
 5707 05f2 01D8     		bhi	.L317
 398:ROSSerial/ros/node_handle.h ****   }
 5708              		.loc 9 398 0
 5709 05f4 0023     		movs	r3, #0
 5710 05f6 79E0     		b	.L244
 5711              	.L317:
 5712              	.LVL700:
 5713              	.LBB700:
 5714              	.LBB701:
 414:ROSSerial/ros/node_handle.h ****     {
 5715              		.loc 9 414 0
 5716 05f8 054B     		ldr	r3, .L323
 5717 05fa D3F82425 		ldr	r2, [r3, #1316]
 5718 05fe 9B68     		ldr	r3, [r3, #8]
 5719 0600 9A42     		cmp	r2, r3
 5720 0602 11D2     		bcs	.L318
 5721              	.L290:
 5722              	.LVL701:
 5723              	.LBE701:
 5724              	.LBE700:
 395:ROSSerial/ros/node_handle.h ****     }
 5725              		.loc 9 395 0
 5726 0604 024B     		ldr	r3, .L323
 5727 0606 C3F82045 		str	r4, [r3, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 5728              		.loc 9 398 0
 5729 060a 0023     		movs	r3, #0
 5730 060c 6EE0     		b	.L244
 5731              	.L324:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 144


 5732 060e 00BF     		.align	2
 5733              	.L323:
 5734 0610 00000000 		.word	.LANCHOR1
 5735 0614 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 5736 0618 D34D6210 		.word	274877907
 5737 061c 00CA9A3B 		.word	1000000000
 5738 0620 18000000 		.word	.LANCHOR1+24
 5739 0624 40420F00 		.word	1000000
 5740              	.LVL702:
 5741              	.L318:
 5742              	.LBB721:
 5743              	.LBB720:
 5744              	.LBB702:
 5745              	.LBB703:
  14:ROSSerial/std_msgs/Time.h ****   {
 5746              		.loc 1 14 0
 5747 0628 3C4B     		ldr	r3, .L325
 5748 062a 0193     		str	r3, [sp, #4]
 5749              	.LVL703:
 5750              	.LBB704:
 5751              	.LBB705:
 5752              	.LBB706:
 5753              		.loc 12 51 0
 5754 062c 0026     		movs	r6, #0
 5755 062e 0296     		str	r6, [sp, #8]
 5756 0630 0396     		str	r6, [sp, #12]
 5757              	.LVL704:
 5758              	.LBE706:
 5759              	.LBE705:
 5760              	.LBE704:
 5761              	.LBE703:
 5762              	.LBE702:
 5763              	.LBB707:
 5764              	.LBB708:
 5765              		.loc 11 151 0
 5766 0632 FFF7FEFF 		bl	HAL_GetTick
 5767              	.LVL705:
 5768              	.LBE708:
 5769              	.LBE707:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 5770              		.loc 9 420 0
 5771 0636 3A4F     		ldr	r7, .L325+4
 5772 0638 B860     		str	r0, [r7, #8]
 5773              	.LVL706:
 5774              	.LBB709:
 5775              	.LBB710:
 612:ROSSerial/ros/node_handle.h **** 
 5776              		.loc 9 612 0
 5777 063a 019B     		ldr	r3, [sp, #4]
 5778 063c 1B68     		ldr	r3, [r3]
 5779 063e 07F21F21 		addw	r1, r7, #543
 5780 0642 01A8     		add	r0, sp, #4
 5781              	.LVL707:
 5782 0644 9847     		blx	r3
 5783              	.LVL708:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 5784              		.loc 9 615 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 145


 5785 0646 FF23     		movs	r3, #255
 5786 0648 87F81832 		strb	r3, [r7, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 5787              		.loc 9 616 0
 5788 064c FE23     		movs	r3, #254
 5789 064e 87F81932 		strb	r3, [r7, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 5790              		.loc 9 617 0
 5791 0652 C3B2     		uxtb	r3, r0
 5792 0654 87F81A32 		strb	r3, [r7, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 5793              		.loc 9 618 0
 5794 0658 C0F30722 		ubfx	r2, r0, #8, #8
 5795 065c 87F81B22 		strb	r2, [r7, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 5796              		.loc 9 619 0
 5797 0660 1344     		add	r3, r3, r2
 5798 0662 DBB2     		uxtb	r3, r3
 5799 0664 DB43     		mvns	r3, r3
 5800 0666 87F81C32 		strb	r3, [r7, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 5801              		.loc 9 620 0
 5802 066a 0A23     		movs	r3, #10
 5803 066c 87F81D32 		strb	r3, [r7, #541]
 621:ROSSerial/ros/node_handle.h **** 
 5804              		.loc 9 621 0
 5805 0670 87F81E62 		strb	r6, [r7, #542]
 5806              	.LVL709:
 5807              	.LBB711:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5808              		.loc 9 625 0
 5809 0674 0522     		movs	r2, #5
 5810              	.LBE711:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 5811              		.loc 9 624 0
 5812 0676 3346     		mov	r3, r6
 5813              	.LVL710:
 5814              	.L287:
 5815              	.LBB712:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5816              		.loc 9 625 0
 5817 0678 C11D     		adds	r1, r0, #7
 5818 067a 9142     		cmp	r1, r2
 5819 067c 06DD     		ble	.L286
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 5820              		.loc 9 626 0
 5821 067e 2849     		ldr	r1, .L325+4
 5822 0680 1144     		add	r1, r1, r2
 5823 0682 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 5824 0686 0B44     		add	r3, r3, r1
 5825              	.LVL711:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 5826              		.loc 9 625 0
 5827 0688 0132     		adds	r2, r2, #1
 5828              	.LVL712:
 5829 068a F5E7     		b	.L287
 5830              	.L286:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 146


 5831              	.LVL713:
 5832              	.LBE712:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 5833              		.loc 9 628 0
 5834 068c 5A42     		rsbs	r2, r3, #0
 5835              	.LVL714:
 5836 068e DBB2     		uxtb	r3, r3
 5837              	.LVL715:
 5838 0690 D2B2     		uxtb	r2, r2
 5839 0692 58BF     		it	pl
 5840 0694 5342     		rsbpl	r3, r2, #0
 5841 0696 00F10806 		add	r6, r0, #8
 5842              	.LVL716:
 5843 069a DB43     		mvns	r3, r3
 5844 069c 204A     		ldr	r2, .L325+4
 5845 069e 1144     		add	r1, r1, r2
 5846 06a0 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 5847              		.loc 9 631 0
 5848 06a4 B6F5007F 		cmp	r6, #512
 5849 06a8 0EDC     		bgt	.L288
 5850              	.LVL717:
 5851              	.LBB713:
 5852              	.LBB714:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 5853              		.loc 11 121 0
 5854 06aa 1423     		movs	r3, #20
 5855 06ac B2B2     		uxth	r2, r6
 5856 06ae 1D49     		ldr	r1, .L325+8
 5857 06b0 1D48     		ldr	r0, .L325+12
 5858 06b2 FFF7FEFF 		bl	HAL_UART_Transmit
 5859              	.LVL718:
 122:ROSSerial/AT32hardware.h **** 		{
 5860              		.loc 11 122 0
 5861 06b6 0146     		mov	r1, r0
 5862 06b8 0028     		cmp	r0, #0
 5863 06ba A3D0     		beq	.L290
 124:ROSSerial/AT32hardware.h **** 		}
 5864              		.loc 11 124 0
 5865 06bc 194B     		ldr	r3, .L325+8
 5866 06be 3246     		mov	r2, r6
 5867 06c0 1A48     		ldr	r0, .L325+16
 5868              	.LVL719:
 5869 06c2 FFF7FEFF 		bl	printf
 5870              	.LVL720:
 5871 06c6 9DE7     		b	.L290
 5872              	.LVL721:
 5873              	.L288:
 5874              	.LBE714:
 5875              	.LBE713:
 5876              	.LBB715:
 5877              	.LBB716:
 5878              	.LBB717:
 5879              	.LBB718:
 5880              	.LBB719:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 5881              		.loc 3 13 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 147


 5882 06c8 194B     		ldr	r3, .L325+20
 5883 06ca 0493     		str	r3, [sp, #16]
 5884              	.LVL722:
 5885              	.LBE719:
 5886              	.LBE718:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 5887              		.loc 9 657 0
 5888 06cc 0323     		movs	r3, #3
 5889 06ce 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5890              		.loc 9 658 0
 5891 06d2 184E     		ldr	r6, .L325+24
 5892              	.LVL723:
 5893 06d4 0696     		str	r6, [sp, #24]
 5894              		.loc 9 659 0
 5895 06d6 04AA     		add	r2, sp, #16
 5896 06d8 0721     		movs	r1, #7
 5897 06da 1148     		ldr	r0, .L325+4
 5898              	.LVL724:
 5899 06dc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 5900              	.LVL725:
 5901              	.LBE717:
 5902              	.LBE716:
 5903              	.LBE715:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 5904              		.loc 9 644 0
 5905 06e0 3046     		mov	r0, r6
 5906 06e2 FFF7FEFF 		bl	printf
 5907              	.LVL726:
 5908 06e6 8DE7     		b	.L290
 5909              	.LVL727:
 5910              	.L294:
 5911              	.LBE710:
 5912              	.LBE709:
 5913              	.LBE720:
 5914              	.LBE721:
 5915              	.LBB722:
 279:ROSSerial/ros/node_handle.h ****         }
 5916              		.loc 9 279 0
 5917 06e8 6FF00103 		mvn	r3, #1
 5918              	.L244:
 5919              	.LVL728:
 5920              	.LBE722:
 5921              	.LBE634:
 5922              	.LBE633:
  93:./Src/ROS_main.cpp ****     if(nh.spinOnce1() != 0)
 5923              		.loc 8 93 0
 5924 06ec 5BB9     		cbnz	r3, .L319
  99:./Src/ROS_main.cpp ****     if ((now - publish_time) > 100) {
 5925              		.loc 8 99 0
 5926 06ee 124B     		ldr	r3, .L325+28
 5927 06f0 1B68     		ldr	r3, [r3]
 5928 06f2 EB1A     		subs	r3, r5, r3
 5929 06f4 642B     		cmp	r3, #100
 5930 06f6 0BD8     		bhi	.L320
 5931              	.L293:
 104:./Src/ROS_main.cpp ****     wheels_pwm_set();
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 148


 5932              		.loc 8 104 0
 5933 06f8 FFF7FEFF 		bl	wheels_pwm_set
 5934              	.LVL729:
 5935              	.L239:
 5936              		.loc 8 105 0
 5937 06fc 0BB0     		add	sp, sp, #44
 5938              	.LCFI37:
 5939              		.cfi_remember_state
 5940              		.cfi_def_cfa_offset 28
 5941              		@ sp needed
 5942 06fe BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5943              	.LVL730:
 5944              	.L296:
 5945              	.LCFI38:
 5946              		.cfi_restore_state
 5947              	.LBB724:
 5948              	.LBB723:
 398:ROSSerial/ros/node_handle.h ****   }
 5949              		.loc 9 398 0
 5950 0702 0023     		movs	r3, #0
 5951 0704 F2E7     		b	.L244
 5952              	.LVL731:
 5953              	.L319:
 5954              	.LBE723:
 5955              	.LBE724:
  95:./Src/ROS_main.cpp ****         printf("%lu:ERROR: spinOnce1 returned error probably SPIN_TIMEOUT\n",now);
 5956              		.loc 8 95 0
 5957 0706 2946     		mov	r1, r5
 5958 0708 0C48     		ldr	r0, .L325+32
 5959 070a FFF7FEFF 		bl	printf
 5960              	.LVL732:
  96:./Src/ROS_main.cpp ****         return;
 5961              		.loc 8 96 0
 5962 070e F5E7     		b	.L239
 5963              	.L320:
 101:./Src/ROS_main.cpp ****         publish_hovebot_state();
 5964              		.loc 8 101 0
 5965 0710 FFF7FEFF 		bl	publish_hovebot_state
 5966              	.LVL733:
 102:./Src/ROS_main.cpp ****         publish_time = now;
 5967              		.loc 8 102 0
 5968 0714 084B     		ldr	r3, .L325+28
 5969 0716 1D60     		str	r5, [r3]
 5970 0718 EEE7     		b	.L293
 5971              	.L326:
 5972 071a 00BF     		.align	2
 5973              	.L325:
 5974 071c 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5975 0720 00000000 		.word	.LANCHOR1
 5976 0724 18020000 		.word	.LANCHOR1+536
 5977 0728 00000000 		.word	huart2
 5978 072c 00000000 		.word	.LC19
 5979 0730 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5980 0734 20000000 		.word	.LC20
 5981 0738 00000000 		.word	.LANCHOR5
 5982 073c 00000000 		.word	.LC23
 5983              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 149


 5984              	.LFE496:
 5985              		.fnend
 5987              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv,"axG",%progbit
 5988              		.align	1
 5989              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 5990              		.syntax unified
 5991              		.thumb
 5992              		.thumb_func
 5993              		.fpu fpv4-sp-d16
 5995              	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:
 5996              		.fnstart
 5997              	.LFB530:
 238:ROSSerial/ros/node_handle.h ****     return spinOnce1();
 5998              		.loc 9 238 0
 5999              		.cfi_startproc
 6000              		@ args = 0, pretend = 0, frame = 40
 6001              		@ frame_needed = 0, uses_anonymous_args = 0
 6002              	.LVL734:
 6003 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6004              		.save {r4, r5, r6, r7, r8, r9, lr}
 6005              	.LCFI39:
 6006              		.cfi_def_cfa_offset 28
 6007              		.cfi_offset 4, -28
 6008              		.cfi_offset 5, -24
 6009              		.cfi_offset 6, -20
 6010              		.cfi_offset 7, -16
 6011              		.cfi_offset 8, -12
 6012              		.cfi_offset 9, -8
 6013              		.cfi_offset 14, -4
 6014              		.pad #44
 6015 0004 8BB0     		sub	sp, sp, #44
 6016              	.LCFI40:
 6017              		.cfi_def_cfa_offset 72
 6018 0006 0446     		mov	r4, r0
 6019              	.LVL735:
 6020              	.LBB810:
 6021              	.LBB811:
 6022              	.LBB812:
 6023              	.LBB813:
 6024              		.loc 11 151 0
 6025 0008 FFF7FEFF 		bl	HAL_GetTick
 6026              	.LVL736:
 6027 000c 0546     		mov	r5, r0
 6028              	.LVL737:
 6029              	.LBE813:
 6030              	.LBE812:
 250:ROSSerial/ros/node_handle.h ****     {
 6031              		.loc 9 250 0
 6032 000e D4F82435 		ldr	r3, [r4, #1316]
 6033 0012 C31A     		subs	r3, r0, r3
 6034 0014 42F6F822 		movw	r2, #11000
 6035 0018 9342     		cmp	r3, r2
 6036 001a 02D9     		bls	.L328
 254:ROSSerial/ros/node_handle.h ****     }
 6037              		.loc 9 254 0
 6038 001c 0023     		movs	r3, #0
 6039 001e 84F81C35 		strb	r3, [r4, #1308]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 150


 6040              	.L328:
 258:ROSSerial/ros/node_handle.h ****     {
 6041              		.loc 9 258 0
 6042 0022 D4F80835 		ldr	r3, [r4, #1288]
 6043 0026 002B     		cmp	r3, #0
 6044 0028 46D0     		beq	.L330
 260:ROSSerial/ros/node_handle.h ****       {
 6045              		.loc 9 260 0
 6046 002a D4F82835 		ldr	r3, [r4, #1320]
 6047 002e 9D42     		cmp	r5, r3
 6048 0030 42D9     		bls	.L330
 262:ROSSerial/ros/node_handle.h ****       }
 6049              		.loc 9 262 0
 6050 0032 0023     		movs	r3, #0
 6051 0034 C4F80835 		str	r3, [r4, #1288]
 6052 0038 3EE0     		b	.L330
 6053              	.LVL738:
 6054              	.L385:
 6055              	.LBB814:
 6056              	.LBB815:
 6057              	.LBB816:
  84:ROSSerial/AT32hardware.h **** 		}
 6058              		.loc 11 84 0
 6059 003a 591C     		adds	r1, r3, #1
 6060 003c BC4A     		ldr	r2, .L404
 6061 003e 1170     		strb	r1, [r2]
 6062 0040 BC4A     		ldr	r2, .L404+4
 6063 0042 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 6064              	.LVL739:
 6065              	.L334:
 6066              	.LBE816:
 6067              	.LBE815:
 283:ROSSerial/ros/node_handle.h ****         break;
 6068              		.loc 9 283 0
 6069 0044 0029     		cmp	r1, #0
 6070 0046 C0F29482 		blt	.L335
 285:ROSSerial/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 6071              		.loc 9 285 0
 6072 004a D4F81825 		ldr	r2, [r4, #1304]
 6073 004e 0A44     		add	r2, r2, r1
 6074 0050 C4F81825 		str	r2, [r4, #1304]
 286:ROSSerial/ros/node_handle.h ****       {
 6075              		.loc 9 286 0
 6076 0054 D4F80835 		ldr	r3, [r4, #1288]
 6077 0058 072B     		cmp	r3, #7
 6078 005a 1DD0     		beq	.L384
 293:ROSSerial/ros/node_handle.h ****       {
 6079              		.loc 9 293 0
 6080 005c 002B     		cmp	r3, #0
 6081 005e 4CD1     		bne	.L338
 295:ROSSerial/ros/node_handle.h ****         {
 6082              		.loc 9 295 0
 6083 0060 FF29     		cmp	r1, #255
 6084 0062 3DD1     		bne	.L339
 297:ROSSerial/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 6085              		.loc 9 297 0
 6086 0064 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 151


 6087 0066 C4F80835 		str	r3, [r4, #1288]
 298:ROSSerial/ros/node_handle.h ****         }
 6088              		.loc 9 298 0
 6089 006a 05F11403 		add	r3, r5, #20
 6090 006e C4F82835 		str	r3, [r4, #1320]
 6091 0072 21E0     		b	.L330
 6092              	.LVL740:
 6093              	.L386:
 6094              	.LBB819:
 6095              	.LBB817:
  88:ROSSerial/AT32hardware.h **** 			g_RxWritten = 0;
 6096              		.loc 11 88 0
 6097 0074 0023     		movs	r3, #0
 6098 0076 AE4A     		ldr	r2, .L404
 6099 0078 1370     		strb	r3, [r2]
  89:ROSSerial/AT32hardware.h **** 			__HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 6100              		.loc 11 89 0
 6101 007a AF4A     		ldr	r2, .L404+8
 6102 007c 1370     		strb	r3, [r2]
  90:ROSSerial/AT32hardware.h ****       		HAL_UART_Receive_IT(&huart2, &byte, 1);
 6103              		.loc 11 90 0
 6104 007e AF48     		ldr	r0, .L404+12
 6105 0080 0268     		ldr	r2, [r0]
 6106 0082 D368     		ldr	r3, [r2, #12]
 6107 0084 43F04003 		orr	r3, r3, #64
 6108 0088 D360     		str	r3, [r2, #12]
  91:ROSSerial/AT32hardware.h **** 		}
 6109              		.loc 11 91 0
 6110 008a 0122     		movs	r2, #1
 6111 008c AC49     		ldr	r1, .L404+16
 6112 008e FFF7FEFF 		bl	HAL_UART_Receive_IT
 6113              	.LVL741:
  80:ROSSerial/AT32hardware.h **** 		
 6114              		.loc 11 80 0
 6115 0092 4FF0FF31 		mov	r1, #-1
 6116 0096 D5E7     		b	.L334
 6117              	.LVL742:
 6118              	.L384:
 6119              	.LBE817:
 6120              	.LBE819:
 288:ROSSerial/ros/node_handle.h ****         bytes_--;
 6121              		.loc 9 288 0
 6122 0098 D4F81435 		ldr	r3, [r4, #1300]
 6123 009c 5A1C     		adds	r2, r3, #1
 6124 009e C4F81425 		str	r2, [r4, #1300]
 6125 00a2 2344     		add	r3, r3, r4
 6126 00a4 1976     		strb	r1, [r3, #24]
 289:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 6127              		.loc 9 289 0
 6128 00a6 D4F80C35 		ldr	r3, [r4, #1292]
 6129 00aa 013B     		subs	r3, r3, #1
 6130 00ac C4F80C35 		str	r3, [r4, #1292]
 290:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 6131              		.loc 9 290 0
 6132 00b0 13B9     		cbnz	r3, .L330
 291:ROSSerial/ros/node_handle.h ****       }
 6133              		.loc 9 291 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 152


 6134 00b2 0823     		movs	r3, #8
 6135 00b4 C4F80835 		str	r3, [r4, #1288]
 6136              	.L330:
 270:ROSSerial/ros/node_handle.h ****       {
 6137              		.loc 9 270 0
 6138 00b8 6369     		ldr	r3, [r4, #20]
 6139 00ba 33B1     		cbz	r3, .L331
 6140              	.LVL743:
 6141              	.LBB820:
 6142              	.LBB821:
 6143              		.loc 11 151 0
 6144 00bc FFF7FEFF 		bl	HAL_GetTick
 6145              	.LVL744:
 6146              	.LBE821:
 6147              	.LBE820:
 276:ROSSerial/ros/node_handle.h ****         {
 6148              		.loc 9 276 0
 6149 00c0 401B     		subs	r0, r0, r5
 6150 00c2 6369     		ldr	r3, [r4, #20]
 6151 00c4 9842     		cmp	r0, r3
 6152 00c6 00F2C982 		bhi	.L379
 6153              	.L331:
 6154              	.LVL745:
 6155              	.LBB822:
 6156              	.LBB818:
  82:ROSSerial/AT32hardware.h **** 		{
 6157              		.loc 11 82 0
 6158 00ca 994B     		ldr	r3, .L404
 6159 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 00ce 9A4A     		ldr	r2, .L404+8
 6161 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6162 00d2 9342     		cmp	r3, r2
 6163 00d4 B1D3     		bcc	.L385
  86:ROSSerial/AT32hardware.h **** 		{
 6164              		.loc 11 86 0
 6165 00d6 9342     		cmp	r3, r2
 6166 00d8 CCD0     		beq	.L386
  80:ROSSerial/AT32hardware.h **** 		
 6167              		.loc 11 80 0
 6168 00da 4FF0FF31 		mov	r1, #-1
 6169 00de B1E7     		b	.L334
 6170              	.LVL746:
 6171              	.L339:
 6172              	.LBE818:
 6173              	.LBE822:
 6174              	.LBB823:
 6175              	.LBB824:
 6176              		.loc 11 151 0
 6177 00e0 FFF7FEFF 		bl	HAL_GetTick
 6178              	.LVL747:
 6179              	.LBE824:
 6180              	.LBE823:
 300:ROSSerial/ros/node_handle.h ****         {
 6181              		.loc 9 300 0
 6182 00e4 401B     		subs	r0, r0, r5
 6183 00e6 41F28833 		movw	r3, #5000
 6184 00ea 9842     		cmp	r0, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 153


 6185 00ec E4D9     		bls	.L330
 303:ROSSerial/ros/node_handle.h ****           return SPIN_TIMEOUT;
 6186              		.loc 9 303 0
 6187 00ee 0023     		movs	r3, #0
 6188 00f0 84F81C35 		strb	r3, [r4, #1308]
 304:ROSSerial/ros/node_handle.h ****         }
 6189              		.loc 9 304 0
 6190 00f4 6FF00100 		mvn	r0, #1
 6191 00f8 B2E2     		b	.L327
 6192              	.L338:
 307:ROSSerial/ros/node_handle.h ****       {
 6193              		.loc 9 307 0
 6194 00fa 012B     		cmp	r3, #1
 6195 00fc 3DD0     		beq	.L387
 320:ROSSerial/ros/node_handle.h ****       {
 6196              		.loc 9 320 0
 6197 00fe 022B     		cmp	r3, #2
 6198 0100 00F0AD80 		beq	.L388
 327:ROSSerial/ros/node_handle.h ****       {
 6199              		.loc 9 327 0
 6200 0104 032B     		cmp	r3, #3
 6201 0106 00F0B580 		beq	.L389
 332:ROSSerial/ros/node_handle.h ****       {
 6202              		.loc 9 332 0
 6203 010a 042B     		cmp	r3, #4
 6204 010c 00F0BC80 		beq	.L390
 339:ROSSerial/ros/node_handle.h ****       {
 6205              		.loc 9 339 0
 6206 0110 052B     		cmp	r3, #5
 6207 0112 00F0C880 		beq	.L391
 345:ROSSerial/ros/node_handle.h ****       {
 6208              		.loc 9 345 0
 6209 0116 062B     		cmp	r3, #6
 6210 0118 00F0CD80 		beq	.L392
 352:ROSSerial/ros/node_handle.h ****       {
 6211              		.loc 9 352 0
 6212 011c 082B     		cmp	r3, #8
 6213 011e CBD1     		bne	.L330
 354:ROSSerial/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 6214              		.loc 9 354 0
 6215 0120 0023     		movs	r3, #0
 6216 0122 C4F80835 		str	r3, [r4, #1288]
 355:ROSSerial/ros/node_handle.h ****         {
 6217              		.loc 9 355 0
 6218 0126 9B1A     		subs	r3, r3, r2
 6219 0128 D2B2     		uxtb	r2, r2
 6220 012a DBB2     		uxtb	r3, r3
 6221 012c 58BF     		it	pl
 6222 012e 5A42     		rsbpl	r2, r3, #0
 6223 0130 FF2A     		cmp	r2, #255
 6224 0132 C1D1     		bne	.L330
 357:ROSSerial/ros/node_handle.h ****           {
 6225              		.loc 9 357 0
 6226 0134 D4F81065 		ldr	r6, [r4, #1296]
 6227 0138 002E     		cmp	r6, #0
 6228 013a 00F0CE80 		beq	.L393
 365:ROSSerial/ros/node_handle.h ****           {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 154


 6229              		.loc 9 365 0
 6230 013e 0A2E     		cmp	r6, #10
 6231 0140 00F03981 		beq	.L394
 369:ROSSerial/ros/node_handle.h ****           {
 6232              		.loc 9 369 0
 6233 0144 062E     		cmp	r6, #6
 6234 0146 00F07B81 		beq	.L395
 374:ROSSerial/ros/node_handle.h ****           {
 6235              		.loc 9 374 0
 6236 014a 0B2E     		cmp	r6, #11
 6237 014c 00F00D82 		beq	.L396
 380:ROSSerial/ros/node_handle.h ****               s_CallBack = (void (*)(char*))subscribers2[topic_ - 100].callback;
 6238              		.loc 9 380 0
 6239 0150 643E     		subs	r6, r6, #100
 6240 0152 06EB8603 		add	r3, r6, r6, lsl #2
 6241 0156 04EB8303 		add	r3, r4, r3, lsl #2
 6242 015a B3F8A434 		ldrh	r3, [r3, #1188]
 6243 015e 002B     		cmp	r3, #0
 6244 0160 AAD0     		beq	.L330
 381:ROSSerial/ros/node_handle.h ****               //printf("Calling callback with %id\n",subscribers2[topic_ - 100].topic_id);
 6245              		.loc 9 381 0
 6246 0162 06EB8606 		add	r6, r6, r6, lsl #2
 6247 0166 04EB8606 		add	r6, r4, r6, lsl #2
 6248 016a D6F8B434 		ldr	r3, [r6, #1204]
 6249 016e 754A     		ldr	r2, .L404+20
 6250 0170 1360     		str	r3, [r2]
 383:ROSSerial/ros/node_handle.h ****             }
 6251              		.loc 9 383 0
 6252 0172 04F11800 		add	r0, r4, #24
 6253 0176 9847     		blx	r3
 6254              	.LVL748:
 6255 0178 9EE7     		b	.L330
 6256              	.L387:
 309:ROSSerial/ros/node_handle.h ****         {
 6257              		.loc 9 309 0
 6258 017a FE29     		cmp	r1, #254
 6259 017c 3BD0     		beq	.L397
 315:ROSSerial/ros/node_handle.h ****           if (configured_ == false)
 6260              		.loc 9 315 0
 6261 017e 0023     		movs	r3, #0
 6262 0180 C4F80835 		str	r3, [r4, #1288]
 316:ROSSerial/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 6263              		.loc 9 316 0
 6264 0184 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6265 0188 002B     		cmp	r3, #0
 6266 018a 95D1     		bne	.L330
 6267              	.LVL749:
 6268              	.LBB825:
 6269              	.LBB826:
 414:ROSSerial/ros/node_handle.h ****     {
 6270              		.loc 9 414 0
 6271 018c D4F82425 		ldr	r2, [r4, #1316]
 6272 0190 A368     		ldr	r3, [r4, #8]
 6273 0192 9A42     		cmp	r2, r3
 6274 0194 90D3     		bcc	.L330
 6275              	.LVL750:
 6276              	.LBB827:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 155


 6277              	.LBB828:
  14:ROSSerial/std_msgs/Time.h ****   {
 6278              		.loc 1 14 0
 6279 0196 6C4B     		ldr	r3, .L404+24
 6280 0198 0193     		str	r3, [sp, #4]
 6281              	.LVL751:
 6282              	.LBB829:
 6283              	.LBB830:
 6284              	.LBB831:
 6285              		.loc 12 51 0
 6286 019a 0026     		movs	r6, #0
 6287 019c 0296     		str	r6, [sp, #8]
 6288 019e 0396     		str	r6, [sp, #12]
 6289              	.LVL752:
 6290              	.LBE831:
 6291              	.LBE830:
 6292              	.LBE829:
 6293              	.LBE828:
 6294              	.LBE827:
 6295              	.LBB832:
 6296              	.LBB833:
 6297              		.loc 11 151 0
 6298 01a0 FFF7FEFF 		bl	HAL_GetTick
 6299              	.LVL753:
 6300              	.LBE833:
 6301              	.LBE832:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 6302              		.loc 9 420 0
 6303 01a4 A060     		str	r0, [r4, #8]
 6304              	.LVL754:
 6305              	.LBB834:
 6306              	.LBB835:
 612:ROSSerial/ros/node_handle.h **** 
 6307              		.loc 9 612 0
 6308 01a6 019B     		ldr	r3, [sp, #4]
 6309 01a8 1B68     		ldr	r3, [r3]
 6310 01aa 04F21F21 		addw	r1, r4, #543
 6311 01ae 01A8     		add	r0, sp, #4
 6312              	.LVL755:
 6313 01b0 9847     		blx	r3
 6314              	.LVL756:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 6315              		.loc 9 615 0
 6316 01b2 FF23     		movs	r3, #255
 6317 01b4 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 6318              		.loc 9 616 0
 6319 01b8 FE23     		movs	r3, #254
 6320 01ba 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 6321              		.loc 9 617 0
 6322 01be C3B2     		uxtb	r3, r0
 6323 01c0 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 6324              		.loc 9 618 0
 6325 01c4 C0F30722 		ubfx	r2, r0, #8, #8
 6326 01c8 84F81B22 		strb	r2, [r4, #539]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 156


 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 6327              		.loc 9 619 0
 6328 01cc 1344     		add	r3, r3, r2
 6329 01ce DBB2     		uxtb	r3, r3
 6330 01d0 DB43     		mvns	r3, r3
 6331 01d2 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 6332              		.loc 9 620 0
 6333 01d6 0A23     		movs	r3, #10
 6334 01d8 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 6335              		.loc 9 621 0
 6336 01dc 84F81E62 		strb	r6, [r4, #542]
 6337              	.LVL757:
 6338              	.LBB836:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6339              		.loc 9 625 0
 6340 01e0 0522     		movs	r2, #5
 6341              	.LBE836:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 6342              		.loc 9 624 0
 6343 01e2 3346     		mov	r3, r6
 6344              	.LVL758:
 6345              	.L344:
 6346              	.LBB837:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6347              		.loc 9 625 0
 6348 01e4 C11D     		adds	r1, r0, #7
 6349 01e6 9142     		cmp	r1, r2
 6350 01e8 09DD     		ble	.L343
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 6351              		.loc 9 626 0
 6352 01ea A118     		adds	r1, r4, r2
 6353 01ec 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 6354 01f0 0B44     		add	r3, r3, r1
 6355              	.LVL759:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 6356              		.loc 9 625 0
 6357 01f2 0132     		adds	r2, r2, #1
 6358              	.LVL760:
 6359 01f4 F6E7     		b	.L344
 6360              	.LVL761:
 6361              	.L397:
 6362              	.LBE837:
 6363              	.LBE835:
 6364              	.LBE834:
 6365              	.LBE826:
 6366              	.LBE825:
 311:ROSSerial/ros/node_handle.h ****         }
 6367              		.loc 9 311 0
 6368 01f6 0133     		adds	r3, r3, #1
 6369 01f8 C4F80835 		str	r3, [r4, #1288]
 6370 01fc 5CE7     		b	.L330
 6371              	.LVL762:
 6372              	.L343:
 6373              	.LBB848:
 6374              	.LBB847:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 157


 6375              	.LBB846:
 6376              	.LBB845:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 6377              		.loc 9 628 0
 6378 01fe 5A42     		rsbs	r2, r3, #0
 6379              	.LVL763:
 6380 0200 DBB2     		uxtb	r3, r3
 6381              	.LVL764:
 6382 0202 D2B2     		uxtb	r2, r2
 6383 0204 58BF     		it	pl
 6384 0206 5342     		rsbpl	r3, r2, #0
 6385 0208 00F10807 		add	r7, r0, #8
 6386              	.LVL765:
 6387 020c DB43     		mvns	r3, r3
 6388 020e 2144     		add	r1, r1, r4
 6389 0210 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 6390              		.loc 9 631 0
 6391 0214 B7F5007F 		cmp	r7, #512
 6392 0218 11DC     		bgt	.L345
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 6393              		.loc 9 633 0
 6394 021a 04F50676 		add	r6, r4, #536
 6395              	.LVL766:
 6396              	.LBB838:
 6397              	.LBB839:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 6398              		.loc 11 121 0
 6399 021e 1423     		movs	r3, #20
 6400 0220 BAB2     		uxth	r2, r7
 6401 0222 3146     		mov	r1, r6
 6402 0224 4548     		ldr	r0, .L404+12
 6403 0226 FFF7FEFF 		bl	HAL_UART_Transmit
 6404              	.LVL767:
 122:ROSSerial/AT32hardware.h **** 		{
 6405              		.loc 11 122 0
 6406 022a 0146     		mov	r1, r0
 6407 022c 0028     		cmp	r0, #0
 6408 022e 3FF443AF 		beq	.L330
 124:ROSSerial/AT32hardware.h **** 		}
 6409              		.loc 11 124 0
 6410 0232 3346     		mov	r3, r6
 6411 0234 3A46     		mov	r2, r7
 6412 0236 4548     		ldr	r0, .L404+28
 6413              	.LVL768:
 6414 0238 FFF7FEFF 		bl	printf
 6415              	.LVL769:
 6416 023c 3CE7     		b	.L330
 6417              	.LVL770:
 6418              	.L345:
 6419              	.LBE839:
 6420              	.LBE838:
 6421              	.LBB840:
 6422              	.LBB841:
 6423              	.LBB842:
 6424              	.LBB843:
 6425              	.LBB844:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 158


  13:ROSSerial/rosserial_msgs/Log.h ****   {
 6426              		.loc 3 13 0
 6427 023e 444B     		ldr	r3, .L404+32
 6428 0240 0493     		str	r3, [sp, #16]
 6429              	.LVL771:
 6430              	.LBE844:
 6431              	.LBE843:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 6432              		.loc 9 657 0
 6433 0242 0323     		movs	r3, #3
 6434 0244 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 6435              		.loc 9 658 0
 6436 0248 424E     		ldr	r6, .L404+36
 6437 024a 0696     		str	r6, [sp, #24]
 6438              		.loc 9 659 0
 6439 024c 04AA     		add	r2, sp, #16
 6440 024e 0721     		movs	r1, #7
 6441 0250 2046     		mov	r0, r4
 6442 0252 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6443              	.LVL772:
 6444              	.LBE842:
 6445              	.LBE841:
 6446              	.LBE840:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 6447              		.loc 9 644 0
 6448 0256 3046     		mov	r0, r6
 6449 0258 FFF7FEFF 		bl	printf
 6450              	.LVL773:
 6451 025c 2CE7     		b	.L330
 6452              	.LVL774:
 6453              	.L388:
 6454              	.LBE845:
 6455              	.LBE846:
 6456              	.LBE847:
 6457              	.LBE848:
 322:ROSSerial/ros/node_handle.h ****         index_ = 0;
 6458              		.loc 9 322 0
 6459 025e C4F80C15 		str	r1, [r4, #1292]
 323:ROSSerial/ros/node_handle.h ****         mode_++;
 6460              		.loc 9 323 0
 6461 0262 0022     		movs	r2, #0
 6462 0264 C4F81425 		str	r2, [r4, #1300]
 324:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 6463              		.loc 9 324 0
 6464 0268 0133     		adds	r3, r3, #1
 6465 026a C4F80835 		str	r3, [r4, #1288]
 325:ROSSerial/ros/node_handle.h ****       }
 6466              		.loc 9 325 0
 6467 026e C4F81815 		str	r1, [r4, #1304]
 6468 0272 21E7     		b	.L330
 6469              	.L389:
 329:ROSSerial/ros/node_handle.h ****         mode_++;
 6470              		.loc 9 329 0
 6471 0274 D4F80C25 		ldr	r2, [r4, #1292]
 6472 0278 02EB0121 		add	r1, r2, r1, lsl #8
 6473 027c C4F80C15 		str	r1, [r4, #1292]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 159


 330:ROSSerial/ros/node_handle.h ****       }
 6474              		.loc 9 330 0
 6475 0280 0133     		adds	r3, r3, #1
 6476 0282 C4F80835 		str	r3, [r4, #1288]
 6477 0286 17E7     		b	.L330
 6478              	.L390:
 334:ROSSerial/ros/node_handle.h ****           mode_++;
 6479              		.loc 9 334 0
 6480 0288 5142     		rsbs	r1, r2, #0
 6481 028a D2B2     		uxtb	r2, r2
 6482 028c C9B2     		uxtb	r1, r1
 6483 028e 58BF     		it	pl
 6484 0290 4A42     		rsbpl	r2, r1, #0
 6485 0292 FF2A     		cmp	r2, #255
 6486 0294 03D0     		beq	.L398
 337:ROSSerial/ros/node_handle.h ****       }
 6487              		.loc 9 337 0
 6488 0296 0023     		movs	r3, #0
 6489 0298 C4F80835 		str	r3, [r4, #1288]
 6490 029c 0CE7     		b	.L330
 6491              	.L398:
 335:ROSSerial/ros/node_handle.h ****         else
 6492              		.loc 9 335 0
 6493 029e 0133     		adds	r3, r3, #1
 6494 02a0 C4F80835 		str	r3, [r4, #1288]
 6495 02a4 08E7     		b	.L330
 6496              	.L391:
 341:ROSSerial/ros/node_handle.h ****         mode_++;
 6497              		.loc 9 341 0
 6498 02a6 C4F81015 		str	r1, [r4, #1296]
 342:ROSSerial/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 6499              		.loc 9 342 0
 6500 02aa 0133     		adds	r3, r3, #1
 6501 02ac C4F80835 		str	r3, [r4, #1288]
 343:ROSSerial/ros/node_handle.h ****       }
 6502              		.loc 9 343 0
 6503 02b0 C4F81815 		str	r1, [r4, #1304]
 6504 02b4 00E7     		b	.L330
 6505              	.L392:
 347:ROSSerial/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 6506              		.loc 9 347 0
 6507 02b6 D4F81035 		ldr	r3, [r4, #1296]
 6508 02ba 03EB0123 		add	r3, r3, r1, lsl #8
 6509 02be C4F81035 		str	r3, [r4, #1296]
 348:ROSSerial/ros/node_handle.h ****         if (bytes_ == 0)
 6510              		.loc 9 348 0
 6511 02c2 0723     		movs	r3, #7
 6512 02c4 C4F80835 		str	r3, [r4, #1288]
 349:ROSSerial/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 6513              		.loc 9 349 0
 6514 02c8 D4F80C35 		ldr	r3, [r4, #1292]
 6515 02cc 002B     		cmp	r3, #0
 6516 02ce 7FF4F3AE 		bne	.L330
 350:ROSSerial/ros/node_handle.h ****       }
 6517              		.loc 9 350 0
 6518 02d2 0823     		movs	r3, #8
 6519 02d4 C4F80835 		str	r3, [r4, #1288]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 160


 6520 02d8 EEE6     		b	.L330
 6521              	.L393:
 359:ROSSerial/ros/node_handle.h ****             negotiateTopics();
 6522              		.loc 9 359 0
 6523 02da 2046     		mov	r0, r4
 6524 02dc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
 6525              	.LVL775:
 6526              	.LBB849:
 6527              	.LBB850:
 6528              	.LBB851:
 6529              	.LBB852:
  12:ROSSerial/rosserial_msgs/TopicInfo.h ****   {
 6530              		.loc 2 12 0
 6531 02e0 1D4B     		ldr	r3, .L404+40
 6532 02e2 0493     		str	r3, [sp, #16]
 6533              	.LVL776:
 6534              	.LBE852:
 6535              	.LBE851:
 568:ROSSerial/ros/node_handle.h ****     {
 6536              		.loc 9 568 0
 6537 02e4 3746     		mov	r7, r6
 6538 02e6 00E0     		b	.L356
 6539              	.LVL777:
 6540              	.L355:
 6541 02e8 0137     		adds	r7, r7, #1
 6542              	.LVL778:
 6543              	.L356:
 6544 02ea 042F     		cmp	r7, #4
 6545 02ec 37DC     		bgt	.L354
 570:ROSSerial/ros/node_handle.h ****       {
 6546              		.loc 9 570 0
 6547 02ee 07EB8703 		add	r3, r7, r7, lsl #2
 6548 02f2 04EB8303 		add	r3, r4, r3, lsl #2
 6549 02f6 B3F82C34 		ldrh	r3, [r3, #1068]
 6550 02fa 002B     		cmp	r3, #0
 6551 02fc F4D0     		beq	.L355
 572:ROSSerial/ros/node_handle.h ****         ti.topic_name = publishers2[i].topic_name;
 6552              		.loc 9 572 0
 6553 02fe ADF81430 		strh	r3, [sp, #20]	@ movhi
 573:ROSSerial/ros/node_handle.h ****         ti.message_type = publishers2[i].message_type;
 6554              		.loc 9 573 0
 6555 0302 07EB8703 		add	r3, r7, r7, lsl #2
 6556 0306 04EB8303 		add	r3, r4, r3, lsl #2
 6557 030a D3F83024 		ldr	r2, [r3, #1072]
 6558 030e 0692     		str	r2, [sp, #24]
 574:ROSSerial/ros/node_handle.h ****         ti.md5sum = publishers2[i].md5sum;
 6559              		.loc 9 574 0
 6560 0310 D3F83824 		ldr	r2, [r3, #1080]
 6561 0314 0792     		str	r2, [sp, #28]
 575:ROSSerial/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 6562              		.loc 9 575 0
 6563 0316 D3F83C34 		ldr	r3, [r3, #1084]
 6564 031a 0893     		str	r3, [sp, #32]
 576:ROSSerial/ros/node_handle.h ****         publish1(TopicInfo::ID_PUBLISHER, &ti);
 6565              		.loc 9 576 0
 6566 031c 4FF40073 		mov	r3, #512
 6567 0320 0993     		str	r3, [sp, #36]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 161


 577:ROSSerial/ros/node_handle.h ****       }
 6568              		.loc 9 577 0
 6569 0322 04AA     		add	r2, sp, #16
 6570 0324 0021     		movs	r1, #0
 6571 0326 2046     		mov	r0, r4
 6572 0328 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6573              	.LVL779:
 6574 032c DCE7     		b	.L355
 6575              	.L405:
 6576 032e 00BF     		.align	2
 6577              	.L404:
 6578 0330 00000000 		.word	g_RxRead
 6579 0334 00000000 		.word	g_RxBuf
 6580 0338 00000000 		.word	g_RxWritten
 6581 033c 00000000 		.word	huart2
 6582 0340 00000000 		.word	byte
 6583 0344 00000000 		.word	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 6584 0348 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6585 034c 00000000 		.word	.LC19
 6586 0350 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 6587 0354 20000000 		.word	.LC20
 6588 0358 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6589              	.LVL780:
 6590              	.L358:
 580:ROSSerial/ros/node_handle.h ****     {
 6591              		.loc 9 580 0
 6592 035c 0136     		adds	r6, r6, #1
 6593              	.LVL781:
 6594              	.L354:
 6595 035e 042E     		cmp	r6, #4
 6596 0360 1FDC     		bgt	.L357
 582:ROSSerial/ros/node_handle.h ****       {
 6597              		.loc 9 582 0
 6598 0362 06EB8603 		add	r3, r6, r6, lsl #2
 6599 0366 04EB8303 		add	r3, r4, r3, lsl #2
 6600 036a B3F8A434 		ldrh	r3, [r3, #1188]
 6601 036e 002B     		cmp	r3, #0
 6602 0370 F4D0     		beq	.L358
 584:ROSSerial/ros/node_handle.h ****         ti.topic_name = subscribers2[i].topic_name;
 6603              		.loc 9 584 0
 6604 0372 ADF81430 		strh	r3, [sp, #20]	@ movhi
 585:ROSSerial/ros/node_handle.h ****         ti.message_type = subscribers2[i].message_type;
 6605              		.loc 9 585 0
 6606 0376 06EB8603 		add	r3, r6, r6, lsl #2
 6607 037a 04EB8303 		add	r3, r4, r3, lsl #2
 6608 037e D3F8A824 		ldr	r2, [r3, #1192]
 6609 0382 0692     		str	r2, [sp, #24]
 586:ROSSerial/ros/node_handle.h ****         ti.md5sum = subscribers2[i].md5sum;
 6610              		.loc 9 586 0
 6611 0384 D3F8AC24 		ldr	r2, [r3, #1196]
 6612 0388 0792     		str	r2, [sp, #28]
 587:ROSSerial/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 6613              		.loc 9 587 0
 6614 038a D3F8B034 		ldr	r3, [r3, #1200]
 6615 038e 0893     		str	r3, [sp, #32]
 588:ROSSerial/ros/node_handle.h ****         publish1(rosserial_msgs::TopicInfo::ID_SUBSCRIBER, &ti);
 6616              		.loc 9 588 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 162


 6617 0390 4FF40073 		mov	r3, #512
 6618 0394 0993     		str	r3, [sp, #36]
 589:ROSSerial/ros/node_handle.h ****       }
 6619              		.loc 9 589 0
 6620 0396 04AA     		add	r2, sp, #16
 6621 0398 0121     		movs	r1, #1
 6622 039a 2046     		mov	r0, r4
 6623 039c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 6624              	.LVL782:
 6625 03a0 DCE7     		b	.L358
 6626              	.L357:
 592:ROSSerial/ros/node_handle.h ****   }
 6627              		.loc 9 592 0
 6628 03a2 0123     		movs	r3, #1
 6629 03a4 84F81C35 		strb	r3, [r4, #1308]
 6630              	.LVL783:
 6631              	.LBE850:
 6632              	.LBE849:
 361:ROSSerial/ros/node_handle.h ****             last_sync_receive_time = c_time;
 6633              		.loc 9 361 0
 6634 03a8 C4F82055 		str	r5, [r4, #1312]
 362:ROSSerial/ros/node_handle.h ****             return SPIN_ERR;
 6635              		.loc 9 362 0
 6636 03ac C4F82455 		str	r5, [r4, #1316]
 363:ROSSerial/ros/node_handle.h ****           }
 6637              		.loc 9 363 0
 6638 03b0 4FF0FF30 		mov	r0, #-1
 6639 03b4 54E1     		b	.L327
 6640              	.L394:
 367:ROSSerial/ros/node_handle.h ****           }
 6641              		.loc 9 367 0
 6642 03b6 04F11806 		add	r6, r4, #24
 6643              	.LVL784:
 6644              	.LBB853:
 6645              	.LBB854:
 6646              	.LBB855:
 6647              	.LBB856:
 6648              		.loc 11 151 0
 6649 03ba FFF7FEFF 		bl	HAL_GetTick
 6650              	.LVL785:
 6651              	.LBE856:
 6652              	.LBE855:
 429:ROSSerial/ros/node_handle.h **** 
 6653              		.loc 9 429 0
 6654 03be A368     		ldr	r3, [r4, #8]
 6655 03c0 C01A     		subs	r0, r0, r3
 6656              	.LVL786:
 6657              	.LBB857:
 6658              	.LBB858:
  38:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6659              		.loc 1 38 0
 6660 03c2 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
  39:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6661              		.loc 1 39 0
 6662 03c4 3346     		mov	r3, r6
 6663 03c6 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 6664 03c8 42EA0122 		orr	r2, r2, r1, lsl #8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 163


  40:ROSSerial/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6665              		.loc 1 40 0
 6666 03cc B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 6667 03ce 42EA0142 		orr	r2, r2, r1, lsl #16
  41:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
 6668              		.loc 1 41 0
 6669 03d2 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 6670 03d4 42EA0161 		orr	r1, r2, r1, lsl #24
 6671              	.LVL787:
  43:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6672              		.loc 1 43 0
 6673 03d8 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
  44:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6674              		.loc 1 44 0
 6675 03da 7679     		ldrb	r6, [r6, #5]	@ zero_extendqisi2
 6676 03dc 42EA0622 		orr	r2, r2, r6, lsl #8
  45:ROSSerial/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6677              		.loc 1 45 0
 6678 03e0 9E79     		ldrb	r6, [r3, #6]	@ zero_extendqisi2
 6679 03e2 42EA0642 		orr	r2, r2, r6, lsl #16
  46:ROSSerial/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
 6680              		.loc 1 46 0
 6681 03e6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 6682 03e8 42EA0362 		orr	r2, r2, r3, lsl #24
 6683              	.LVL788:
 6684              	.LBE858:
 6685              	.LBE857:
 432:ROSSerial/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 6686              		.loc 9 432 0
 6687 03ec 9F4E     		ldr	r6, .L406
 6688 03ee A6FB0073 		umull	r7, r3, r6, r0
 6689 03f2 9B09     		lsrs	r3, r3, #6
 6690 03f4 1944     		add	r1, r1, r3
 6691 03f6 0591     		str	r1, [sp, #20]
 433:ROSSerial/ros/node_handle.h **** 
 6692              		.loc 9 433 0
 6693 03f8 4FF47A78 		mov	r8, #1000
 6694 03fc 08FB1303 		mls	r3, r8, r3, r0
 6695 0400 9B4F     		ldr	r7, .L406+4
 6696 0402 07FB0323 		mla	r3, r7, r3, r2
 6697 0406 0693     		str	r3, [sp, #24]
 6698              	.LVL789:
 6699              	.LBB859:
 6700              	.LBB860:
 6701              	.LBB861:
 6702              	.LBB862:
 6703              		.loc 11 151 0
 6704 0408 FFF7FEFF 		bl	HAL_GetTick
 6705              	.LVL790:
 6706              	.LBE862:
 6707              	.LBE861:
 454:ROSSerial/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 6708              		.loc 9 454 0
 6709 040c A6FB0023 		umull	r2, r3, r6, r0
 6710 0410 9B09     		lsrs	r3, r3, #6
 6711 0412 059A     		ldr	r2, [sp, #20]
 6712 0414 D21A     		subs	r2, r2, r3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 164


 6713 0416 013A     		subs	r2, r2, #1
 6714 0418 E260     		str	r2, [r4, #12]
 455:ROSSerial/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 6715              		.loc 9 455 0
 6716 041a 08FB1303 		mls	r3, r8, r3, r0
 6717 041e 069A     		ldr	r2, [sp, #24]
 6718 0420 07FB1323 		mls	r3, r7, r3, r2
 6719 0424 934A     		ldr	r2, .L406+8
 6720 0426 1A44     		add	r2, r2, r3
 6721 0428 2146     		mov	r1, r4
 6722 042a 41F8102F 		str	r2, [r1, #16]!
 456:ROSSerial/ros/node_handle.h ****   }
 6723              		.loc 9 456 0
 6724 042e 04F10C00 		add	r0, r4, #12
 6725              	.LVL791:
 6726 0432 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 6727              	.LVL792:
 6728              	.LBE860:
 6729              	.LBE859:
 6730              	.LBB863:
 6731              	.LBB864:
 6732              		.loc 11 151 0
 6733 0436 FFF7FEFF 		bl	HAL_GetTick
 6734              	.LVL793:
 6735              	.LBE864:
 6736              	.LBE863:
 438:ROSSerial/ros/node_handle.h ****   }
 6737              		.loc 9 438 0
 6738 043a C4F82405 		str	r0, [r4, #1316]
 6739 043e 3BE6     		b	.L330
 6740              	.LVL794:
 6741              	.L395:
 6742              	.LBE854:
 6743              	.LBE853:
 371:ROSSerial/ros/node_handle.h ****             param_recieved = true;
 6744              		.loc 9 371 0
 6745 0440 04F5A668 		add	r8, r4, #1328
 6746 0444 04F11807 		add	r7, r4, #24
 6747              	.LVL795:
 6748              	.LBB865:
 6749              	.LBB866:
 116:ROSSerial/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 6750              		.loc 4 116 0
 6751 0448 267E     		ldrb	r6, [r4, #24]	@ zero_extendqisi2
 6752              	.LVL796:
 117:ROSSerial/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 6753              		.loc 4 117 0
 6754 044a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6755 044e 9E42     		cmp	r6, r3
 6756 0450 1ED8     		bhi	.L399
 6757              	.L361:
 6758              	.LVL797:
 120:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 6759              		.loc 4 120 0
 6760 0452 88F80460 		strb	r6, [r8, #4]
 6761              	.LVL798:
 6762              	.LBB867:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 165


 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6763              		.loc 4 121 0
 6764 0456 0022     		movs	r2, #0
 6765              	.LBE867:
 119:ROSSerial/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 6766              		.loc 4 119 0
 6767 0458 0426     		movs	r6, #4
 6768              	.LVL799:
 6769              	.L363:
 6770              	.LBB869:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6771              		.loc 4 121 0
 6772 045a 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
 6773 045e 9342     		cmp	r3, r2
 6774 0460 1ED9     		bls	.L362
 6775              	.LBB868:
 127:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6776              		.loc 4 127 0
 6777 0462 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 128:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6778              		.loc 4 128 0
 6779 0464 711C     		adds	r1, r6, #1
 6780 0466 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6781 0468 43EA0123 		orr	r3, r3, r1, lsl #8
 129:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6782              		.loc 4 129 0
 6783 046c B11C     		adds	r1, r6, #2
 6784 046e 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6785 0470 43EA0143 		orr	r3, r3, r1, lsl #16
 130:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 6786              		.loc 4 130 0
 6787 0474 F11C     		adds	r1, r6, #3
 6788 0476 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6789 0478 43EA0163 		orr	r3, r3, r1, lsl #24
 131:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 6790              		.loc 4 131 0
 6791 047c C8F80830 		str	r3, [r8, #8]
 132:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 6792              		.loc 4 132 0
 6793 0480 0436     		adds	r6, r6, #4
 6794              	.LVL800:
 133:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6795              		.loc 4 133 0
 6796 0482 D8F80C10 		ldr	r1, [r8, #12]
 6797 0486 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6798              	.LBE868:
 121:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6799              		.loc 4 121 0
 6800 048a 0132     		adds	r2, r2, #1
 6801              	.LVL801:
 6802 048c D2B2     		uxtb	r2, r2
 6803              	.LVL802:
 6804 048e E4E7     		b	.L363
 6805              	.LVL803:
 6806              	.L399:
 6807              	.LBE869:
 118:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 166


 6808              		.loc 4 118 0
 6809 0490 B100     		lsls	r1, r6, #2
 6810 0492 D8F80C00 		ldr	r0, [r8, #12]
 6811 0496 FFF7FEFF 		bl	realloc
 6812              	.LVL804:
 6813 049a C8F80C00 		str	r0, [r8, #12]
 6814 049e D8E7     		b	.L361
 6815              	.LVL805:
 6816              	.L362:
 135:ROSSerial/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 6817              		.loc 4 135 0
 6818 04a0 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6819              	.LVL806:
 136:ROSSerial/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 6820              		.loc 4 136 0
 6821 04a4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6822 04a8 9945     		cmp	r9, r3
 6823 04aa 1ED8     		bhi	.L400
 6824              	.LVL807:
 6825              	.L364:
 138:ROSSerial/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 6826              		.loc 4 138 0
 6827 04ac 0436     		adds	r6, r6, #4
 6828              	.LVL808:
 139:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 6829              		.loc 4 139 0
 6830 04ae 88F81090 		strb	r9, [r8, #16]
 6831              	.LVL809:
 6832              	.LBB870:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6833              		.loc 4 140 0
 6834 04b2 0022     		movs	r2, #0
 6835              	.LVL810:
 6836              	.L366:
 6837 04b4 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 6838 04b8 9342     		cmp	r3, r2
 6839 04ba 1FD9     		bls	.L365
 6840              	.LBB871:
 146:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 6841              		.loc 4 146 0
 6842 04bc BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 147:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 6843              		.loc 4 147 0
 6844 04be 711C     		adds	r1, r6, #1
 6845 04c0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6846 04c2 43EA0123 		orr	r3, r3, r1, lsl #8
 148:ROSSerial/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 6847              		.loc 4 148 0
 6848 04c6 B11C     		adds	r1, r6, #2
 6849 04c8 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6850 04ca 43EA0143 		orr	r3, r3, r1, lsl #16
 149:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 6851              		.loc 4 149 0
 6852 04ce F11C     		adds	r1, r6, #3
 6853 04d0 795C     		ldrb	r1, [r7, r1]	@ zero_extendqisi2
 6854 04d2 43EA0163 		orr	r3, r3, r1, lsl #24
 150:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 167


 6855              		.loc 4 150 0
 6856 04d6 C8F81430 		str	r3, [r8, #20]	@ float
 151:ROSSerial/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 6857              		.loc 4 151 0
 6858 04da 0436     		adds	r6, r6, #4
 6859              	.LVL811:
 152:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6860              		.loc 4 152 0
 6861 04dc D8F81810 		ldr	r1, [r8, #24]
 6862 04e0 41F82230 		str	r3, [r1, r2, lsl #2]	@ unaligned
 6863              	.LBE871:
 140:ROSSerial/rosserial_msgs/RequestParam.h ****       union {
 6864              		.loc 4 140 0
 6865 04e4 0132     		adds	r2, r2, #1
 6866              	.LVL812:
 6867 04e6 D2B2     		uxtb	r2, r2
 6868              	.LVL813:
 6869 04e8 E4E7     		b	.L366
 6870              	.LVL814:
 6871              	.L400:
 6872              	.LBE870:
 137:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6873              		.loc 4 137 0
 6874 04ea 4FEA8901 		lsl	r1, r9, #2
 6875 04ee D8F81800 		ldr	r0, [r8, #24]
 6876 04f2 FFF7FEFF 		bl	realloc
 6877              	.LVL815:
 6878 04f6 C8F81800 		str	r0, [r8, #24]
 6879 04fa D7E7     		b	.L364
 6880              	.LVL816:
 6881              	.L365:
 154:ROSSerial/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 6882              		.loc 4 154 0
 6883 04fc 17F80690 		ldrb	r9, [r7, r6]	@ zero_extendqisi2
 6884              	.LVL817:
 155:ROSSerial/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 6885              		.loc 4 155 0
 6886 0500 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6887 0504 9945     		cmp	r9, r3
 6888 0506 05D8     		bhi	.L401
 6889              	.LVL818:
 6890              	.L367:
 157:ROSSerial/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 6891              		.loc 4 157 0
 6892 0508 321D     		adds	r2, r6, #4
 6893              	.LVL819:
 158:ROSSerial/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 6894              		.loc 4 158 0
 6895 050a 88F81C90 		strb	r9, [r8, #28]
 6896              	.LVL820:
 6897              	.LBB872:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6898              		.loc 4 159 0
 6899 050e 4FF0000C 		mov	ip, #0
 6900 0512 17E0     		b	.L371
 6901              	.LVL821:
 6902              	.L401:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 168


 6903              	.LBE872:
 156:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 3;
 6904              		.loc 4 156 0
 6905 0514 4FEA8901 		lsl	r1, r9, #2
 6906 0518 D8F82400 		ldr	r0, [r8, #36]
 6907 051c FFF7FEFF 		bl	realloc
 6908              	.LVL822:
 6909 0520 C8F82400 		str	r0, [r8, #36]
 6910 0524 F0E7     		b	.L367
 6911              	.LVL823:
 6912              	.L369:
 6913              	.LBB876:
 6914              	.LBB873:
 166:ROSSerial/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 6915              		.loc 4 166 0
 6916 0526 531E     		subs	r3, r2, #1
 6917              	.LVL824:
 6918 0528 0021     		movs	r1, #0
 6919 052a F954     		strb	r1, [r7, r3]
 167:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 6920              		.loc 4 167 0
 6921 052c 731E     		subs	r3, r6, #1
 6922 052e 3B44     		add	r3, r3, r7
 6923 0530 C8F82030 		str	r3, [r8, #32]
 6924              	.LVL825:
 169:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6925              		.loc 4 169 0
 6926 0534 D8F82410 		ldr	r1, [r8, #36]
 6927 0538 41F82C30 		str	r3, [r1, ip, lsl #2]	@ unaligned
 6928              	.LVL826:
 6929              	.LBE873:
 159:ROSSerial/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 6930              		.loc 4 159 0
 6931 053c 0CF1010C 		add	ip, ip, #1
 6932              	.LVL827:
 6933 0540 5FFA8CFC 		uxtb	ip, ip
 6934              	.LVL828:
 6935              	.L371:
 6936 0544 98F81C30 		ldrb	r3, [r8, #28]	@ zero_extendqisi2
 6937 0548 6345     		cmp	r3, ip
 6938 054a 0AD9     		bls	.L368
 6939              	.LBB875:
 161:ROSSerial/rosserial_msgs/RequestParam.h ****       offset += 4;
 6940              		.loc 4 161 0
 6941 054c B858     		ldr	r0, [r7, r2]	@ unaligned
 6942              	.LVL829:
 162:ROSSerial/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 6943              		.loc 4 162 0
 6944 054e 161D     		adds	r6, r2, #4
 6945              	.LVL830:
 6946              	.LBB874:
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6947              		.loc 4 163 0
 6948 0550 3346     		mov	r3, r6
 6949              	.LVL831:
 6950              	.L370:
 6951 0552 8219     		adds	r2, r0, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 169


 6952 0554 9A42     		cmp	r2, r3
 6953 0556 E6D9     		bls	.L369
 164:ROSSerial/rosserial_msgs/RequestParam.h ****       }
 6954              		.loc 4 164 0
 6955 0558 5A1E     		subs	r2, r3, #1
 6956 055a F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 6957 055c B954     		strb	r1, [r7, r2]
 163:ROSSerial/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 6958              		.loc 4 163 0
 6959 055e 0133     		adds	r3, r3, #1
 6960              	.LVL832:
 6961 0560 F7E7     		b	.L370
 6962              	.LVL833:
 6963              	.L368:
 6964              	.LBE874:
 6965              	.LBE875:
 6966              	.LBE876:
 6967              	.LBE866:
 6968              	.LBE865:
 372:ROSSerial/ros/node_handle.h ****           }
 6969              		.loc 9 372 0
 6970 0562 0123     		movs	r3, #1
 6971 0564 84F82C35 		strb	r3, [r4, #1324]
 6972 0568 A6E5     		b	.L330
 6973              	.L396:
 376:ROSSerial/ros/node_handle.h ****           }
 6974              		.loc 9 376 0
 6975 056a 0023     		movs	r3, #0
 6976 056c 84F81C35 		strb	r3, [r4, #1308]
 6977 0570 A2E5     		b	.L330
 6978              	.L335:
 6979              	.LBE814:
 391:ROSSerial/ros/node_handle.h ****     {
 6980              		.loc 9 391 0
 6981 0572 94F81C35 		ldrb	r3, [r4, #1308]	@ zero_extendqisi2
 6982 0576 002B     		cmp	r3, #0
 6983 0578 75D0     		beq	.L381
 6984 057a D4F82035 		ldr	r3, [r4, #1312]
 6985 057e EB1A     		subs	r3, r5, r3
 6986 0580 40F6C412 		movw	r2, #2500
 6987 0584 9342     		cmp	r3, r2
 6988 0586 01D8     		bhi	.L402
 398:ROSSerial/ros/node_handle.h ****   }
 6989              		.loc 9 398 0
 6990 0588 0020     		movs	r0, #0
 6991              	.LVL834:
 6992              	.LBE811:
 6993              	.LBE810:
 239:ROSSerial/ros/node_handle.h ****   }
 6994              		.loc 9 239 0
 6995 058a 69E0     		b	.L327
 6996              	.LVL835:
 6997              	.L402:
 6998              	.LBB902:
 6999              	.LBB900:
 7000              	.LBB877:
 7001              	.LBB878:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 170


 414:ROSSerial/ros/node_handle.h ****     {
 7002              		.loc 9 414 0
 7003 058c D4F82425 		ldr	r2, [r4, #1316]
 7004 0590 A368     		ldr	r3, [r4, #8]
 7005 0592 9A42     		cmp	r2, r3
 7006 0594 03D2     		bcs	.L403
 7007              	.L378:
 7008              	.LVL836:
 7009              	.LBE878:
 7010              	.LBE877:
 395:ROSSerial/ros/node_handle.h ****     }
 7011              		.loc 9 395 0
 7012 0596 C4F82055 		str	r5, [r4, #1312]
 398:ROSSerial/ros/node_handle.h ****   }
 7013              		.loc 9 398 0
 7014 059a 0020     		movs	r0, #0
 7015 059c 60E0     		b	.L327
 7016              	.LVL837:
 7017              	.L403:
 7018              	.LBB898:
 7019              	.LBB897:
 7020              	.LBB879:
 7021              	.LBB880:
  14:ROSSerial/std_msgs/Time.h ****   {
 7022              		.loc 1 14 0
 7023 059e 364B     		ldr	r3, .L406+12
 7024 05a0 0193     		str	r3, [sp, #4]
 7025              	.LVL838:
 7026              	.LBB881:
 7027              	.LBB882:
 7028              	.LBB883:
 7029              		.loc 12 51 0
 7030 05a2 0026     		movs	r6, #0
 7031 05a4 0296     		str	r6, [sp, #8]
 7032 05a6 0396     		str	r6, [sp, #12]
 7033              	.LVL839:
 7034              	.LBE883:
 7035              	.LBE882:
 7036              	.LBE881:
 7037              	.LBE880:
 7038              	.LBE879:
 7039              	.LBB884:
 7040              	.LBB885:
 7041              		.loc 11 151 0
 7042 05a8 FFF7FEFF 		bl	HAL_GetTick
 7043              	.LVL840:
 7044              	.LBE885:
 7045              	.LBE884:
 420:ROSSerial/ros/node_handle.h ****    // printf("requestSyncTime  rt_time=%lu\n",rt_time);
 7046              		.loc 9 420 0
 7047 05ac A060     		str	r0, [r4, #8]
 7048              	.LVL841:
 7049              	.LBB886:
 7050              	.LBB887:
 612:ROSSerial/ros/node_handle.h **** 
 7051              		.loc 9 612 0
 7052 05ae 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 171


 7053 05b0 1B68     		ldr	r3, [r3]
 7054 05b2 04F21F21 		addw	r1, r4, #543
 7055 05b6 01A8     		add	r0, sp, #4
 7056              	.LVL842:
 7057 05b8 9847     		blx	r3
 7058              	.LVL843:
 615:ROSSerial/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 7059              		.loc 9 615 0
 7060 05ba FF23     		movs	r3, #255
 7061 05bc 84F81832 		strb	r3, [r4, #536]
 616:ROSSerial/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 7062              		.loc 9 616 0
 7063 05c0 FE23     		movs	r3, #254
 7064 05c2 84F81932 		strb	r3, [r4, #537]
 617:ROSSerial/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 7065              		.loc 9 617 0
 7066 05c6 C3B2     		uxtb	r3, r0
 7067 05c8 84F81A32 		strb	r3, [r4, #538]
 618:ROSSerial/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 7068              		.loc 9 618 0
 7069 05cc C0F30722 		ubfx	r2, r0, #8, #8
 7070 05d0 84F81B22 		strb	r2, [r4, #539]
 619:ROSSerial/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 7071              		.loc 9 619 0
 7072 05d4 1344     		add	r3, r3, r2
 7073 05d6 DBB2     		uxtb	r3, r3
 7074 05d8 DB43     		mvns	r3, r3
 7075 05da 84F81C32 		strb	r3, [r4, #540]
 620:ROSSerial/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 7076              		.loc 9 620 0
 7077 05de 0A23     		movs	r3, #10
 7078 05e0 84F81D32 		strb	r3, [r4, #541]
 621:ROSSerial/ros/node_handle.h **** 
 7079              		.loc 9 621 0
 7080 05e4 84F81E62 		strb	r6, [r4, #542]
 7081              	.LVL844:
 7082              	.LBB888:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7083              		.loc 9 625 0
 7084 05e8 0522     		movs	r2, #5
 7085              	.LBE888:
 624:ROSSerial/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 7086              		.loc 9 624 0
 7087 05ea 3346     		mov	r3, r6
 7088              	.LVL845:
 7089              	.L375:
 7090              	.LBB889:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7091              		.loc 9 625 0
 7092 05ec C11D     		adds	r1, r0, #7
 7093 05ee 9142     		cmp	r1, r2
 7094 05f0 05DD     		ble	.L374
 626:ROSSerial/ros/node_handle.h ****     l += 7;
 7095              		.loc 9 626 0
 7096 05f2 A118     		adds	r1, r4, r2
 7097 05f4 91F81812 		ldrb	r1, [r1, #536]	@ zero_extendqisi2
 7098 05f8 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 172


 7099              	.LVL846:
 625:ROSSerial/ros/node_handle.h ****       chk += message_out[i];
 7100              		.loc 9 625 0
 7101 05fa 0132     		adds	r2, r2, #1
 7102              	.LVL847:
 7103 05fc F6E7     		b	.L375
 7104              	.L374:
 7105              	.LVL848:
 7106              	.LBE889:
 628:ROSSerial/ros/node_handle.h ****     //if(id == TopicInfo::ID_TIME)
 7107              		.loc 9 628 0
 7108 05fe 5A42     		rsbs	r2, r3, #0
 7109              	.LVL849:
 7110 0600 DBB2     		uxtb	r3, r3
 7111              	.LVL850:
 7112 0602 D2B2     		uxtb	r2, r2
 7113 0604 58BF     		it	pl
 7114 0606 5342     		rsbpl	r3, r2, #0
 7115 0608 00F10807 		add	r7, r0, #8
 7116              	.LVL851:
 7117 060c DB43     		mvns	r3, r3
 7118 060e 2144     		add	r1, r1, r4
 7119 0610 81F81832 		strb	r3, [r1, #536]
 631:ROSSerial/ros/node_handle.h ****     {
 7120              		.loc 9 631 0
 7121 0614 B7F5007F 		cmp	r7, #512
 7122 0618 10DC     		bgt	.L376
 633:ROSSerial/ros/node_handle.h ****       // if(id == TopicInfo::ID_TIME)
 7123              		.loc 9 633 0
 7124 061a 04F50676 		add	r6, r4, #536
 7125              	.LVL852:
 7126              	.LBB890:
 7127              	.LBB891:
 121:ROSSerial/AT32hardware.h **** 		if(ret != HAL_OK)
 7128              		.loc 11 121 0
 7129 061e 1423     		movs	r3, #20
 7130 0620 BAB2     		uxth	r2, r7
 7131 0622 3146     		mov	r1, r6
 7132 0624 1548     		ldr	r0, .L406+16
 7133 0626 FFF7FEFF 		bl	HAL_UART_Transmit
 7134              	.LVL853:
 122:ROSSerial/AT32hardware.h **** 		{
 7135              		.loc 11 122 0
 7136 062a 0146     		mov	r1, r0
 7137 062c 0028     		cmp	r0, #0
 7138 062e B2D0     		beq	.L378
 124:ROSSerial/AT32hardware.h **** 		}
 7139              		.loc 11 124 0
 7140 0630 3346     		mov	r3, r6
 7141 0632 3A46     		mov	r2, r7
 7142 0634 1248     		ldr	r0, .L406+20
 7143              	.LVL854:
 7144 0636 FFF7FEFF 		bl	printf
 7145              	.LVL855:
 7146 063a ACE7     		b	.L378
 7147              	.LVL856:
 7148              	.L376:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 173


 7149              	.LBE891:
 7150              	.LBE890:
 7151              	.LBB892:
 7152              	.LBB893:
 7153              	.LBB894:
 7154              	.LBB895:
 7155              	.LBB896:
  13:ROSSerial/rosserial_msgs/Log.h ****   {
 7156              		.loc 3 13 0
 7157 063c 114B     		ldr	r3, .L406+24
 7158 063e 0493     		str	r3, [sp, #16]
 7159              	.LVL857:
 7160              	.LBE896:
 7161              	.LBE895:
 657:ROSSerial/ros/node_handle.h ****     l.msg = (char*)msg;
 7162              		.loc 9 657 0
 7163 0640 0323     		movs	r3, #3
 7164 0642 8DF81430 		strb	r3, [sp, #20]
 658:ROSSerial/ros/node_handle.h ****     publish1(rosserial_msgs::TopicInfo::ID_LOG, &l);
 7165              		.loc 9 658 0
 7166 0646 104E     		ldr	r6, .L406+28
 7167 0648 0696     		str	r6, [sp, #24]
 7168              		.loc 9 659 0
 7169 064a 04AA     		add	r2, sp, #16
 7170 064c 0721     		movs	r1, #7
 7171 064e 2046     		mov	r0, r4
 7172 0650 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
 7173              	.LVL858:
 7174              	.LBE894:
 7175              	.LBE893:
 7176              	.LBE892:
 644:ROSSerial/ros/node_handle.h ****       return -1;
 7177              		.loc 9 644 0
 7178 0654 3046     		mov	r0, r6
 7179 0656 FFF7FEFF 		bl	printf
 7180              	.LVL859:
 7181 065a 9CE7     		b	.L378
 7182              	.LVL860:
 7183              	.L379:
 7184              	.LBE887:
 7185              	.LBE886:
 7186              	.LBE897:
 7187              	.LBE898:
 7188              	.LBB899:
 279:ROSSerial/ros/node_handle.h ****         }
 7189              		.loc 9 279 0
 7190 065c 6FF00100 		mvn	r0, #1
 7191              	.LVL861:
 7192              	.L327:
 7193              	.LBE899:
 7194              	.LBE900:
 7195              	.LBE902:
 240:ROSSerial/ros/node_handle.h **** 
 7196              		.loc 9 240 0
 7197 0660 0BB0     		add	sp, sp, #44
 7198              	.LCFI41:
 7199              		.cfi_remember_state
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 174


 7200              		.cfi_def_cfa_offset 28
 7201              		@ sp needed
 7202 0662 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7203              	.LVL862:
 7204              	.L381:
 7205              	.LCFI42:
 7206              		.cfi_restore_state
 7207              	.LBB903:
 7208              	.LBB901:
 398:ROSSerial/ros/node_handle.h ****   }
 7209              		.loc 9 398 0
 7210 0666 0020     		movs	r0, #0
 7211 0668 FAE7     		b	.L327
 7212              	.L407:
 7213 066a 00BF     		.align	2
 7214              	.L406:
 7215 066c D34D6210 		.word	274877907
 7216 0670 40420F00 		.word	1000000
 7217 0674 00CA9A3B 		.word	1000000000
 7218 0678 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 7219 067c 00000000 		.word	huart2
 7220 0680 00000000 		.word	.LC19
 7221 0684 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 7222 0688 20000000 		.word	.LC20
 7223              	.LBE901:
 7224              	.LBE903:
 7225              		.cfi_endproc
 7226              	.LFE530:
 7227              		.fnend
 7229              		.section	.text._GLOBAL__sub_I_publish_time,"ax",%progbits
 7230              		.align	1
 7231              		.syntax unified
 7232              		.thumb
 7233              		.thumb_func
 7234              		.fpu fpv4-sp-d16
 7236              	_GLOBAL__sub_I_publish_time:
 7237              		.fnstart
 7238              	.LFB532:
 7239              		.loc 8 105 0
 7240              		.cfi_startproc
 7241              		@ args = 0, pretend = 0, frame = 0
 7242              		@ frame_needed = 0, uses_anonymous_args = 0
 7243 0000 08B5     		push	{r3, lr}
 7244              	.LCFI43:
 7245              		.cfi_def_cfa_offset 8
 7246              		.cfi_offset 3, -8
 7247              		.cfi_offset 14, -4
 7248              		.loc 8 105 0
 7249 0002 4FF6FF71 		movw	r1, #65535
 7250 0006 0120     		movs	r0, #1
 7251 0008 FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 7252              	.LVL863:
 7253 000c 08BD     		pop	{r3, pc}
 7254              		.cfi_endproc
 7255              	.LFE532:
 7256              		.cantunwind
 7257              		.fnend
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 175


 7259              		.section	.init_array,"aw",%init_array
 7260              		.align	2
 7261 0000 00000000 		.word	_GLOBAL__sub_I_publish_time(target1)
 7262              		.weak	_ZTVN8std_msgs4TimeE
 7263              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 7264              		.align	2
 7267              	_ZTVN8std_msgs4TimeE:
 7268 0000 00000000 		.word	0
 7269 0004 00000000 		.word	0
 7270 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 7271 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 7272 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 7273 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 7274              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 7275              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 7276              		.align	2
 7279              	_ZTVN14rosserial_msgs9TopicInfoE:
 7280 0000 00000000 		.word	0
 7281 0004 00000000 		.word	0
 7282 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 7283 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 7284 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 7285 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 7286              		.weak	_ZTVN14rosserial_msgs3LogE
 7287              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 7288              		.align	2
 7291              	_ZTVN14rosserial_msgs3LogE:
 7292 0000 00000000 		.word	0
 7293 0004 00000000 		.word	0
 7294 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 7295 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 7296 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 7297 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 7298              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 7299              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 7300              		.align	2
 7303              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 7304 0000 00000000 		.word	0
 7305 0004 00000000 		.word	0
 7306 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 7307 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 7308 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 7309 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 7310              		.weak	_ZTVN8std_msgs6StringE
 7311              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 7312              		.align	2
 7315              	_ZTVN8std_msgs6StringE:
 7316 0000 00000000 		.word	0
 7317 0004 00000000 		.word	0
 7318 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 7319 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 7320 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 7321 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 7322              		.weak	_ZTVN8std_msgs6HeaderE
 7323              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 7324              		.align	2
 7327              	_ZTVN8std_msgs6HeaderE:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 176


 7328 0000 00000000 		.word	0
 7329 0004 00000000 		.word	0
 7330 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 7331 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 7332 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 7333 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 7334              		.weak	_ZTVN11sensor_msgs10JointStateE
 7335              		.section	.rodata._ZTVN11sensor_msgs10JointStateE,"aG",%progbits,_ZTVN11sensor_msgs10JointStateE,co
 7336              		.align	2
 7339              	_ZTVN11sensor_msgs10JointStateE:
 7340 0000 00000000 		.word	0
 7341 0004 00000000 		.word	0
 7342 0008 00000000 		.word	_ZNK11sensor_msgs10JointState9serializeEPh
 7343 000c 00000000 		.word	_ZN11sensor_msgs10JointState11deserializeEPh
 7344 0010 00000000 		.word	_ZN11sensor_msgs10JointState7getTypeEv
 7345 0014 00000000 		.word	_ZN11sensor_msgs10JointState6getMD5Ev
 7346              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
 7347              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE,"aG",%progbits,_ZTVN
 7348              		.align	2
 7351              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:
 7352 0000 00000000 		.word	0
 7353 0004 00000000 		.word	0
 7354 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
 7355 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
 7356 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
 7357              		.weak	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
 7358              		.section	.bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack,
 7359              		.align	2
 7362              	_ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:
 7363 0000 00000000 		.space	4
 7364              		.global	chatter
 7365              		.global	hovebotState
 7366              		.global	nh
 7367              		.global	publish_time
 7368              		.section	.rodata
 7369              		.align	2
 7370              		.set	.LANCHOR4,. + 0
 7371              	.LC21:
 7372 0000 00000000 		.word	.LC0
 7373 0004 08000000 		.word	.LC1
 7374              		.section	.bss.chatter,"aw",%nobits
 7375              		.align	2
 7376              		.set	.LANCHOR3,. + 0
 7379              	chatter:
 7380 0000 00000000 		.space	4
 7381              		.section	.bss.hovebotState,"aw",%nobits
 7382              		.align	2
 7383              		.set	.LANCHOR2,. + 0
 7386              	hovebotState:
 7387 0000 00000000 		.space	4
 7388              		.section	.bss.nh,"aw",%nobits
 7389              		.align	2
 7390              		.set	.LANCHOR1,. + 0
 7393              	nh:
 7394 0000 00000000 		.space	1368
 7394      00000000 
 7394      00000000 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 177


 7394      00000000 
 7394      00000000 
 7395              		.section	.bss.publish_time,"aw",%nobits
 7396              		.align	2
 7397              		.set	.LANCHOR5,. + 0
 7400              	publish_time:
 7401 0000 00000000 		.space	4
 7402              		.section	.rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4,"aMS",%progbits,1
 7403              		.align	2
 7404              	.LC15:
 7405 0000 33303636 		.ascii	"3066dcd76a6cfaef579bd0f34173e9fd\000"
 7405      64636437 
 7405      36613663 
 7405      66616566 
 7405      35373962 
 7406              		.section	.rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4,"aMS",%progbits,1
 7407              		.align	2
 7408              	.LC14:
 7409 0000 73656E73 		.ascii	"sensor_msgs/JointState\000"
 7409      6F725F6D 
 7409      7367732F 
 7409      4A6F696E 
 7409      74537461 
 7410              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4,"aMS",%progbits,1
 7411              		.align	2
 7412              	.LC9:
 7413 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7413      39386264 
 7413      61363539 
 7413      38313938 
 7413      36646466 
 7414              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4,"aMS",%progbits,1
 7415              		.align	2
 7416              	.LC8:
 7417 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7417      64373331 
 7417      63323539 
 7417      33333236 
 7417      31636436 
 7418              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4,"aMS",%progbits,1
 7419              		.align	2
 7420              	.LC7:
 7421 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7421      65726961 
 7421      6C5F6D73 
 7421      67732F4C 
 7421      6F6700
 7422              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4,"aMS",%progbits,1
 7423              		.align	2
 7424              	.LC6:
 7425 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7425      31663838 
 7425      66633434 
 7425      38393266 
 7425      38633130 
 7426              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4,"aMS",%progbits,1
 7427              		.align	2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 178


 7428              	.LC5:
 7429 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7429      65726961 
 7429      6C5F6D73 
 7429      67732F54 
 7429      6F706963 
 7430              		.section	.rodata._ZN14rosserial_msgsL12REQUESTPARAME,"a",%progbits
 7431              		.align	2
 7432              		.set	.LANCHOR0,. + 0
 7435              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7436 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7436      65726961 
 7436      6C5F6D73 
 7436      67732F52 
 7436      65717565 
 7437              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str
 7438              		.align	2
 7439              	.LC19:
 7440 0000 48414C20 		.ascii	"HAL write error %d %lu - %s\012\000"
 7440      77726974 
 7440      65206572 
 7440      726F7220 
 7440      25642025 
 7441 001d 000000   		.space	3
 7442              	.LC20:
 7443 0020 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7443      61676520 
 7443      66726F6D 
 7443      20646576 
 7443      69636520 
 7444 0053 66666572 		.ascii	"ffer.\000"
 7444      2E00
 7445              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.4,"aMS",%progbits,1
 7446              		.align	2
 7447              	.LC4:
 7448 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7448      36366337 
 7448      34633535 
 7448      32633331 
 7448      31666263 
 7449              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.4,"aMS",%progbits,1
 7450              		.align	2
 7451              	.LC3:
 7452 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7452      6D736773 
 7452      2F54696D 
 7452      6500
 7453              		.section	.rodata._ZN8std_msgs6Header6getMD5Ev.str1.4,"aMS",%progbits,1
 7454              		.align	2
 7455              	.LC13:
 7456 0000 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7456      64656361 
 7456      65636263 
 7456      65373861 
 7456      62633362 
 7457              		.section	.rodata._ZN8std_msgs6Header7getTypeEv.str1.4,"aMS",%progbits,1
 7458              		.align	2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 179


 7459              	.LC12:
 7460 0000 7374645F 		.ascii	"std_msgs/Header\000"
 7460      6D736773 
 7460      2F486561 
 7460      64657200 
 7461              		.section	.rodata._ZN8std_msgs6String6getMD5Ev.str1.4,"aMS",%progbits,1
 7462              		.align	2
 7463              	.LC11:
 7464 0000 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 7464      65386131 
 7464      36383763 
 7464      65633863 
 7464      38626438 
 7465              		.section	.rodata._ZN8std_msgs6String7getTypeEv.str1.4,"aMS",%progbits,1
 7466              		.align	2
 7467              	.LC10:
 7468 0000 7374645F 		.ascii	"std_msgs/String\000"
 7468      6D736773 
 7468      2F537472 
 7468      696E6700 
 7469              		.section	.rodata.publish_hovebot_state.str1.4,"aMS",%progbits,1
 7470              		.align	2
 7471              	.LC22:
 7472 0000 686F7665 		.ascii	"hoverbot_state publish1 failed %d\012\000"
 7472      72626F74 
 7472      5F737461 
 7472      74652070 
 7472      75626C69 
 7473              		.section	.rodata.ros_init.str1.4,"aMS",%progbits,1
 7474              		.align	2
 7475              	.LC16:
 7476 0000 4E6F6465 		.ascii	"Node init\000"
 7476      20696E69 
 7476      7400
 7477 000a 0000     		.space	2
 7478              	.LC17:
 7479 000c 686F7665 		.ascii	"hoverbot_state\000"
 7479      72626F74 
 7479      5F737461 
 7479      746500
 7480 001b 00       		.space	1
 7481              	.LC18:
 7482 001c 63686174 		.ascii	"chatter\000"
 7482      74657200 
 7483              		.section	.rodata.ros_run.str1.4,"aMS",%progbits,1
 7484              		.align	2
 7485              	.LC23:
 7486 0000 256C753A 		.ascii	"%lu:ERROR: spinOnce1 returned error probably SPIN_T"
 7486      4552524F 
 7486      523A2073 
 7486      70696E4F 
 7486      6E636531 
 7487 0033 494D454F 		.ascii	"IMEOUT\012\000"
 7487      55540A00 
 7488              		.section	.rodata.str1.4,"aMS",%progbits,1
 7489              		.align	2
 7490              	.LC0:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 180


 7491 0000 4C454654 		.ascii	"LEFT\000"
 7491      00
 7492 0005 000000   		.space	3
 7493              	.LC1:
 7494 0008 52494748 		.ascii	"RIGHT\000"
 7494      5400
 7495              		.text
 7496              	.Letext0:
 7497              		.file 13 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_type
 7498              		.file 14 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 7499              		.file 15 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 7500              		.file 16 "Inc/system_at32f4xx.h"
 7501              		.file 17 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 7502              		.file 18 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 7503              		.file 19 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 7504              		.file 20 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 7505              		.file 21 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 7506              		.file 22 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7507              		.file 23 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7508              		.file 24 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 7509              		.file 25 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstdlib"
 7510              		.file 26 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/bits/cpp_ty
 7511              		.file 27 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cmath"
 7512              		.file 28 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/cstring"
 7513              		.file 29 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/arm-none-ea
 7514              		.file 30 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdlib.h"
 7515              		.file 31 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/stdlib.h"
 7516              		.file 32 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/math.h"
 7517              		.file 33 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/c++/7.3.1/math.h"
 7518              		.file 34 "<built-in>"
 7519              		.file 35 "ROSSerial/ros/duration.h"
 7520              		.file 36 "ROSSerial/ros/publisher.h"
 7521              		.file 37 "ROSSerial/ros.h"
 7522              		.file 38 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/string.h"
 7523              		.file 39 "Inc/defines.h"
 7524              		.file 40 "Inc/control_structures.h"
 7525              		.file 41 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 7526              		.file 42 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 7527              		.file 43 "Inc/ROS_subscribe.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 181


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ROS_main.cpp
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:17     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:24     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:72     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:130    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:137    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:153    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:160    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:167    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:183    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:190    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:197    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:359    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:366    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:382    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:389    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:396    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:412    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:419    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:426    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:494    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:501    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:517    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:524    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:531    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:547    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:554    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:561    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:578    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:585    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:592    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:608    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:615    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:622    .text._ZN8std_msgs6String11deserializeEPh:0000000000000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:686    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:693    .text._ZN8std_msgs6String7getTypeEv:0000000000000000 _ZN8std_msgs6String7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:709    .text._ZN8std_msgs6String7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:716    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:723    .text._ZN8std_msgs6String6getMD5Ev:0000000000000000 _ZN8std_msgs6String6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:739    .text._ZN8std_msgs6String6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 182


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:746    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:753    .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:865    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:872    .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 _ZN8std_msgs6Header7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:888    .text._ZN8std_msgs6Header7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:895    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:902    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 _ZN8std_msgs6Header6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:918    .text._ZN8std_msgs6Header6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:925    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:932    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 _ZN11sensor_msgs10JointState7getTypeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:949    .text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState7getTypeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:956    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:963    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 _ZN11sensor_msgs10JointState6getMD5Ev
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:979    .text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN11sensor_msgs10JointState6getMD5Ev:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:986    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:992    .text._Z41__static_initialization_and_destruction_0ii:0000000000000000 _Z41__static_initialization_and_destruction_0ii
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1136   .text._Z41__static_initialization_and_destruction_0ii:00000000000000a0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7351   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7303   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
.ARM.exidx.text._Z41__static_initialization_and_destruction_0ii:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1145   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1152   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9connectedEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1171   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1178   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1428   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1435   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1522   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1529   .text._ZNK8std_msgs6String9serializeEPh:0000000000000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1574   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1581   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1630   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1637   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1754   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1761   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1956   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:1963   .text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 _ZNK11sensor_msgs10JointState9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs10JointState9serializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:2466   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:2473   .text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 _ZN11sensor_msgs10JointState11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs10JointState11deserializeEPh:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3089   .text.ros_init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3096   .text.ros_init:0000000000000000 ros_init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3339   .text.ros_init:0000000000000120 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7339   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 _ZTVN11sensor_msgs10JointStateE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7327   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 _ZTVN8std_msgs6HeaderE
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 183


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7315   .rodata._ZTVN8std_msgs6StringE:0000000000000000 _ZTVN8std_msgs6StringE
         .ARM.exidx.text.ros_init:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3355   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3362   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3552   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:00000000000000d0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7291   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3561   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3568   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3909   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000174 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3918   .text.publish_hovebot_state:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:3925   .text.publish_hovebot_state:0000000000000000 publish_hovebot_state
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4398   .text.publish_hovebot_state:0000000000000234 $d
.ARM.exidx.text.publish_hovebot_state:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4418   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4425   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4641   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:00000000000000d4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7267   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE15requestSyncTimeEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4653   .text.ros_run:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:4660   .text.ros_run:0000000000000000 ros_run
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5200   .text.ros_run:00000000000002e4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7362   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 _ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5214   .text.ros_run:0000000000000314 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5734   .text.ros_run:0000000000000610 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7279   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5747   .text.ros_run:0000000000000628 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5974   .text.ros_run:000000000000071c $d
          .ARM.exidx.text.ros_run:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5988   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:5995   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:6578   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000330 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:6592   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000035c $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7215   .text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:000000000000066c $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8spinOnceEv:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7230   .text._GLOBAL__sub_I_publish_time:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7236   .text._GLOBAL__sub_I_publish_time:0000000000000000 _GLOBAL__sub_I_publish_time
.ARM.exidx.text._GLOBAL__sub_I_publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7260   .init_array:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7264   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7276   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7288   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7300   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7312   .rodata._ZTVN8std_msgs6StringE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7324   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7336   .rodata._ZTVN11sensor_msgs10JointStateE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7348   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7359   .bss._ZZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE9spinOnce1EvE10s_CallBack:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7379   .bss.chatter:0000000000000000 chatter
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7386   .bss.hovebotState:0000000000000000 hovebotState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7393   .bss.nh:0000000000000000 nh
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7400   .bss.publish_time:0000000000000000 publish_time
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7369   .rodata:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7375   .bss.chatter:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7382   .bss.hovebotState:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7389   .bss.nh:0000000000000000 $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s 			page 184


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7396   .bss.publish_time:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7403   .rodata._ZN11sensor_msgs10JointState6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7407   .rodata._ZN11sensor_msgs10JointState7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7411   .rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7415   .rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7419   .rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7423   .rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7427   .rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7431   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7435   .rodata._ZN14rosserial_msgsL12REQUESTPARAME:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7438   .rodata._ZN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EE8publish1EiPNS_3MsgE.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7446   .rodata._ZN8std_msgs4Time6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7450   .rodata._ZN8std_msgs4Time7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7454   .rodata._ZN8std_msgs6Header6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7458   .rodata._ZN8std_msgs6Header7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7462   .rodata._ZN8std_msgs6String6getMD5Ev.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7466   .rodata._ZN8std_msgs6String7getTypeEv.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7470   .rodata.publish_hovebot_state.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7474   .rodata.ros_init.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7484   .rodata.ros_run.str1.4:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccyxZubV.s:7489   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
realloc
strlen
memcpy
HAL_UART_Receive_IT
puts
_Z21rosSubscribeWheelsCmdPN3ros11NodeHandle_I13STM32HardwareLi5ELi5ELi512ELi512EEE
byte
huart2
__aeabi_unwind_cpp_pr0
HAL_UART_Transmit
printf
HAL_GetTick
_ZN3ros16normalizeSecNSecERmS0_
wheel_posn
pwms
g_RxRead
g_RxBuf
g_RxWritten
wheels_pwm_set
