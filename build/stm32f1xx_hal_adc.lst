ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f1xx_hal_adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_ADC_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	HAL_ADC_MspInit:
  25              	.LFB128:
  26              		.file 1 "Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c"
   1:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
   2:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @file    stm32f1xx_hal_adc.c
   4:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @version V1.1.1
   6:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @date    12-May-2017
   7:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          peripheral:
  10:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  12:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Operation functions
  13:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  14:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  15:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Control functions
  16:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  17:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on injected group
  18:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  19:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + State functions
  20:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ ADC state machine management
  21:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Interrupts and flags management
  22:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  23:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          "stm32f1xx_hal_adc_ex.c".
  24:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  25:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   @verbatim
  26:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  27:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  29:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   [..]
  30:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) 12-bit resolution
  31:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  32:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 2


  33:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
  34:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  35:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  37:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  39:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  41:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  43:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  44:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  45:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) External trigger (timer or EXTI) 
  46:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       for both regular and injected groups.
  47:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  48:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  49:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  50:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Multimode Dual mode (available on devices with 2 ADCs or more).
  51:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  52:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable DMA data storage in Multimode Dual mode (available on devices
  53:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       with 2 DCs or more).
  54:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  55:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode (available 
  56:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       on devices with 2 DCs or more).
  57:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  58:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC calibration
  59:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  60:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  61:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       slower speed.
  62:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  63:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  64:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  66:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  67:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### How to use this driver #####
  68:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  69:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
  70:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  71:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
  73:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
  74:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  75:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Enable the ADC interface
  76:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****            Caution: On STM32F1, ADC clock frequency max is 14MHz (refer
  78:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     to device datasheet).
  79:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  80:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  81:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     this maximum frequency.
  82:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) One clock setting is mandatory:
  83:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC clock (core clock, also possibly conversion clock).
  84:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
  85:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  86:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
  87:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) RCC_PeriphCLKInitTypeDef  PeriphClkInit;
  88:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) __ADC1_CLK_ENABLE();
  89:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 3


  90:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
  91:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  92:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  93:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
  94:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  95:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  96:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  97:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_GPIO_Init()
  98:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  99:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ADCx_IRQHandler().
 105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ==========================================================================
 117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_Init().
 122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         sequencer, ..., of injected group)
 129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         monitored, thresholds, ...)
 135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         multimode parameters
 139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Execution of ADC conversions ***
 142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ====================================
 143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         conversion accuracy
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 4


 147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         transfer by DMA.
 151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by polling:
 153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (this function must be implemented in user program)
 170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              with transfer by DMA:
 190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave) and start conversions
 191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 5


 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Deinitialization of ADC ***
 214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Disable the ADC interface
 218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC clock disable
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
 224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
 226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK2_OFF
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Deinitialize the DMA
 240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     @endverbatim
 247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
 248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @attention
 249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 6


 261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      without specific prior written permission.
 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************  
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #include "stm32f1xx_hal.h"
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC ADC
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief ADC HAL module driver
 286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: ms                                                                 */
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              2U
 304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             2U
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               1U
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 7


 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization/de-initialization functions 
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief    Initialization and Configuration functions
 338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim    
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) De-initialize the ADC.
 346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (clock source APB2).
 356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         before HAL_ADC_Init().
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 8


 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0U;
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0U;
 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_sqr1 = 0U;
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* at RCC top level.                                                        */
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling          */
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* procedure.                                                               */
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Initialize ADC error code */
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the low level hardware */
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       bit ADON.                                                          */
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 9


 432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC parameters */
 442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - data alignment                                                      */
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger polarity (always set to 1, because needed for all  */
 447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    triggers: external trigger of SW start)                             */
 448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       a conversion on injected group would start a conversion also on  */
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       regular group after ADC enabling.                                */
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr2 |= (hadc->Init.DataAlign                               |
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - scan mode                                                           */
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode disable/enable                                   */
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode number of conversions                            */
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Enable the selected ADC regular discontinuous mode */
 471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set the number of channels to be converted in discontinuous mode */
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(tmp_cr1, ADC_CR1_DISCEN                                            |
 473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
 476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* ADC regular group settings continuous and sequencer discontinuous*/
 478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                */
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR1 with previous settings */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 10


 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR1,
 490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCEN  |
 492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCNUM    ,
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr1             );
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR2 with previous settings */
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR2,
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTSEL  |
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTTRIG |
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_CONT       ,
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr2             );
 502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1,
 518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                tmp_sqr1             );
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement path bit (TSVREFE).                                        */
 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_TSVREFE                     ))
 531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          == tmp_cr2)
 532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to none */
 534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the ADC state */
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
 544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 11


 546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
 572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      return HAL_ERROR;
 583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
 589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 12


 603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SR */
 606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
 607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          
 609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR1 */
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
 611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
 613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
 614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR2 */
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
 617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
 619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_ADON                                          ));
 621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR1 */
 623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP17 | ADC_SMPR1_SMP16 | ADC_SMPR1_SMP15 | 
 624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10                    ));
 626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR2 */
 628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
 629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
 631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP0                                    ));
 632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR1 */
 634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
 635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
 637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
 639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
 641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register HTR */
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
 644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR2 */
 658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 13


 660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR3 */
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
 663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register DR */
 676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*                                                                        */
 687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DeInit the low level hardware */
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC error code to none */
 694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET; 
 698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  27              		.loc 1 714 0
  28              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 14


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
  33              		.loc 1 720 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE128:
  38              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_ADC_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HAL_ADC_MspDeInit:
  47              	.LFB129:
 721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  48              		.loc 1 728 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
 729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
  54              		.loc 1 734 0
  55 0000 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE129:
  59              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
  60              		.align	1
  61              		.global	HAL_ADC_PollForConversion
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	HAL_ADC_PollForConversion:
  68              	.LFB132:
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 15


 736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Input and Output operation functions
 742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
 743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       ##### IO operation functions #####
 746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group.
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group.
 750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion event.
 752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Handle ADC interrupt request
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
 764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
 780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
 785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
 792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 16


 793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
 809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag */
 837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
 841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
 842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
 843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
 844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
 845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
 847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If ADC is master, ADC is enabled and conversion is started.            */
 848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 17


 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
 854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
 875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
 880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 18


 907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
 913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in DMA mode.
 915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         performed on each conversion.
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, limitation in case of sequencer enabled
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (several ranks selected): polling cannot be done on each 
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion inside the sequence. In this case, polling is replaced by
 920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         wait for maximum conversion time.
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
 923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  69              		.loc 1 926 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              	.LVL2:
  74 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 20
  77              		.cfi_offset 4, -20
  78              		.cfi_offset 5, -16
  79              		.cfi_offset 6, -12
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 83B0     		sub	sp, sp, #12
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 32
  85 0004 0546     		mov	r5, r0
  86 0006 0C46     		mov	r4, r1
  87              	.LVL3:
 927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
  88              		.loc 1 931 0
  89 0008 0023     		movs	r3, #0
  90 000a 0193     		str	r3, [sp, #4]
  91              	.LVL4:
 932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
 934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
 938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
  92              		.loc 1 938 0
  93 000c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 19


  94              	.LVL5:
 939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for        */
 941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* each conversion:                                                         */
 942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode                            */
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
  95              		.loc 1 943 0
  96 0010 2B68     		ldr	r3, [r5]
  97 0012 9A68     		ldr	r2, [r3, #8]
  98 0014 12F4807F 		tst	r2, #256
  99 0018 23D1     		bne	.L28
 100 001a 0646     		mov	r6, r0
 944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
 957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    with NbrOfConversion =1), flag EOC is used to determine the           */
 958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    conversion completion.                                                */
 959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
 960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    NbrOfConversion >=2), flag EOC is set only at the end of the          */
 961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    sequence.                                                             */
 962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
 967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    be set.                                                               */
 968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
 101              		.loc 1 968 0
 102 001c 5A68     		ldr	r2, [r3, #4]
 103 001e 12F4807F 		tst	r2, #256
 104 0022 03D1     		bne	.L6
 969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 105              		.loc 1 969 0 discriminator 1
 106 0024 DB6A     		ldr	r3, [r3, #44]
 968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 107              		.loc 1 968 0 discriminator 1
 108 0026 13F4700F 		tst	r3, #15728640
 109 002a 24D0     		beq	.L8
 110              	.L6:
 970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait until End of Conversion flag is raised */
 972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
 975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 20


 978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
 980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
 983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
 986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Replace polling by wait for maximum conversion time */
 993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
 997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 111              		.loc 1 997 0
 112 002c 4B4B     		ldr	r3, .L30
 113 002e 1F68     		ldr	r7, [r3]
 114 0030 0220     		movs	r0, #2
 115              	.LVL6:
 116 0032 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 117              	.LVL7:
 118 0036 B7FBF0F0 		udiv	r0, r7, r0
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 119              		.loc 1 998 0
 120 003a 2B68     		ldr	r3, [r5]
 121 003c 1969     		ldr	r1, [r3, #16]
 122 003e 484A     		ldr	r2, .L30+4
 123 0040 1142     		tst	r1, r2
 124 0042 2FD1     		bne	.L12
 125              		.loc 1 998 0 is_stmt 0 discriminator 1
 126 0044 D968     		ldr	r1, [r3, #12]
 127 0046 02F15C42 		add	r2, r2, #-603979776
 128 004a 1142     		tst	r1, r2
 129 004c 2AD1     		bne	.L12
 130              		.loc 1 998 0 discriminator 3
 131 004e 1969     		ldr	r1, [r3, #16]
 132 0050 444A     		ldr	r2, .L30+8
 133 0052 1142     		tst	r1, r2
 134 0054 39D1     		bne	.L19
 135              		.loc 1 998 0 discriminator 5
 136 0056 DA68     		ldr	r2, [r3, #12]
 137 0058 434B     		ldr	r3, .L30+12
 138 005a 1A42     		tst	r2, r3
 139 005c 37D0     		beq	.L20
 140              		.loc 1 998 0
 141 005e 2927     		movs	r7, #41
 142 0060 3AE0     		b	.L13
 143              	.LVL8:
 144              	.L28:
 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 145              		.loc 1 946 0 is_stmt 1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 21


 146 0062 AB6A     		ldr	r3, [r5, #40]
 147 0064 43F02003 		orr	r3, r3, #32
 148 0068 AB62     		str	r3, [r5, #40]
 949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 149              		.loc 1 949 0
 150 006a 0023     		movs	r3, #0
 151 006c 85F82430 		strb	r3, [r5, #36]
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 152              		.loc 1 951 0
 153 0070 0120     		movs	r0, #1
 154              	.LVL9:
 155              	.L5:
 999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
1003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
1014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Conversion_Timeout_CPU_cycles ++;
1017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear regular group conversion flag */
1021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update ADC state machine */
1024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: On STM32F1 devices, in case of sequencer enabled                   */
1029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       at the end of the sequence.                                        */
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
1034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
1039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 22


1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 156              		.loc 1 1045 0
 157 0072 03B0     		add	sp, sp, #12
 158              	.LCFI2:
 159              		.cfi_remember_state
 160              		.cfi_def_cfa_offset 20
 161              		@ sp needed
 162 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 163              	.LVL10:
 164              	.L8:
 165              	.LCFI3:
 166              		.cfi_restore_state
 972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 167              		.loc 1 972 0
 168 0076 2B68     		ldr	r3, [r5]
 169 0078 1B68     		ldr	r3, [r3]
 170 007a 13F0020F 		tst	r3, #2
 171 007e 48D1     		bne	.L11
 975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 172              		.loc 1 975 0
 173 0080 B4F1FF3F 		cmp	r4, #-1
 174 0084 F7D0     		beq	.L8
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 175              		.loc 1 977 0
 176 0086 24B1     		cbz	r4, .L9
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 177              		.loc 1 977 0 is_stmt 0 discriminator 1
 178 0088 FFF7FEFF 		bl	HAL_GetTick
 179              	.LVL11:
 180 008c 801B     		subs	r0, r0, r6
 181 008e A042     		cmp	r0, r4
 182 0090 F1D9     		bls	.L8
 183              	.L9:
 980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 184              		.loc 1 980 0 is_stmt 1
 185 0092 AB6A     		ldr	r3, [r5, #40]
 186 0094 43F00403 		orr	r3, r3, #4
 187 0098 AB62     		str	r3, [r5, #40]
 983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 188              		.loc 1 983 0
 189 009a 0023     		movs	r3, #0
 190 009c 85F82430 		strb	r3, [r5, #36]
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 191              		.loc 1 985 0
 192 00a0 0320     		movs	r0, #3
 193 00a2 E6E7     		b	.L5
 194              	.L12:
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 195              		.loc 1 998 0 discriminator 4
 196 00a4 1969     		ldr	r1, [r3, #16]
 197 00a6 2F4A     		ldr	r2, .L30+8
 198 00a8 1142     		tst	r1, r2
 199 00aa 04D1     		bne	.L14
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 200              		.loc 1 998 0 is_stmt 0 discriminator 11
 201 00ac D968     		ldr	r1, [r3, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 23


 202 00ae 02F16E42 		add	r2, r2, #-301989888
 203 00b2 1142     		tst	r1, r2
 204 00b4 0DD0     		beq	.L21
 205              	.L14:
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 206              		.loc 1 998 0 discriminator 14
 207 00b6 1969     		ldr	r1, [r3, #16]
 208 00b8 2C4A     		ldr	r2, .L30+16
 209 00ba 0A40     		ands	r2, r2, r1
 210 00bc 5AB9     		cbnz	r2, .L22
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 211              		.loc 1 998 0 discriminator 15
 212 00be DA68     		ldr	r2, [r3, #12]
 213 00c0 2A4B     		ldr	r3, .L30+16
 214 00c2 1340     		ands	r3, r3, r2
 215 00c4 5BB1     		cbz	r3, .L23
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 216              		.loc 1 998 0
 217 00c6 FC27     		movs	r7, #252
 218 00c8 06E0     		b	.L13
 219              	.L19:
 220 00ca 2927     		movs	r7, #41
 221 00cc 04E0     		b	.L13
 222              	.L20:
 223 00ce 1427     		movs	r7, #20
 224 00d0 02E0     		b	.L13
 225              	.L21:
 226 00d2 5427     		movs	r7, #84
 227 00d4 00E0     		b	.L13
 228              	.L22:
 229 00d6 FC27     		movs	r7, #252
 230              	.L13:
 996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 231              		.loc 1 996 0 is_stmt 1
 232 00d8 07FB00F7 		mul	r7, r7, r0
 233              	.LVL12:
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 234              		.loc 1 1000 0
 235 00dc 04E0     		b	.L15
 236              	.LVL13:
 237              	.L23:
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 238              		.loc 1 998 0
 239 00de 5427     		movs	r7, #84
 240 00e0 FAE7     		b	.L13
 241              	.LVL14:
 242              	.L16:
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 243              		.loc 1 1016 0
 244 00e2 019B     		ldr	r3, [sp, #4]
 245 00e4 0133     		adds	r3, r3, #1
 246 00e6 0193     		str	r3, [sp, #4]
 247              	.L15:
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 248              		.loc 1 1000 0
 249 00e8 019B     		ldr	r3, [sp, #4]
 250 00ea BB42     		cmp	r3, r7
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 24


 251 00ec 11D2     		bcs	.L11
1003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 252              		.loc 1 1003 0
 253 00ee B4F1FF3F 		cmp	r4, #-1
 254 00f2 F6D0     		beq	.L16
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 255              		.loc 1 1005 0
 256 00f4 24B1     		cbz	r4, .L17
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 257              		.loc 1 1005 0 is_stmt 0 discriminator 1
 258 00f6 FFF7FEFF 		bl	HAL_GetTick
 259              	.LVL15:
 260 00fa 801B     		subs	r0, r0, r6
 261 00fc A042     		cmp	r0, r4
 262 00fe F0D9     		bls	.L16
 263              	.L17:
1008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 264              		.loc 1 1008 0 is_stmt 1
 265 0100 AB6A     		ldr	r3, [r5, #40]
 266 0102 43F00403 		orr	r3, r3, #4
 267 0106 AB62     		str	r3, [r5, #40]
1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 268              		.loc 1 1011 0
 269 0108 0023     		movs	r3, #0
 270 010a 85F82430 		strb	r3, [r5, #36]
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 271              		.loc 1 1013 0
 272 010e 0320     		movs	r0, #3
 273 0110 AFE7     		b	.L5
 274              	.LVL16:
 275              	.L11:
1021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 276              		.loc 1 1021 0
 277 0112 2B68     		ldr	r3, [r5]
 278 0114 6FF01202 		mvn	r2, #18
 279 0118 1A60     		str	r2, [r3]
1024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 280              		.loc 1 1024 0
 281 011a AB6A     		ldr	r3, [r5, #40]
 282 011c 43F40073 		orr	r3, r3, #512
 283 0120 AB62     		str	r3, [r5, #40]
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 284              		.loc 1 1031 0
 285 0122 2B68     		ldr	r3, [r5]
 286 0124 9B68     		ldr	r3, [r3, #8]
 287 0126 03F46023 		and	r3, r3, #917504
 288 012a B3F5602F 		cmp	r3, #917504
 289 012e 01D0     		beq	.L29
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 290              		.loc 1 1044 0
 291 0130 0020     		movs	r0, #0
 292 0132 9EE7     		b	.L5
 293              	.L29:
1032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
 294              		.loc 1 1032 0 discriminator 1
 295 0134 EB68     		ldr	r3, [r5, #12]
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 25


 296              		.loc 1 1031 0 discriminator 1
 297 0136 6BB9     		cbnz	r3, .L25
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 298              		.loc 1 1035 0
 299 0138 AB6A     		ldr	r3, [r5, #40]
 300 013a 23F48073 		bic	r3, r3, #256
 301 013e AB62     		str	r3, [r5, #40]
1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
 302              		.loc 1 1037 0
 303 0140 AB6A     		ldr	r3, [r5, #40]
 304 0142 13F4805F 		tst	r3, #4096
 305 0146 07D1     		bne	.L26
1039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 306              		.loc 1 1039 0
 307 0148 AB6A     		ldr	r3, [r5, #40]
 308 014a 43F00103 		orr	r3, r3, #1
 309 014e AB62     		str	r3, [r5, #40]
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 310              		.loc 1 1044 0
 311 0150 0020     		movs	r0, #0
 312 0152 8EE7     		b	.L5
 313              	.L25:
 314 0154 0020     		movs	r0, #0
 315 0156 8CE7     		b	.L5
 316              	.L26:
 317 0158 0020     		movs	r0, #0
 318 015a 8AE7     		b	.L5
 319              	.L31:
 320              		.align	2
 321              	.L30:
 322 015c 00000000 		.word	SystemCoreClock
 323 0160 24499224 		.word	613566756
 324 0164 92244912 		.word	306783378
 325 0168 92244900 		.word	4793490
 326 016c 49922400 		.word	2396745
 327              		.cfi_endproc
 328              	.LFE132:
 330              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_ADC_PollForEvent
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	HAL_ADC_PollForEvent:
 339              	.LFB133:
1046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Poll for conversion event.
1049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  EventType: the ADC event type.
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          This parameter can be one of the following values:
1052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 26


1057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 340              		.loc 1 1057 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              	.LVL17:
 345 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 346              	.LCFI4:
 347              		.cfi_def_cfa_offset 24
 348              		.cfi_offset 3, -24
 349              		.cfi_offset 4, -20
 350              		.cfi_offset 5, -16
 351              		.cfi_offset 6, -12
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 0446     		mov	r4, r0
 355 0004 0E46     		mov	r6, r1
 356 0006 1546     		mov	r5, r2
 357              	.LVL18:
1058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U; 
1059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
1065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 358              		.loc 1 1065 0
 359 0008 FFF7FEFF 		bl	HAL_GetTick
 360              	.LVL19:
 361 000c 0746     		mov	r7, r0
 362              	.LVL20:
 363              	.L34:
1066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check selected event flag */
1068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 364              		.loc 1 1068 0
 365 000e 2368     		ldr	r3, [r4]
 366 0010 1A68     		ldr	r2, [r3]
 367 0012 36EA0202 		bics	r2, r6, r2
 368 0016 11D0     		beq	.L39
1069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 369              		.loc 1 1071 0
 370 0018 B5F1FF3F 		cmp	r5, #-1
 371 001c F7D0     		beq	.L34
1072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 372              		.loc 1 1073 0
 373 001e 25B1     		cbz	r5, .L35
 374              		.loc 1 1073 0 is_stmt 0 discriminator 1
 375 0020 FFF7FEFF 		bl	HAL_GetTick
 376              	.LVL21:
 377 0024 C01B     		subs	r0, r0, r7
 378 0026 A842     		cmp	r0, r5
 379 0028 F1D9     		bls	.L34
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 27


 380              	.L35:
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 381              		.loc 1 1076 0 is_stmt 1
 382 002a A36A     		ldr	r3, [r4, #40]
 383 002c 43F00403 		orr	r3, r3, #4
 384 0030 A362     		str	r3, [r4, #40]
1077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 385              		.loc 1 1079 0
 386 0032 0023     		movs	r3, #0
 387 0034 84F82430 		strb	r3, [r4, #36]
1080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_TIMEOUT;
 388              		.loc 1 1081 0
 389 0038 0320     		movs	r0, #3
 390 003a 07E0     		b	.L36
 391              	.L39:
1082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
1088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 392              		.loc 1 1088 0
 393 003c A26A     		ldr	r2, [r4, #40]
 394 003e 42F48032 		orr	r2, r2, #65536
 395 0042 A262     		str	r2, [r4, #40]
1089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear ADC analog watchdog flag */
1091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 396              		.loc 1 1091 0
 397 0044 6FF00102 		mvn	r2, #1
 398 0048 1A60     		str	r2, [r3]
1092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 399              		.loc 1 1094 0
 400 004a 0020     		movs	r0, #0
 401              	.L36:
1095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 402              		.loc 1 1095 0
 403 004c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 404              		.cfi_endproc
 405              	.LFE133:
 407              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 408              		.align	1
 409              		.global	HAL_ADC_GetValue
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv4-sp-d16
 415              	HAL_ADC_GetValue:
 416              	.LFB138:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 28


1096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1099:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - EOC (end of conversion of regular group)
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
1122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
1124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
1126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 29


1153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
1184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
1185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
1186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
1188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
1191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
1196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 30


1210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         through DMA.
1252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA transfer complete
1254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA half transfer
1255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
1258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC2 converted data can be transferred in dual ADC mode using DMA
1261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of ADC1 (ADC master in multimode).
1262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In case of using ADC1 with DMA on a device featuring 2 ADC
1263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         instances: ADC1 conversion register DR contains ADC1 conversion 
1264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         result (ADC1 register DR bits 0 to 11) and, additionally, ADC2 last
1265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion result (ADC1 register DR bits 16 to 27). Therefore, to
1266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         have DMA transferring the conversion results of ADC1 only, DMA must
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 31


1267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be configured to transfer size: half word.
1268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
1270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
1271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if multimode is disabled (for devices with several ADC)     */
1281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If multimode is enabled, dedicated function multimode conversion         */
1282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* start DMA must be used.                                                  */
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_MULTIMODE_IS_ENABLE(hadc) == RESET)
1284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process locked */
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_LOCK(hadc);
1287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC peripheral */
1289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state                                                        */
1295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 32


1324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
1330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC error code fields related to conversions on group regular */
1333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC all error code fields */
1338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA error callback */
1353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* operations)                                                          */
1362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable ADC DMA mode */
1365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start the DMA channel */
1368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* trigger event.                                                       */
1374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with SW start */
1377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 33


1381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with external trigger */
1382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
1394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC peripheral.
1404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
1409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC DMA mode */
1432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 34


1438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            to flag EOC.
1469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         To clear this flag, either use function: 
1473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC group regular conversion data
1478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 417              		.loc 1 1480 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL22:
1481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC converted value */ 
1488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->Instance->DR;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 35


 423              		.loc 1 1488 0
 424 0000 0368     		ldr	r3, [r0]
 425 0002 D86C     		ldr	r0, [r3, #76]
 426              	.LVL23:
1489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 427              		.loc 1 1489 0
 428 0004 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE138:
 432              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 433              		.align	1
 434              		.weak	HAL_ADC_ConvCpltCallback
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	HAL_ADC_ConvCpltCallback:
 441              	.LFB140:
1490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
1502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
1506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
1508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group regular   */
1517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
1518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
1523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group regular */
1525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 36


1529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */
1537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
1538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag */
1540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
1546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
1548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group injected  */
1557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, scan sequence on going or by automatic injected */
1558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* conversion from group regular (same conditions as group regular      */
1559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption disabling above).                                       */
1560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
1564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
1565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
1566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
1567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group injected */
1569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
1576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */ 
1581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear injected group conversion flag */
1584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 37


1586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
1590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
1592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Level out of window callback */ 
1597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 442              		.loc 1 1612 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL24:
1613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */
1618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 448              		.loc 1 1618 0
 449 0000 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE140:
 453              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 454              		.align	1
 455              		.global	ADC_DMAConvCplt
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 459              		.fpu fpv4-sp-d16
 461              	ADC_DMAConvCplt:
 462              	.LFB150:
1619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 38


1624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
1645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
1651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral Control functions
1670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
1672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ##### Peripheral Control functions #####
1674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure channels on regular group
1677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure the analog watchdog
1678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 39


1681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         group.
1686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
1688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
1694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the ADC.
1695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel for regular group.
1700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** { 
1704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Regular sequence configuration */
1718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 1 to 6 */
1719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Rank < 7U)
1720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
1722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
1723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
1724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 7 to 12 */
1726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
1727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
1729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
1730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
1731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 13 to 16 */
1733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
1736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
1737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 40


1738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Channel sampling time configuration */
1742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For channels 10 to 17 */
1743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Channel >= ADC_CHANNEL_10)
1744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
1746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
1747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
1748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else /* For channels 0 to 9 */
1750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
1752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
1753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
1754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* and VREFINT measurement path.                                            */
1758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
1759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
1760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Instance == ADC1)
1765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
1767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
1769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
1771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
1773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
1774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
1776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
1777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             wait_loop_index--;
1778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
1779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
1788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 41


1795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
1801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         is on going.
1802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
1803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
1804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
1805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
1806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
1807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
1808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
1810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
1817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
1819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
1820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
1822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
1823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
1824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog configuration */
1832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configure ADC Analog watchdog interrupt */
1834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of analog watchdog:                                        */
1846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
1847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    one or all channels.                                                  */
1848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
1849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                             */
1850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   MODIFY_REG(hadc->Instance->CR1            ,
1851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 42


1852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_JAWDEN |
1853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDEN  |
1854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDCH                  ,
1855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->WatchdogMode |
1856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->Channel        );
1857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the high threshold */
1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
1860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the low threshold */
1862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
1863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
1878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral State functions
1879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim
1881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
1883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
1885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
1886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     peripheral.
1887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC state
1888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC error code
1889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  return the ADC state
1896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL state
1898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->State;
1903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Return the ADC error code
1907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC Error Code
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 43


1909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
1913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
1924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enable the selected ADC.
1929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
1930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
1931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
1935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
1940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
1941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
1942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
1943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
1944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the Peripheral */
1946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
1952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       wait_loop_index--;
1954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
1957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
1958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
1960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) == RESET)
1961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
1963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
1965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 44


1966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
1968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
1974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
1979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion and disable the selected ADC
1984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
1985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         stopped to disable the ADC.
1986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc)
1990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if ADC is not already disabled */
1994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
1995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC peripheral */
1997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE(hadc);
1998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
2000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
2001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) != RESET)
2004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
2008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
2011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
2014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
2019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
2020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 45


2023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 463              		.loc 1 2028 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL25:
 468 0000 08B5     		push	{r3, lr}
 469              	.LCFI5:
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
2029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 473              		.loc 1 2030 0
 474 0002 436A     		ldr	r3, [r0, #36]
 475              	.LVL26:
2031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
2032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 476              		.loc 1 2033 0
 477 0004 9A6A     		ldr	r2, [r3, #40]
 478 0006 12F0500F 		tst	r2, #80
 479 000a 03D0     		beq	.L47
2034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine */
2036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
2040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: On STM32F1 devices, in case of sequencer enabled                 */
2041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       (several ranks selected), end of conversion flag is raised       */
2042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       at the end of the sequence.                                      */
2043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
2044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
2045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
2047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
2048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
2049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Conversion complete callback */
2056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc); 
2057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Call DMA error callback */
2061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 480              		.loc 1 2061 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 46


 481 000c 1B6A     		ldr	r3, [r3, #32]
 482              	.LVL27:
 483 000e 1B6B     		ldr	r3, [r3, #48]
 484 0010 9847     		blx	r3
 485              	.LVL28:
 486              	.L42:
2062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 487              		.loc 1 2063 0
 488 0012 08BD     		pop	{r3, pc}
 489              	.LVL29:
 490              	.L47:
2036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 491              		.loc 1 2036 0
 492 0014 9A6A     		ldr	r2, [r3, #40]
 493 0016 42F40072 		orr	r2, r2, #512
 494 001a 9A62     		str	r2, [r3, #40]
2043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 495              		.loc 1 2043 0
 496 001c 1A68     		ldr	r2, [r3]
 497 001e 9268     		ldr	r2, [r2, #8]
 498 0020 02F46022 		and	r2, r2, #917504
 499 0024 B2F5602F 		cmp	r2, #917504
 500 0028 03D0     		beq	.L48
 501              	.L44:
2056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 502              		.loc 1 2056 0
 503 002a 1846     		mov	r0, r3
 504              	.LVL30:
 505 002c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 506              	.LVL31:
 507 0030 EFE7     		b	.L42
 508              	.LVL32:
 509              	.L48:
2044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 510              		.loc 1 2044 0 discriminator 1
 511 0032 DA68     		ldr	r2, [r3, #12]
2043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 512              		.loc 1 2043 0 discriminator 1
 513 0034 002A     		cmp	r2, #0
 514 0036 F8D1     		bne	.L44
2047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 515              		.loc 1 2047 0
 516 0038 9A6A     		ldr	r2, [r3, #40]
 517 003a 22F48072 		bic	r2, r2, #256
 518 003e 9A62     		str	r2, [r3, #40]
2049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 519              		.loc 1 2049 0
 520 0040 9A6A     		ldr	r2, [r3, #40]
 521 0042 12F4805F 		tst	r2, #4096
 522 0046 F0D1     		bne	.L44
2051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 523              		.loc 1 2051 0
 524 0048 9A6A     		ldr	r2, [r3, #40]
 525 004a 42F00102 		orr	r2, r2, #1
 526 004e 9A62     		str	r2, [r3, #40]
 527 0050 EBE7     		b	.L44
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 47


 528              		.cfi_endproc
 529              	.LFE150:
 531              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 532              		.align	1
 533              		.weak	HAL_ADC_ConvHalfCpltCallback
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv4-sp-d16
 539              	HAL_ADC_ConvHalfCpltCallback:
 540              	.LFB141:
1626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 541              		.loc 1 1626 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546              	.LVL33:
1632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 547              		.loc 1 1632 0
 548 0000 7047     		bx	lr
 549              		.cfi_endproc
 550              	.LFE141:
 552              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 553              		.align	1
 554              		.global	ADC_DMAHalfConvCplt
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu fpv4-sp-d16
 560              	ADC_DMAHalfConvCplt:
 561              	.LFB151:
2064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 562              		.loc 1 2071 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              	.LVL34:
 567 0000 08B5     		push	{r3, lr}
 568              	.LCFI6:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 3, -8
 571              		.cfi_offset 14, -4
 572              	.LVL35:
2072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Half conversion callback */
2076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 573              		.loc 1 2076 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 48


 574 0002 406A     		ldr	r0, [r0, #36]
 575              	.LVL36:
 576 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 577              	.LVL37:
2077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 578              		.loc 1 2077 0
 579 0008 08BD     		pop	{r3, pc}
 580              		.cfi_endproc
 581              	.LFE151:
 583              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 584              		.align	1
 585              		.weak	HAL_ADC_LevelOutOfWindowCallback
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv4-sp-d16
 591              	HAL_ADC_LevelOutOfWindowCallback:
 592              	.LFB142:
1640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 593              		.loc 1 1640 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598              	.LVL38:
1646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 599              		.loc 1 1646 0
 600 0000 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE142:
 604              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 605              		.align	1
 606              		.global	HAL_ADC_IRQHandler
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	HAL_ADC_IRQHandler:
 613              	.LFB139:
1497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 614              		.loc 1 1497 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL39:
 619 0000 10B5     		push	{r4, lr}
 620              	.LCFI7:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 624 0002 0446     		mov	r4, r0
1505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 625              		.loc 1 1505 0
 626 0004 0368     		ldr	r3, [r0]
 627 0006 5A68     		ldr	r2, [r3, #4]
 628 0008 12F0200F 		tst	r2, #32
 629 000c 18D0     		beq	.L54
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 49


1507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 630              		.loc 1 1507 0
 631 000e 1A68     		ldr	r2, [r3]
 632 0010 12F0020F 		tst	r2, #2
 633 0014 14D0     		beq	.L54
1510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 634              		.loc 1 1510 0
 635 0016 826A     		ldr	r2, [r0, #40]
 636 0018 12F0100F 		tst	r2, #16
 637 001c 03D1     		bne	.L55
1513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 638              		.loc 1 1513 0
 639 001e 826A     		ldr	r2, [r0, #40]
 640 0020 42F40072 		orr	r2, r2, #512
 641 0024 8262     		str	r2, [r0, #40]
 642              	.L55:
1521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 643              		.loc 1 1521 0
 644 0026 9A68     		ldr	r2, [r3, #8]
 645 0028 02F46022 		and	r2, r2, #917504
 646 002c B2F5602F 		cmp	r2, #917504
 647 0030 38D0     		beq	.L63
 648              	.L56:
1537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 649              		.loc 1 1537 0
 650 0032 2046     		mov	r0, r4
 651              	.LVL40:
 652 0034 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 653              	.LVL41:
1540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 654              		.loc 1 1540 0
 655 0038 2368     		ldr	r3, [r4]
 656 003a 6FF01202 		mvn	r2, #18
 657 003e 1A60     		str	r2, [r3]
 658              	.L54:
1545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 659              		.loc 1 1545 0
 660 0040 2368     		ldr	r3, [r4]
 661 0042 5A68     		ldr	r2, [r3, #4]
 662 0044 12F0800F 		tst	r2, #128
 663 0048 22D0     		beq	.L57
1547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 664              		.loc 1 1547 0
 665 004a 1A68     		ldr	r2, [r3]
 666 004c 12F0040F 		tst	r2, #4
 667 0050 1ED0     		beq	.L57
1550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 668              		.loc 1 1550 0
 669 0052 A26A     		ldr	r2, [r4, #40]
 670 0054 12F0100F 		tst	r2, #16
 671 0058 03D1     		bne	.L58
1553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 672              		.loc 1 1553 0
 673 005a A26A     		ldr	r2, [r4, #40]
 674 005c 42F40052 		orr	r2, r2, #8192
 675 0060 A262     		str	r2, [r4, #40]
 676              	.L58:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 50


1563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 677              		.loc 1 1563 0
 678 0062 9A68     		ldr	r2, [r3, #8]
 679 0064 02F4E042 		and	r2, r2, #28672
 680 0068 B2F5E04F 		cmp	r2, #28672
 681 006c 31D0     		beq	.L59
1564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 682              		.loc 1 1564 0 discriminator 1
 683 006e 5A68     		ldr	r2, [r3, #4]
1563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 684              		.loc 1 1563 0 discriminator 1
 685 0070 12F4806F 		tst	r2, #1024
 686 0074 05D1     		bne	.L60
1565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 687              		.loc 1 1565 0
 688 0076 9A68     		ldr	r2, [r3, #8]
 689 0078 02F46022 		and	r2, r2, #917504
1564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 690              		.loc 1 1564 0
 691 007c B2F5602F 		cmp	r2, #917504
 692 0080 24D0     		beq	.L64
 693              	.L60:
1581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 694              		.loc 1 1581 0
 695 0082 2046     		mov	r0, r4
 696 0084 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 697              	.LVL42:
1584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 698              		.loc 1 1584 0
 699 0088 2368     		ldr	r3, [r4]
 700 008a 6FF00C02 		mvn	r2, #12
 701 008e 1A60     		str	r2, [r3]
 702              	.L57:
1589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 703              		.loc 1 1589 0
 704 0090 2368     		ldr	r3, [r4]
 705 0092 5A68     		ldr	r2, [r3, #4]
 706 0094 12F0400F 		tst	r2, #64
 707 0098 03D0     		beq	.L53
1591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 708              		.loc 1 1591 0
 709 009a 1B68     		ldr	r3, [r3]
 710 009c 13F0010F 		tst	r3, #1
 711 00a0 28D1     		bne	.L65
 712              	.L53:
1604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 713              		.loc 1 1604 0
 714 00a2 10BD     		pop	{r4, pc}
 715              	.LVL43:
 716              	.L63:
1522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 717              		.loc 1 1522 0 discriminator 1
 718 00a4 E268     		ldr	r2, [r4, #12]
1521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 719              		.loc 1 1521 0 discriminator 1
 720 00a6 002A     		cmp	r2, #0
 721 00a8 C3D1     		bne	.L56
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 51


1525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 722              		.loc 1 1525 0
 723 00aa 5A68     		ldr	r2, [r3, #4]
 724 00ac 22F02002 		bic	r2, r2, #32
 725 00b0 5A60     		str	r2, [r3, #4]
1528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 726              		.loc 1 1528 0
 727 00b2 A36A     		ldr	r3, [r4, #40]
 728 00b4 23F48073 		bic	r3, r3, #256
 729 00b8 A362     		str	r3, [r4, #40]
1530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 730              		.loc 1 1530 0
 731 00ba A36A     		ldr	r3, [r4, #40]
 732 00bc 13F4805F 		tst	r3, #4096
 733 00c0 B7D1     		bne	.L56
1532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 734              		.loc 1 1532 0
 735 00c2 A36A     		ldr	r3, [r4, #40]
 736 00c4 43F00103 		orr	r3, r3, #1
 737 00c8 A362     		str	r3, [r4, #40]
 738 00ca B2E7     		b	.L56
 739              	.LVL44:
 740              	.L64:
1566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 741              		.loc 1 1566 0
 742 00cc E268     		ldr	r2, [r4, #12]
1565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 743              		.loc 1 1565 0
 744 00ce 002A     		cmp	r2, #0
 745 00d0 D7D1     		bne	.L60
 746              	.L59:
1569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 747              		.loc 1 1569 0
 748 00d2 5A68     		ldr	r2, [r3, #4]
 749 00d4 22F08002 		bic	r2, r2, #128
 750 00d8 5A60     		str	r2, [r3, #4]
1572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 751              		.loc 1 1572 0
 752 00da A36A     		ldr	r3, [r4, #40]
 753 00dc 23F48053 		bic	r3, r3, #4096
 754 00e0 A362     		str	r3, [r4, #40]
1574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
 755              		.loc 1 1574 0
 756 00e2 A36A     		ldr	r3, [r4, #40]
 757 00e4 13F4807F 		tst	r3, #256
 758 00e8 CBD1     		bne	.L60
1576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 759              		.loc 1 1576 0
 760 00ea A36A     		ldr	r3, [r4, #40]
 761 00ec 43F00103 		orr	r3, r3, #1
 762 00f0 A362     		str	r3, [r4, #40]
 763 00f2 C6E7     		b	.L60
 764              	.L65:
1594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 765              		.loc 1 1594 0
 766 00f4 A36A     		ldr	r3, [r4, #40]
 767 00f6 43F48033 		orr	r3, r3, #65536
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 52


 768 00fa A362     		str	r3, [r4, #40]
1597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 769              		.loc 1 1597 0
 770 00fc 2046     		mov	r0, r4
 771 00fe FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 772              	.LVL45:
1600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 773              		.loc 1 1600 0
 774 0102 2368     		ldr	r3, [r4]
 775 0104 6FF00102 		mvn	r2, #1
 776 0108 1A60     		str	r2, [r3]
1604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 777              		.loc 1 1604 0
 778 010a CAE7     		b	.L53
 779              		.cfi_endproc
 780              	.LFE139:
 782              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 783              		.align	1
 784              		.weak	HAL_ADC_ErrorCallback
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu fpv4-sp-d16
 790              	HAL_ADC_ErrorCallback:
 791              	.LFB143:
1655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 792              		.loc 1 1655 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797              	.LVL46:
1661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 798              		.loc 1 1661 0
 799 0000 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE143:
 803              		.section	.text.ADC_DMAError,"ax",%progbits
 804              		.align	1
 805              		.global	ADC_DMAError
 806              		.syntax unified
 807              		.thumb
 808              		.thumb_func
 809              		.fpu fpv4-sp-d16
 811              	ADC_DMAError:
 812              	.LFB152:
2078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA error callback 
2081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 813              		.loc 1 2085 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 53


 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              	.LVL47:
 818 0000 08B5     		push	{r3, lr}
 819              	.LCFI8:
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 3, -8
 822              		.cfi_offset 14, -4
2086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 823              		.loc 1 2087 0
 824 0002 406A     		ldr	r0, [r0, #36]
 825              	.LVL48:
2088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
2090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 826              		.loc 1 2090 0
 827 0004 836A     		ldr	r3, [r0, #40]
 828 0006 43F04003 		orr	r3, r3, #64
 829 000a 8362     		str	r3, [r0, #40]
2091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 830              		.loc 1 2093 0
 831 000c C36A     		ldr	r3, [r0, #44]
 832 000e 43F00403 		orr	r3, r3, #4
 833 0012 C362     		str	r3, [r0, #44]
2094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Error callback */
2096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 834              		.loc 1 2096 0
 835 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 836              	.LVL49:
2097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 837              		.loc 1 2097 0
 838 0018 08BD     		pop	{r3, pc}
 839              		.cfi_endproc
 840              	.LFE152:
 842              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 843              		.align	1
 844              		.global	HAL_ADC_ConfigChannel
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	HAL_ADC_ConfigChannel:
 851              	.LFB144:
1703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 852              		.loc 1 1703 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL50:
 858 0000 30B4     		push	{r4, r5}
 859              	.LCFI9:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 54


 862              		.cfi_offset 5, -4
 863 0002 82B0     		sub	sp, sp, #8
 864              	.LCFI10:
 865              		.cfi_def_cfa_offset 16
 866              	.LVL51:
1705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 867              		.loc 1 1705 0
 868 0004 0023     		movs	r3, #0
 869 0006 0193     		str	r3, [sp, #4]
1714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 870              		.loc 1 1714 0
 871 0008 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 872 000c 012B     		cmp	r3, #1
 873 000e 00F08B80 		beq	.L80
 874 0012 0246     		mov	r2, r0
1714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 875              		.loc 1 1714 0 is_stmt 0 discriminator 2
 876 0014 0123     		movs	r3, #1
 877 0016 80F82430 		strb	r3, [r0, #36]
1719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 878              		.loc 1 1719 0 is_stmt 1 discriminator 2
 879 001a 4B68     		ldr	r3, [r1, #4]
 880 001c 062B     		cmp	r3, #6
 881 001e 29D8     		bhi	.L71
1721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
 882              		.loc 1 1721 0
 883 0020 0568     		ldr	r5, [r0]
 884 0022 686B     		ldr	r0, [r5, #52]
 885              	.LVL52:
 886 0024 03EB8303 		add	r3, r3, r3, lsl #2
 887 0028 053B     		subs	r3, r3, #5
 888 002a 1F24     		movs	r4, #31
 889 002c 9C40     		lsls	r4, r4, r3
 890 002e 20EA0400 		bic	r0, r0, r4
 891 0032 0C68     		ldr	r4, [r1]
 892 0034 04FA03F3 		lsl	r3, r4, r3
 893 0038 0343     		orrs	r3, r3, r0
 894 003a 6B63     		str	r3, [r5, #52]
 895              	.L72:
1743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 896              		.loc 1 1743 0
 897 003c 0B68     		ldr	r3, [r1]
 898 003e 092B     		cmp	r3, #9
 899 0040 38D9     		bls	.L74
1745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
 900              		.loc 1 1745 0
 901 0042 1568     		ldr	r5, [r2]
 902 0044 E868     		ldr	r0, [r5, #12]
 903 0046 03EB4303 		add	r3, r3, r3, lsl #1
 904 004a 1E3B     		subs	r3, r3, #30
 905 004c 0724     		movs	r4, #7
 906 004e 9C40     		lsls	r4, r4, r3
 907 0050 20EA0400 		bic	r0, r0, r4
 908 0054 8C68     		ldr	r4, [r1, #8]
 909 0056 04FA03F3 		lsl	r3, r4, r3
 910 005a 0343     		orrs	r3, r3, r0
 911 005c EB60     		str	r3, [r5, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 55


 912              	.L75:
1758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 913              		.loc 1 1758 0
 914 005e 0B68     		ldr	r3, [r1]
 915 0060 103B     		subs	r3, r3, #16
 916 0062 012B     		cmp	r3, #1
 917 0064 34D9     		bls	.L85
1704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 918              		.loc 1 1704 0
 919 0066 0020     		movs	r0, #0
 920              	.LVL53:
 921              	.L76:
1792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 922              		.loc 1 1792 0
 923 0068 0023     		movs	r3, #0
 924 006a 82F82430 		strb	r3, [r2, #36]
 925              	.LVL54:
 926              	.L70:
1796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 927              		.loc 1 1796 0
 928 006e 02B0     		add	sp, sp, #8
 929              	.LCFI11:
 930              		.cfi_remember_state
 931              		.cfi_def_cfa_offset 8
 932              		@ sp needed
 933 0070 30BC     		pop	{r4, r5}
 934              	.LCFI12:
 935              		.cfi_restore 5
 936              		.cfi_restore 4
 937              		.cfi_def_cfa_offset 0
 938 0072 7047     		bx	lr
 939              	.LVL55:
 940              	.L71:
 941              	.LCFI13:
 942              		.cfi_restore_state
1726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 943              		.loc 1 1726 0
 944 0074 0C2B     		cmp	r3, #12
 945 0076 0ED8     		bhi	.L73
1728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
 946              		.loc 1 1728 0
 947 0078 0568     		ldr	r5, [r0]
 948 007a 286B     		ldr	r0, [r5, #48]
 949              	.LVL56:
 950 007c 03EB8303 		add	r3, r3, r3, lsl #2
 951 0080 233B     		subs	r3, r3, #35
 952 0082 1F24     		movs	r4, #31
 953 0084 9C40     		lsls	r4, r4, r3
 954 0086 20EA0400 		bic	r0, r0, r4
 955 008a 0C68     		ldr	r4, [r1]
 956 008c 04FA03F3 		lsl	r3, r4, r3
 957 0090 0343     		orrs	r3, r3, r0
 958 0092 2B63     		str	r3, [r5, #48]
 959 0094 D2E7     		b	.L72
 960              	.LVL57:
 961              	.L73:
1735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 56


 962              		.loc 1 1735 0
 963 0096 0568     		ldr	r5, [r0]
 964 0098 E86A     		ldr	r0, [r5, #44]
 965              	.LVL58:
 966 009a 03EB8303 		add	r3, r3, r3, lsl #2
 967 009e 413B     		subs	r3, r3, #65
 968 00a0 1F24     		movs	r4, #31
 969 00a2 9C40     		lsls	r4, r4, r3
 970 00a4 20EA0400 		bic	r0, r0, r4
 971 00a8 0C68     		ldr	r4, [r1]
 972 00aa 04FA03F3 		lsl	r3, r4, r3
 973 00ae 0343     		orrs	r3, r3, r0
 974 00b0 EB62     		str	r3, [r5, #44]
 975 00b2 C3E7     		b	.L72
 976              	.L74:
1751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
 977              		.loc 1 1751 0
 978 00b4 1568     		ldr	r5, [r2]
 979 00b6 2869     		ldr	r0, [r5, #16]
 980 00b8 03EB4303 		add	r3, r3, r3, lsl #1
 981 00bc 0724     		movs	r4, #7
 982 00be 9C40     		lsls	r4, r4, r3
 983 00c0 20EA0400 		bic	r0, r0, r4
 984 00c4 8C68     		ldr	r4, [r1, #8]
 985 00c6 04FA03F3 		lsl	r3, r4, r3
 986 00ca 0343     		orrs	r3, r3, r0
 987 00cc 2B61     		str	r3, [r5, #16]
 988 00ce C6E7     		b	.L75
 989              	.L85:
1764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 990              		.loc 1 1764 0
 991 00d0 1368     		ldr	r3, [r2]
 992 00d2 1648     		ldr	r0, .L88
 993 00d4 8342     		cmp	r3, r0
 994 00d6 05D0     		beq	.L86
1785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 995              		.loc 1 1785 0
 996 00d8 936A     		ldr	r3, [r2, #40]
 997 00da 43F02003 		orr	r3, r3, #32
 998 00de 9362     		str	r3, [r2, #40]
 999              	.LVL59:
1787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1000              		.loc 1 1787 0
 1001 00e0 0120     		movs	r0, #1
 1002 00e2 C1E7     		b	.L76
 1003              	.LVL60:
 1004              	.L86:
1766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1005              		.loc 1 1766 0
 1006 00e4 9868     		ldr	r0, [r3, #8]
 1007 00e6 10F4000F 		tst	r0, #8388608
 1008 00ea 1BD1     		bne	.L82
1768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1009              		.loc 1 1768 0
 1010 00ec 9868     		ldr	r0, [r3, #8]
 1011 00ee 40F40000 		orr	r0, r0, #8388608
 1012 00f2 9860     		str	r0, [r3, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 57


1770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 1013              		.loc 1 1770 0
 1014 00f4 0B68     		ldr	r3, [r1]
 1015 00f6 102B     		cmp	r3, #16
 1016 00f8 01D0     		beq	.L87
1704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 1017              		.loc 1 1704 0
 1018 00fa 0020     		movs	r0, #0
 1019 00fc B4E7     		b	.L76
 1020              	.L87:
1774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
 1021              		.loc 1 1774 0
 1022 00fe 0C4B     		ldr	r3, .L88+4
 1023 0100 1B68     		ldr	r3, [r3]
 1024 0102 0C49     		ldr	r1, .L88+8
 1025              	.LVL61:
 1026 0104 A1FB0313 		umull	r1, r3, r1, r3
 1027 0108 9B0C     		lsrs	r3, r3, #18
 1028 010a 03EB8303 		add	r3, r3, r3, lsl #2
 1029 010e 5900     		lsls	r1, r3, #1
 1030 0110 0191     		str	r1, [sp, #4]
1775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1031              		.loc 1 1775 0
 1032 0112 02E0     		b	.L78
 1033              	.L79:
1777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
 1034              		.loc 1 1777 0
 1035 0114 019B     		ldr	r3, [sp, #4]
 1036 0116 013B     		subs	r3, r3, #1
 1037 0118 0193     		str	r3, [sp, #4]
 1038              	.L78:
1775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1039              		.loc 1 1775 0
 1040 011a 019B     		ldr	r3, [sp, #4]
 1041 011c 002B     		cmp	r3, #0
 1042 011e F9D1     		bne	.L79
1704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 1043              		.loc 1 1704 0
 1044 0120 0020     		movs	r0, #0
 1045 0122 A1E7     		b	.L76
 1046              	.LVL62:
 1047              	.L82:
 1048 0124 0020     		movs	r0, #0
 1049 0126 9FE7     		b	.L76
 1050              	.LVL63:
 1051              	.L80:
1714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1052              		.loc 1 1714 0
 1053 0128 0220     		movs	r0, #2
 1054              	.LVL64:
 1055 012a A0E7     		b	.L70
 1056              	.L89:
 1057              		.align	2
 1058              	.L88:
 1059 012c 00240140 		.word	1073816576
 1060 0130 00000000 		.word	SystemCoreClock
 1061 0134 83DE1B43 		.word	1125899907
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 58


 1062              		.cfi_endproc
 1063              	.LFE144:
 1065              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 1066              		.align	1
 1067              		.global	HAL_ADC_AnalogWDGConfig
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1071              		.fpu fpv4-sp-d16
 1073              	HAL_ADC_AnalogWDGConfig:
 1074              	.LFB145:
1813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1075              		.loc 1 1813 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              		@ link register save eliminated.
 1080              	.LVL65:
1829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1081              		.loc 1 1829 0
 1082 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1083 0004 012B     		cmp	r3, #1
 1084 0006 26D0     		beq	.L94
1813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1085              		.loc 1 1813 0 discriminator 2
 1086 0008 30B4     		push	{r4, r5}
 1087              	.LCFI14:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 4, -8
 1090              		.cfi_offset 5, -4
1829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1091              		.loc 1 1829 0 discriminator 2
 1092 000a 0123     		movs	r3, #1
 1093 000c 80F82430 		strb	r3, [r0, #36]
1834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1094              		.loc 1 1834 0 discriminator 2
 1095 0010 8B68     		ldr	r3, [r1, #8]
 1096 0012 012B     		cmp	r3, #1
 1097 0014 19D0     		beq	.L99
1842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1098              		.loc 1 1842 0
 1099 0016 0268     		ldr	r2, [r0]
 1100 0018 5368     		ldr	r3, [r2, #4]
 1101 001a 23F04003 		bic	r3, r3, #64
 1102 001e 5360     		str	r3, [r2, #4]
 1103              	.L93:
1850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
 1104              		.loc 1 1850 0
 1105 0020 0468     		ldr	r4, [r0]
 1106 0022 6268     		ldr	r2, [r4, #4]
 1107 0024 0D4B     		ldr	r3, .L100
 1108 0026 1340     		ands	r3, r3, r2
 1109 0028 0A68     		ldr	r2, [r1]
 1110 002a 4D68     		ldr	r5, [r1, #4]
 1111 002c 2A43     		orrs	r2, r2, r5
 1112 002e 1343     		orrs	r3, r3, r2
 1113 0030 6360     		str	r3, [r4, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 59


1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1114              		.loc 1 1859 0
 1115 0032 0368     		ldr	r3, [r0]
 1116 0034 CA68     		ldr	r2, [r1, #12]
 1117 0036 5A62     		str	r2, [r3, #36]
1862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1118              		.loc 1 1862 0
 1119 0038 0368     		ldr	r3, [r0]
 1120 003a 0A69     		ldr	r2, [r1, #16]
 1121 003c 9A62     		str	r2, [r3, #40]
1865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1122              		.loc 1 1865 0
 1123 003e 0023     		movs	r3, #0
 1124 0040 80F82430 		strb	r3, [r0, #36]
1868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1125              		.loc 1 1868 0
 1126 0044 1846     		mov	r0, r3
 1127              	.LVL66:
1869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1128              		.loc 1 1869 0
 1129 0046 30BC     		pop	{r4, r5}
 1130              	.LCFI15:
 1131              		.cfi_remember_state
 1132              		.cfi_restore 5
 1133              		.cfi_restore 4
 1134              		.cfi_def_cfa_offset 0
 1135 0048 7047     		bx	lr
 1136              	.LVL67:
 1137              	.L99:
 1138              	.LCFI16:
 1139              		.cfi_restore_state
1837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1140              		.loc 1 1837 0
 1141 004a 0268     		ldr	r2, [r0]
 1142 004c 5368     		ldr	r3, [r2, #4]
 1143 004e 43F04003 		orr	r3, r3, #64
 1144 0052 5360     		str	r3, [r2, #4]
 1145 0054 E4E7     		b	.L93
 1146              	.L94:
 1147              	.LCFI17:
 1148              		.cfi_def_cfa_offset 0
 1149              		.cfi_restore 4
 1150              		.cfi_restore 5
1829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1151              		.loc 1 1829 0
 1152 0056 0220     		movs	r0, #2
 1153              	.LVL68:
1869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1154              		.loc 1 1869 0
 1155 0058 7047     		bx	lr
 1156              	.L101:
 1157 005a 00BF     		.align	2
 1158              	.L100:
 1159 005c E0FD3FFF 		.word	-12583456
 1160              		.cfi_endproc
 1161              	.LFE145:
 1163              		.section	.text.HAL_ADC_GetState,"ax",%progbits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 60


 1164              		.align	1
 1165              		.global	HAL_ADC_GetState
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1169              		.fpu fpv4-sp-d16
 1171              	HAL_ADC_GetState:
 1172              	.LFB146:
1900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
 1173              		.loc 1 1900 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178              	.LVL69:
1902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1179              		.loc 1 1902 0
 1180 0000 806A     		ldr	r0, [r0, #40]
 1181              	.LVL70:
1903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1182              		.loc 1 1903 0
 1183 0002 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE146:
 1187              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 1188              		.align	1
 1189              		.global	HAL_ADC_GetError
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	HAL_ADC_GetError:
 1196              	.LFB147:
1911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
 1197              		.loc 1 1911 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202              	.LVL71:
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1203              		.loc 1 1912 0
 1204 0000 C06A     		ldr	r0, [r0, #44]
 1205              	.LVL72:
1913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1206              		.loc 1 1913 0
 1207 0002 7047     		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE147:
 1211              		.section	.text.ADC_Enable,"ax",%progbits
 1212              		.align	1
 1213              		.global	ADC_Enable
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	ADC_Enable:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 61


 1220              	.LFB148:
1935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1221              		.loc 1 1935 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              	.LVL73:
 1226 0000 30B5     		push	{r4, r5, lr}
 1227              	.LCFI18:
 1228              		.cfi_def_cfa_offset 12
 1229              		.cfi_offset 4, -12
 1230              		.cfi_offset 5, -8
 1231              		.cfi_offset 14, -4
 1232 0002 83B0     		sub	sp, sp, #12
 1233              	.LCFI19:
 1234              		.cfi_def_cfa_offset 24
 1235              	.LVL74:
1937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1236              		.loc 1 1937 0
 1237 0004 0023     		movs	r3, #0
 1238 0006 0193     		str	r3, [sp, #4]
1943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1239              		.loc 1 1943 0
 1240 0008 0368     		ldr	r3, [r0]
 1241 000a 9A68     		ldr	r2, [r3, #8]
 1242 000c 12F0010F 		tst	r2, #1
 1243 0010 2ED1     		bne	.L110
1946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1244              		.loc 1 1946 0
 1245 0012 9A68     		ldr	r2, [r3, #8]
 1246 0014 42F00102 		orr	r2, r2, #1
 1247 0018 9A60     		str	r2, [r3, #8]
1950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1248              		.loc 1 1950 0
 1249 001a 174B     		ldr	r3, .L113
 1250 001c 1B68     		ldr	r3, [r3]
 1251 001e 174A     		ldr	r2, .L113+4
 1252 0020 A2FB0323 		umull	r2, r3, r2, r3
 1253 0024 9B0C     		lsrs	r3, r3, #18
 1254 0026 0193     		str	r3, [sp, #4]
1951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1255              		.loc 1 1951 0
 1256 0028 02E0     		b	.L106
 1257              	.L107:
1953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1258              		.loc 1 1953 0
 1259 002a 019B     		ldr	r3, [sp, #4]
 1260 002c 013B     		subs	r3, r3, #1
 1261 002e 0193     		str	r3, [sp, #4]
 1262              	.L106:
1951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1263              		.loc 1 1951 0
 1264 0030 019B     		ldr	r3, [sp, #4]
 1265 0032 002B     		cmp	r3, #0
 1266 0034 F9D1     		bne	.L107
 1267 0036 0446     		mov	r4, r0
1957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 62


 1268              		.loc 1 1957 0
 1269 0038 FFF7FEFF 		bl	HAL_GetTick
 1270              	.LVL75:
 1271 003c 0546     		mov	r5, r0
 1272              	.LVL76:
 1273              	.L108:
1960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1274              		.loc 1 1960 0
 1275 003e 2368     		ldr	r3, [r4]
 1276 0040 9B68     		ldr	r3, [r3, #8]
 1277 0042 13F0010F 		tst	r3, #1
 1278 0046 11D1     		bne	.L112
1962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1279              		.loc 1 1962 0
 1280 0048 FFF7FEFF 		bl	HAL_GetTick
 1281              	.LVL77:
 1282 004c 401B     		subs	r0, r0, r5
 1283 004e 0228     		cmp	r0, #2
 1284 0050 F5D9     		bls	.L108
1965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1285              		.loc 1 1965 0
 1286 0052 A36A     		ldr	r3, [r4, #40]
 1287 0054 43F01003 		orr	r3, r3, #16
 1288 0058 A362     		str	r3, [r4, #40]
1968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1289              		.loc 1 1968 0
 1290 005a E36A     		ldr	r3, [r4, #44]
 1291 005c 43F00103 		orr	r3, r3, #1
 1292 0060 E362     		str	r3, [r4, #44]
1971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1293              		.loc 1 1971 0
 1294 0062 0023     		movs	r3, #0
 1295 0064 84F82430 		strb	r3, [r4, #36]
1973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1296              		.loc 1 1973 0
 1297 0068 0120     		movs	r0, #1
 1298 006a 02E0     		b	.L105
 1299              	.L112:
1979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1300              		.loc 1 1979 0
 1301 006c 0020     		movs	r0, #0
 1302 006e 00E0     		b	.L105
 1303              	.LVL78:
 1304              	.L110:
 1305 0070 0020     		movs	r0, #0
 1306              	.LVL79:
 1307              	.L105:
1980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1308              		.loc 1 1980 0
 1309 0072 03B0     		add	sp, sp, #12
 1310              	.LCFI20:
 1311              		.cfi_def_cfa_offset 12
 1312              		@ sp needed
 1313 0074 30BD     		pop	{r4, r5, pc}
 1314              	.L114:
 1315 0076 00BF     		.align	2
 1316              	.L113:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 63


 1317 0078 00000000 		.word	SystemCoreClock
 1318 007c 83DE1B43 		.word	1125899907
 1319              		.cfi_endproc
 1320              	.LFE148:
 1322              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1323              		.align	1
 1324              		.global	HAL_ADC_Start
 1325              		.syntax unified
 1326              		.thumb
 1327              		.thumb_func
 1328              		.fpu fpv4-sp-d16
 1330              	HAL_ADC_Start:
 1331              	.LFB130:
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1332              		.loc 1 769 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 0
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336              	.LVL80:
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1337              		.loc 1 776 0
 1338 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1339 0004 012B     		cmp	r3, #1
 1340 0006 6AD0     		beq	.L125
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1341              		.loc 1 769 0 discriminator 2
 1342 0008 10B5     		push	{r4, lr}
 1343              	.LCFI21:
 1344              		.cfi_def_cfa_offset 8
 1345              		.cfi_offset 4, -8
 1346              		.cfi_offset 14, -4
 1347 000a 0446     		mov	r4, r0
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1348              		.loc 1 776 0 discriminator 2
 1349 000c 0123     		movs	r3, #1
 1350 000e 80F82430 		strb	r3, [r0, #36]
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1351              		.loc 1 779 0 discriminator 2
 1352 0012 FFF7FEFF 		bl	ADC_Enable
 1353              	.LVL81:
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1354              		.loc 1 782 0 discriminator 2
 1355 0016 0246     		mov	r2, r0
 1356 0018 0028     		cmp	r0, #0
 1357 001a 5BD1     		bne	.L117
 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1358              		.loc 1 787 0
 1359 001c A36A     		ldr	r3, [r4, #40]
 1360 001e 23F44073 		bic	r3, r3, #768
 1361 0022 23F00103 		bic	r3, r3, #1
 1362 0026 43F48073 		orr	r3, r3, #256
 1363 002a A362     		str	r3, [r4, #40]
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1364              		.loc 1 794 0
 1365 002c 2368     		ldr	r3, [r4]
 1366 002e 2D49     		ldr	r1, .L133
 1367 0030 8B42     		cmp	r3, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 64


 1368 0032 27D0     		beq	.L130
 1369              	.L118:
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1370              		.loc 1 797 0
 1371 0034 A16A     		ldr	r1, [r4, #40]
 1372 0036 21F48011 		bic	r1, r1, #1048576
 1373 003a A162     		str	r1, [r4, #40]
 801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1374              		.loc 1 801 0
 1375 003c 5968     		ldr	r1, [r3, #4]
 1376 003e 11F4806F 		tst	r1, #1024
 1377 0042 05D0     		beq	.L120
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1378              		.loc 1 803 0
 1379 0044 A16A     		ldr	r1, [r4, #40]
 1380 0046 21F44051 		bic	r1, r1, #12288
 1381 004a 41F48051 		orr	r1, r1, #4096
 1382 004e A162     		str	r1, [r4, #40]
 1383              	.L120:
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1384              		.loc 1 820 0
 1385 0050 A16A     		ldr	r1, [r4, #40]
 1386 0052 11F4805F 		tst	r1, #4096
 1387 0056 2BD0     		beq	.L121
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1388              		.loc 1 823 0
 1389 0058 E16A     		ldr	r1, [r4, #44]
 1390 005a 21F00601 		bic	r1, r1, #6
 1391 005e E162     		str	r1, [r4, #44]
 1392              	.L122:
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1393              		.loc 1 834 0
 1394 0060 0021     		movs	r1, #0
 1395 0062 84F82410 		strb	r1, [r4, #36]
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1396              		.loc 1 838 0
 1397 0066 6FF00201 		mvn	r1, #2
 1398 006a 1960     		str	r1, [r3]
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1399              		.loc 1 850 0
 1400 006c 2368     		ldr	r3, [r4]
 1401 006e 9968     		ldr	r1, [r3, #8]
 1402 0070 01F46021 		and	r1, r1, #917504
 1403 0074 B1F5602F 		cmp	r1, #917504
 1404 0078 1DD0     		beq	.L131
 1405              	.L123:
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1406              		.loc 1 859 0
 1407 007a 9968     		ldr	r1, [r3, #8]
 1408 007c 41F48011 		orr	r1, r1, #1048576
 1409 0080 9960     		str	r1, [r3, #8]
 1410 0082 2AE0     		b	.L116
 1411              	.L130:
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1412              		.loc 1 794 0 discriminator 1
 1413 0084 A1F58061 		sub	r1, r1, #1024
 1414 0088 4968     		ldr	r1, [r1, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 65


 1415 008a 11F4702F 		tst	r1, #983040
 1416 008e D1D0     		beq	.L118
 809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1417              		.loc 1 809 0
 1418 0090 A16A     		ldr	r1, [r4, #40]
 1419 0092 41F48011 		orr	r1, r1, #1048576
 1420 0096 A162     		str	r1, [r4, #40]
 813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1421              		.loc 1 813 0
 1422 0098 1349     		ldr	r1, .L133+4
 1423 009a 4968     		ldr	r1, [r1, #4]
 1424 009c 11F4806F 		tst	r1, #1024
 1425 00a0 D6D0     		beq	.L120
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1426              		.loc 1 815 0
 1427 00a2 A16A     		ldr	r1, [r4, #40]
 1428 00a4 21F44051 		bic	r1, r1, #12288
 1429 00a8 41F48051 		orr	r1, r1, #4096
 1430 00ac A162     		str	r1, [r4, #40]
 1431 00ae CFE7     		b	.L120
 1432              	.L121:
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1433              		.loc 1 828 0
 1434 00b0 0021     		movs	r1, #0
 1435 00b2 E162     		str	r1, [r4, #44]
 1436 00b4 D4E7     		b	.L122
 1437              	.L131:
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1438              		.loc 1 850 0 discriminator 1
 1439 00b6 0B49     		ldr	r1, .L133
 1440 00b8 8B42     		cmp	r3, r1
 1441 00ba 04D0     		beq	.L132
 1442              	.L124:
 854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1443              		.loc 1 854 0
 1444 00bc 9968     		ldr	r1, [r3, #8]
 1445 00be 41F4A001 		orr	r1, r1, #5242880
 1446 00c2 9960     		str	r1, [r3, #8]
 1447 00c4 09E0     		b	.L116
 1448              	.L132:
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1449              		.loc 1 851 0 discriminator 2
 1450 00c6 A1F58061 		sub	r1, r1, #1024
 1451 00ca 4968     		ldr	r1, [r1, #4]
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1452              		.loc 1 850 0 discriminator 2
 1453 00cc 11F4702F 		tst	r1, #983040
 1454 00d0 D3D1     		bne	.L123
 1455 00d2 F3E7     		b	.L124
 1456              	.L117:
 865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1457              		.loc 1 865 0
 1458 00d4 0023     		movs	r3, #0
 1459 00d6 84F82430 		strb	r3, [r4, #36]
 1460              	.L116:
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1461              		.loc 1 870 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 66


 1462 00da 1046     		mov	r0, r2
 1463              	.LVL82:
 1464 00dc 10BD     		pop	{r4, pc}
 1465              	.LVL83:
 1466              	.L125:
 1467              	.LCFI22:
 1468              		.cfi_def_cfa_offset 0
 1469              		.cfi_restore 4
 1470              		.cfi_restore 14
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1471              		.loc 1 776 0
 1472 00de 0222     		movs	r2, #2
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1473              		.loc 1 870 0
 1474 00e0 1046     		mov	r0, r2
 1475              	.LVL84:
 1476 00e2 7047     		bx	lr
 1477              	.L134:
 1478              		.align	2
 1479              	.L133:
 1480 00e4 00280140 		.word	1073817600
 1481 00e8 00240140 		.word	1073816576
 1482              		.cfi_endproc
 1483              	.LFE130:
 1485              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1486              		.align	1
 1487              		.global	HAL_ADC_Start_IT
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1491              		.fpu fpv4-sp-d16
 1493              	HAL_ADC_Start_IT:
 1494              	.LFB134:
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1495              		.loc 1 1106 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL85:
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1500              		.loc 1 1113 0
 1501 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1502 0004 012B     		cmp	r3, #1
 1503 0006 6FD0     		beq	.L145
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1504              		.loc 1 1106 0 discriminator 2
 1505 0008 10B5     		push	{r4, lr}
 1506              	.LCFI23:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 1510 000a 0446     		mov	r4, r0
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1511              		.loc 1 1113 0 discriminator 2
 1512 000c 0123     		movs	r3, #1
 1513 000e 80F82430 		strb	r3, [r0, #36]
1116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 67


 1514              		.loc 1 1116 0 discriminator 2
 1515 0012 FFF7FEFF 		bl	ADC_Enable
 1516              	.LVL86:
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1517              		.loc 1 1119 0 discriminator 2
 1518 0016 0246     		mov	r2, r0
 1519 0018 0028     		cmp	r0, #0
 1520 001a 60D1     		bne	.L137
1124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1521              		.loc 1 1124 0
 1522 001c A36A     		ldr	r3, [r4, #40]
 1523 001e 23F47063 		bic	r3, r3, #3840
 1524 0022 23F00103 		bic	r3, r3, #1
 1525 0026 43F48073 		orr	r3, r3, #256
 1526 002a A362     		str	r3, [r4, #40]
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1527              		.loc 1 1131 0
 1528 002c 2368     		ldr	r3, [r4]
 1529 002e 3049     		ldr	r1, .L153
 1530 0030 8B42     		cmp	r3, r1
 1531 0032 2CD0     		beq	.L150
 1532              	.L138:
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1533              		.loc 1 1134 0
 1534 0034 A16A     		ldr	r1, [r4, #40]
 1535 0036 21F48011 		bic	r1, r1, #1048576
 1536 003a A162     		str	r1, [r4, #40]
1138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1537              		.loc 1 1138 0
 1538 003c 5968     		ldr	r1, [r3, #4]
 1539 003e 11F4806F 		tst	r1, #1024
 1540 0042 05D0     		beq	.L140
1140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1541              		.loc 1 1140 0
 1542 0044 A16A     		ldr	r1, [r4, #40]
 1543 0046 21F44051 		bic	r1, r1, #12288
 1544 004a 41F48051 		orr	r1, r1, #4096
 1545 004e A162     		str	r1, [r4, #40]
 1546              	.L140:
1157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1547              		.loc 1 1157 0
 1548 0050 A16A     		ldr	r1, [r4, #40]
 1549 0052 11F4805F 		tst	r1, #4096
 1550 0056 30D0     		beq	.L141
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1551              		.loc 1 1160 0
 1552 0058 E16A     		ldr	r1, [r4, #44]
 1553 005a 21F00601 		bic	r1, r1, #6
 1554 005e E162     		str	r1, [r4, #44]
 1555              	.L142:
1171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1556              		.loc 1 1171 0
 1557 0060 0021     		movs	r1, #0
 1558 0062 84F82410 		strb	r1, [r4, #36]
1175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1559              		.loc 1 1175 0
 1560 0066 6FF00201 		mvn	r1, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 68


 1561 006a 1960     		str	r1, [r3]
1178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1562              		.loc 1 1178 0
 1563 006c 2168     		ldr	r1, [r4]
 1564 006e 4B68     		ldr	r3, [r1, #4]
 1565 0070 43F02003 		orr	r3, r3, #32
 1566 0074 4B60     		str	r3, [r1, #4]
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1567              		.loc 1 1187 0
 1568 0076 2368     		ldr	r3, [r4]
 1569 0078 9968     		ldr	r1, [r3, #8]
 1570 007a 01F46021 		and	r1, r1, #917504
 1571 007e B1F5602F 		cmp	r1, #917504
 1572 0082 1DD0     		beq	.L151
 1573              	.L143:
1196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1574              		.loc 1 1196 0
 1575 0084 9968     		ldr	r1, [r3, #8]
 1576 0086 41F48011 		orr	r1, r1, #1048576
 1577 008a 9960     		str	r1, [r3, #8]
 1578 008c 2AE0     		b	.L136
 1579              	.L150:
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1580              		.loc 1 1131 0 discriminator 1
 1581 008e A1F58061 		sub	r1, r1, #1024
 1582 0092 4968     		ldr	r1, [r1, #4]
 1583 0094 11F4702F 		tst	r1, #983040
 1584 0098 CCD0     		beq	.L138
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1585              		.loc 1 1146 0
 1586 009a A16A     		ldr	r1, [r4, #40]
 1587 009c 41F48011 		orr	r1, r1, #1048576
 1588 00a0 A162     		str	r1, [r4, #40]
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1589              		.loc 1 1150 0
 1590 00a2 1449     		ldr	r1, .L153+4
 1591 00a4 4968     		ldr	r1, [r1, #4]
 1592 00a6 11F4806F 		tst	r1, #1024
 1593 00aa D1D0     		beq	.L140
1152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1594              		.loc 1 1152 0
 1595 00ac A16A     		ldr	r1, [r4, #40]
 1596 00ae 21F44051 		bic	r1, r1, #12288
 1597 00b2 41F48051 		orr	r1, r1, #4096
 1598 00b6 A162     		str	r1, [r4, #40]
 1599 00b8 CAE7     		b	.L140
 1600              	.L141:
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1601              		.loc 1 1165 0
 1602 00ba 0021     		movs	r1, #0
 1603 00bc E162     		str	r1, [r4, #44]
 1604 00be CFE7     		b	.L142
 1605              	.L151:
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1606              		.loc 1 1187 0 discriminator 1
 1607 00c0 0B49     		ldr	r1, .L153
 1608 00c2 8B42     		cmp	r3, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 69


 1609 00c4 04D0     		beq	.L152
 1610              	.L144:
1191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1611              		.loc 1 1191 0
 1612 00c6 9968     		ldr	r1, [r3, #8]
 1613 00c8 41F4A001 		orr	r1, r1, #5242880
 1614 00cc 9960     		str	r1, [r3, #8]
 1615 00ce 09E0     		b	.L136
 1616              	.L152:
1188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1617              		.loc 1 1188 0 discriminator 2
 1618 00d0 A1F58061 		sub	r1, r1, #1024
 1619 00d4 4968     		ldr	r1, [r1, #4]
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1620              		.loc 1 1187 0 discriminator 2
 1621 00d6 11F4702F 		tst	r1, #983040
 1622 00da D3D1     		bne	.L143
 1623 00dc F3E7     		b	.L144
 1624              	.L137:
1202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1625              		.loc 1 1202 0
 1626 00de 0023     		movs	r3, #0
 1627 00e0 84F82430 		strb	r3, [r4, #36]
 1628              	.L136:
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1629              		.loc 1 1207 0
 1630 00e4 1046     		mov	r0, r2
 1631              	.LVL87:
 1632 00e6 10BD     		pop	{r4, pc}
 1633              	.LVL88:
 1634              	.L145:
 1635              	.LCFI24:
 1636              		.cfi_def_cfa_offset 0
 1637              		.cfi_restore 4
 1638              		.cfi_restore 14
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1639              		.loc 1 1113 0
 1640 00e8 0222     		movs	r2, #2
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1641              		.loc 1 1207 0
 1642 00ea 1046     		mov	r0, r2
 1643              	.LVL89:
 1644 00ec 7047     		bx	lr
 1645              	.L154:
 1646 00ee 00BF     		.align	2
 1647              	.L153:
 1648 00f0 00280140 		.word	1073817600
 1649 00f4 00240140 		.word	1073816576
 1650              		.cfi_endproc
 1651              	.LFE134:
 1653              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1654              		.align	1
 1655              		.global	HAL_ADC_Start_DMA
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1659              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 70


 1661              	HAL_ADC_Start_DMA:
 1662              	.LFB136:
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1663              		.loc 1 1274 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              	.LVL90:
 1668 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1669              	.LCFI25:
 1670              		.cfi_def_cfa_offset 24
 1671              		.cfi_offset 3, -24
 1672              		.cfi_offset 4, -20
 1673              		.cfi_offset 5, -16
 1674              		.cfi_offset 6, -12
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677              	.LVL91:
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1678              		.loc 1 1283 0
 1679 0002 0468     		ldr	r4, [r0]
 1680 0004 454D     		ldr	r5, .L171
 1681 0006 AC42     		cmp	r4, r5
 1682 0008 5BD0     		beq	.L156
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1683              		.loc 1 1283 0 is_stmt 0 discriminator 1
 1684 000a 454B     		ldr	r3, .L171+4
 1685 000c 9C42     		cmp	r4, r3
 1686 000e 58D0     		beq	.L156
 1687              	.L157:
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1688              		.loc 1 1286 0 is_stmt 1
 1689 0010 90F82440 		ldrb	r4, [r0, #36]	@ zero_extendqisi2
 1690 0014 012C     		cmp	r4, #1
 1691 0016 7ED0     		beq	.L167
 1692 0018 1646     		mov	r6, r2
 1693 001a 0D46     		mov	r5, r1
 1694 001c 0446     		mov	r4, r0
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1695              		.loc 1 1286 0 is_stmt 0 discriminator 2
 1696 001e 0123     		movs	r3, #1
 1697 0020 80F82430 		strb	r3, [r0, #36]
1289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1698              		.loc 1 1289 0 is_stmt 1 discriminator 2
 1699 0024 FFF7FEFF 		bl	ADC_Enable
 1700              	.LVL92:
1292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1701              		.loc 1 1292 0 discriminator 2
 1702 0028 0746     		mov	r7, r0
 1703 002a 0028     		cmp	r0, #0
 1704 002c 6ED1     		bne	.L159
1297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1705              		.loc 1 1297 0
 1706 002e A36A     		ldr	r3, [r4, #40]
 1707 0030 23F47063 		bic	r3, r3, #3840
 1708 0034 23F00103 		bic	r3, r3, #1
 1709 0038 43F48073 		orr	r3, r3, #256
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 71


 1710 003c A362     		str	r3, [r4, #40]
1304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1711              		.loc 1 1304 0
 1712 003e 2268     		ldr	r2, [r4]
 1713 0040 374B     		ldr	r3, .L171+4
 1714 0042 9A42     		cmp	r2, r3
 1715 0044 44D0     		beq	.L169
 1716              	.L160:
1307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1717              		.loc 1 1307 0
 1718 0046 A36A     		ldr	r3, [r4, #40]
 1719 0048 23F48013 		bic	r3, r3, #1048576
 1720 004c A362     		str	r3, [r4, #40]
1311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1721              		.loc 1 1311 0
 1722 004e 5368     		ldr	r3, [r2, #4]
 1723 0050 13F4806F 		tst	r3, #1024
 1724 0054 05D0     		beq	.L162
1313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1725              		.loc 1 1313 0
 1726 0056 A36A     		ldr	r3, [r4, #40]
 1727 0058 23F44053 		bic	r3, r3, #12288
 1728 005c 43F48053 		orr	r3, r3, #4096
 1729 0060 A362     		str	r3, [r4, #40]
 1730              	.L162:
1330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1731              		.loc 1 1330 0
 1732 0062 A36A     		ldr	r3, [r4, #40]
 1733 0064 13F4805F 		tst	r3, #4096
 1734 0068 48D0     		beq	.L163
1333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1735              		.loc 1 1333 0
 1736 006a E36A     		ldr	r3, [r4, #44]
 1737 006c 23F00603 		bic	r3, r3, #6
 1738 0070 E362     		str	r3, [r4, #44]
 1739              	.L164:
1344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1740              		.loc 1 1344 0
 1741 0072 0023     		movs	r3, #0
 1742 0074 84F82430 		strb	r3, [r4, #36]
1347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1743              		.loc 1 1347 0
 1744 0078 236A     		ldr	r3, [r4, #32]
 1745 007a 2A4A     		ldr	r2, .L171+8
 1746 007c 9A62     		str	r2, [r3, #40]
1350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1747              		.loc 1 1350 0
 1748 007e 236A     		ldr	r3, [r4, #32]
 1749 0080 294A     		ldr	r2, .L171+12
 1750 0082 DA62     		str	r2, [r3, #44]
1353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1751              		.loc 1 1353 0
 1752 0084 236A     		ldr	r3, [r4, #32]
 1753 0086 294A     		ldr	r2, .L171+16
 1754 0088 1A63     		str	r2, [r3, #48]
1362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1755              		.loc 1 1362 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 72


 1756 008a 2368     		ldr	r3, [r4]
 1757 008c 6FF00202 		mvn	r2, #2
 1758 0090 1A60     		str	r2, [r3]
1365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1759              		.loc 1 1365 0
 1760 0092 2268     		ldr	r2, [r4]
 1761 0094 9368     		ldr	r3, [r2, #8]
 1762 0096 43F48073 		orr	r3, r3, #256
 1763 009a 9360     		str	r3, [r2, #8]
1368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1764              		.loc 1 1368 0
 1765 009c 2168     		ldr	r1, [r4]
 1766 009e 3346     		mov	r3, r6
 1767 00a0 2A46     		mov	r2, r5
 1768 00a2 4C31     		adds	r1, r1, #76
 1769 00a4 206A     		ldr	r0, [r4, #32]
 1770              	.LVL93:
 1771 00a6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1772              	.LVL94:
1374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1773              		.loc 1 1374 0
 1774 00aa 2268     		ldr	r2, [r4]
 1775 00ac 9368     		ldr	r3, [r2, #8]
 1776 00ae 03F46023 		and	r3, r3, #917504
 1777 00b2 B3F5602F 		cmp	r3, #917504
 1778 00b6 24D0     		beq	.L170
1382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1779              		.loc 1 1382 0
 1780 00b8 9368     		ldr	r3, [r2, #8]
 1781 00ba 43F48013 		orr	r3, r3, #1048576
 1782 00be 9360     		str	r3, [r2, #8]
 1783 00c0 27E0     		b	.L158
 1784              	.LVL95:
 1785              	.L156:
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1786              		.loc 1 1283 0 discriminator 3
 1787 00c2 164B     		ldr	r3, .L171
 1788 00c4 5B68     		ldr	r3, [r3, #4]
 1789 00c6 13F4702F 		tst	r3, #983040
 1790 00ca A1D0     		beq	.L157
1393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1791              		.loc 1 1393 0
 1792 00cc 0127     		movs	r7, #1
 1793 00ce 20E0     		b	.L158
 1794              	.LVL96:
 1795              	.L169:
1304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1796              		.loc 1 1304 0 discriminator 1
 1797 00d0 A3F58063 		sub	r3, r3, #1024
 1798 00d4 5B68     		ldr	r3, [r3, #4]
 1799 00d6 13F4702F 		tst	r3, #983040
 1800 00da B4D0     		beq	.L160
1319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1801              		.loc 1 1319 0
 1802 00dc A36A     		ldr	r3, [r4, #40]
 1803 00de 43F48013 		orr	r3, r3, #1048576
 1804 00e2 A362     		str	r3, [r4, #40]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 73


1323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1805              		.loc 1 1323 0
 1806 00e4 0D4B     		ldr	r3, .L171
 1807 00e6 5B68     		ldr	r3, [r3, #4]
 1808 00e8 13F4806F 		tst	r3, #1024
 1809 00ec B9D0     		beq	.L162
1325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1810              		.loc 1 1325 0
 1811 00ee A36A     		ldr	r3, [r4, #40]
 1812 00f0 23F44053 		bic	r3, r3, #12288
 1813 00f4 43F48053 		orr	r3, r3, #4096
 1814 00f8 A362     		str	r3, [r4, #40]
 1815 00fa B2E7     		b	.L162
 1816              	.L163:
1338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1817              		.loc 1 1338 0
 1818 00fc 0023     		movs	r3, #0
 1819 00fe E362     		str	r3, [r4, #44]
 1820 0100 B7E7     		b	.L164
 1821              	.LVL97:
 1822              	.L170:
1377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1823              		.loc 1 1377 0
 1824 0102 9368     		ldr	r3, [r2, #8]
 1825 0104 43F4A003 		orr	r3, r3, #5242880
 1826 0108 9360     		str	r3, [r2, #8]
 1827 010a 02E0     		b	.L158
 1828              	.LVL98:
 1829              	.L159:
1388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1830              		.loc 1 1388 0
 1831 010c 0023     		movs	r3, #0
 1832 010e 84F82430 		strb	r3, [r4, #36]
 1833              	.LVL99:
 1834              	.L158:
1398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1835              		.loc 1 1398 0
 1836 0112 3846     		mov	r0, r7
 1837 0114 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1838              	.LVL100:
 1839              	.L167:
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1840              		.loc 1 1286 0
 1841 0116 0227     		movs	r7, #2
 1842 0118 FBE7     		b	.L158
 1843              	.L172:
 1844 011a 00BF     		.align	2
 1845              	.L171:
 1846 011c 00240140 		.word	1073816576
 1847 0120 00280140 		.word	1073817600
 1848 0124 00000000 		.word	ADC_DMAConvCplt
 1849 0128 00000000 		.word	ADC_DMAHalfConvCplt
 1850 012c 00000000 		.word	ADC_DMAError
 1851              		.cfi_endproc
 1852              	.LFE136:
 1854              		.section	.text.ADC_ConversionStop_Disable,"ax",%progbits
 1855              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 74


 1856              		.global	ADC_ConversionStop_Disable
 1857              		.syntax unified
 1858              		.thumb
 1859              		.thumb_func
 1860              		.fpu fpv4-sp-d16
 1862              	ADC_ConversionStop_Disable:
 1863              	.LFB149:
1990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1864              		.loc 1 1990 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              	.LVL101:
 1869 0000 38B5     		push	{r3, r4, r5, lr}
 1870              	.LCFI26:
 1871              		.cfi_def_cfa_offset 16
 1872              		.cfi_offset 3, -16
 1873              		.cfi_offset 4, -12
 1874              		.cfi_offset 5, -8
 1875              		.cfi_offset 14, -4
 1876              	.LVL102:
1994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1877              		.loc 1 1994 0
 1878 0002 0368     		ldr	r3, [r0]
 1879 0004 9A68     		ldr	r2, [r3, #8]
 1880 0006 12F0010F 		tst	r2, #1
 1881 000a 01D1     		bne	.L179
2019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1882              		.loc 1 2019 0
 1883 000c 0020     		movs	r0, #0
 1884              	.LVL103:
 1885              	.L174:
2020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1886              		.loc 1 2020 0
 1887 000e 38BD     		pop	{r3, r4, r5, pc}
 1888              	.LVL104:
 1889              	.L179:
 1890 0010 0446     		mov	r4, r0
1997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 1891              		.loc 1 1997 0
 1892 0012 9A68     		ldr	r2, [r3, #8]
 1893 0014 22F00102 		bic	r2, r2, #1
 1894 0018 9A60     		str	r2, [r3, #8]
2000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1895              		.loc 1 2000 0
 1896 001a FFF7FEFF 		bl	HAL_GetTick
 1897              	.LVL105:
 1898 001e 0546     		mov	r5, r0
 1899              	.LVL106:
 1900              	.L175:
2003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1901              		.loc 1 2003 0
 1902 0020 2368     		ldr	r3, [r4]
 1903 0022 9B68     		ldr	r3, [r3, #8]
 1904 0024 13F0010F 		tst	r3, #1
 1905 0028 0ED0     		beq	.L180
2005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 75


 1906              		.loc 1 2005 0
 1907 002a FFF7FEFF 		bl	HAL_GetTick
 1908              	.LVL107:
 1909 002e 401B     		subs	r0, r0, r5
 1910 0030 0228     		cmp	r0, #2
 1911 0032 F5D9     		bls	.L175
2008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1912              		.loc 1 2008 0
 1913 0034 A36A     		ldr	r3, [r4, #40]
 1914 0036 43F01003 		orr	r3, r3, #16
 1915 003a A362     		str	r3, [r4, #40]
2011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1916              		.loc 1 2011 0
 1917 003c E36A     		ldr	r3, [r4, #44]
 1918 003e 43F00103 		orr	r3, r3, #1
 1919 0042 E362     		str	r3, [r4, #44]
2013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1920              		.loc 1 2013 0
 1921 0044 0120     		movs	r0, #1
 1922 0046 E2E7     		b	.L174
 1923              	.L180:
2019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1924              		.loc 1 2019 0
 1925 0048 0020     		movs	r0, #0
 1926 004a E0E7     		b	.L174
 1927              		.cfi_endproc
 1928              	.LFE149:
 1930              		.section	.text.HAL_ADC_Init,"ax",%progbits
 1931              		.align	1
 1932              		.global	HAL_ADC_Init
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv4-sp-d16
 1938              	HAL_ADC_Init:
 1939              	.LFB126:
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1940              		.loc 1 375 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 0, uses_anonymous_args = 0
 1944              	.LVL108:
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1945              		.loc 1 382 0
 1946 0000 0028     		cmp	r0, #0
 1947 0002 00F08A80 		beq	.L193
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1948              		.loc 1 375 0
 1949 0006 70B5     		push	{r4, r5, r6, lr}
 1950              	.LCFI27:
 1951              		.cfi_def_cfa_offset 16
 1952              		.cfi_offset 4, -16
 1953              		.cfi_offset 5, -12
 1954              		.cfi_offset 6, -8
 1955              		.cfi_offset 14, -4
 1956 0008 0446     		mov	r4, r0
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 76


 1957              		.loc 1 411 0
 1958 000a 836A     		ldr	r3, [r0, #40]
 1959 000c 002B     		cmp	r3, #0
 1960 000e 36D0     		beq	.L200
 1961              	.LVL109:
 1962              	.L183:
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1963              		.loc 1 428 0
 1964 0010 2046     		mov	r0, r4
 1965 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1966              	.LVL110:
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1967              		.loc 1 433 0
 1968 0016 A36A     		ldr	r3, [r4, #40]
 1969 0018 13F01003 		ands	r3, r3, #16
 1970 001c 77D1     		bne	.L184
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1971              		.loc 1 433 0 is_stmt 0 discriminator 1
 1972 001e 0028     		cmp	r0, #0
 1973 0020 75D1     		bne	.L184
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1974              		.loc 1 437 0 is_stmt 1
 1975 0022 A26A     		ldr	r2, [r4, #40]
 1976 0024 22F48852 		bic	r2, r2, #4352
 1977 0028 22F00202 		bic	r2, r2, #2
 1978 002c 42F00202 		orr	r2, r2, #2
 1979 0030 A262     		str	r2, [r4, #40]
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 1980              		.loc 1 453 0
 1981 0032 6268     		ldr	r2, [r4, #4]
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1982              		.loc 1 454 0
 1983 0034 2568     		ldr	r5, [r4]
 1984 0036 3A49     		ldr	r1, .L205
 1985 0038 8D42     		cmp	r5, r1
 1986 003a 26D0     		beq	.L201
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1987              		.loc 1 454 0 is_stmt 0 discriminator 2
 1988 003c E169     		ldr	r1, [r4, #28]
 1989              	.L186:
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 1990              		.loc 1 453 0 is_stmt 1
 1991 003e 0A43     		orrs	r2, r2, r1
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1992              		.loc 1 455 0
 1993 0040 E668     		ldr	r6, [r4, #12]
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 1994              		.loc 1 454 0
 1995 0042 42EA4602 		orr	r2, r2, r6, lsl #1
 1996              	.LVL111:
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1997              		.loc 1 461 0
 1998 0046 A168     		ldr	r1, [r4, #8]
 1999 0048 B1F5807F 		cmp	r1, #256
 2000 004c 27D0     		beq	.L194
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2001              		.loc 1 461 0 is_stmt 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 77


 2002 004e 0129     		cmp	r1, #1
 2003 0050 22D0     		beq	.L202
 2004              	.L187:
 2005              	.LVL112:
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2006              		.loc 1 466 0 is_stmt 1 discriminator 6
 2007 0052 6169     		ldr	r1, [r4, #20]
 2008 0054 0129     		cmp	r1, #1
 2009 0056 25D0     		beq	.L203
 2010              	.L188:
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2011              		.loc 1 489 0
 2012 0058 6968     		ldr	r1, [r5, #4]
 2013 005a 21F46941 		bic	r1, r1, #59648
 2014 005e 0B43     		orrs	r3, r3, r1
 2015              	.LVL113:
 2016 0060 6B60     		str	r3, [r5, #4]
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2017              		.loc 1 496 0
 2018 0062 2168     		ldr	r1, [r4]
 2019 0064 8D68     		ldr	r5, [r1, #8]
 2020 0066 2F4B     		ldr	r3, .L205+4
 2021 0068 2B40     		ands	r3, r3, r5
 2022 006a 1343     		orrs	r3, r3, r2
 2023 006c 8B60     		str	r3, [r1, #8]
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2024              		.loc 1 512 0
 2025 006e A368     		ldr	r3, [r4, #8]
 2026 0070 B3F5807F 		cmp	r3, #256
 2027 0074 27D0     		beq	.L190
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2028              		.loc 1 512 0 is_stmt 0 discriminator 1
 2029 0076 012B     		cmp	r3, #1
 2030 0078 25D0     		beq	.L190
 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2031              		.loc 1 379 0 is_stmt 1
 2032 007a 0021     		movs	r1, #0
 2033 007c 26E0     		b	.L191
 2034              	.LVL114:
 2035              	.L200:
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2036              		.loc 1 414 0
 2037 007e C362     		str	r3, [r0, #44]
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2038              		.loc 1 417 0
 2039 0080 80F82430 		strb	r3, [r0, #36]
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2040              		.loc 1 420 0
 2041 0084 FFF7FEFF 		bl	HAL_ADC_MspInit
 2042              	.LVL115:
 2043 0088 C2E7     		b	.L183
 2044              	.LVL116:
 2045              	.L201:
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 2046              		.loc 1 454 0 discriminator 1
 2047 008a E169     		ldr	r1, [r4, #28]
 2048 008c B1F5402F 		cmp	r1, #786432
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 78


 2049 0090 D5D1     		bne	.L186
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 2050              		.loc 1 454 0 is_stmt 0
 2051 0092 4FF40021 		mov	r1, #524288
 2052 0096 D2E7     		b	.L186
 2053              	.LVL117:
 2054              	.L202:
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2055              		.loc 1 461 0 is_stmt 1
 2056 0098 4FF48073 		mov	r3, #256
 2057 009c D9E7     		b	.L187
 2058              	.L194:
 2059 009e 4FF48073 		mov	r3, #256
 2060 00a2 D6E7     		b	.L187
 2061              	.LVL118:
 2062              	.L203:
 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 2063              		.loc 1 468 0
 2064 00a4 36B9     		cbnz	r6, .L189
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 2065              		.loc 1 472 0
 2066 00a6 A169     		ldr	r1, [r4, #24]
 2067 00a8 0139     		subs	r1, r1, #1
 2068 00aa 43EA4133 		orr	r3, r3, r1, lsl #13
 2069              	.LVL119:
 2070 00ae 43F40063 		orr	r3, r3, #2048
 2071              	.LVL120:
 2072 00b2 D1E7     		b	.L188
 2073              	.L189:
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2074              		.loc 1 481 0
 2075 00b4 A16A     		ldr	r1, [r4, #40]
 2076 00b6 41F02001 		orr	r1, r1, #32
 2077 00ba A162     		str	r1, [r4, #40]
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 2078              		.loc 1 484 0
 2079 00bc E16A     		ldr	r1, [r4, #44]
 2080 00be 41F00101 		orr	r1, r1, #1
 2081 00c2 E162     		str	r1, [r4, #44]
 2082 00c4 C8E7     		b	.L188
 2083              	.LVL121:
 2084              	.L190:
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2085              		.loc 1 514 0
 2086 00c6 2369     		ldr	r3, [r4, #16]
 2087 00c8 013B     		subs	r3, r3, #1
 2088 00ca 1905     		lsls	r1, r3, #20
 2089              	.LVL122:
 2090              	.L191:
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 2091              		.loc 1 517 0
 2092 00cc 2568     		ldr	r5, [r4]
 2093 00ce EB6A     		ldr	r3, [r5, #44]
 2094 00d0 23F47003 		bic	r3, r3, #15728640
 2095 00d4 0B43     		orrs	r3, r3, r1
 2096 00d6 EB62     		str	r3, [r5, #44]
 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 79


 2097              		.loc 1 527 0
 2098 00d8 2368     		ldr	r3, [r4]
 2099 00da 9968     		ldr	r1, [r3, #8]
 2100              	.LVL123:
 2101 00dc 124B     		ldr	r3, .L205+8
 2102 00de 0B40     		ands	r3, r3, r1
 2103 00e0 9A42     		cmp	r2, r3
 2104 00e2 0BD0     		beq	.L204
 544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2105              		.loc 1 544 0
 2106 00e4 A36A     		ldr	r3, [r4, #40]
 2107 00e6 23F01203 		bic	r3, r3, #18
 2108 00ea 43F01003 		orr	r3, r3, #16
 2109 00ee A362     		str	r3, [r4, #40]
 549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2110              		.loc 1 549 0
 2111 00f0 E36A     		ldr	r3, [r4, #44]
 2112 00f2 43F00103 		orr	r3, r3, #1
 2113 00f6 E362     		str	r3, [r4, #44]
 2114              	.LVL124:
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2115              		.loc 1 551 0
 2116 00f8 0120     		movs	r0, #1
 2117 00fa 0DE0     		b	.L182
 2118              	.LVL125:
 2119              	.L204:
 534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2120              		.loc 1 534 0
 2121 00fc 0023     		movs	r3, #0
 2122 00fe E362     		str	r3, [r4, #44]
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2123              		.loc 1 537 0
 2124 0100 A36A     		ldr	r3, [r4, #40]
 2125 0102 23F00303 		bic	r3, r3, #3
 2126 0106 43F00103 		orr	r3, r3, #1
 2127 010a A362     		str	r3, [r4, #40]
 2128 010c 04E0     		b	.L182
 2129              	.LVL126:
 2130              	.L184:
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2131              		.loc 1 558 0
 2132 010e A36A     		ldr	r3, [r4, #40]
 2133 0110 43F01003 		orr	r3, r3, #16
 2134 0114 A362     		str	r3, [r4, #40]
 2135              	.LVL127:
 560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2136              		.loc 1 560 0
 2137 0116 0120     		movs	r0, #1
 2138              	.LVL128:
 2139              	.L182:
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2140              		.loc 1 565 0
 2141 0118 70BD     		pop	{r4, r5, r6, pc}
 2142              	.LVL129:
 2143              	.L193:
 2144              	.LCFI28:
 2145              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 80


 2146              		.cfi_restore 4
 2147              		.cfi_restore 5
 2148              		.cfi_restore 6
 2149              		.cfi_restore 14
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2150              		.loc 1 384 0
 2151 011a 0120     		movs	r0, #1
 2152              	.LVL130:
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2153              		.loc 1 565 0
 2154 011c 7047     		bx	lr
 2155              	.L206:
 2156 011e 00BF     		.align	2
 2157              	.L205:
 2158 0120 003C0140 		.word	1073822720
 2159 0124 FDF7E1FF 		.word	-1968131
 2160 0128 FE0E1FFF 		.word	-14741762
 2161              		.cfi_endproc
 2162              	.LFE126:
 2164              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2165              		.align	1
 2166              		.global	HAL_ADC_DeInit
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu fpv4-sp-d16
 2172              	HAL_ADC_DeInit:
 2173              	.LFB127:
 576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2174              		.loc 1 576 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL131:
 2179 0000 38B5     		push	{r3, r4, r5, lr}
 2180              	.LCFI29:
 2181              		.cfi_def_cfa_offset 16
 2182              		.cfi_offset 3, -16
 2183              		.cfi_offset 4, -12
 2184              		.cfi_offset 5, -8
 2185              		.cfi_offset 14, -4
 2186              	.LVL132:
 580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2187              		.loc 1 580 0
 2188 0002 0028     		cmp	r0, #0
 2189 0004 74D0     		beq	.L210
 2190 0006 0446     		mov	r4, r0
 589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2191              		.loc 1 589 0
 2192 0008 836A     		ldr	r3, [r0, #40]
 2193 000a 43F00203 		orr	r3, r3, #2
 2194 000e 8362     		str	r3, [r0, #40]
 593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2195              		.loc 1 593 0
 2196 0010 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2197              	.LVL133:
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 81


 2198              		.loc 1 598 0
 2199 0014 0546     		mov	r5, r0
 2200 0016 20B1     		cbz	r0, .L212
 2201              	.LVL134:
 2202              	.L209:
 702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2203              		.loc 1 702 0
 2204 0018 0023     		movs	r3, #0
 2205 001a 84F82430 		strb	r3, [r4, #36]
 2206              	.LVL135:
 2207              	.L208:
 706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2208              		.loc 1 706 0
 2209 001e 2846     		mov	r0, r5
 2210 0020 38BD     		pop	{r3, r4, r5, pc}
 2211              	.LVL136:
 2212              	.L212:
 606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 2213              		.loc 1 606 0
 2214 0022 2368     		ldr	r3, [r4]
 2215 0024 6FF01F02 		mvn	r2, #31
 2216 0028 1A60     		str	r2, [r3]
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 2217              		.loc 1 610 0
 2218 002a 2268     		ldr	r2, [r4]
 2219 002c 5168     		ldr	r1, [r2, #4]
 2220 002e 314B     		ldr	r3, .L213
 2221 0030 0B40     		ands	r3, r3, r1
 2222 0032 5360     		str	r3, [r2, #4]
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 2223              		.loc 1 616 0
 2224 0034 2268     		ldr	r2, [r4]
 2225 0036 9168     		ldr	r1, [r2, #8]
 2226 0038 2F4B     		ldr	r3, .L213+4
 2227 003a 0B40     		ands	r3, r3, r1
 2228 003c 9360     		str	r3, [r2, #8]
 623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 2229              		.loc 1 623 0
 2230 003e 2268     		ldr	r2, [r4]
 2231 0040 D368     		ldr	r3, [r2, #12]
 2232 0042 03F07F43 		and	r3, r3, #-16777216
 2233 0046 D360     		str	r3, [r2, #12]
 628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 2234              		.loc 1 628 0
 2235 0048 2268     		ldr	r2, [r4]
 2236 004a 1369     		ldr	r3, [r2, #16]
 2237 004c 03F04043 		and	r3, r3, #-1073741824
 2238 0050 1361     		str	r3, [r2, #16]
 634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 2239              		.loc 1 634 0
 2240 0052 2268     		ldr	r2, [r4]
 2241 0054 5369     		ldr	r3, [r2, #20]
 2242 0056 23F47F63 		bic	r3, r3, #4080
 2243 005a 23F00F03 		bic	r3, r3, #15
 2244 005e 5361     		str	r3, [r2, #20]
 636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 2245              		.loc 1 636 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 82


 2246 0060 2268     		ldr	r2, [r4]
 2247 0062 9369     		ldr	r3, [r2, #24]
 2248 0064 23F47F63 		bic	r3, r3, #4080
 2249 0068 23F00F03 		bic	r3, r3, #15
 2250 006c 9361     		str	r3, [r2, #24]
 638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 2251              		.loc 1 638 0
 2252 006e 2268     		ldr	r2, [r4]
 2253 0070 D369     		ldr	r3, [r2, #28]
 2254 0072 23F47F63 		bic	r3, r3, #4080
 2255 0076 23F00F03 		bic	r3, r3, #15
 2256 007a D361     		str	r3, [r2, #28]
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2257              		.loc 1 640 0
 2258 007c 2268     		ldr	r2, [r4]
 2259 007e 136A     		ldr	r3, [r2, #32]
 2260 0080 23F47F63 		bic	r3, r3, #4080
 2261 0084 23F00F03 		bic	r3, r3, #15
 2262 0088 1362     		str	r3, [r2, #32]
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 2263              		.loc 1 643 0
 2264 008a 2268     		ldr	r2, [r4]
 2265 008c 536A     		ldr	r3, [r2, #36]
 2266 008e 23F47F63 		bic	r3, r3, #4080
 2267 0092 23F00F03 		bic	r3, r3, #15
 2268 0096 5362     		str	r3, [r2, #36]
 645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2269              		.loc 1 645 0
 2270 0098 2268     		ldr	r2, [r4]
 2271 009a 936A     		ldr	r3, [r2, #40]
 2272 009c 23F47F63 		bic	r3, r3, #4080
 2273 00a0 23F00F03 		bic	r3, r3, #15
 2274 00a4 9362     		str	r3, [r2, #40]
 648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2275              		.loc 1 648 0
 2276 00a6 2268     		ldr	r2, [r4]
 2277 00a8 D36A     		ldr	r3, [r2, #44]
 2278 00aa 03F07F43 		and	r3, r3, #-16777216
 2279 00ae D362     		str	r3, [r2, #44]
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2280              		.loc 1 653 0
 2281 00b0 2268     		ldr	r2, [r4]
 2282 00b2 D36A     		ldr	r3, [r2, #44]
 2283 00b4 03F07F43 		and	r3, r3, #-16777216
 2284 00b8 D362     		str	r3, [r2, #44]
 658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 2285              		.loc 1 658 0
 2286 00ba 2268     		ldr	r2, [r4]
 2287 00bc 136B     		ldr	r3, [r2, #48]
 2288 00be 03F04043 		and	r3, r3, #-1073741824
 2289 00c2 1363     		str	r3, [r2, #48]
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 2290              		.loc 1 662 0
 2291 00c4 2268     		ldr	r2, [r4]
 2292 00c6 536B     		ldr	r3, [r2, #52]
 2293 00c8 03F04043 		and	r3, r3, #-1073741824
 2294 00cc 5363     		str	r3, [r2, #52]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 83


 666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2295              		.loc 1 666 0
 2296 00ce 2268     		ldr	r2, [r4]
 2297 00d0 936B     		ldr	r3, [r2, #56]
 2298 00d2 9B0D     		lsrs	r3, r3, #22
 2299 00d4 9B05     		lsls	r3, r3, #22
 2300 00d6 9363     		str	r3, [r2, #56]
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2301              		.loc 1 671 0
 2302 00d8 2268     		ldr	r2, [r4]
 2303 00da 936B     		ldr	r3, [r2, #56]
 2304 00dc 9B0D     		lsrs	r3, r3, #22
 2305 00de 9B05     		lsls	r3, r3, #22
 2306 00e0 9363     		str	r3, [r2, #56]
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2307              		.loc 1 691 0
 2308 00e2 2046     		mov	r0, r4
 2309              	.LVL137:
 2310 00e4 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2311              	.LVL138:
 694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2312              		.loc 1 694 0
 2313 00e8 0023     		movs	r3, #0
 2314 00ea E362     		str	r3, [r4, #44]
 697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2315              		.loc 1 697 0
 2316 00ec A362     		str	r3, [r4, #40]
 2317 00ee 93E7     		b	.L209
 2318              	.LVL139:
 2319              	.L210:
 582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2320              		.loc 1 582 0
 2321 00f0 0125     		movs	r5, #1
 2322 00f2 94E7     		b	.L208
 2323              	.L214:
 2324              		.align	2
 2325              	.L213:
 2326 00f4 00003FFF 		.word	-12648448
 2327 00f8 F00601FF 		.word	-16709904
 2328              		.cfi_endproc
 2329              	.LFE127:
 2331              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 2332              		.align	1
 2333              		.global	HAL_ADC_Stop
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu fpv4-sp-d16
 2339              	HAL_ADC_Stop:
 2340              	.LFB131:
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2341              		.loc 1 882 0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345              	.LVL140:
 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 84


 2346              		.loc 1 889 0
 2347 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2348 0004 012B     		cmp	r3, #1
 2349 0006 15D0     		beq	.L218
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2350              		.loc 1 882 0 discriminator 2
 2351 0008 10B5     		push	{r4, lr}
 2352              	.LCFI30:
 2353              		.cfi_def_cfa_offset 8
 2354              		.cfi_offset 4, -8
 2355              		.cfi_offset 14, -4
 2356 000a 0446     		mov	r4, r0
 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2357              		.loc 1 889 0 discriminator 2
 2358 000c 0123     		movs	r3, #1
 2359 000e 80F82430 		strb	r3, [r0, #36]
 893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2360              		.loc 1 893 0 discriminator 2
 2361 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2362              	.LVL141:
 896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2363              		.loc 1 896 0 discriminator 2
 2364 0016 0246     		mov	r2, r0
 2365 0018 38B9     		cbnz	r0, .L217
 899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2366              		.loc 1 899 0
 2367 001a A36A     		ldr	r3, [r4, #40]
 2368 001c 23F48853 		bic	r3, r3, #4352
 2369 0020 23F00103 		bic	r3, r3, #1
 2370 0024 43F00103 		orr	r3, r3, #1
 2371 0028 A362     		str	r3, [r4, #40]
 2372              	.L217:
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2373              		.loc 1 905 0
 2374 002a 0023     		movs	r3, #0
 2375 002c 84F82430 		strb	r3, [r4, #36]
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2376              		.loc 1 909 0
 2377 0030 1046     		mov	r0, r2
 2378              	.LVL142:
 2379 0032 10BD     		pop	{r4, pc}
 2380              	.LVL143:
 2381              	.L218:
 2382              	.LCFI31:
 2383              		.cfi_def_cfa_offset 0
 2384              		.cfi_restore 4
 2385              		.cfi_restore 14
 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2386              		.loc 1 889 0
 2387 0034 0222     		movs	r2, #2
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2388              		.loc 1 909 0
 2389 0036 1046     		mov	r0, r2
 2390              	.LVL144:
 2391 0038 7047     		bx	lr
 2392              		.cfi_endproc
 2393              	.LFE131:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 85


 2395              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2396              		.align	1
 2397              		.global	HAL_ADC_Stop_IT
 2398              		.syntax unified
 2399              		.thumb
 2400              		.thumb_func
 2401              		.fpu fpv4-sp-d16
 2403              	HAL_ADC_Stop_IT:
 2404              	.LFB135:
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2405              		.loc 1 1217 0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 2409              	.LVL145:
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2410              		.loc 1 1224 0
 2411 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2412 0004 012B     		cmp	r3, #1
 2413 0006 1AD0     		beq	.L226
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2414              		.loc 1 1217 0 discriminator 2
 2415 0008 10B5     		push	{r4, lr}
 2416              	.LCFI32:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 4, -8
 2419              		.cfi_offset 14, -4
 2420 000a 0446     		mov	r4, r0
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2421              		.loc 1 1224 0 discriminator 2
 2422 000c 0123     		movs	r3, #1
 2423 000e 80F82430 		strb	r3, [r0, #36]
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2424              		.loc 1 1228 0 discriminator 2
 2425 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2426              	.LVL146:
1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2427              		.loc 1 1231 0 discriminator 2
 2428 0016 0246     		mov	r2, r0
 2429 0018 60B9     		cbnz	r0, .L225
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2430              		.loc 1 1234 0
 2431 001a 2168     		ldr	r1, [r4]
 2432 001c 4B68     		ldr	r3, [r1, #4]
 2433 001e 23F02003 		bic	r3, r3, #32
 2434 0022 4B60     		str	r3, [r1, #4]
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2435              		.loc 1 1237 0
 2436 0024 A36A     		ldr	r3, [r4, #40]
 2437 0026 23F48853 		bic	r3, r3, #4352
 2438 002a 23F00103 		bic	r3, r3, #1
 2439 002e 43F00103 		orr	r3, r3, #1
 2440 0032 A362     		str	r3, [r4, #40]
 2441              	.L225:
1243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2442              		.loc 1 1243 0
 2443 0034 0023     		movs	r3, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 86


 2444 0036 84F82430 		strb	r3, [r4, #36]
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2445              		.loc 1 1247 0
 2446 003a 1046     		mov	r0, r2
 2447              	.LVL147:
 2448 003c 10BD     		pop	{r4, pc}
 2449              	.LVL148:
 2450              	.L226:
 2451              	.LCFI33:
 2452              		.cfi_def_cfa_offset 0
 2453              		.cfi_restore 4
 2454              		.cfi_restore 14
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2455              		.loc 1 1224 0
 2456 003e 0222     		movs	r2, #2
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2457              		.loc 1 1247 0
 2458 0040 1046     		mov	r0, r2
 2459              	.LVL149:
 2460 0042 7047     		bx	lr
 2461              		.cfi_endproc
 2462              	.LFE135:
 2464              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2465              		.align	1
 2466              		.global	HAL_ADC_Stop_DMA
 2467              		.syntax unified
 2468              		.thumb
 2469              		.thumb_func
 2470              		.fpu fpv4-sp-d16
 2472              	HAL_ADC_Stop_DMA:
 2473              	.LFB137:
1415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2474              		.loc 1 1415 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 0
 2477              		@ frame_needed = 0, uses_anonymous_args = 0
 2478              	.LVL150:
1422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2479              		.loc 1 1422 0
 2480 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 2481 0004 012B     		cmp	r3, #1
 2482 0006 25D0     		beq	.L235
1415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2483              		.loc 1 1415 0 discriminator 2
 2484 0008 10B5     		push	{r4, lr}
 2485              	.LCFI34:
 2486              		.cfi_def_cfa_offset 8
 2487              		.cfi_offset 4, -8
 2488              		.cfi_offset 14, -4
 2489 000a 0446     		mov	r4, r0
1422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2490              		.loc 1 1422 0 discriminator 2
 2491 000c 0123     		movs	r3, #1
 2492 000e 80F82430 		strb	r3, [r0, #36]
1426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2493              		.loc 1 1426 0 discriminator 2
 2494 0012 FFF7FEFF 		bl	ADC_ConversionStop_Disable
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 87


 2495              	.LVL151:
1429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2496              		.loc 1 1429 0 discriminator 2
 2497 0016 0346     		mov	r3, r0
 2498 0018 20B1     		cbz	r0, .L240
 2499              	.L233:
 2500              	.LVL152:
1454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2501              		.loc 1 1454 0
 2502 001a 0022     		movs	r2, #0
 2503 001c 84F82420 		strb	r2, [r4, #36]
1458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2504              		.loc 1 1458 0
 2505 0020 1846     		mov	r0, r3
 2506 0022 10BD     		pop	{r4, pc}
 2507              	.LVL153:
 2508              	.L240:
1432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2509              		.loc 1 1432 0
 2510 0024 2268     		ldr	r2, [r4]
 2511 0026 9368     		ldr	r3, [r2, #8]
 2512 0028 23F48073 		bic	r3, r3, #256
 2513 002c 9360     		str	r3, [r2, #8]
1436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2514              		.loc 1 1436 0
 2515 002e 206A     		ldr	r0, [r4, #32]
 2516              	.LVL154:
 2517 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 2518              	.LVL155:
1439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2519              		.loc 1 1439 0
 2520 0034 0346     		mov	r3, r0
 2521 0036 40B9     		cbnz	r0, .L234
1442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2522              		.loc 1 1442 0
 2523 0038 A26A     		ldr	r2, [r4, #40]
 2524 003a 22F48852 		bic	r2, r2, #4352
 2525 003e 22F00102 		bic	r2, r2, #1
 2526 0042 42F00102 		orr	r2, r2, #1
 2527 0046 A262     		str	r2, [r4, #40]
 2528 0048 E7E7     		b	.L233
 2529              	.L234:
1449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2530              		.loc 1 1449 0
 2531 004a A26A     		ldr	r2, [r4, #40]
 2532 004c 42F04002 		orr	r2, r2, #64
 2533 0050 A262     		str	r2, [r4, #40]
 2534 0052 E2E7     		b	.L233
 2535              	.LVL156:
 2536              	.L235:
 2537              	.LCFI35:
 2538              		.cfi_def_cfa_offset 0
 2539              		.cfi_restore 4
 2540              		.cfi_restore 14
1422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2541              		.loc 1 1422 0
 2542 0054 0223     		movs	r3, #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 88


1458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2543              		.loc 1 1458 0
 2544 0056 1846     		mov	r0, r3
 2545              	.LVL157:
 2546 0058 7047     		bx	lr
 2547              		.cfi_endproc
 2548              	.LFE137:
 2550              		.text
 2551              	.Letext0:
 2552              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 2553              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 2554              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 2555              		.file 5 "Inc/system_at32f4xx.h"
 2556              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 2557              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 2558              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 2559              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 2560              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 2561              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2562              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2563              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2564              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 2565              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 2566              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:17     .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:24     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:39     .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:46     .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:60     .text.HAL_ADC_PollForConversion:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:67     .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:322    .text.HAL_ADC_PollForConversion:000000000000015c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:331    .text.HAL_ADC_PollForEvent:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:338    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:408    .text.HAL_ADC_GetValue:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:415    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:433    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:440    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:454    .text.ADC_DMAConvCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:461    .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:532    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:539    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:553    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:560    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:584    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:591    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:605    .text.HAL_ADC_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:612    .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:783    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:790    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:804    .text.ADC_DMAError:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:811    .text.ADC_DMAError:0000000000000000 ADC_DMAError
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:843    .text.HAL_ADC_ConfigChannel:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:850    .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1059   .text.HAL_ADC_ConfigChannel:000000000000012c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1066   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1073   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1159   .text.HAL_ADC_AnalogWDGConfig:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1164   .text.HAL_ADC_GetState:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1171   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1188   .text.HAL_ADC_GetError:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1195   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1212   .text.ADC_Enable:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1219   .text.ADC_Enable:0000000000000000 ADC_Enable
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1317   .text.ADC_Enable:0000000000000078 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1323   .text.HAL_ADC_Start:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1330   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1480   .text.HAL_ADC_Start:00000000000000e4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1486   .text.HAL_ADC_Start_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1493   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1648   .text.HAL_ADC_Start_IT:00000000000000f0 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1654   .text.HAL_ADC_Start_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1661   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1846   .text.HAL_ADC_Start_DMA:000000000000011c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1855   .text.ADC_ConversionStop_Disable:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1862   .text.ADC_ConversionStop_Disable:0000000000000000 ADC_ConversionStop_Disable
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1931   .text.HAL_ADC_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:1938   .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2158   .text.HAL_ADC_Init:0000000000000120 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2165   .text.HAL_ADC_DeInit:0000000000000000 $t
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s 			page 90


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2172   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2326   .text.HAL_ADC_DeInit:00000000000000f4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2332   .text.HAL_ADC_Stop:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2339   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2396   .text.HAL_ADC_Stop_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2403   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2465   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc75bicO.s:2472   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
SystemCoreClock
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
