ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f1xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	HAL_MspInit:
  25              	.LFB128:
  26              		.file 1 "Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @version V1.1.1
   6:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @date    12-May-2017
   7:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  10:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  11:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  14:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  15:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  18:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  22:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  23:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  24:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  25:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  28:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 2


  33:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  39:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  50:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  51:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  52:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  53:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  55:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  56:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  57:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  58:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  59:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  60:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  63:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  64:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  70:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  71:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  72:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  73:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  74:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.1
  75:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  76:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  77:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  78:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  79:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  80:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  81:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  82:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  83:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  84:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  86:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  87:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  88:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  89:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 3


  90:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  91:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  94:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  95:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  96:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  97:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  98:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****           is needed and the backup domain when enabled.
 119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority. 
 122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked. 
 135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 4


 147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization 
 152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *            
 153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC) || defined(AT32F403Rx_HD)
 166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 5


 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   
 205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     
 208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initializes the MSP.
 214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 217 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
  32              		.loc 1 221 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE128:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HAL_MspDeInit:
  46              	.LFB129:
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
  47              		.loc 1 228 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
  52              		.loc 1 232 0
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE129:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 6


  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	HAL_DeInit:
  66              	.LFB127:
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 192 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 10B5     		push	{r4, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  76              		.loc 1 194 0
  77 0002 064B     		ldr	r3, .L5
  78 0004 4FF0FF32 		mov	r2, #-1
  79 0008 DA60     		str	r2, [r3, #12]
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  80              		.loc 1 195 0
  81 000a 0024     		movs	r4, #0
  82 000c 1C61     		str	r4, [r3, #16]
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  83              		.loc 1 197 0
  84 000e DA60     		str	r2, [r3, #12]
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85              		.loc 1 198 0
  86 0010 DC60     		str	r4, [r3, #12]
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     
  87              		.loc 1 206 0
  88 0012 FFF7FEFF 		bl	HAL_MspDeInit
  89              	.LVL0:
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
  90              		.loc 1 210 0
  91 0016 2046     		mov	r0, r4
  92 0018 10BD     		pop	{r4, pc}
  93              	.L6:
  94 001a 00BF     		.align	2
  95              	.L5:
  96 001c 00100240 		.word	1073876992
  97              		.cfi_endproc
  98              	.LFE127:
 100              		.section	.text.HAL_InitTick,"ax",%progbits
 101              		.align	1
 102              		.weak	HAL_InitTick
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	HAL_InitTick:
 109              	.LFB130:
 233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 7


 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base. 
 236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 110              		.loc 1 251 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL1:
 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
 120 0002 0446     		mov	r4, r0
 252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 121              		.loc 1 253 0
 122 0004 074B     		ldr	r3, .L9
 123 0006 1868     		ldr	r0, [r3]
 124              	.LVL2:
 125 0008 074B     		ldr	r3, .L9+4
 126 000a A3FB0030 		umull	r3, r0, r3, r0
 127 000e 8009     		lsrs	r0, r0, #6
 128 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 129              	.LVL3:
 254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 130              		.loc 1 256 0
 131 0014 0022     		movs	r2, #0
 132 0016 2146     		mov	r1, r4
 133 0018 4FF0FF30 		mov	r0, #-1
 134 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 135              	.LVL4:
 257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 136              		.loc 1 260 0
 137 0020 0020     		movs	r0, #0
 138 0022 10BD     		pop	{r4, pc}
 139              	.LVL5:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 8


 140              	.L10:
 141              		.align	2
 142              	.L9:
 143 0024 00000000 		.word	SystemCoreClock
 144 0028 D34D6210 		.word	274877907
 145              		.cfi_endproc
 146              	.LFE130:
 148              		.section	.text.HAL_Init,"ax",%progbits
 149              		.align	1
 150              		.global	HAL_Init
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	HAL_Init:
 157              	.LFB126:
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 158              		.loc 1 159 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 08B5     		push	{r3, lr}
 163              	.LCFI2:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 3, -8
 166              		.cfi_offset 14, -4
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 167              		.loc 1 168 0
 168 0002 074A     		ldr	r2, .L13
 169 0004 1368     		ldr	r3, [r2]
 170 0006 43F01003 		orr	r3, r3, #16
 171 000a 1360     		str	r3, [r2]
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172              		.loc 1 173 0
 173 000c 0320     		movs	r0, #3
 174 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 175              	.LVL6:
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 176              		.loc 1 176 0
 177 0012 0020     		movs	r0, #0
 178 0014 FFF7FEFF 		bl	HAL_InitTick
 179              	.LVL7:
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 180              		.loc 1 179 0
 181 0018 FFF7FEFF 		bl	HAL_MspInit
 182              	.LVL8:
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 183              		.loc 1 183 0
 184 001c 0020     		movs	r0, #0
 185 001e 08BD     		pop	{r3, pc}
 186              	.L14:
 187              		.align	2
 188              	.L13:
 189 0020 00200240 		.word	1073881088
 190              		.cfi_endproc
 191              	.LFE126:
 193              		.section	.text.HAL_IncTick,"ax",%progbits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 9


 194              		.align	1
 195              		.weak	HAL_IncTick
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	HAL_IncTick:
 202              	.LFB131:
 261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in Systick ISR.
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 203              		.loc 1 299 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick++;
 208              		.loc 1 300 0
 209 0000 024A     		ldr	r2, .L16
 210 0002 1368     		ldr	r3, [r2]
 211 0004 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 10


 212 0006 1360     		str	r3, [r2]
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 213              		.loc 1 301 0
 214 0008 7047     		bx	lr
 215              	.L17:
 216 000a 00BF     		.align	2
 217              	.L16:
 218 000c 00000000 		.word	uwTick
 219              		.cfi_endproc
 220              	.LFE131:
 222              		.section	.text.HAL_GetTick,"ax",%progbits
 223              		.align	1
 224              		.weak	HAL_GetTick
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	HAL_GetTick:
 231              	.LFB132:
 302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak  to be overwritten  in case of other 
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 232              		.loc 1 310 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 237              		.loc 1 311 0
 238 0000 014B     		ldr	r3, .L19
 239 0002 1868     		ldr	r0, [r3]
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 240              		.loc 1 312 0
 241 0004 7047     		bx	lr
 242              	.L20:
 243 0006 00BF     		.align	2
 244              	.L19:
 245 0008 00000000 		.word	uwTick
 246              		.cfi_endproc
 247              	.LFE132:
 249              		.section	.text.HAL_Delay,"ax",%progbits
 250              		.align	1
 251              		.weak	HAL_Delay
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	HAL_Delay:
 258              	.LFB133:
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 11


 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 259              		.loc 1 326 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 8
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              	.LVL9:
 264 0000 30B5     		push	{r4, r5, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 12
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 14, -4
 270 0002 83B0     		sub	sp, sp, #12
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 24
 273 0004 0190     		str	r0, [sp, #4]
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 274              		.loc 1 327 0
 275 0006 FFF7FEFF 		bl	HAL_GetTick
 276              	.LVL10:
 277 000a 0546     		mov	r5, r0
 278              	.LVL11:
 328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 279              		.loc 1 328 0
 280 000c 019C     		ldr	r4, [sp, #4]
 281              	.LVL12:
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   
 330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a period to guarantee minimum wait */
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 282              		.loc 1 331 0
 283 000e B4F1FF3F 		cmp	r4, #-1
 284 0012 00D0     		beq	.L23
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****      wait++;
 285              		.loc 1 333 0
 286 0014 0134     		adds	r4, r4, #1
 287              	.LVL13:
 288              	.L23:
 334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   
 336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 289              		.loc 1 336 0 discriminator 1
 290 0016 FFF7FEFF 		bl	HAL_GetTick
 291              	.LVL14:
 292 001a 401B     		subs	r0, r0, r5
 293 001c A042     		cmp	r0, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 12


 294 001e FAD3     		bcc	.L23
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 295              		.loc 1 339 0
 296 0020 03B0     		add	sp, sp, #12
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 12
 299              		@ sp needed
 300 0022 30BD     		pop	{r4, r5, pc}
 301              		.cfi_endproc
 302              	.LFE133:
 304              		.section	.text.HAL_SuspendTick,"ax",%progbits
 305              		.align	1
 306              		.weak	HAL_SuspendTick
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	HAL_SuspendTick:
 313              	.LFB134:
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 314              		.loc 1 352 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   //TODO Does this work for AT32F403Rx_HD?
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 319              		.loc 1 355 0
 320 0000 024A     		ldr	r2, .L26
 321 0002 1368     		ldr	r3, [r2]
 322 0004 23F00203 		bic	r3, r3, #2
 323 0008 1360     		str	r3, [r2]
 356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 324              		.loc 1 356 0
 325 000a 7047     		bx	lr
 326              	.L27:
 327              		.align	2
 328              	.L26:
 329 000c 10E000E0 		.word	-536813552
 330              		.cfi_endproc
 331              	.LFE134:
 333              		.section	.text.HAL_ResumeTick,"ax",%progbits
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 13


 334              		.align	1
 335              		.weak	HAL_ResumeTick
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	HAL_ResumeTick:
 342              	.LFB135:
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 343              		.loc 1 369 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 348              		.loc 1 371 0
 349 0000 024A     		ldr	r2, .L29
 350 0002 1368     		ldr	r3, [r2]
 351 0004 43F00203 		orr	r3, r3, #2
 352 0008 1360     		str	r3, [r2]
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 353              		.loc 1 372 0
 354 000a 7047     		bx	lr
 355              	.L30:
 356              		.align	2
 357              	.L29:
 358 000c 10E000E0 		.word	-536813552
 359              		.cfi_endproc
 360              	.LFE135:
 362              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 363              		.align	1
 364              		.global	HAL_GetHalVersion
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	HAL_GetHalVersion:
 371              	.LFB136:
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 14


 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 372              		.loc 1 379 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****  return __STM32F1xx_HAL_VERSION;
 381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 377              		.loc 1 381 0
 378 0000 0048     		ldr	r0, .L32
 379 0002 7047     		bx	lr
 380              	.L33:
 381              		.align	2
 382              	.L32:
 383 0004 00010101 		.word	16843008
 384              		.cfi_endproc
 385              	.LFE136:
 387              		.section	.text.HAL_GetREVID,"ax",%progbits
 388              		.align	1
 389              		.global	HAL_GetREVID
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	HAL_GetREVID:
 396              	.LFB137:
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 397              		.loc 1 395 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   return((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 402              		.loc 1 396 0
 403 0000 014B     		ldr	r3, .L35
 404 0002 1868     		ldr	r0, [r3]
 397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 405              		.loc 1 397 0
 406 0004 000C     		lsrs	r0, r0, #16
 407 0006 7047     		bx	lr
 408              	.L36:
 409              		.align	2
 410              	.L35:
 411 0008 002004E0 		.word	-536600576
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 15


 412              		.cfi_endproc
 413              	.LFE137:
 415              		.section	.text.HAL_GetDEVID,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_GetDEVID
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	HAL_GetDEVID:
 424              	.LFB138:
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 425              		.loc 1 411 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 430              		.loc 1 412 0
 431 0000 024B     		ldr	r3, .L38
 432 0002 1868     		ldr	r0, [r3]
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 433              		.loc 1 413 0
 434 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 435 0008 7047     		bx	lr
 436              	.L39:
 437 000a 00BF     		.align	2
 438              	.L38:
 439 000c 002004E0 		.word	-536600576
 440              		.cfi_endproc
 441              	.LFE138:
 443              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 444              		.align	1
 445              		.global	HAL_DBGMCU_EnableDBGSleepMode
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	HAL_DBGMCU_EnableDBGSleepMode:
 452              	.LFB139:
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 16


 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 453              		.loc 1 420 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 458              		.loc 1 421 0
 459 0000 024A     		ldr	r2, .L41
 460 0002 5368     		ldr	r3, [r2, #4]
 461 0004 43F00103 		orr	r3, r3, #1
 462 0008 5360     		str	r3, [r2, #4]
 422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 463              		.loc 1 422 0
 464 000a 7047     		bx	lr
 465              	.L42:
 466              		.align	2
 467              	.L41:
 468 000c 002004E0 		.word	-536600576
 469              		.cfi_endproc
 470              	.LFE139:
 472              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 473              		.align	1
 474              		.global	HAL_DBGMCU_DisableDBGSleepMode
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu fpv4-sp-d16
 480              	HAL_DBGMCU_DisableDBGSleepMode:
 481              	.LFB140:
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 482              		.loc 1 436 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 487              		.loc 1 437 0
 488 0000 024A     		ldr	r2, .L44
 489 0002 5368     		ldr	r3, [r2, #4]
 490 0004 23F00103 		bic	r3, r3, #1
 491 0008 5360     		str	r3, [r2, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 17


 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 492              		.loc 1 438 0
 493 000a 7047     		bx	lr
 494              	.L45:
 495              		.align	2
 496              	.L44:
 497 000c 002004E0 		.word	-536600576
 498              		.cfi_endproc
 499              	.LFE140:
 501              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 502              		.align	1
 503              		.global	HAL_DBGMCU_EnableDBGStopMode
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu fpv4-sp-d16
 509              	HAL_DBGMCU_EnableDBGStopMode:
 510              	.LFB141:
 439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode 
 451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer 
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode  
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 511              		.loc 1 466 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 516              		.loc 1 467 0
 517 0000 024A     		ldr	r2, .L47
 518 0002 5368     		ldr	r3, [r2, #4]
 519 0004 43F00203 		orr	r3, r3, #2
 520 0008 5360     		str	r3, [r2, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 18


 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 521              		.loc 1 468 0
 522 000a 7047     		bx	lr
 523              	.L48:
 524              		.align	2
 525              	.L47:
 526 000c 002004E0 		.word	-536600576
 527              		.cfi_endproc
 528              	.LFE141:
 530              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_DBGMCU_DisableDBGStopMode
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	HAL_DBGMCU_DisableDBGStopMode:
 539              	.LFB142:
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 540              		.loc 1 482 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 545              		.loc 1 483 0
 546 0000 024A     		ldr	r2, .L50
 547 0002 5368     		ldr	r3, [r2, #4]
 548 0004 23F00203 		bic	r3, r3, #2
 549 0008 5360     		str	r3, [r2, #4]
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 550              		.loc 1 484 0
 551 000a 7047     		bx	lr
 552              	.L51:
 553              		.align	2
 554              	.L50:
 555 000c 002004E0 		.word	-536600576
 556              		.cfi_endproc
 557              	.LFE142:
 559              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 560              		.align	1
 561              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 562              		.syntax unified
 563              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 19


 564              		.thumb_func
 565              		.fpu fpv4-sp-d16
 567              	HAL_DBGMCU_EnableDBGStandbyMode:
 568              	.LFB143:
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 569              		.loc 1 498 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 574              		.loc 1 499 0
 575 0000 024A     		ldr	r2, .L53
 576 0002 5368     		ldr	r3, [r2, #4]
 577 0004 43F00403 		orr	r3, r3, #4
 578 0008 5360     		str	r3, [r2, #4]
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 579              		.loc 1 500 0
 580 000a 7047     		bx	lr
 581              	.L54:
 582              		.align	2
 583              	.L53:
 584 000c 002004E0 		.word	-536600576
 585              		.cfi_endproc
 586              	.LFE143:
 588              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	HAL_DBGMCU_DisableDBGStandbyMode:
 597              	.LFB144:
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 20


 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 598              		.loc 1 514 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 603              		.loc 1 515 0
 604 0000 024A     		ldr	r2, .L56
 605 0002 5368     		ldr	r3, [r2, #4]
 606 0004 23F00403 		bic	r3, r3, #4
 607 0008 5360     		str	r3, [r2, #4]
 516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 608              		.loc 1 516 0
 609 000a 7047     		bx	lr
 610              	.L57:
 611              		.align	2
 612              	.L56:
 613 000c 002004E0 		.word	-536600576
 614              		.cfi_endproc
 615              	.LFE144:
 617              		.section	.text.HAL_GetUID,"ax",%progbits
 618              		.align	1
 619              		.global	HAL_GetUID
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 623              		.fpu fpv4-sp-d16
 625              	HAL_GetUID:
 626              	.LFB145:
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** 
 518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID: pointer to 3 words array.
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** {
 627              		.loc 1 524 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL15:
 525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 633              		.loc 1 525 0
 634 0000 044B     		ldr	r3, .L59
 635 0002 1B68     		ldr	r3, [r3]
 636 0004 0360     		str	r3, [r0]
 526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 637              		.loc 1 526 0
 638 0006 044B     		ldr	r3, .L59+4
 639 0008 1B68     		ldr	r3, [r3]
 640 000a 4360     		str	r3, [r0, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 21


 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 641              		.loc 1 527 0
 642 000c 034B     		ldr	r3, .L59+8
 643 000e 1B68     		ldr	r3, [r3]
 644 0010 8360     		str	r3, [r0, #8]
 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal.c **** }
 645              		.loc 1 528 0
 646 0012 7047     		bx	lr
 647              	.L60:
 648              		.align	2
 649              	.L59:
 650 0014 E8F7FF1F 		.word	536868840
 651 0018 ECF7FF1F 		.word	536868844
 652 001c F0F7FF1F 		.word	536868848
 653              		.cfi_endproc
 654              	.LFE145:
 656              		.comm	uwTick,4,4
 657              		.text
 658              	.Letext0:
 659              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 660              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 661              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 662              		.file 5 "Inc/system_at32f4xx.h"
 663              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 664              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 665              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 666              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 667              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 668              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 669              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:17     .text.HAL_MspInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:38     .text.HAL_MspDeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:58     .text.HAL_DeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:65     .text.HAL_DeInit:0000000000000000 HAL_DeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:96     .text.HAL_DeInit:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:101    .text.HAL_InitTick:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:108    .text.HAL_InitTick:0000000000000000 HAL_InitTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:143    .text.HAL_InitTick:0000000000000024 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:149    .text.HAL_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:156    .text.HAL_Init:0000000000000000 HAL_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:189    .text.HAL_Init:0000000000000020 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:194    .text.HAL_IncTick:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:201    .text.HAL_IncTick:0000000000000000 HAL_IncTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:218    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:223    .text.HAL_GetTick:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:230    .text.HAL_GetTick:0000000000000000 HAL_GetTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:245    .text.HAL_GetTick:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:250    .text.HAL_Delay:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:257    .text.HAL_Delay:0000000000000000 HAL_Delay
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:305    .text.HAL_SuspendTick:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:312    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:329    .text.HAL_SuspendTick:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:334    .text.HAL_ResumeTick:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:341    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:358    .text.HAL_ResumeTick:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:363    .text.HAL_GetHalVersion:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:370    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:383    .text.HAL_GetHalVersion:0000000000000004 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:388    .text.HAL_GetREVID:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:395    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:411    .text.HAL_GetREVID:0000000000000008 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:416    .text.HAL_GetDEVID:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:423    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:439    .text.HAL_GetDEVID:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:444    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:451    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:468    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:473    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:480    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:497    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:502    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:509    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:526    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:531    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:538    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:555    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:560    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:567    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:584    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:589    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:596    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:613    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s 			page 23


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:618    .text.HAL_GetUID:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:625    .text.HAL_GetUID:0000000000000000 HAL_GetUID
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc6z1lDl.s:650    .text.HAL_GetUID:0000000000000014 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
