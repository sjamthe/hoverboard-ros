ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f1xx_hal_uart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	UART_EndTxTransfer:
  24              	.LFB170:
  25              		.file 1 "Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @version V1.1.1
   6:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @date    12-May-2017
   7:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  13:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  14:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  15:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  17:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  18:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  19:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  20:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  21:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  22:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART pins (TX as alternate function pull-up, RX as alternate functi
  27:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 2


  34:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  38:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  41:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  42:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  43:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  44:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  46:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  47:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  50:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  55:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  58:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  59:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  63:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  64:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  65:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  67:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  69:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  70:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver:
  71:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  72:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  74:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  75:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  78:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  80:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  81:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  90:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 3


  91:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
  92:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  93:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 4


 148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 5


 205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 6


 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 7


 319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */ 
 335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 8


 376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 9


 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: USART address
 449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 10


 490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 11


 547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 12


 604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX
 630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
 638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 13


 661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 14


 718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receive an amount of data in blocking mode. 
 720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*)pData;
 763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 15


 775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U)) 
 821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 16


 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 17


 889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 18


 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 19


1003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
1005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in the UART CR3 register */
1020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 20


1060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1099:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 21


1117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 22


1174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 23


1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 24


1288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
1290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
1322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 25


1345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
1391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 26


1402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
1407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 27


1459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
1461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 28


1516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1544:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1546:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1547:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1548:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1550:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1551:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1553:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1554:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1555:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1556:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1557:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1562:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1563:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1564:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1565:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
1566:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(errorflags == RESET)
1568:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1569:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1571:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 29


1573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
1574:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1575:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1576:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1577:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
1578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1579:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1580:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1582:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1584:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1585:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1586:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1588:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1590:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1591:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1592:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1594:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1596:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1597:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1598:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1600:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
1601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1602:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1603:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1604:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1606:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1607:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1609:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
1611:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1612:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1613:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1614:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
1615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1617:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1618:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1619:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1620:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1622:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1623:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1625:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1627:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1628:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if(huart->hdmarx != NULL)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 30


1630:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1631:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1632:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1635:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
1636:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1638:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
1639:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1640:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
1641:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1642:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
1643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1644:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1645:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1647:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1648:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
1649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1650:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1652:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1654:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
1656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1658:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1660:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
1662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1663:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
1667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1670:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1675:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1677:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1678:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1681:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1683:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1684:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 31


1687:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1688:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1689:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1690:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1692:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1694:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1696:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1697:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1698:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1702:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1703:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1704:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
1705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1707:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1709:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1711:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1712:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1713:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1717:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1718:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1719:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
1720:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1722:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1723:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1724:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1725:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1726:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1727:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1729:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1731:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1732:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1734:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
1735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1738:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1739:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1740:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1742:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 32


1744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1746:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart); 
1748:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1752:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1754:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1757:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1761:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1762:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1764:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1767:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1768:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1769:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1771:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1772:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1774:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1775:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1776:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1778:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1782:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1784:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1785:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1786:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1789:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1790:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1791:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1792:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1793:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1796:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1798:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1800:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 33


1801:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1802:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1804:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1806:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1807:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1808:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1809:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1810:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1811:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1812:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1813:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1814:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1815:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1817:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1819:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1821:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1823:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1824:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1826:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1830:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1833:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1836:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1841:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1843:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1847:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1848:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1849:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1850:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1851:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1852:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1853:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1855:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1856:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 34


1858:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1860:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1862:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1865:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1868:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1875:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1876:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1878:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1879:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1882:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1884:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1885:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1887:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1889:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1890:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1895:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1897:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1900:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1901:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1902:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1903:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1904:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1906:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1907:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1910:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 35


1915:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1916:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1918:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1922:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1925:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1929:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1932:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1935:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1937:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1938:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1939:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1941:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1942:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1944:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1945:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1948:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1951:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1953:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1954:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1957:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1959:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1960:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1962:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1965:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1967:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1971:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 36


1972:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1973:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1975:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1977:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1979:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1980:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1981:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1983:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1986:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1989:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1990:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1992:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1993:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1995:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1996:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1998:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1999:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2001:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
2003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
2004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2005:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2008:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2009:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
2011:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
2012:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2014:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
2017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2018:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2019:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2021:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2023:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2024:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
2025:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2027:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 37


2029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2031:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2033:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2035:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2036:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2039:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2040:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2042:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2045:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2046:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2048:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2052:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2053:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2056:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2057:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2059:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2060:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2063:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2066:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2067:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2068:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2069:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2072:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2077:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2080:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
2081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2082:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2085:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 38


2086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2092:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2093:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2095:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2096:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2097:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2099:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2102:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2103:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2104:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2105:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2106:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2107:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2108:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2112:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2113:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2116:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2121:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2124:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2128:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2132:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2135:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2137:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2138:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2140:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2142:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 39


2143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2145:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
2146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2148:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
2149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2150:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2152:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2153:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2156:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2159:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2160:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
2161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
2164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2166:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2167:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2171:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2172:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2174:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2175:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2176:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  26              		.loc 1 2177 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2178:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  32              		.loc 1 2179 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 D368     		ldr	r3, [r2, #12]
  35 0004 23F0C003 		bic	r3, r3, #192
  36 0008 D360     		str	r3, [r2, #12]
2180:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2181:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2182:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2182 0
  38 000a 2023     		movs	r3, #32
  39 000c 80F83930 		strb	r3, [r0, #57]
2183:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
  40              		.loc 1 2183 0
  41 0010 7047     		bx	lr
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 40


  42              		.cfi_endproc
  43              	.LFE170:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	UART_EndRxTransfer:
  53              	.LFB171:
2184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2185:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2187:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2188:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2190:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2191:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  54              		.loc 1 2191 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2192:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2193 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 D368     		ldr	r3, [r2, #12]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 D360     		str	r3, [r2, #12]
2194:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 2194 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 5369     		ldr	r3, [r2, #20]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 5361     		str	r3, [r2, #20]
2195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2196:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2197:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 2197 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F83A30 		strb	r3, [r0, #58]
2198:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
  73              		.loc 1 2198 0
  74 001a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE171:
  78              		.section	.text.UART_Transmit_IT,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	UART_Transmit_IT:
  86              	.LFB177:
2199:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 41


2200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2202:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2203:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2205:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2206:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2214:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2215:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2216:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2217:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2218:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2219:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2220:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2221:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2222:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2223:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2229:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2234:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2235:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2237:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2238:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2241:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2244:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2245:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2248:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2249:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2252:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2254:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2255:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2256:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 42


2257:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2258:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2259:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2260:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2261:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2267:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2269:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2272:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2273:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2275:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2280:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2282:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2286:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2287:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2292:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2295:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2298:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2299:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2302:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2304:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2307:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2308:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2311:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 43


2314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2315:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2316:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2319:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2320:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2325:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2326:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2328:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2332:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2334:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2335:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2336:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2338:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2339:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  87              		.loc 1 2340 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL2:
2341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2342:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2344:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  93              		.loc 1 2344 0
  94 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  95 0004 DBB2     		uxtb	r3, r3
  96 0006 212B     		cmp	r3, #33
  97 0008 2AD1     		bne	.L8
2345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2346:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
  98              		.loc 1 2346 0
  99 000a 8368     		ldr	r3, [r0, #8]
 100 000c B3F5805F 		cmp	r3, #4096
 101 0010 16D0     		beq	.L10
2347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2353:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 44


2356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2357:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
2359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2361:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 102              		.loc 1 2361 0
 103 0012 036A     		ldr	r3, [r0, #32]
 104 0014 5A1C     		adds	r2, r3, #1
 105 0016 0262     		str	r2, [r0, #32]
 106 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 107 001a 0368     		ldr	r3, [r0]
 108 001c 5A60     		str	r2, [r3, #4]
 109              	.L7:
2362:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 110              		.loc 1 2364 0
 111 001e C38C     		ldrh	r3, [r0, #38]
 112 0020 013B     		subs	r3, r3, #1
 113 0022 9BB2     		uxth	r3, r3
 114 0024 C384     		strh	r3, [r0, #38]	@ movhi
 115 0026 EBB9     		cbnz	r3, .L9
2365:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2367:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 116              		.loc 1 2367 0
 117 0028 0268     		ldr	r2, [r0]
 118 002a D368     		ldr	r3, [r2, #12]
 119 002c 23F08003 		bic	r3, r3, #128
 120 0030 D360     		str	r3, [r2, #12]
2368:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 121              		.loc 1 2370 0
 122 0032 0268     		ldr	r2, [r0]
 123 0034 D368     		ldr	r3, [r2, #12]
 124 0036 43F04003 		orr	r3, r3, #64
 125 003a D360     		str	r3, [r2, #12]
2371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 126              		.loc 1 2372 0
 127 003c 0020     		movs	r0, #0
 128              	.LVL3:
 129 003e 7047     		bx	lr
 130              	.LVL4:
 131              	.L10:
2348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 132              		.loc 1 2348 0
 133 0040 036A     		ldr	r3, [r0, #32]
 134              	.LVL5:
2349:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 135              		.loc 1 2349 0
 136 0042 1B88     		ldrh	r3, [r3]
 137              	.LVL6:
 138 0044 0268     		ldr	r2, [r0]
 139 0046 C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 45


 140 004a 5360     		str	r3, [r2, #4]
 141              	.LVL7:
2350:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 142              		.loc 1 2350 0
 143 004c 0369     		ldr	r3, [r0, #16]
 144 004e 1BB9     		cbnz	r3, .L6
2352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 145              		.loc 1 2352 0
 146 0050 036A     		ldr	r3, [r0, #32]
 147 0052 0233     		adds	r3, r3, #2
 148 0054 0362     		str	r3, [r0, #32]
 149 0056 E2E7     		b	.L7
 150              	.L6:
2356:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 151              		.loc 1 2356 0
 152 0058 036A     		ldr	r3, [r0, #32]
 153 005a 0133     		adds	r3, r3, #1
 154 005c 0362     		str	r3, [r0, #32]
 155 005e DEE7     		b	.L7
 156              	.L8:
2373:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2375:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 157              		.loc 1 2376 0
 158 0060 0220     		movs	r0, #2
 159              	.LVL8:
 160 0062 7047     		bx	lr
 161              	.LVL9:
 162              	.L9:
2372:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 163              		.loc 1 2372 0
 164 0064 0020     		movs	r0, #0
 165              	.LVL10:
2377:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 166              		.loc 1 2378 0
 167 0066 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE177:
 171              		.section	.text.UART_SetConfig,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	UART_SetConfig:
 179              	.LFB180:
2379:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2380:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2382:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2383:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2384:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2385:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2386:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 46


2388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2391:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2394:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2395:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2397:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2398:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2399:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2401:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2402:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2406:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2408:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2419:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2420:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2425:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2426:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2428:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2431:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2432:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2434:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2439:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
2441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
2443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
2444:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 47


2445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
2446:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2447:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2451:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
2453:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
2455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2457:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
2459:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2462:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2463:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2465:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2466:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2468:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2469:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 180              		.loc 1 2469 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL11:
 185 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 32
 188              		.cfi_offset 3, -32
 189              		.cfi_offset 4, -28
 190              		.cfi_offset 5, -24
 191              		.cfi_offset 6, -20
 192              		.cfi_offset 7, -16
 193              		.cfi_offset 8, -12
 194              		.cfi_offset 9, -8
 195              		.cfi_offset 14, -4
 196 0004 0546     		mov	r5, r0
 197              	.LVL12:
2470:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2471:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2472:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2475:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2478:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
2479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
2480:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
2481:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 198              		.loc 1 2481 0
 199 0006 0268     		ldr	r2, [r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 48


 200 0008 1369     		ldr	r3, [r2, #16]
 201 000a 23F44053 		bic	r3, r3, #12288
 202 000e C168     		ldr	r1, [r0, #12]
 203 0010 0B43     		orrs	r3, r3, r1
 204 0012 1361     		str	r3, [r2, #16]
2482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
2484:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2486:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2487:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2489:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2490:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2491:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
2492:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
2493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
2494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2495:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2496:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 205              		.loc 1 2496 0
 206 0014 8368     		ldr	r3, [r0, #8]
 207 0016 0269     		ldr	r2, [r0, #16]
 208 0018 1343     		orrs	r3, r3, r2
 209 001a 4269     		ldr	r2, [r0, #20]
 210 001c 1343     		orrs	r3, r3, r2
 211              	.LVL13:
2497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 212              		.loc 1 2497 0
 213 001e 0168     		ldr	r1, [r0]
 214 0020 CA68     		ldr	r2, [r1, #12]
 215 0022 22F4B052 		bic	r2, r2, #5632
 216 0026 22F00C02 		bic	r2, r2, #12
 217 002a 1343     		orrs	r3, r3, r2
 218              	.LVL14:
 219 002c CB60     		str	r3, [r1, #12]
 220              	.LVL15:
2498:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
2499:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2501:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
2503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2504:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 221              		.loc 1 2504 0
 222 002e 0268     		ldr	r2, [r0]
 223 0030 5369     		ldr	r3, [r2, #20]
 224 0032 23F44073 		bic	r3, r3, #768
 225 0036 8169     		ldr	r1, [r0, #24]
 226 0038 0B43     		orrs	r3, r3, r1
 227 003a 5361     		str	r3, [r2, #20]
2505:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Over Sampling */
2508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
2509:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2510:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 49


2511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2512:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2513:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2514:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2516:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2517:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2519:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2523:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2525:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2526:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2528:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2529:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2531:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2532:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
2534:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 228              		.loc 1 2534 0
 229 003c 0268     		ldr	r2, [r0]
 230 003e 594B     		ldr	r3, .L16
 231 0040 9A42     		cmp	r2, r3
 232 0042 57D0     		beq	.L15
2535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2538:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 233              		.loc 1 2540 0
 234 0044 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 235              	.LVL16:
 236 0048 00EB8000 		add	r0, r0, r0, lsl #2
 237 004c 00EB8000 		add	r0, r0, r0, lsl #2
 238 0050 6C68     		ldr	r4, [r5, #4]
 239 0052 A400     		lsls	r4, r4, #2
 240 0054 B0FBF4F4 		udiv	r4, r0, r4
 241 0058 534F     		ldr	r7, .L16+4
 242 005a A7FB0434 		umull	r3, r4, r7, r4
 243 005e 6409     		lsrs	r4, r4, #5
 244 0060 2601     		lsls	r6, r4, #4
 245 0062 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 246              	.LVL17:
 247 0066 00EB8000 		add	r0, r0, r0, lsl #2
 248 006a 00EB8000 		add	r0, r0, r0, lsl #2
 249 006e 6C68     		ldr	r4, [r5, #4]
 250 0070 A400     		lsls	r4, r4, #2
 251 0072 B0FBF4F9 		udiv	r9, r0, r4
 252 0076 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 253              	.LVL18:
 254 007a 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 50


 255 007e 00EB8000 		add	r0, r0, r0, lsl #2
 256 0082 6C68     		ldr	r4, [r5, #4]
 257 0084 A400     		lsls	r4, r4, #2
 258 0086 B0FBF4F4 		udiv	r4, r0, r4
 259 008a A7FB0434 		umull	r3, r4, r7, r4
 260 008e 6409     		lsrs	r4, r4, #5
 261 0090 4FF06408 		mov	r8, #100
 262 0094 08FB1494 		mls	r4, r8, r4, r9
 263 0098 2401     		lsls	r4, r4, #4
 264 009a 3234     		adds	r4, r4, #50
 265 009c A7FB0434 		umull	r3, r4, r7, r4
 266 00a0 6409     		lsrs	r4, r4, #5
 267 00a2 04F0F004 		and	r4, r4, #240
 268 00a6 3444     		add	r4, r4, r6
 269 00a8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 270              	.LVL19:
 271 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 272 00b0 00EB8000 		add	r0, r0, r0, lsl #2
 273 00b4 6E68     		ldr	r6, [r5, #4]
 274 00b6 B600     		lsls	r6, r6, #2
 275 00b8 B0FBF6F6 		udiv	r6, r0, r6
 276 00bc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 277              	.LVL20:
 278 00c0 00EB8000 		add	r0, r0, r0, lsl #2
 279 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 280 00c8 6B68     		ldr	r3, [r5, #4]
 281 00ca 9B00     		lsls	r3, r3, #2
 282 00cc B0FBF3F0 		udiv	r0, r0, r3
 283 00d0 A7FB0030 		umull	r3, r0, r7, r0
 284 00d4 4009     		lsrs	r0, r0, #5
 285 00d6 08FB1068 		mls	r8, r8, r0, r6
 286 00da 4FEA0818 		lsl	r8, r8, #4
 287 00de 08F13208 		add	r8, r8, #50
 288 00e2 A7FB0837 		umull	r3, r7, r7, r8
 289 00e6 C7F34317 		ubfx	r7, r7, #5, #4
 290 00ea 2B68     		ldr	r3, [r5]
 291 00ec 2744     		add	r7, r7, r4
 292 00ee 9F60     		str	r7, [r3, #8]
 293              	.L11:
2541:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 294              		.loc 1 2543 0
 295 00f0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 296              	.LVL21:
 297              	.L15:
2536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 298              		.loc 1 2536 0
 299 00f4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 300              	.LVL22:
 301 00f8 00EB8000 		add	r0, r0, r0, lsl #2
 302 00fc 00EB8000 		add	r0, r0, r0, lsl #2
 303 0100 6C68     		ldr	r4, [r5, #4]
 304 0102 A400     		lsls	r4, r4, #2
 305 0104 B0FBF4F4 		udiv	r4, r0, r4
 306 0108 274F     		ldr	r7, .L16+4
 307 010a A7FB0434 		umull	r3, r4, r7, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 51


 308 010e 6409     		lsrs	r4, r4, #5
 309 0110 2601     		lsls	r6, r4, #4
 310 0112 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 311              	.LVL23:
 312 0116 00EB8000 		add	r0, r0, r0, lsl #2
 313 011a 00EB8000 		add	r0, r0, r0, lsl #2
 314 011e 6C68     		ldr	r4, [r5, #4]
 315 0120 A400     		lsls	r4, r4, #2
 316 0122 B0FBF4F9 		udiv	r9, r0, r4
 317 0126 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 318              	.LVL24:
 319 012a 00EB8000 		add	r0, r0, r0, lsl #2
 320 012e 00EB8000 		add	r0, r0, r0, lsl #2
 321 0132 6C68     		ldr	r4, [r5, #4]
 322 0134 A400     		lsls	r4, r4, #2
 323 0136 B0FBF4F4 		udiv	r4, r0, r4
 324 013a A7FB0434 		umull	r3, r4, r7, r4
 325 013e 6409     		lsrs	r4, r4, #5
 326 0140 4FF06408 		mov	r8, #100
 327 0144 08FB1494 		mls	r4, r8, r4, r9
 328 0148 2401     		lsls	r4, r4, #4
 329 014a 3234     		adds	r4, r4, #50
 330 014c A7FB0434 		umull	r3, r4, r7, r4
 331 0150 6409     		lsrs	r4, r4, #5
 332 0152 04F0F004 		and	r4, r4, #240
 333 0156 3444     		add	r4, r4, r6
 334 0158 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 335              	.LVL25:
 336 015c 00EB8000 		add	r0, r0, r0, lsl #2
 337 0160 00EB8000 		add	r0, r0, r0, lsl #2
 338 0164 6E68     		ldr	r6, [r5, #4]
 339 0166 B600     		lsls	r6, r6, #2
 340 0168 B0FBF6F6 		udiv	r6, r0, r6
 341 016c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 342              	.LVL26:
 343 0170 00EB8000 		add	r0, r0, r0, lsl #2
 344 0174 00EB8000 		add	r0, r0, r0, lsl #2
 345 0178 6B68     		ldr	r3, [r5, #4]
 346 017a 9B00     		lsls	r3, r3, #2
 347 017c B0FBF3F0 		udiv	r0, r0, r3
 348 0180 A7FB0030 		umull	r3, r0, r7, r0
 349 0184 4009     		lsrs	r0, r0, #5
 350 0186 08FB1068 		mls	r8, r8, r0, r6
 351 018a 4FEA0818 		lsl	r8, r8, #4
 352 018e 08F13208 		add	r8, r8, #50
 353 0192 A7FB0837 		umull	r3, r7, r7, r8
 354 0196 C7F34317 		ubfx	r7, r7, #5, #4
 355 019a 2B68     		ldr	r3, [r5]
 356 019c 2744     		add	r7, r7, r4
 357 019e 9F60     		str	r7, [r3, #8]
 358 01a0 A6E7     		b	.L11
 359              	.L17:
 360 01a2 00BF     		.align	2
 361              	.L16:
 362 01a4 00380140 		.word	1073821696
 363 01a8 1F85EB51 		.word	1374389535
 364              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 52


 365              	.LFE180:
 367              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 368              		.align	1
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	UART_WaitOnFlagUntilTimeout:
 375              	.LFB169:
2144:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
 376              		.loc 1 2144 0
 377              		.cfi_startproc
 378              		@ args = 4, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              	.LVL27:
 381 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 382              	.LCFI1:
 383              		.cfi_def_cfa_offset 24
 384              		.cfi_offset 4, -24
 385              		.cfi_offset 5, -20
 386              		.cfi_offset 6, -16
 387              		.cfi_offset 7, -12
 388              		.cfi_offset 8, -8
 389              		.cfi_offset 14, -4
 390 0004 0546     		mov	r5, r0
 391 0006 0F46     		mov	r7, r1
 392 0008 1646     		mov	r6, r2
 393 000a 9846     		mov	r8, r3
 394 000c 069C     		ldr	r4, [sp, #24]
 395              	.LVL28:
 396              	.L20:
2146:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 397              		.loc 1 2146 0
 398 000e 2B68     		ldr	r3, [r5]
 399 0010 1B68     		ldr	r3, [r3]
 400 0012 37EA0303 		bics	r3, r7, r3
 401 0016 0CBF     		ite	eq
 402 0018 0123     		moveq	r3, #1
 403 001a 0023     		movne	r3, #0
 404 001c B342     		cmp	r3, r6
 405 001e 1DD1     		bne	.L25
2149:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 406              		.loc 1 2149 0
 407 0020 B4F1FF3F 		cmp	r4, #-1
 408 0024 F3D0     		beq	.L20
2151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 409              		.loc 1 2151 0
 410 0026 2CB1     		cbz	r4, .L21
2151:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 411              		.loc 1 2151 0 is_stmt 0 discriminator 1
 412 0028 FFF7FEFF 		bl	HAL_GetTick
 413              	.LVL29:
 414 002c A0EB0800 		sub	r0, r0, r8
 415 0030 A042     		cmp	r0, r4
 416 0032 ECD9     		bls	.L20
 417              	.L21:
2154:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 53


 418              		.loc 1 2154 0 is_stmt 1
 419 0034 2A68     		ldr	r2, [r5]
 420 0036 D368     		ldr	r3, [r2, #12]
 421 0038 23F4D073 		bic	r3, r3, #416
 422 003c D360     		str	r3, [r2, #12]
2155:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 423              		.loc 1 2155 0
 424 003e 2A68     		ldr	r2, [r5]
 425 0040 5369     		ldr	r3, [r2, #20]
 426 0042 23F00103 		bic	r3, r3, #1
 427 0046 5361     		str	r3, [r2, #20]
2157:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 428              		.loc 1 2157 0
 429 0048 2023     		movs	r3, #32
 430 004a 85F83930 		strb	r3, [r5, #57]
2158:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 431              		.loc 1 2158 0
 432 004e 85F83A30 		strb	r3, [r5, #58]
2161:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 433              		.loc 1 2161 0
 434 0052 0023     		movs	r3, #0
 435 0054 85F83830 		strb	r3, [r5, #56]
2163:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 436              		.loc 1 2163 0
 437 0058 0320     		movs	r0, #3
 438 005a 00E0     		b	.L22
 439              	.L25:
2168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 440              		.loc 1 2168 0
 441 005c 0020     		movs	r0, #0
 442              	.L22:
2169:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 443              		.loc 1 2169 0
 444 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 445              		.cfi_endproc
 446              	.LFE169:
 448              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 449              		.align	1
 450              		.weak	HAL_UART_MspInit
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv4-sp-d16
 456              	HAL_UART_MspInit:
 457              	.LFB131:
 552:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 458              		.loc 1 552 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LVL30:
 558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 464              		.loc 1 558 0
 465 0000 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE131:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 54


 469              		.section	.text.HAL_UART_Init,"ax",%progbits
 470              		.align	1
 471              		.global	HAL_UART_Init
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	HAL_UART_Init:
 478              	.LFB126:
 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 479              		.loc 1 262 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              	.LVL31:
 264:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 484              		.loc 1 264 0
 485 0000 58B3     		cbz	r0, .L30
 262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 486              		.loc 1 262 0
 487 0002 10B5     		push	{r4, lr}
 488              	.LCFI2:
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 4, -8
 491              		.cfi_offset 14, -4
 492 0004 0446     		mov	r4, r0
 285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 493              		.loc 1 285 0
 494 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 495 000a 0BB3     		cbz	r3, .L35
 496              	.LVL32:
 497              	.L29:
 294:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 498              		.loc 1 294 0
 499 000c 2423     		movs	r3, #36
 500 000e 84F83930 		strb	r3, [r4, #57]
 297:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 501              		.loc 1 297 0
 502 0012 2268     		ldr	r2, [r4]
 503 0014 D368     		ldr	r3, [r2, #12]
 504 0016 23F40053 		bic	r3, r3, #8192
 505 001a D360     		str	r3, [r2, #12]
 300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 506              		.loc 1 300 0
 507 001c 2046     		mov	r0, r4
 508 001e FFF7FEFF 		bl	UART_SetConfig
 509              	.LVL33:
 305:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 510              		.loc 1 305 0
 511 0022 2268     		ldr	r2, [r4]
 512 0024 1369     		ldr	r3, [r2, #16]
 513 0026 23F49043 		bic	r3, r3, #18432
 514 002a 1361     		str	r3, [r2, #16]
 306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 515              		.loc 1 306 0
 516 002c 2268     		ldr	r2, [r4]
 517 002e 5369     		ldr	r3, [r2, #20]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 55


 518 0030 23F02A03 		bic	r3, r3, #42
 519 0034 5361     		str	r3, [r2, #20]
 309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 520              		.loc 1 309 0
 521 0036 2268     		ldr	r2, [r4]
 522 0038 D368     		ldr	r3, [r2, #12]
 523 003a 43F40053 		orr	r3, r3, #8192
 524 003e D360     		str	r3, [r2, #12]
 312:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 525              		.loc 1 312 0
 526 0040 0020     		movs	r0, #0
 527 0042 E063     		str	r0, [r4, #60]
 313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 528              		.loc 1 313 0
 529 0044 2023     		movs	r3, #32
 530 0046 84F83930 		strb	r3, [r4, #57]
 314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 531              		.loc 1 314 0
 532 004a 84F83A30 		strb	r3, [r4, #58]
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 533              		.loc 1 317 0
 534 004e 10BD     		pop	{r4, pc}
 535              	.LVL34:
 536              	.L35:
 288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 537              		.loc 1 288 0
 538 0050 80F83830 		strb	r3, [r0, #56]
 291:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 539              		.loc 1 291 0
 540 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 541              	.LVL35:
 542 0058 D8E7     		b	.L29
 543              	.LVL36:
 544              	.L30:
 545              	.LCFI3:
 546              		.cfi_def_cfa_offset 0
 547              		.cfi_restore 4
 548              		.cfi_restore 14
 266:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 549              		.loc 1 266 0
 550 005a 0120     		movs	r0, #1
 551              	.LVL37:
 317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 552              		.loc 1 317 0
 553 005c 7047     		bx	lr
 554              		.cfi_endproc
 555              	.LFE126:
 557              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 558              		.align	1
 559              		.global	HAL_HalfDuplex_Init
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	HAL_HalfDuplex_Init:
 566              	.LFB127:
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 56


 567              		.loc 1 327 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL38:
 329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 572              		.loc 1 329 0
 573 0000 0028     		cmp	r0, #0
 574 0002 30D0     		beq	.L39
 327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 575              		.loc 1 327 0
 576 0004 10B5     		push	{r4, lr}
 577              	.LCFI4:
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 4, -8
 580              		.cfi_offset 14, -4
 581 0006 0446     		mov	r4, r0
 340:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 582              		.loc 1 340 0
 583 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 584 000c 33B3     		cbz	r3, .L44
 585              	.LVL39:
 586              	.L38:
 348:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 587              		.loc 1 348 0
 588 000e 2423     		movs	r3, #36
 589 0010 84F83930 		strb	r3, [r4, #57]
 351:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 590              		.loc 1 351 0
 591 0014 2268     		ldr	r2, [r4]
 592 0016 D368     		ldr	r3, [r2, #12]
 593 0018 23F40053 		bic	r3, r3, #8192
 594 001c D360     		str	r3, [r2, #12]
 354:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 595              		.loc 1 354 0
 596 001e 2046     		mov	r0, r4
 597 0020 FFF7FEFF 		bl	UART_SetConfig
 598              	.LVL40:
 359:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 599              		.loc 1 359 0
 600 0024 2268     		ldr	r2, [r4]
 601 0026 1369     		ldr	r3, [r2, #16]
 602 0028 23F49043 		bic	r3, r3, #18432
 603 002c 1361     		str	r3, [r2, #16]
 360:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 604              		.loc 1 360 0
 605 002e 2268     		ldr	r2, [r4]
 606 0030 5369     		ldr	r3, [r2, #20]
 607 0032 23F02203 		bic	r3, r3, #34
 608 0036 5361     		str	r3, [r2, #20]
 363:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 609              		.loc 1 363 0
 610 0038 2268     		ldr	r2, [r4]
 611 003a 5369     		ldr	r3, [r2, #20]
 612 003c 43F00803 		orr	r3, r3, #8
 613 0040 5361     		str	r3, [r2, #20]
 366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 57


 614              		.loc 1 366 0
 615 0042 2268     		ldr	r2, [r4]
 616 0044 D368     		ldr	r3, [r2, #12]
 617 0046 43F40053 		orr	r3, r3, #8192
 618 004a D360     		str	r3, [r2, #12]
 369:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 619              		.loc 1 369 0
 620 004c 0020     		movs	r0, #0
 621 004e E063     		str	r0, [r4, #60]
 370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 622              		.loc 1 370 0
 623 0050 2023     		movs	r3, #32
 624 0052 84F83930 		strb	r3, [r4, #57]
 371:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 625              		.loc 1 371 0
 626 0056 84F83A30 		strb	r3, [r4, #58]
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627              		.loc 1 374 0
 628 005a 10BD     		pop	{r4, pc}
 629              	.LVL41:
 630              	.L44:
 343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 631              		.loc 1 343 0
 632 005c 80F83830 		strb	r3, [r0, #56]
 345:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 633              		.loc 1 345 0
 634 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 635              	.LVL42:
 636 0064 D3E7     		b	.L38
 637              	.LVL43:
 638              	.L39:
 639              	.LCFI5:
 640              		.cfi_def_cfa_offset 0
 641              		.cfi_restore 4
 642              		.cfi_restore 14
 331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 643              		.loc 1 331 0
 644 0066 0120     		movs	r0, #1
 645              	.LVL44:
 374:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 646              		.loc 1 374 0
 647 0068 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE127:
 651              		.section	.text.HAL_LIN_Init,"ax",%progbits
 652              		.align	1
 653              		.global	HAL_LIN_Init
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	HAL_LIN_Init:
 660              	.LFB128:
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 661              		.loc 1 388 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 58


 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL45:
 390:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 666              		.loc 1 390 0
 667 0000 0028     		cmp	r0, #0
 668 0002 37D0     		beq	.L48
 388:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 669              		.loc 1 388 0
 670 0004 38B5     		push	{r3, r4, r5, lr}
 671              	.LCFI6:
 672              		.cfi_def_cfa_offset 16
 673              		.cfi_offset 3, -16
 674              		.cfi_offset 4, -12
 675              		.cfi_offset 5, -8
 676              		.cfi_offset 14, -4
 677 0006 0446     		mov	r4, r0
 678 0008 0D46     		mov	r5, r1
 404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 679              		.loc 1 404 0
 680 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 681 000e 63B3     		cbz	r3, .L53
 682              	.LVL46:
 683              	.L47:
 412:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 684              		.loc 1 412 0
 685 0010 2423     		movs	r3, #36
 686 0012 84F83930 		strb	r3, [r4, #57]
 415:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 687              		.loc 1 415 0
 688 0016 2268     		ldr	r2, [r4]
 689 0018 D368     		ldr	r3, [r2, #12]
 690 001a 23F40053 		bic	r3, r3, #8192
 691 001e D360     		str	r3, [r2, #12]
 418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 692              		.loc 1 418 0
 693 0020 2046     		mov	r0, r4
 694 0022 FFF7FEFF 		bl	UART_SetConfig
 695              	.LVL47:
 423:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 696              		.loc 1 423 0
 697 0026 2268     		ldr	r2, [r4]
 698 0028 1369     		ldr	r3, [r2, #16]
 699 002a 23F40063 		bic	r3, r3, #2048
 700 002e 1361     		str	r3, [r2, #16]
 424:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 701              		.loc 1 424 0
 702 0030 2268     		ldr	r2, [r4]
 703 0032 5369     		ldr	r3, [r2, #20]
 704 0034 23F02A03 		bic	r3, r3, #42
 705 0038 5361     		str	r3, [r2, #20]
 427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 706              		.loc 1 427 0
 707 003a 2268     		ldr	r2, [r4]
 708 003c 1369     		ldr	r3, [r2, #16]
 709 003e 43F48043 		orr	r3, r3, #16384
 710 0042 1361     		str	r3, [r2, #16]
 430:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 59


 711              		.loc 1 430 0
 712 0044 2268     		ldr	r2, [r4]
 713 0046 1369     		ldr	r3, [r2, #16]
 714 0048 23F02003 		bic	r3, r3, #32
 715 004c 2B43     		orrs	r3, r3, r5
 716 004e 1361     		str	r3, [r2, #16]
 433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 717              		.loc 1 433 0
 718 0050 2268     		ldr	r2, [r4]
 719 0052 D368     		ldr	r3, [r2, #12]
 720 0054 43F40053 		orr	r3, r3, #8192
 721 0058 D360     		str	r3, [r2, #12]
 436:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 722              		.loc 1 436 0
 723 005a 0020     		movs	r0, #0
 724 005c E063     		str	r0, [r4, #60]
 437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 725              		.loc 1 437 0
 726 005e 2023     		movs	r3, #32
 727 0060 84F83930 		strb	r3, [r4, #57]
 438:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 728              		.loc 1 438 0
 729 0064 84F83A30 		strb	r3, [r4, #58]
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 730              		.loc 1 441 0
 731 0068 38BD     		pop	{r3, r4, r5, pc}
 732              	.LVL48:
 733              	.L53:
 407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 734              		.loc 1 407 0
 735 006a 80F83830 		strb	r3, [r0, #56]
 409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 736              		.loc 1 409 0
 737 006e FFF7FEFF 		bl	HAL_UART_MspInit
 738              	.LVL49:
 739 0072 CDE7     		b	.L47
 740              	.LVL50:
 741              	.L48:
 742              	.LCFI7:
 743              		.cfi_def_cfa_offset 0
 744              		.cfi_restore 3
 745              		.cfi_restore 4
 746              		.cfi_restore 5
 747              		.cfi_restore 14
 392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 748              		.loc 1 392 0
 749 0074 0120     		movs	r0, #1
 750              	.LVL51:
 441:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 751              		.loc 1 441 0
 752 0076 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE128:
 756              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 757              		.align	1
 758              		.global	HAL_MultiProcessor_Init
 759              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 60


 760              		.thumb
 761              		.thumb_func
 762              		.fpu fpv4-sp-d16
 764              	HAL_MultiProcessor_Init:
 765              	.LFB129:
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 766              		.loc 1 456 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL52:
 458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 771              		.loc 1 458 0
 772 0000 0028     		cmp	r0, #0
 773 0002 3AD0     		beq	.L57
 456:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 774              		.loc 1 456 0
 775 0004 70B5     		push	{r4, r5, r6, lr}
 776              	.LCFI8:
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 14, -4
 782 0006 0446     		mov	r4, r0
 783 0008 1646     		mov	r6, r2
 784 000a 0D46     		mov	r5, r1
 474:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 785              		.loc 1 474 0
 786 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 787 0010 002B     		cmp	r3, #0
 788 0012 2DD0     		beq	.L62
 789              	.LVL53:
 790              	.L56:
 482:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 791              		.loc 1 482 0
 792 0014 2423     		movs	r3, #36
 793 0016 84F83930 		strb	r3, [r4, #57]
 485:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 794              		.loc 1 485 0
 795 001a 2268     		ldr	r2, [r4]
 796 001c D368     		ldr	r3, [r2, #12]
 797 001e 23F40053 		bic	r3, r3, #8192
 798 0022 D360     		str	r3, [r2, #12]
 488:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 799              		.loc 1 488 0
 800 0024 2046     		mov	r0, r4
 801 0026 FFF7FEFF 		bl	UART_SetConfig
 802              	.LVL54:
 493:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 803              		.loc 1 493 0
 804 002a 2268     		ldr	r2, [r4]
 805 002c 1369     		ldr	r3, [r2, #16]
 806 002e 23F49043 		bic	r3, r3, #18432
 807 0032 1361     		str	r3, [r2, #16]
 494:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 808              		.loc 1 494 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 61


 809 0034 2268     		ldr	r2, [r4]
 810 0036 5369     		ldr	r3, [r2, #20]
 811 0038 23F02A03 		bic	r3, r3, #42
 812 003c 5361     		str	r3, [r2, #20]
 497:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 813              		.loc 1 497 0
 814 003e 2368     		ldr	r3, [r4]
 815 0040 1969     		ldr	r1, [r3, #16]
 816 0042 21F00F01 		bic	r1, r1, #15
 817 0046 0D43     		orrs	r5, r5, r1
 818 0048 1D61     		str	r5, [r3, #16]
 500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 819              		.loc 1 500 0
 820 004a 2168     		ldr	r1, [r4]
 821 004c CB68     		ldr	r3, [r1, #12]
 822 004e 23F40063 		bic	r3, r3, #2048
 823 0052 3343     		orrs	r3, r3, r6
 824 0054 CB60     		str	r3, [r1, #12]
 503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 825              		.loc 1 503 0
 826 0056 2268     		ldr	r2, [r4]
 827 0058 D368     		ldr	r3, [r2, #12]
 828 005a 43F40053 		orr	r3, r3, #8192
 829 005e D360     		str	r3, [r2, #12]
 506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 830              		.loc 1 506 0
 831 0060 0020     		movs	r0, #0
 832 0062 E063     		str	r0, [r4, #60]
 507:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 833              		.loc 1 507 0
 834 0064 2023     		movs	r3, #32
 835 0066 84F83930 		strb	r3, [r4, #57]
 508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 836              		.loc 1 508 0
 837 006a 84F83A30 		strb	r3, [r4, #58]
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838              		.loc 1 511 0
 839 006e 70BD     		pop	{r4, r5, r6, pc}
 840              	.LVL55:
 841              	.L62:
 477:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 842              		.loc 1 477 0
 843 0070 80F83830 		strb	r3, [r0, #56]
 479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 844              		.loc 1 479 0
 845 0074 FFF7FEFF 		bl	HAL_UART_MspInit
 846              	.LVL56:
 847 0078 CCE7     		b	.L56
 848              	.LVL57:
 849              	.L57:
 850              	.LCFI9:
 851              		.cfi_def_cfa_offset 0
 852              		.cfi_restore 4
 853              		.cfi_restore 5
 854              		.cfi_restore 6
 855              		.cfi_restore 14
 460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 62


 856              		.loc 1 460 0
 857 007a 0120     		movs	r0, #1
 858              	.LVL58:
 511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 859              		.loc 1 511 0
 860 007c 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE129:
 864              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 865              		.align	1
 866              		.weak	HAL_UART_MspDeInit
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	HAL_UART_MspDeInit:
 873              	.LFB132:
 567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 874              		.loc 1 567 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879              	.LVL59:
 573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 880              		.loc 1 573 0
 881 0000 7047     		bx	lr
 882              		.cfi_endproc
 883              	.LFE132:
 885              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 886              		.align	1
 887              		.global	HAL_UART_DeInit
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu fpv4-sp-d16
 893              	HAL_UART_DeInit:
 894              	.LFB130:
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 895              		.loc 1 520 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL60:
 522:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 900              		.loc 1 522 0
 901 0000 78B1     		cbz	r0, .L66
 520:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 902              		.loc 1 520 0
 903 0002 10B5     		push	{r4, lr}
 904              	.LCFI10:
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 908 0004 0446     		mov	r4, r0
 530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 909              		.loc 1 530 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 63


 910 0006 2423     		movs	r3, #36
 911 0008 80F83930 		strb	r3, [r0, #57]
 533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 912              		.loc 1 533 0
 913 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 914              	.LVL61:
 535:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 915              		.loc 1 535 0
 916 0010 0020     		movs	r0, #0
 917 0012 E063     		str	r0, [r4, #60]
 536:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 918              		.loc 1 536 0
 919 0014 84F83900 		strb	r0, [r4, #57]
 537:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 920              		.loc 1 537 0
 921 0018 84F83A00 		strb	r0, [r4, #58]
 540:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 922              		.loc 1 540 0
 923 001c 84F83800 		strb	r0, [r4, #56]
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 924              		.loc 1 543 0
 925 0020 10BD     		pop	{r4, pc}
 926              	.LVL62:
 927              	.L66:
 928              	.LCFI11:
 929              		.cfi_def_cfa_offset 0
 930              		.cfi_restore 4
 931              		.cfi_restore 14
 524:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 932              		.loc 1 524 0
 933 0022 0120     		movs	r0, #1
 934              	.LVL63:
 543:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 935              		.loc 1 543 0
 936 0024 7047     		bx	lr
 937              		.cfi_endproc
 938              	.LFE130:
 940              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 941              		.align	1
 942              		.global	HAL_UART_Transmit
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv4-sp-d16
 948              	HAL_UART_Transmit:
 949              	.LFB133:
 646:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 950              		.loc 1 646 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL64:
 955 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 956              	.LCFI12:
 957              		.cfi_def_cfa_offset 24
 958              		.cfi_offset 4, -24
 959              		.cfi_offset 5, -20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 64


 960              		.cfi_offset 6, -16
 961              		.cfi_offset 7, -12
 962              		.cfi_offset 8, -8
 963              		.cfi_offset 14, -4
 964 0004 82B0     		sub	sp, sp, #8
 965              	.LCFI13:
 966              		.cfi_def_cfa_offset 32
 967 0006 1E46     		mov	r6, r3
 968              	.LVL65:
 651:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 969              		.loc 1 651 0
 970 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 971              	.LVL66:
 972 000c DBB2     		uxtb	r3, r3
 973 000e 202B     		cmp	r3, #32
 974 0010 55D1     		bne	.L78
 975 0012 0446     		mov	r4, r0
 976 0014 0D46     		mov	r5, r1
 977 0016 9046     		mov	r8, r2
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 978              		.loc 1 653 0
 979 0018 0029     		cmp	r1, #0
 980 001a 55D0     		beq	.L79
 653:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 981              		.loc 1 653 0 is_stmt 0 discriminator 1
 982 001c 002A     		cmp	r2, #0
 983 001e 55D0     		beq	.L80
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 984              		.loc 1 659 0 is_stmt 1
 985 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 986 0024 012B     		cmp	r3, #1
 987 0026 53D0     		beq	.L81
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 988              		.loc 1 659 0 is_stmt 0 discriminator 2
 989 0028 0123     		movs	r3, #1
 990 002a 80F83830 		strb	r3, [r0, #56]
 661:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 991              		.loc 1 661 0 is_stmt 1 discriminator 2
 992 002e 0023     		movs	r3, #0
 993 0030 C363     		str	r3, [r0, #60]
 662:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 994              		.loc 1 662 0 discriminator 2
 995 0032 2123     		movs	r3, #33
 996 0034 80F83930 		strb	r3, [r0, #57]
 665:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 997              		.loc 1 665 0 discriminator 2
 998 0038 FFF7FEFF 		bl	HAL_GetTick
 999              	.LVL67:
 1000 003c 0746     		mov	r7, r0
 1001              	.LVL68:
 667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1002              		.loc 1 667 0 discriminator 2
 1003 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
 668:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1004              		.loc 1 668 0 discriminator 2
 1005 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 65


 1006              		.loc 1 669 0 discriminator 2
 1007 0046 10E0     		b	.L73
 1008              	.LVL69:
 1009              	.L87:
 674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1010              		.loc 1 674 0
 1011 0048 0096     		str	r6, [sp]
 1012 004a 3B46     		mov	r3, r7
 1013 004c 0022     		movs	r2, #0
 1014 004e 8021     		movs	r1, #128
 1015 0050 2046     		mov	r0, r4
 1016 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1017              	.LVL70:
 1018 0056 0028     		cmp	r0, #0
 1019 0058 3CD1     		bne	.L82
 1020              	.LVL71:
 679:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1021              		.loc 1 679 0
 1022 005a 2B88     		ldrh	r3, [r5]
 1023 005c 2268     		ldr	r2, [r4]
 1024 005e C3F30803 		ubfx	r3, r3, #0, #9
 1025 0062 5360     		str	r3, [r2, #4]
 680:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1026              		.loc 1 680 0
 1027 0064 2369     		ldr	r3, [r4, #16]
 1028 0066 C3B9     		cbnz	r3, .L75
 682:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1029              		.loc 1 682 0
 1030 0068 0235     		adds	r5, r5, #2
 1031              	.LVL72:
 1032              	.L73:
 669:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1033              		.loc 1 669 0
 1034 006a E38C     		ldrh	r3, [r4, #38]
 1035 006c 9BB2     		uxth	r3, r3
 1036 006e B3B1     		cbz	r3, .L86
 671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1037              		.loc 1 671 0
 1038 0070 E38C     		ldrh	r3, [r4, #38]
 1039 0072 013B     		subs	r3, r3, #1
 1040 0074 9BB2     		uxth	r3, r3
 1041 0076 E384     		strh	r3, [r4, #38]	@ movhi
 672:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1042              		.loc 1 672 0
 1043 0078 A368     		ldr	r3, [r4, #8]
 1044 007a B3F5805F 		cmp	r3, #4096
 1045 007e E3D0     		beq	.L87
 691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1046              		.loc 1 691 0
 1047 0080 0096     		str	r6, [sp]
 1048 0082 3B46     		mov	r3, r7
 1049 0084 0022     		movs	r2, #0
 1050 0086 8021     		movs	r1, #128
 1051 0088 2046     		mov	r0, r4
 1052 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1053              	.LVL73:
 1054 008e 18BB     		cbnz	r0, .L83
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 66


 1055              	.LVL74:
 695:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 1056              		.loc 1 695 0
 1057 0090 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1058 0092 2368     		ldr	r3, [r4]
 1059 0094 5A60     		str	r2, [r3, #4]
 1060 0096 0135     		adds	r5, r5, #1
 1061              	.LVL75:
 1062 0098 E7E7     		b	.L73
 1063              	.LVL76:
 1064              	.L75:
 686:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1065              		.loc 1 686 0
 1066 009a 0135     		adds	r5, r5, #1
 1067              	.LVL77:
 1068 009c E5E7     		b	.L73
 1069              	.LVL78:
 1070              	.L86:
 699:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1071              		.loc 1 699 0
 1072 009e 0096     		str	r6, [sp]
 1073 00a0 3B46     		mov	r3, r7
 1074 00a2 0022     		movs	r2, #0
 1075 00a4 4021     		movs	r1, #64
 1076 00a6 2046     		mov	r0, r4
 1077 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1078              	.LVL79:
 1079 00ac 0346     		mov	r3, r0
 1080 00ae A8B9     		cbnz	r0, .L84
 705:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1081              		.loc 1 705 0
 1082 00b0 2022     		movs	r2, #32
 1083 00b2 84F83920 		strb	r2, [r4, #57]
 708:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1084              		.loc 1 708 0
 1085 00b6 0022     		movs	r2, #0
 1086 00b8 84F83820 		strb	r2, [r4, #56]
 710:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1087              		.loc 1 710 0
 1088 00bc 00E0     		b	.L72
 1089              	.LVL80:
 1090              	.L78:
 714:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1091              		.loc 1 714 0
 1092 00be 0223     		movs	r3, #2
 1093              	.LVL81:
 1094              	.L72:
 716:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1095              		.loc 1 716 0
 1096 00c0 1846     		mov	r0, r3
 1097 00c2 02B0     		add	sp, sp, #8
 1098              	.LCFI14:
 1099              		.cfi_remember_state
 1100              		.cfi_def_cfa_offset 24
 1101              		@ sp needed
 1102 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1103              	.LVL82:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 67


 1104              	.L79:
 1105              	.LCFI15:
 1106              		.cfi_restore_state
 655:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1107              		.loc 1 655 0
 1108 00c8 0123     		movs	r3, #1
 1109 00ca F9E7     		b	.L72
 1110              	.L80:
 1111 00cc 0123     		movs	r3, #1
 1112 00ce F7E7     		b	.L72
 1113              	.L81:
 659:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1114              		.loc 1 659 0
 1115 00d0 0223     		movs	r3, #2
 1116 00d2 F5E7     		b	.L72
 1117              	.LVL83:
 1118              	.L82:
 676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1119              		.loc 1 676 0
 1120 00d4 0323     		movs	r3, #3
 1121 00d6 F3E7     		b	.L72
 1122              	.L83:
 693:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1123              		.loc 1 693 0
 1124 00d8 0323     		movs	r3, #3
 1125 00da F1E7     		b	.L72
 1126              	.L84:
 701:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1127              		.loc 1 701 0
 1128 00dc 0323     		movs	r3, #3
 1129 00de EFE7     		b	.L72
 1130              		.cfi_endproc
 1131              	.LFE133:
 1133              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1134              		.align	1
 1135              		.global	HAL_UART_Receive
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1139              		.fpu fpv4-sp-d16
 1141              	HAL_UART_Receive:
 1142              	.LFB134:
 728:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1143              		.loc 1 728 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              	.LVL84:
 1148 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1149              	.LCFI16:
 1150              		.cfi_def_cfa_offset 24
 1151              		.cfi_offset 4, -24
 1152              		.cfi_offset 5, -20
 1153              		.cfi_offset 6, -16
 1154              		.cfi_offset 7, -12
 1155              		.cfi_offset 8, -8
 1156              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 68


 1157 0004 82B0     		sub	sp, sp, #8
 1158              	.LCFI17:
 1159              		.cfi_def_cfa_offset 32
 1160 0006 1E46     		mov	r6, r3
 1161              	.LVL85:
 733:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1162              		.loc 1 733 0
 1163 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1164              	.LVL86:
 1165 000c DBB2     		uxtb	r3, r3
 1166 000e 202B     		cmp	r3, #32
 1167 0010 5AD1     		bne	.L96
 1168 0012 0446     		mov	r4, r0
 1169 0014 0D46     		mov	r5, r1
 1170 0016 9046     		mov	r8, r2
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1171              		.loc 1 735 0
 1172 0018 0029     		cmp	r1, #0
 1173 001a 59D0     		beq	.L97
 735:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1174              		.loc 1 735 0 is_stmt 0 discriminator 1
 1175 001c 002A     		cmp	r2, #0
 1176 001e 59D0     		beq	.L98
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1177              		.loc 1 741 0 is_stmt 1
 1178 0020 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1179 0024 012B     		cmp	r3, #1
 1180 0026 57D0     		beq	.L99
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1181              		.loc 1 741 0 is_stmt 0 discriminator 2
 1182 0028 0123     		movs	r3, #1
 1183 002a 80F83830 		strb	r3, [r0, #56]
 743:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1184              		.loc 1 743 0 is_stmt 1 discriminator 2
 1185 002e 0023     		movs	r3, #0
 1186 0030 C363     		str	r3, [r0, #60]
 744:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1187              		.loc 1 744 0 discriminator 2
 1188 0032 2223     		movs	r3, #34
 1189 0034 80F83A30 		strb	r3, [r0, #58]
 747:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1190              		.loc 1 747 0 discriminator 2
 1191 0038 FFF7FEFF 		bl	HAL_GetTick
 1192              	.LVL87:
 1193 003c 0746     		mov	r7, r0
 1194              	.LVL88:
 749:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1195              		.loc 1 749 0 discriminator 2
 1196 003e A4F82C80 		strh	r8, [r4, #44]	@ movhi
 750:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1197              		.loc 1 750 0 discriminator 2
 1198 0042 A4F82E80 		strh	r8, [r4, #46]	@ movhi
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1199              		.loc 1 753 0 discriminator 2
 1200 0046 1DE0     		b	.L90
 1201              	.LVL89:
 1202              	.L104:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 69


 758:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1203              		.loc 1 758 0
 1204 0048 0096     		str	r6, [sp]
 1205 004a 3B46     		mov	r3, r7
 1206 004c 0022     		movs	r2, #0
 1207 004e 2021     		movs	r1, #32
 1208 0050 2046     		mov	r0, r4
 1209 0052 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1210              	.LVL90:
 1211 0056 0028     		cmp	r0, #0
 1212 0058 40D1     		bne	.L100
 1213              	.LVL91:
 763:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1214              		.loc 1 763 0
 1215 005a 2369     		ldr	r3, [r4, #16]
 1216 005c 33B9     		cbnz	r3, .L92
 765:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 1217              		.loc 1 765 0
 1218 005e 2368     		ldr	r3, [r4]
 1219 0060 5B68     		ldr	r3, [r3, #4]
 1220 0062 C3F30803 		ubfx	r3, r3, #0, #9
 1221 0066 25F8023B 		strh	r3, [r5], #2	@ movhi
 1222              	.LVL92:
 1223 006a 0BE0     		b	.L90
 1224              	.LVL93:
 1225              	.L92:
 770:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 1226              		.loc 1 770 0
 1227 006c 2368     		ldr	r3, [r4]
 1228 006e 5B68     		ldr	r3, [r3, #4]
 1229 0070 DBB2     		uxtb	r3, r3
 1230 0072 25F8013B 		strh	r3, [r5], #1	@ movhi
 1231              	.LVL94:
 1232 0076 05E0     		b	.L90
 1233              	.LVL95:
 1234              	.L94:
 787:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1235              		.loc 1 787 0
 1236 0078 2368     		ldr	r3, [r4]
 1237 007a 5B68     		ldr	r3, [r3, #4]
 1238              	.LVL96:
 1239 007c 03F07F03 		and	r3, r3, #127
 1240 0080 2B70     		strb	r3, [r5]
 1241 0082 0135     		adds	r5, r5, #1
 1242              	.LVL97:
 1243              	.L90:
 753:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1244              		.loc 1 753 0
 1245 0084 E38D     		ldrh	r3, [r4, #46]
 1246 0086 9BB2     		uxth	r3, r3
 1247 0088 BBB1     		cbz	r3, .L103
 755:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1248              		.loc 1 755 0
 1249 008a E38D     		ldrh	r3, [r4, #46]
 1250 008c 013B     		subs	r3, r3, #1
 1251 008e 9BB2     		uxth	r3, r3
 1252 0090 E385     		strh	r3, [r4, #46]	@ movhi
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 70


 756:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1253              		.loc 1 756 0
 1254 0092 A368     		ldr	r3, [r4, #8]
 1255 0094 B3F5805F 		cmp	r3, #4096
 1256 0098 D6D0     		beq	.L104
 777:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1257              		.loc 1 777 0
 1258 009a 0096     		str	r6, [sp]
 1259 009c 3B46     		mov	r3, r7
 1260 009e 0022     		movs	r2, #0
 1261 00a0 2021     		movs	r1, #32
 1262 00a2 2046     		mov	r0, r4
 1263 00a4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1264              	.LVL98:
 1265 00a8 D0B9     		cbnz	r0, .L101
 781:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1266              		.loc 1 781 0
 1267 00aa 2369     		ldr	r3, [r4, #16]
 1268 00ac 002B     		cmp	r3, #0
 1269 00ae E3D1     		bne	.L94
 783:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1270              		.loc 1 783 0
 1271 00b0 2368     		ldr	r3, [r4]
 1272 00b2 5B68     		ldr	r3, [r3, #4]
 1273              	.LVL99:
 1274 00b4 2B70     		strb	r3, [r5]
 1275 00b6 0135     		adds	r5, r5, #1
 1276              	.LVL100:
 1277 00b8 E4E7     		b	.L90
 1278              	.L103:
 794:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1279              		.loc 1 794 0
 1280 00ba 2023     		movs	r3, #32
 1281 00bc 84F83A30 		strb	r3, [r4, #58]
 797:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1282              		.loc 1 797 0
 1283 00c0 0020     		movs	r0, #0
 1284 00c2 84F83800 		strb	r0, [r4, #56]
 799:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1285              		.loc 1 799 0
 1286 00c6 00E0     		b	.L89
 1287              	.LVL101:
 1288              	.L96:
 803:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1289              		.loc 1 803 0
 1290 00c8 0220     		movs	r0, #2
 1291              	.LVL102:
 1292              	.L89:
 805:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1293              		.loc 1 805 0
 1294 00ca 02B0     		add	sp, sp, #8
 1295              	.LCFI18:
 1296              		.cfi_remember_state
 1297              		.cfi_def_cfa_offset 24
 1298              		@ sp needed
 1299 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1300              	.LVL103:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 71


 1301              	.L97:
 1302              	.LCFI19:
 1303              		.cfi_restore_state
 737:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1304              		.loc 1 737 0
 1305 00d0 0120     		movs	r0, #1
 1306              	.LVL104:
 1307 00d2 FAE7     		b	.L89
 1308              	.LVL105:
 1309              	.L98:
 1310 00d4 0120     		movs	r0, #1
 1311              	.LVL106:
 1312 00d6 F8E7     		b	.L89
 1313              	.LVL107:
 1314              	.L99:
 741:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1315              		.loc 1 741 0
 1316 00d8 0220     		movs	r0, #2
 1317              	.LVL108:
 1318 00da F6E7     		b	.L89
 1319              	.LVL109:
 1320              	.L100:
 760:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1321              		.loc 1 760 0
 1322 00dc 0320     		movs	r0, #3
 1323 00de F4E7     		b	.L89
 1324              	.L101:
 779:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1325              		.loc 1 779 0
 1326 00e0 0320     		movs	r0, #3
 1327 00e2 F2E7     		b	.L89
 1328              		.cfi_endproc
 1329              	.LFE134:
 1331              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1332              		.align	1
 1333              		.global	HAL_UART_Transmit_IT
 1334              		.syntax unified
 1335              		.thumb
 1336              		.thumb_func
 1337              		.fpu fpv4-sp-d16
 1339              	HAL_UART_Transmit_IT:
 1340              	.LFB135:
 816:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1341              		.loc 1 816 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
 1346              	.LVL110:
 818:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1347              		.loc 1 818 0
 1348 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1349 0004 DBB2     		uxtb	r3, r3
 1350 0006 202B     		cmp	r3, #32
 1351 0008 16D1     		bne	.L107
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1352              		.loc 1 820 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 72


 1353 000a B9B1     		cbz	r1, .L108
 820:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1354              		.loc 1 820 0 is_stmt 0 discriminator 1
 1355 000c C2B1     		cbz	r2, .L109
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1356              		.loc 1 825 0 is_stmt 1
 1357 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1358 0012 012B     		cmp	r3, #1
 1359 0014 16D0     		beq	.L110
 827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1360              		.loc 1 827 0 discriminator 2
 1361 0016 0162     		str	r1, [r0, #32]
 828:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1362              		.loc 1 828 0 discriminator 2
 1363 0018 8284     		strh	r2, [r0, #36]	@ movhi
 829:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1364              		.loc 1 829 0 discriminator 2
 1365 001a C284     		strh	r2, [r0, #38]	@ movhi
 831:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1366              		.loc 1 831 0 discriminator 2
 1367 001c 0023     		movs	r3, #0
 1368 001e C363     		str	r3, [r0, #60]
 832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1369              		.loc 1 832 0 discriminator 2
 1370 0020 2122     		movs	r2, #33
 1371              	.LVL111:
 1372 0022 80F83920 		strb	r2, [r0, #57]
 835:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1373              		.loc 1 835 0 discriminator 2
 1374 0026 80F83830 		strb	r3, [r0, #56]
 838:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1375              		.loc 1 838 0 discriminator 2
 1376 002a 0168     		ldr	r1, [r0]
 1377              	.LVL112:
 1378 002c CA68     		ldr	r2, [r1, #12]
 1379 002e 42F08002 		orr	r2, r2, #128
 1380 0032 CA60     		str	r2, [r1, #12]
 1381              	.LVL113:
 840:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1382              		.loc 1 840 0 discriminator 2
 1383 0034 1846     		mov	r0, r3
 1384              	.LVL114:
 1385 0036 7047     		bx	lr
 1386              	.LVL115:
 1387              	.L107:
 844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1388              		.loc 1 844 0
 1389 0038 0220     		movs	r0, #2
 1390              	.LVL116:
 1391 003a 7047     		bx	lr
 1392              	.LVL117:
 1393              	.L108:
 822:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1394              		.loc 1 822 0
 1395 003c 0120     		movs	r0, #1
 1396              	.LVL118:
 1397 003e 7047     		bx	lr
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 73


 1398              	.LVL119:
 1399              	.L109:
 1400 0040 0120     		movs	r0, #1
 1401              	.LVL120:
 1402 0042 7047     		bx	lr
 1403              	.LVL121:
 1404              	.L110:
 825:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1405              		.loc 1 825 0
 1406 0044 0220     		movs	r0, #2
 1407              	.LVL122:
 846:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1408              		.loc 1 846 0
 1409 0046 7047     		bx	lr
 1410              		.cfi_endproc
 1411              	.LFE135:
 1413              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1414              		.align	1
 1415              		.global	HAL_UART_Receive_IT
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv4-sp-d16
 1421              	HAL_UART_Receive_IT:
 1422              	.LFB136:
 857:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1423              		.loc 1 857 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428              	.LVL123:
 859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1429              		.loc 1 859 0
 1430 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1431 0004 DBB2     		uxtb	r3, r3
 1432 0006 202B     		cmp	r3, #32
 1433 0008 20D1     		bne	.L113
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1434              		.loc 1 861 0
 1435 000a 09B3     		cbz	r1, .L114
 861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1436              		.loc 1 861 0 is_stmt 0 discriminator 1
 1437 000c 12B3     		cbz	r2, .L115
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1438              		.loc 1 867 0 is_stmt 1
 1439 000e 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1440 0012 012B     		cmp	r3, #1
 1441 0014 20D0     		beq	.L116
 869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1442              		.loc 1 869 0 discriminator 2
 1443 0016 8162     		str	r1, [r0, #40]
 870:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1444              		.loc 1 870 0 discriminator 2
 1445 0018 8285     		strh	r2, [r0, #44]	@ movhi
 871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1446              		.loc 1 871 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 74


 1447 001a C285     		strh	r2, [r0, #46]	@ movhi
 873:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1448              		.loc 1 873 0 discriminator 2
 1449 001c 0023     		movs	r3, #0
 1450 001e C363     		str	r3, [r0, #60]
 874:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1451              		.loc 1 874 0 discriminator 2
 1452 0020 2222     		movs	r2, #34
 1453              	.LVL124:
 1454 0022 80F83A20 		strb	r2, [r0, #58]
 877:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1455              		.loc 1 877 0 discriminator 2
 1456 0026 80F83830 		strb	r3, [r0, #56]
 880:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1457              		.loc 1 880 0 discriminator 2
 1458 002a 0168     		ldr	r1, [r0]
 1459              	.LVL125:
 1460 002c CA68     		ldr	r2, [r1, #12]
 1461 002e 42F48072 		orr	r2, r2, #256
 1462 0032 CA60     		str	r2, [r1, #12]
 1463              	.LVL126:
 883:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1464              		.loc 1 883 0 discriminator 2
 1465 0034 0168     		ldr	r1, [r0]
 1466 0036 4A69     		ldr	r2, [r1, #20]
 1467 0038 42F00102 		orr	r2, r2, #1
 1468 003c 4A61     		str	r2, [r1, #20]
 886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1469              		.loc 1 886 0 discriminator 2
 1470 003e 0168     		ldr	r1, [r0]
 1471 0040 CA68     		ldr	r2, [r1, #12]
 1472 0042 42F02002 		orr	r2, r2, #32
 1473 0046 CA60     		str	r2, [r1, #12]
 888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1474              		.loc 1 888 0 discriminator 2
 1475 0048 1846     		mov	r0, r3
 1476              	.LVL127:
 1477 004a 7047     		bx	lr
 1478              	.LVL128:
 1479              	.L113:
 892:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1480              		.loc 1 892 0
 1481 004c 0220     		movs	r0, #2
 1482              	.LVL129:
 1483 004e 7047     		bx	lr
 1484              	.LVL130:
 1485              	.L114:
 863:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1486              		.loc 1 863 0
 1487 0050 0120     		movs	r0, #1
 1488              	.LVL131:
 1489 0052 7047     		bx	lr
 1490              	.LVL132:
 1491              	.L115:
 1492 0054 0120     		movs	r0, #1
 1493              	.LVL133:
 1494 0056 7047     		bx	lr
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 75


 1495              	.LVL134:
 1496              	.L116:
 867:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1497              		.loc 1 867 0
 1498 0058 0220     		movs	r0, #2
 1499              	.LVL135:
 894:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1500              		.loc 1 894 0
 1501 005a 7047     		bx	lr
 1502              		.cfi_endproc
 1503              	.LFE136:
 1505              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1506              		.align	1
 1507              		.global	HAL_UART_Transmit_DMA
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	HAL_UART_Transmit_DMA:
 1514              	.LFB137:
 905:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1515              		.loc 1 905 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              	.LVL136:
 1520 0000 38B5     		push	{r3, r4, r5, lr}
 1521              	.LCFI20:
 1522              		.cfi_def_cfa_offset 16
 1523              		.cfi_offset 3, -16
 1524              		.cfi_offset 4, -12
 1525              		.cfi_offset 5, -8
 1526              		.cfi_offset 14, -4
 909:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1527              		.loc 1 909 0
 1528 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1529 0006 E4B2     		uxtb	r4, r4
 1530 0008 202C     		cmp	r4, #32
 1531 000a 31D1     		bne	.L119
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1532              		.loc 1 911 0
 1533 000c 0029     		cmp	r1, #0
 1534 000e 31D0     		beq	.L120
 911:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1535              		.loc 1 911 0 is_stmt 0 discriminator 1
 1536 0010 002A     		cmp	r2, #0
 1537 0012 31D0     		beq	.L121
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1538              		.loc 1 917 0 is_stmt 1
 1539 0014 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1540 0018 012B     		cmp	r3, #1
 1541 001a 2FD0     		beq	.L122
 1542 001c 1346     		mov	r3, r2
 1543 001e 0446     		mov	r4, r0
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1544              		.loc 1 917 0 is_stmt 0 discriminator 2
 1545 0020 0122     		movs	r2, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 76


 1546              	.LVL137:
 1547 0022 80F83820 		strb	r2, [r0, #56]
 919:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1548              		.loc 1 919 0 is_stmt 1 discriminator 2
 1549 0026 0162     		str	r1, [r0, #32]
 920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1550              		.loc 1 920 0 discriminator 2
 1551 0028 8384     		strh	r3, [r0, #36]	@ movhi
 921:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1552              		.loc 1 921 0 discriminator 2
 1553 002a C384     		strh	r3, [r0, #38]	@ movhi
 923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1554              		.loc 1 923 0 discriminator 2
 1555 002c 0025     		movs	r5, #0
 1556 002e C563     		str	r5, [r0, #60]
 924:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1557              		.loc 1 924 0 discriminator 2
 1558 0030 2122     		movs	r2, #33
 1559 0032 80F83920 		strb	r2, [r0, #57]
 927:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1560              		.loc 1 927 0 discriminator 2
 1561 0036 026B     		ldr	r2, [r0, #48]
 1562 0038 1148     		ldr	r0, .L124
 1563              	.LVL138:
 1564 003a 9062     		str	r0, [r2, #40]
 930:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1565              		.loc 1 930 0 discriminator 2
 1566 003c 226B     		ldr	r2, [r4, #48]
 1567 003e 1148     		ldr	r0, .L124+4
 1568 0040 D062     		str	r0, [r2, #44]
 933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1569              		.loc 1 933 0 discriminator 2
 1570 0042 226B     		ldr	r2, [r4, #48]
 1571 0044 1048     		ldr	r0, .L124+8
 1572 0046 1063     		str	r0, [r2, #48]
 936:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1573              		.loc 1 936 0 discriminator 2
 1574 0048 226B     		ldr	r2, [r4, #48]
 1575 004a 5563     		str	r5, [r2, #52]
 1576              	.LVL139:
 940:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1577              		.loc 1 940 0 discriminator 2
 1578 004c 2268     		ldr	r2, [r4]
 1579 004e 0432     		adds	r2, r2, #4
 1580 0050 206B     		ldr	r0, [r4, #48]
 1581 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1582              	.LVL140:
 943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1583              		.loc 1 943 0 discriminator 2
 1584 0056 2368     		ldr	r3, [r4]
 1585 0058 6FF04002 		mvn	r2, #64
 1586 005c 1A60     		str	r2, [r3]
 946:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1587              		.loc 1 946 0 discriminator 2
 1588 005e 84F83850 		strb	r5, [r4, #56]
 950:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1589              		.loc 1 950 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 77


 1590 0062 2268     		ldr	r2, [r4]
 1591 0064 5369     		ldr	r3, [r2, #20]
 1592 0066 43F08003 		orr	r3, r3, #128
 1593 006a 5361     		str	r3, [r2, #20]
 952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1594              		.loc 1 952 0 discriminator 2
 1595 006c 2846     		mov	r0, r5
 1596 006e 00E0     		b	.L118
 1597              	.LVL141:
 1598              	.L119:
 956:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1599              		.loc 1 956 0
 1600 0070 0220     		movs	r0, #2
 1601              	.LVL142:
 1602              	.L118:
 958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1603              		.loc 1 958 0
 1604 0072 38BD     		pop	{r3, r4, r5, pc}
 1605              	.LVL143:
 1606              	.L120:
 913:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1607              		.loc 1 913 0
 1608 0074 0120     		movs	r0, #1
 1609              	.LVL144:
 1610 0076 FCE7     		b	.L118
 1611              	.LVL145:
 1612              	.L121:
 1613 0078 0120     		movs	r0, #1
 1614              	.LVL146:
 1615 007a FAE7     		b	.L118
 1616              	.LVL147:
 1617              	.L122:
 917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1618              		.loc 1 917 0
 1619 007c 0220     		movs	r0, #2
 1620              	.LVL148:
 1621 007e F8E7     		b	.L118
 1622              	.L125:
 1623              		.align	2
 1624              	.L124:
 1625 0080 00000000 		.word	UART_DMATransmitCplt
 1626 0084 00000000 		.word	UART_DMATxHalfCplt
 1627 0088 00000000 		.word	UART_DMAError
 1628              		.cfi_endproc
 1629              	.LFE137:
 1631              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1632              		.align	1
 1633              		.global	HAL_UART_Receive_DMA
 1634              		.syntax unified
 1635              		.thumb
 1636              		.thumb_func
 1637              		.fpu fpv4-sp-d16
 1639              	HAL_UART_Receive_DMA:
 1640              	.LFB138:
 970:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1641              		.loc 1 970 0
 1642              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 78


 1643              		@ args = 0, pretend = 0, frame = 8
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 1645              	.LVL149:
 1646 0000 30B5     		push	{r4, r5, lr}
 1647              	.LCFI21:
 1648              		.cfi_def_cfa_offset 12
 1649              		.cfi_offset 4, -12
 1650              		.cfi_offset 5, -8
 1651              		.cfi_offset 14, -4
 1652 0002 83B0     		sub	sp, sp, #12
 1653              	.LCFI22:
 1654              		.cfi_def_cfa_offset 24
 974:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1655              		.loc 1 974 0
 1656 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1657 0008 E4B2     		uxtb	r4, r4
 1658 000a 202C     		cmp	r4, #32
 1659 000c 3DD1     		bne	.L128
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1660              		.loc 1 976 0
 1661 000e 0029     		cmp	r1, #0
 1662 0010 3ED0     		beq	.L129
 976:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1663              		.loc 1 976 0 is_stmt 0 discriminator 1
 1664 0012 002A     		cmp	r2, #0
 1665 0014 3ED0     		beq	.L130
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1666              		.loc 1 982 0 is_stmt 1
 1667 0016 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1668 001a 012B     		cmp	r3, #1
 1669 001c 3CD0     		beq	.L131
 1670 001e 1346     		mov	r3, r2
 1671 0020 0A46     		mov	r2, r1
 1672              	.LVL150:
 1673 0022 0446     		mov	r4, r0
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1674              		.loc 1 982 0 is_stmt 0 discriminator 2
 1675 0024 0121     		movs	r1, #1
 1676              	.LVL151:
 1677 0026 80F83810 		strb	r1, [r0, #56]
 984:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1678              		.loc 1 984 0 is_stmt 1 discriminator 2
 1679 002a 8262     		str	r2, [r0, #40]
 985:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1680              		.loc 1 985 0 discriminator 2
 1681 002c 8385     		strh	r3, [r0, #44]	@ movhi
 987:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1682              		.loc 1 987 0 discriminator 2
 1683 002e 0025     		movs	r5, #0
 1684 0030 C563     		str	r5, [r0, #60]
 988:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1685              		.loc 1 988 0 discriminator 2
 1686 0032 2221     		movs	r1, #34
 1687 0034 80F83A10 		strb	r1, [r0, #58]
 991:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1688              		.loc 1 991 0 discriminator 2
 1689 0038 416B     		ldr	r1, [r0, #52]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 79


 1690 003a 1848     		ldr	r0, .L133
 1691              	.LVL152:
 1692 003c 8862     		str	r0, [r1, #40]
 994:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1693              		.loc 1 994 0 discriminator 2
 1694 003e 616B     		ldr	r1, [r4, #52]
 1695 0040 1748     		ldr	r0, .L133+4
 1696 0042 C862     		str	r0, [r1, #44]
 997:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1697              		.loc 1 997 0 discriminator 2
 1698 0044 616B     		ldr	r1, [r4, #52]
 1699 0046 1748     		ldr	r0, .L133+8
 1700 0048 0863     		str	r0, [r1, #48]
1000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1701              		.loc 1 1000 0 discriminator 2
 1702 004a 616B     		ldr	r1, [r4, #52]
 1703 004c 4D63     		str	r5, [r1, #52]
 1704              	.LVL153:
1004:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1705              		.loc 1 1004 0 discriminator 2
 1706 004e 2168     		ldr	r1, [r4]
 1707 0050 0431     		adds	r1, r1, #4
 1708 0052 606B     		ldr	r0, [r4, #52]
 1709 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1710              	.LVL154:
 1711              	.LBB2:
1007:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1712              		.loc 1 1007 0 discriminator 2
 1713 0058 0195     		str	r5, [sp, #4]
 1714 005a 2368     		ldr	r3, [r4]
 1715 005c 1A68     		ldr	r2, [r3]
 1716 005e 0192     		str	r2, [sp, #4]
 1717 0060 5A68     		ldr	r2, [r3, #4]
 1718 0062 0192     		str	r2, [sp, #4]
 1719 0064 019A     		ldr	r2, [sp, #4]
 1720              	.LBE2:
1010:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1721              		.loc 1 1010 0 discriminator 2
 1722 0066 84F83850 		strb	r5, [r4, #56]
1013:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1723              		.loc 1 1013 0 discriminator 2
 1724 006a DA68     		ldr	r2, [r3, #12]
 1725 006c 42F48072 		orr	r2, r2, #256
 1726 0070 DA60     		str	r2, [r3, #12]
1016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1727              		.loc 1 1016 0 discriminator 2
 1728 0072 2268     		ldr	r2, [r4]
 1729 0074 5369     		ldr	r3, [r2, #20]
 1730 0076 43F00103 		orr	r3, r3, #1
 1731 007a 5361     		str	r3, [r2, #20]
1020:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1732              		.loc 1 1020 0 discriminator 2
 1733 007c 2268     		ldr	r2, [r4]
 1734 007e 5369     		ldr	r3, [r2, #20]
 1735 0080 43F04003 		orr	r3, r3, #64
 1736 0084 5361     		str	r3, [r2, #20]
1022:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 80


 1737              		.loc 1 1022 0 discriminator 2
 1738 0086 2846     		mov	r0, r5
 1739 0088 00E0     		b	.L127
 1740              	.LVL155:
 1741              	.L128:
1026:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1742              		.loc 1 1026 0
 1743 008a 0220     		movs	r0, #2
 1744              	.LVL156:
 1745              	.L127:
1028:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1746              		.loc 1 1028 0
 1747 008c 03B0     		add	sp, sp, #12
 1748              	.LCFI23:
 1749              		.cfi_remember_state
 1750              		.cfi_def_cfa_offset 12
 1751              		@ sp needed
 1752 008e 30BD     		pop	{r4, r5, pc}
 1753              	.LVL157:
 1754              	.L129:
 1755              	.LCFI24:
 1756              		.cfi_restore_state
 978:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1757              		.loc 1 978 0
 1758 0090 0120     		movs	r0, #1
 1759              	.LVL158:
 1760 0092 FBE7     		b	.L127
 1761              	.LVL159:
 1762              	.L130:
 1763 0094 0120     		movs	r0, #1
 1764              	.LVL160:
 1765 0096 F9E7     		b	.L127
 1766              	.LVL161:
 1767              	.L131:
 982:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1768              		.loc 1 982 0
 1769 0098 0220     		movs	r0, #2
 1770              	.LVL162:
 1771 009a F7E7     		b	.L127
 1772              	.L134:
 1773              		.align	2
 1774              	.L133:
 1775 009c 00000000 		.word	UART_DMAReceiveCplt
 1776 00a0 00000000 		.word	UART_DMARxHalfCplt
 1777 00a4 00000000 		.word	UART_DMAError
 1778              		.cfi_endproc
 1779              	.LFE138:
 1781              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1782              		.align	1
 1783              		.global	HAL_UART_DMAPause
 1784              		.syntax unified
 1785              		.thumb
 1786              		.thumb_func
 1787              		.fpu fpv4-sp-d16
 1789              	HAL_UART_DMAPause:
 1790              	.LFB139:
1037:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 81


 1791              		.loc 1 1037 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
 1796              	.LVL163:
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1797              		.loc 1 1041 0
 1798 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1799 0004 012B     		cmp	r3, #1
 1800 0006 31D0     		beq	.L139
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1801              		.loc 1 1041 0 is_stmt 0 discriminator 2
 1802 0008 0123     		movs	r3, #1
 1803 000a 80F83830 		strb	r3, [r0, #56]
1043:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1804              		.loc 1 1043 0 is_stmt 1 discriminator 2
 1805 000e 0168     		ldr	r1, [r0]
 1806 0010 4A69     		ldr	r2, [r1, #20]
 1807 0012 02F08002 		and	r2, r2, #128
 1808              	.LVL164:
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1809              		.loc 1 1044 0 discriminator 2
 1810 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1811 001a DBB2     		uxtb	r3, r3
 1812 001c 212B     		cmp	r3, #33
 1813 001e 0DD0     		beq	.L140
 1814              	.L137:
1050:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1815              		.loc 1 1050 0
 1816 0020 0168     		ldr	r1, [r0]
 1817 0022 4A69     		ldr	r2, [r1, #20]
 1818              	.LVL165:
 1819 0024 02F04002 		and	r2, r2, #64
 1820              	.LVL166:
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1821              		.loc 1 1051 0
 1822 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1823 002c DBB2     		uxtb	r3, r3
 1824 002e 222B     		cmp	r3, #34
 1825 0030 0BD0     		beq	.L141
 1826              	.LVL167:
 1827              	.L138:
1062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1828              		.loc 1 1062 0
 1829 0032 0023     		movs	r3, #0
 1830 0034 80F83830 		strb	r3, [r0, #56]
1064:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1831              		.loc 1 1064 0
 1832 0038 1846     		mov	r0, r3
 1833              	.LVL168:
 1834 003a 7047     		bx	lr
 1835              	.LVL169:
 1836              	.L140:
1044:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1837              		.loc 1 1044 0 discriminator 1
 1838 003c 002A     		cmp	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 82


 1839 003e EFD0     		beq	.L137
1047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1840              		.loc 1 1047 0
 1841 0040 4B69     		ldr	r3, [r1, #20]
 1842 0042 23F08003 		bic	r3, r3, #128
 1843 0046 4B61     		str	r3, [r1, #20]
 1844 0048 EAE7     		b	.L137
 1845              	.L141:
1051:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1846              		.loc 1 1051 0 discriminator 1
 1847 004a 002A     		cmp	r2, #0
 1848 004c F1D0     		beq	.L138
1054:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1849              		.loc 1 1054 0
 1850 004e CB68     		ldr	r3, [r1, #12]
 1851 0050 23F48073 		bic	r3, r3, #256
 1852 0054 CB60     		str	r3, [r1, #12]
1055:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1853              		.loc 1 1055 0
 1854 0056 0268     		ldr	r2, [r0]
 1855              	.LVL170:
 1856 0058 5369     		ldr	r3, [r2, #20]
 1857 005a 23F00103 		bic	r3, r3, #1
 1858 005e 5361     		str	r3, [r2, #20]
1058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1859              		.loc 1 1058 0
 1860 0060 0268     		ldr	r2, [r0]
 1861 0062 5369     		ldr	r3, [r2, #20]
 1862 0064 23F04003 		bic	r3, r3, #64
 1863 0068 5361     		str	r3, [r2, #20]
 1864 006a E2E7     		b	.L138
 1865              	.LVL171:
 1866              	.L139:
1041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1867              		.loc 1 1041 0
 1868 006c 0220     		movs	r0, #2
 1869              	.LVL172:
1065:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1870              		.loc 1 1065 0
 1871 006e 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE139:
 1875              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1876              		.align	1
 1877              		.global	HAL_UART_DMAResume
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu fpv4-sp-d16
 1883              	HAL_UART_DMAResume:
 1884              	.LFB140:
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1885              		.loc 1 1074 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 8
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 83


 1890              	.LVL173:
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1891              		.loc 1 1076 0
 1892 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1893 0004 012B     		cmp	r3, #1
 1894 0006 34D0     		beq	.L146
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1895              		.loc 1 1076 0 is_stmt 0 discriminator 2
 1896 0008 0123     		movs	r3, #1
 1897 000a 80F83830 		strb	r3, [r0, #56]
1078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1898              		.loc 1 1078 0 is_stmt 1 discriminator 2
 1899 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1900 0012 DBB2     		uxtb	r3, r3
 1901 0014 212B     		cmp	r3, #33
 1902 0016 09D0     		beq	.L152
 1903              	.L144:
1084:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1904              		.loc 1 1084 0
 1905 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1906 001c DBB2     		uxtb	r3, r3
 1907 001e 222B     		cmp	r3, #34
 1908 0020 0AD0     		beq	.L153
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1909              		.loc 1 1098 0
 1910 0022 0023     		movs	r3, #0
 1911 0024 80F83830 		strb	r3, [r0, #56]
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1912              		.loc 1 1100 0
 1913 0028 1846     		mov	r0, r3
 1914              	.LVL174:
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1915              		.loc 1 1101 0
 1916 002a 7047     		bx	lr
 1917              	.LVL175:
 1918              	.L152:
1081:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1919              		.loc 1 1081 0
 1920 002c 0268     		ldr	r2, [r0]
 1921 002e 5369     		ldr	r3, [r2, #20]
 1922 0030 43F08003 		orr	r3, r3, #128
 1923 0034 5361     		str	r3, [r2, #20]
 1924 0036 EFE7     		b	.L144
 1925              	.L153:
1074:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1926              		.loc 1 1074 0
 1927 0038 82B0     		sub	sp, sp, #8
 1928              	.LCFI25:
 1929              		.cfi_def_cfa_offset 8
 1930              	.LBB3:
1087:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1931              		.loc 1 1087 0
 1932 003a 0023     		movs	r3, #0
 1933 003c 0193     		str	r3, [sp, #4]
 1934 003e 0368     		ldr	r3, [r0]
 1935 0040 1A68     		ldr	r2, [r3]
 1936 0042 0192     		str	r2, [sp, #4]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 84


 1937 0044 5A68     		ldr	r2, [r3, #4]
 1938 0046 0192     		str	r2, [sp, #4]
 1939 0048 019A     		ldr	r2, [sp, #4]
 1940              	.LBE3:
1090:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1941              		.loc 1 1090 0
 1942 004a DA68     		ldr	r2, [r3, #12]
 1943 004c 42F48072 		orr	r2, r2, #256
 1944 0050 DA60     		str	r2, [r3, #12]
1091:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1945              		.loc 1 1091 0
 1946 0052 0268     		ldr	r2, [r0]
 1947 0054 5369     		ldr	r3, [r2, #20]
 1948 0056 43F00103 		orr	r3, r3, #1
 1949 005a 5361     		str	r3, [r2, #20]
1094:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1950              		.loc 1 1094 0
 1951 005c 0268     		ldr	r2, [r0]
 1952 005e 5369     		ldr	r3, [r2, #20]
 1953 0060 43F04003 		orr	r3, r3, #64
 1954 0064 5361     		str	r3, [r2, #20]
1098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1955              		.loc 1 1098 0
 1956 0066 0023     		movs	r3, #0
 1957 0068 80F83830 		strb	r3, [r0, #56]
1100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1958              		.loc 1 1100 0
 1959 006c 1846     		mov	r0, r3
 1960              	.LVL176:
1101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1961              		.loc 1 1101 0
 1962 006e 02B0     		add	sp, sp, #8
 1963              	.LCFI26:
 1964              		.cfi_def_cfa_offset 0
 1965              		@ sp needed
 1966 0070 7047     		bx	lr
 1967              	.LVL177:
 1968              	.L146:
1076:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1969              		.loc 1 1076 0
 1970 0072 0220     		movs	r0, #2
 1971              	.LVL178:
 1972 0074 7047     		bx	lr
 1973              		.cfi_endproc
 1974              	.LFE140:
 1976              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1977              		.align	1
 1978              		.global	HAL_UART_DMAStop
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1982              		.fpu fpv4-sp-d16
 1984              	HAL_UART_DMAStop:
 1985              	.LFB141:
1110:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1986              		.loc 1 1110 0
 1987              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 85


 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 1990              	.LVL179:
 1991 0000 10B5     		push	{r4, lr}
 1992              	.LCFI27:
 1993              		.cfi_def_cfa_offset 8
 1994              		.cfi_offset 4, -8
 1995              		.cfi_offset 14, -4
 1996 0002 0446     		mov	r4, r0
 1997              	.LVL180:
1119:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1998              		.loc 1 1119 0
 1999 0004 0168     		ldr	r1, [r0]
 2000 0006 4A69     		ldr	r2, [r1, #20]
 2001              	.LVL181:
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2002              		.loc 1 1120 0
 2003 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2004 000c DBB2     		uxtb	r3, r3
 2005 000e 212B     		cmp	r3, #33
 2006 0010 0AD0     		beq	.L160
 2007              	.LVL182:
 2008              	.L155:
1133:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2009              		.loc 1 1133 0
 2010 0012 2168     		ldr	r1, [r4]
 2011 0014 4A69     		ldr	r2, [r1, #20]
 2012 0016 02F04002 		and	r2, r2, #64
 2013              	.LVL183:
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2014              		.loc 1 1134 0
 2015 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2016 001e DBB2     		uxtb	r3, r3
 2017 0020 222B     		cmp	r3, #34
 2018 0022 11D0     		beq	.L161
 2019              	.LVL184:
 2020              	.L157:
1147:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2021              		.loc 1 1147 0
 2022 0024 0020     		movs	r0, #0
 2023 0026 10BD     		pop	{r4, pc}
 2024              	.LVL185:
 2025              	.L160:
 2026 0028 02F08002 		and	r2, r2, #128
 2027              	.LVL186:
1120:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2028              		.loc 1 1120 0 discriminator 1
 2029 002c 002A     		cmp	r2, #0
 2030 002e F0D0     		beq	.L155
1122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2031              		.loc 1 1122 0
 2032 0030 4B69     		ldr	r3, [r1, #20]
 2033 0032 23F08003 		bic	r3, r3, #128
 2034 0036 4B61     		str	r3, [r1, #20]
1125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2035              		.loc 1 1125 0
 2036 0038 006B     		ldr	r0, [r0, #48]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 86


 2037              	.LVL187:
 2038 003a 08B1     		cbz	r0, .L156
1127:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2039              		.loc 1 1127 0
 2040 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2041              	.LVL188:
 2042              	.L156:
1129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2043              		.loc 1 1129 0
 2044 0040 2046     		mov	r0, r4
 2045 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2046              	.LVL189:
 2047 0046 E4E7     		b	.L155
 2048              	.LVL190:
 2049              	.L161:
1134:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2050              		.loc 1 1134 0 discriminator 1
 2051 0048 002A     		cmp	r2, #0
 2052 004a EBD0     		beq	.L157
1136:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2053              		.loc 1 1136 0
 2054 004c 4B69     		ldr	r3, [r1, #20]
 2055 004e 23F04003 		bic	r3, r3, #64
 2056 0052 4B61     		str	r3, [r1, #20]
1139:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2057              		.loc 1 1139 0
 2058 0054 606B     		ldr	r0, [r4, #52]
 2059 0056 08B1     		cbz	r0, .L158
1141:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2060              		.loc 1 1141 0
 2061 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2062              	.LVL191:
 2063              	.L158:
1143:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2064              		.loc 1 1143 0
 2065 005c 2046     		mov	r0, r4
 2066 005e FFF7FEFF 		bl	UART_EndRxTransfer
 2067              	.LVL192:
 2068 0062 DFE7     		b	.L157
 2069              		.cfi_endproc
 2070              	.LFE141:
 2072              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2073              		.align	1
 2074              		.global	HAL_UART_Abort
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2078              		.fpu fpv4-sp-d16
 2080              	HAL_UART_Abort:
 2081              	.LFB142:
1162:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2082              		.loc 1 1162 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 2086              	.LVL193:
 2087 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 87


 2088              	.LCFI28:
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 4, -8
 2091              		.cfi_offset 14, -4
 2092 0002 0446     		mov	r4, r0
1164:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2093              		.loc 1 1164 0
 2094 0004 0268     		ldr	r2, [r0]
 2095 0006 D368     		ldr	r3, [r2, #12]
 2096 0008 23F4F073 		bic	r3, r3, #480
 2097 000c D360     		str	r3, [r2, #12]
1165:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2098              		.loc 1 1165 0
 2099 000e 0268     		ldr	r2, [r0]
 2100 0010 5369     		ldr	r3, [r2, #20]
 2101 0012 23F00103 		bic	r3, r3, #1
 2102 0016 5361     		str	r3, [r2, #20]
1168:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2103              		.loc 1 1168 0
 2104 0018 0368     		ldr	r3, [r0]
 2105 001a 5A69     		ldr	r2, [r3, #20]
 2106 001c 12F0800F 		tst	r2, #128
 2107 0020 0AD0     		beq	.L163
1170:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2108              		.loc 1 1170 0
 2109 0022 5A69     		ldr	r2, [r3, #20]
 2110 0024 22F08002 		bic	r2, r2, #128
 2111 0028 5A61     		str	r2, [r3, #20]
1173:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2112              		.loc 1 1173 0
 2113 002a 036B     		ldr	r3, [r0, #48]
 2114 002c 23B1     		cbz	r3, .L163
1177:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2115              		.loc 1 1177 0
 2116 002e 0022     		movs	r2, #0
 2117 0030 5A63     		str	r2, [r3, #52]
1179:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2118              		.loc 1 1179 0
 2119 0032 006B     		ldr	r0, [r0, #48]
 2120              	.LVL194:
 2121 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2122              	.LVL195:
 2123              	.L163:
1184:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2124              		.loc 1 1184 0
 2125 0038 2368     		ldr	r3, [r4]
 2126 003a 5A69     		ldr	r2, [r3, #20]
 2127 003c 12F0400F 		tst	r2, #64
 2128 0040 0AD0     		beq	.L164
1186:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2129              		.loc 1 1186 0
 2130 0042 5A69     		ldr	r2, [r3, #20]
 2131 0044 22F04002 		bic	r2, r2, #64
 2132 0048 5A61     		str	r2, [r3, #20]
1189:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2133              		.loc 1 1189 0
 2134 004a 636B     		ldr	r3, [r4, #52]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 88


 2135 004c 23B1     		cbz	r3, .L164
1193:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2136              		.loc 1 1193 0
 2137 004e 0022     		movs	r2, #0
 2138 0050 5A63     		str	r2, [r3, #52]
1195:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2139              		.loc 1 1195 0
 2140 0052 606B     		ldr	r0, [r4, #52]
 2141 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2142              	.LVL196:
 2143              	.L164:
1200:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2144              		.loc 1 1200 0
 2145 0058 0020     		movs	r0, #0
 2146 005a E084     		strh	r0, [r4, #38]	@ movhi
1201:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2147              		.loc 1 1201 0
 2148 005c E085     		strh	r0, [r4, #46]	@ movhi
1204:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2149              		.loc 1 1204 0
 2150 005e E063     		str	r0, [r4, #60]
1207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2151              		.loc 1 1207 0
 2152 0060 2023     		movs	r3, #32
 2153 0062 84F83A30 		strb	r3, [r4, #58]
1208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2154              		.loc 1 1208 0
 2155 0066 84F83930 		strb	r3, [r4, #57]
1211:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2156              		.loc 1 1211 0
 2157 006a 10BD     		pop	{r4, pc}
 2158              		.cfi_endproc
 2159              	.LFE142:
 2161              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2162              		.align	1
 2163              		.global	HAL_UART_AbortTransmit
 2164              		.syntax unified
 2165              		.thumb
 2166              		.thumb_func
 2167              		.fpu fpv4-sp-d16
 2169              	HAL_UART_AbortTransmit:
 2170              	.LFB143:
1226:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2171              		.loc 1 1226 0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 0
 2174              		@ frame_needed = 0, uses_anonymous_args = 0
 2175              	.LVL197:
 2176 0000 10B5     		push	{r4, lr}
 2177              	.LCFI29:
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 4, -8
 2180              		.cfi_offset 14, -4
 2181 0002 0446     		mov	r4, r0
1228:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2182              		.loc 1 1228 0
 2183 0004 0268     		ldr	r2, [r0]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 89


 2184 0006 D368     		ldr	r3, [r2, #12]
 2185 0008 23F0C003 		bic	r3, r3, #192
 2186 000c D360     		str	r3, [r2, #12]
1231:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2187              		.loc 1 1231 0
 2188 000e 0368     		ldr	r3, [r0]
 2189 0010 5A69     		ldr	r2, [r3, #20]
 2190 0012 12F0800F 		tst	r2, #128
 2191 0016 0AD0     		beq	.L167
1233:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2192              		.loc 1 1233 0
 2193 0018 5A69     		ldr	r2, [r3, #20]
 2194 001a 22F08002 		bic	r2, r2, #128
 2195 001e 5A61     		str	r2, [r3, #20]
1236:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2196              		.loc 1 1236 0
 2197 0020 036B     		ldr	r3, [r0, #48]
 2198 0022 23B1     		cbz	r3, .L167
1240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2199              		.loc 1 1240 0
 2200 0024 0022     		movs	r2, #0
 2201 0026 5A63     		str	r2, [r3, #52]
1242:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2202              		.loc 1 1242 0
 2203 0028 006B     		ldr	r0, [r0, #48]
 2204              	.LVL198:
 2205 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2206              	.LVL199:
 2207              	.L167:
1247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2208              		.loc 1 1247 0
 2209 002e 0020     		movs	r0, #0
 2210 0030 E084     		strh	r0, [r4, #38]	@ movhi
1250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2211              		.loc 1 1250 0
 2212 0032 2023     		movs	r3, #32
 2213 0034 84F83930 		strb	r3, [r4, #57]
1253:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2214              		.loc 1 1253 0
 2215 0038 10BD     		pop	{r4, pc}
 2216              		.cfi_endproc
 2217              	.LFE143:
 2219              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2220              		.align	1
 2221              		.global	HAL_UART_AbortReceive
 2222              		.syntax unified
 2223              		.thumb
 2224              		.thumb_func
 2225              		.fpu fpv4-sp-d16
 2227              	HAL_UART_AbortReceive:
 2228              	.LFB144:
1268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2229              		.loc 1 1268 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 0
 2232              		@ frame_needed = 0, uses_anonymous_args = 0
 2233              	.LVL200:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 90


 2234 0000 10B5     		push	{r4, lr}
 2235              	.LCFI30:
 2236              		.cfi_def_cfa_offset 8
 2237              		.cfi_offset 4, -8
 2238              		.cfi_offset 14, -4
 2239 0002 0446     		mov	r4, r0
1270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2240              		.loc 1 1270 0
 2241 0004 0268     		ldr	r2, [r0]
 2242 0006 D368     		ldr	r3, [r2, #12]
 2243 0008 23F49073 		bic	r3, r3, #288
 2244 000c D360     		str	r3, [r2, #12]
1271:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2245              		.loc 1 1271 0
 2246 000e 0268     		ldr	r2, [r0]
 2247 0010 5369     		ldr	r3, [r2, #20]
 2248 0012 23F00103 		bic	r3, r3, #1
 2249 0016 5361     		str	r3, [r2, #20]
1274:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2250              		.loc 1 1274 0
 2251 0018 0368     		ldr	r3, [r0]
 2252 001a 5A69     		ldr	r2, [r3, #20]
 2253 001c 12F0400F 		tst	r2, #64
 2254 0020 0AD0     		beq	.L170
1276:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2255              		.loc 1 1276 0
 2256 0022 5A69     		ldr	r2, [r3, #20]
 2257 0024 22F04002 		bic	r2, r2, #64
 2258 0028 5A61     		str	r2, [r3, #20]
1279:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2259              		.loc 1 1279 0
 2260 002a 436B     		ldr	r3, [r0, #52]
 2261 002c 23B1     		cbz	r3, .L170
1283:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2262              		.loc 1 1283 0
 2263 002e 0022     		movs	r2, #0
 2264 0030 5A63     		str	r2, [r3, #52]
1285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2265              		.loc 1 1285 0
 2266 0032 406B     		ldr	r0, [r0, #52]
 2267              	.LVL201:
 2268 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2269              	.LVL202:
 2270              	.L170:
1290:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2271              		.loc 1 1290 0
 2272 0038 0020     		movs	r0, #0
 2273 003a E085     		strh	r0, [r4, #46]	@ movhi
1293:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2274              		.loc 1 1293 0
 2275 003c 2023     		movs	r3, #32
 2276 003e 84F83A30 		strb	r3, [r4, #58]
1296:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2277              		.loc 1 1296 0
 2278 0042 10BD     		pop	{r4, pc}
 2279              		.cfi_endproc
 2280              	.LFE144:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 91


 2282              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2283              		.align	1
 2284              		.weak	HAL_UART_TxCpltCallback
 2285              		.syntax unified
 2286              		.thumb
 2287              		.thumb_func
 2288              		.fpu fpv4-sp-d16
 2290              	HAL_UART_TxCpltCallback:
 2291              	.LFB149:
1685:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2292              		.loc 1 1685 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              		@ link register save eliminated.
 2297              	.LVL203:
1691:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2298              		.loc 1 1691 0
 2299 0000 7047     		bx	lr
 2300              		.cfi_endproc
 2301              	.LFE149:
 2303              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2304              		.align	1
 2305              		.syntax unified
 2306              		.thumb
 2307              		.thumb_func
 2308              		.fpu fpv4-sp-d16
 2310              	UART_DMATransmitCplt:
 2311              	.LFB164:
2029:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2312              		.loc 1 2029 0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 0
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              	.LVL204:
 2317 0000 08B5     		push	{r3, lr}
 2318              	.LCFI31:
 2319              		.cfi_def_cfa_offset 8
 2320              		.cfi_offset 3, -8
 2321              		.cfi_offset 14, -4
2030:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2322              		.loc 1 2030 0
 2323 0002 436A     		ldr	r3, [r0, #36]
 2324              	.LVL205:
2032:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2325              		.loc 1 2032 0
 2326 0004 0268     		ldr	r2, [r0]
 2327 0006 1268     		ldr	r2, [r2]
 2328 0008 12F0200F 		tst	r2, #32
 2329 000c 0CD1     		bne	.L174
2034:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2330              		.loc 1 2034 0
 2331 000e 0022     		movs	r2, #0
 2332 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2038:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2333              		.loc 1 2038 0
 2334 0012 1968     		ldr	r1, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 92


 2335 0014 4A69     		ldr	r2, [r1, #20]
 2336 0016 22F08002 		bic	r2, r2, #128
 2337 001a 4A61     		str	r2, [r1, #20]
2041:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2338              		.loc 1 2041 0
 2339 001c 1A68     		ldr	r2, [r3]
 2340 001e D368     		ldr	r3, [r2, #12]
 2341              	.LVL206:
 2342 0020 43F04003 		orr	r3, r3, #64
 2343 0024 D360     		str	r3, [r2, #12]
 2344              	.LVL207:
 2345              	.L173:
2049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2346              		.loc 1 2049 0
 2347 0026 08BD     		pop	{r3, pc}
 2348              	.LVL208:
 2349              	.L174:
2047:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2350              		.loc 1 2047 0
 2351 0028 1846     		mov	r0, r3
 2352              	.LVL209:
 2353 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2354              	.LVL210:
2049:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2355              		.loc 1 2049 0
 2356 002e FAE7     		b	.L173
 2357              		.cfi_endproc
 2358              	.LFE164:
 2360              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2361              		.align	1
 2362              		.syntax unified
 2363              		.thumb
 2364              		.thumb_func
 2365              		.fpu fpv4-sp-d16
 2367              	UART_EndTransmit_IT:
 2368              	.LFB178:
2387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2369              		.loc 1 2387 0
 2370              		.cfi_startproc
 2371              		@ args = 0, pretend = 0, frame = 0
 2372              		@ frame_needed = 0, uses_anonymous_args = 0
 2373              	.LVL211:
 2374 0000 08B5     		push	{r3, lr}
 2375              	.LCFI32:
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 3, -8
 2378              		.cfi_offset 14, -4
2389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2379              		.loc 1 2389 0
 2380 0002 0168     		ldr	r1, [r0]
 2381 0004 CB68     		ldr	r3, [r1, #12]
 2382 0006 23F04003 		bic	r3, r3, #64
 2383 000a CB60     		str	r3, [r1, #12]
2392:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2384              		.loc 1 2392 0
 2385 000c 2023     		movs	r3, #32
 2386 000e 80F83930 		strb	r3, [r0, #57]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 93


2393:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2387              		.loc 1 2393 0
 2388 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2389              	.LVL212:
2396:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2390              		.loc 1 2396 0
 2391 0016 0020     		movs	r0, #0
 2392 0018 08BD     		pop	{r3, pc}
 2393              		.cfi_endproc
 2394              	.LFE178:
 2396              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2397              		.align	1
 2398              		.weak	HAL_UART_TxHalfCpltCallback
 2399              		.syntax unified
 2400              		.thumb
 2401              		.thumb_func
 2402              		.fpu fpv4-sp-d16
 2404              	HAL_UART_TxHalfCpltCallback:
 2405              	.LFB150:
1700:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2406              		.loc 1 1700 0
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 0
 2409              		@ frame_needed = 0, uses_anonymous_args = 0
 2410              		@ link register save eliminated.
 2411              	.LVL213:
1706:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2412              		.loc 1 1706 0
 2413 0000 7047     		bx	lr
 2414              		.cfi_endproc
 2415              	.LFE150:
 2417              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2418              		.align	1
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu fpv4-sp-d16
 2424              	UART_DMATxHalfCplt:
 2425              	.LFB165:
2058:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2426              		.loc 1 2058 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              	.LVL214:
 2431 0000 08B5     		push	{r3, lr}
 2432              	.LCFI33:
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 3, -8
 2435              		.cfi_offset 14, -4
 2436              	.LVL215:
2061:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2437              		.loc 1 2061 0
 2438 0002 406A     		ldr	r0, [r0, #36]
 2439              	.LVL216:
 2440 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2441              	.LVL217:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 94


2062:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2442              		.loc 1 2062 0
 2443 0008 08BD     		pop	{r3, pc}
 2444              		.cfi_endproc
 2445              	.LFE165:
 2447              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2448              		.align	1
 2449              		.weak	HAL_UART_RxCpltCallback
 2450              		.syntax unified
 2451              		.thumb
 2452              		.thumb_func
 2453              		.fpu fpv4-sp-d16
 2455              	HAL_UART_RxCpltCallback:
 2456              	.LFB151:
1715:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2457              		.loc 1 1715 0
 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 0
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
 2461              		@ link register save eliminated.
 2462              	.LVL218:
1721:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2463              		.loc 1 1721 0
 2464 0000 7047     		bx	lr
 2465              		.cfi_endproc
 2466              	.LFE151:
 2468              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2469              		.align	1
 2470              		.syntax unified
 2471              		.thumb
 2472              		.thumb_func
 2473              		.fpu fpv4-sp-d16
 2475              	UART_DMAReceiveCplt:
 2476              	.LFB166:
2070:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2477              		.loc 1 2070 0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481              	.LVL219:
 2482 0000 08B5     		push	{r3, lr}
 2483              	.LCFI34:
 2484              		.cfi_def_cfa_offset 8
 2485              		.cfi_offset 3, -8
 2486              		.cfi_offset 14, -4
2071:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2487              		.loc 1 2071 0
 2488 0002 436A     		ldr	r3, [r0, #36]
 2489              	.LVL220:
2073:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2490              		.loc 1 2073 0
 2491 0004 0268     		ldr	r2, [r0]
 2492 0006 1268     		ldr	r2, [r2]
 2493 0008 12F0200F 		tst	r2, #32
 2494 000c 13D1     		bne	.L184
2075:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2495              		.loc 1 2075 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 95


 2496 000e 0022     		movs	r2, #0
 2497 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2078:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2498              		.loc 1 2078 0
 2499 0012 1968     		ldr	r1, [r3]
 2500 0014 CA68     		ldr	r2, [r1, #12]
 2501 0016 22F48072 		bic	r2, r2, #256
 2502 001a CA60     		str	r2, [r1, #12]
2079:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 2503              		.loc 1 2079 0
 2504 001c 1968     		ldr	r1, [r3]
 2505 001e 4A69     		ldr	r2, [r1, #20]
 2506 0020 22F00102 		bic	r2, r2, #1
 2507 0024 4A61     		str	r2, [r1, #20]
2083:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2508              		.loc 1 2083 0
 2509 0026 1968     		ldr	r1, [r3]
 2510 0028 4A69     		ldr	r2, [r1, #20]
 2511 002a 22F04002 		bic	r2, r2, #64
 2512 002e 4A61     		str	r2, [r1, #20]
2086:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2513              		.loc 1 2086 0
 2514 0030 2022     		movs	r2, #32
 2515 0032 83F83A20 		strb	r2, [r3, #58]
 2516              	.L184:
2088:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2517              		.loc 1 2088 0
 2518 0036 1846     		mov	r0, r3
 2519              	.LVL221:
 2520 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2521              	.LVL222:
2089:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2522              		.loc 1 2089 0
 2523 003c 08BD     		pop	{r3, pc}
 2524              		.cfi_endproc
 2525              	.LFE166:
 2527              		.section	.text.UART_Receive_IT,"ax",%progbits
 2528              		.align	1
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv4-sp-d16
 2534              	UART_Receive_IT:
 2535              	.LFB179:
2405:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 2536              		.loc 1 2405 0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 0
 2539              		@ frame_needed = 0, uses_anonymous_args = 0
 2540              	.LVL223:
 2541 0000 08B5     		push	{r3, lr}
 2542              	.LCFI35:
 2543              		.cfi_def_cfa_offset 8
 2544              		.cfi_offset 3, -8
 2545              		.cfi_offset 14, -4
2409:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2546              		.loc 1 2409 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 96


 2547 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2548 0006 DBB2     		uxtb	r3, r3
 2549 0008 222B     		cmp	r3, #34
 2550 000a 45D1     		bne	.L192
2411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2551              		.loc 1 2411 0
 2552 000c 8368     		ldr	r3, [r0, #8]
 2553 000e B3F5805F 		cmp	r3, #4096
 2554 0012 0ED0     		beq	.L195
2427:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2555              		.loc 1 2427 0
 2556 0014 0369     		ldr	r3, [r0, #16]
 2557 0016 03BB     		cbnz	r3, .L191
2429:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2558              		.loc 1 2429 0
 2559 0018 0368     		ldr	r3, [r0]
 2560 001a 5A68     		ldr	r2, [r3, #4]
 2561 001c 836A     		ldr	r3, [r0, #40]
 2562 001e 591C     		adds	r1, r3, #1
 2563 0020 8162     		str	r1, [r0, #40]
 2564 0022 1A70     		strb	r2, [r3]
 2565              	.L190:
2437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2566              		.loc 1 2437 0
 2567 0024 C38D     		ldrh	r3, [r0, #46]
 2568 0026 013B     		subs	r3, r3, #1
 2569 0028 9BB2     		uxth	r3, r3
 2570 002a C385     		strh	r3, [r0, #46]	@ movhi
 2571 002c F3B1     		cbz	r3, .L196
2454:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2572              		.loc 1 2454 0
 2573 002e 0020     		movs	r0, #0
 2574              	.LVL224:
 2575 0030 33E0     		b	.L187
 2576              	.LVL225:
 2577              	.L195:
2413:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2578              		.loc 1 2413 0
 2579 0032 826A     		ldr	r2, [r0, #40]
 2580              	.LVL226:
2414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2581              		.loc 1 2414 0
 2582 0034 0369     		ldr	r3, [r0, #16]
 2583 0036 43B9     		cbnz	r3, .L189
2416:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2584              		.loc 1 2416 0
 2585 0038 0368     		ldr	r3, [r0]
 2586 003a 5B68     		ldr	r3, [r3, #4]
 2587 003c C3F30803 		ubfx	r3, r3, #0, #9
 2588 0040 1380     		strh	r3, [r2]	@ movhi
2417:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2589              		.loc 1 2417 0
 2590 0042 836A     		ldr	r3, [r0, #40]
 2591 0044 0233     		adds	r3, r3, #2
 2592 0046 8362     		str	r3, [r0, #40]
 2593 0048 ECE7     		b	.L190
 2594              	.L189:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 97


2421:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2595              		.loc 1 2421 0
 2596 004a 0368     		ldr	r3, [r0]
 2597 004c 5B68     		ldr	r3, [r3, #4]
 2598 004e DBB2     		uxtb	r3, r3
 2599 0050 1380     		strh	r3, [r2]	@ movhi
2422:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2600              		.loc 1 2422 0
 2601 0052 836A     		ldr	r3, [r0, #40]
 2602 0054 0133     		adds	r3, r3, #1
 2603 0056 8362     		str	r3, [r0, #40]
 2604 0058 E4E7     		b	.L190
 2605              	.LVL227:
 2606              	.L191:
2433:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2607              		.loc 1 2433 0
 2608 005a 0368     		ldr	r3, [r0]
 2609 005c 5B68     		ldr	r3, [r3, #4]
 2610 005e 826A     		ldr	r2, [r0, #40]
 2611 0060 511C     		adds	r1, r2, #1
 2612 0062 8162     		str	r1, [r0, #40]
 2613 0064 03F07F03 		and	r3, r3, #127
 2614 0068 1370     		strb	r3, [r2]
 2615 006a DBE7     		b	.L190
 2616              	.L196:
2440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2617              		.loc 1 2440 0
 2618 006c 0268     		ldr	r2, [r0]
 2619 006e D368     		ldr	r3, [r2, #12]
 2620 0070 23F02003 		bic	r3, r3, #32
 2621 0074 D360     		str	r3, [r2, #12]
2443:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 2622              		.loc 1 2443 0
 2623 0076 0268     		ldr	r2, [r0]
 2624 0078 D368     		ldr	r3, [r2, #12]
 2625 007a 23F48073 		bic	r3, r3, #256
 2626 007e D360     		str	r3, [r2, #12]
2445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2627              		.loc 1 2445 0
 2628 0080 0268     		ldr	r2, [r0]
 2629 0082 5369     		ldr	r3, [r2, #20]
 2630 0084 23F00103 		bic	r3, r3, #1
 2631 0088 5361     		str	r3, [r2, #20]
2448:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2632              		.loc 1 2448 0
 2633 008a 2023     		movs	r3, #32
 2634 008c 80F83A30 		strb	r3, [r0, #58]
2450:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2635              		.loc 1 2450 0
 2636 0090 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2637              	.LVL228:
2452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2638              		.loc 1 2452 0
 2639 0094 0020     		movs	r0, #0
 2640 0096 00E0     		b	.L187
 2641              	.LVL229:
 2642              	.L192:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 98


2458:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2643              		.loc 1 2458 0
 2644 0098 0220     		movs	r0, #2
 2645              	.LVL230:
 2646              	.L187:
2460:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2647              		.loc 1 2460 0
 2648 009a 08BD     		pop	{r3, pc}
 2649              		.cfi_endproc
 2650              	.LFE179:
 2652              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2653              		.align	1
 2654              		.weak	HAL_UART_RxHalfCpltCallback
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu fpv4-sp-d16
 2660              	HAL_UART_RxHalfCpltCallback:
 2661              	.LFB152:
1730:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2662              		.loc 1 1730 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666              		@ link register save eliminated.
 2667              	.LVL231:
1736:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2668              		.loc 1 1736 0
 2669 0000 7047     		bx	lr
 2670              		.cfi_endproc
 2671              	.LFE152:
 2673              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2674              		.align	1
 2675              		.syntax unified
 2676              		.thumb
 2677              		.thumb_func
 2678              		.fpu fpv4-sp-d16
 2680              	UART_DMARxHalfCplt:
 2681              	.LFB167:
2098:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2682              		.loc 1 2098 0
 2683              		.cfi_startproc
 2684              		@ args = 0, pretend = 0, frame = 0
 2685              		@ frame_needed = 0, uses_anonymous_args = 0
 2686              	.LVL232:
 2687 0000 08B5     		push	{r3, lr}
 2688              	.LCFI36:
 2689              		.cfi_def_cfa_offset 8
 2690              		.cfi_offset 3, -8
 2691              		.cfi_offset 14, -4
 2692              	.LVL233:
2100:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2693              		.loc 1 2100 0
 2694 0002 406A     		ldr	r0, [r0, #36]
 2695              	.LVL234:
 2696 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2697              	.LVL235:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 99


2101:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2698              		.loc 1 2101 0
 2699 0008 08BD     		pop	{r3, pc}
 2700              		.cfi_endproc
 2701              	.LFE167:
 2703              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2704              		.align	1
 2705              		.weak	HAL_UART_ErrorCallback
 2706              		.syntax unified
 2707              		.thumb
 2708              		.thumb_func
 2709              		.fpu fpv4-sp-d16
 2711              	HAL_UART_ErrorCallback:
 2712              	.LFB153:
1745:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2713              		.loc 1 1745 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717              		@ link register save eliminated.
 2718              	.LVL236:
1751:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2719              		.loc 1 1751 0
 2720 0000 7047     		bx	lr
 2721              		.cfi_endproc
 2722              	.LFE153:
 2724              		.section	.text.UART_DMAError,"ax",%progbits
 2725              		.align	1
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv4-sp-d16
 2731              	UART_DMAError:
 2732              	.LFB168:
2109:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2733              		.loc 1 2109 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 0
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737              	.LVL237:
 2738 0000 10B5     		push	{r4, lr}
 2739              	.LCFI37:
 2740              		.cfi_def_cfa_offset 8
 2741              		.cfi_offset 4, -8
 2742              		.cfi_offset 14, -4
 2743              	.LVL238:
2111:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2744              		.loc 1 2111 0
 2745 0002 446A     		ldr	r4, [r0, #36]
 2746              	.LVL239:
2114:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2747              		.loc 1 2114 0
 2748 0004 2368     		ldr	r3, [r4]
 2749 0006 5A69     		ldr	r2, [r3, #20]
 2750              	.LVL240:
2115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2751              		.loc 1 2115 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 100


 2752 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2753 000c DBB2     		uxtb	r3, r3
 2754 000e 212B     		cmp	r3, #33
 2755 0010 10D0     		beq	.L205
 2756              	.LVL241:
 2757              	.L202:
2122:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2758              		.loc 1 2122 0
 2759 0012 2368     		ldr	r3, [r4]
 2760 0014 5A69     		ldr	r2, [r3, #20]
 2761 0016 02F04002 		and	r2, r2, #64
 2762              	.LVL242:
2123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2763              		.loc 1 2123 0
 2764 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2765 001e DBB2     		uxtb	r3, r3
 2766 0020 222B     		cmp	r3, #34
 2767 0022 11D0     		beq	.L206
 2768              	.LVL243:
 2769              	.L203:
2129:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2770              		.loc 1 2129 0
 2771 0024 E36B     		ldr	r3, [r4, #60]
 2772 0026 43F01003 		orr	r3, r3, #16
 2773 002a E363     		str	r3, [r4, #60]
2130:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2774              		.loc 1 2130 0
 2775 002c 2046     		mov	r0, r4
 2776 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2777              	.LVL244:
2131:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2778              		.loc 1 2131 0
 2779 0032 10BD     		pop	{r4, pc}
 2780              	.LVL245:
 2781              	.L205:
 2782 0034 02F08002 		and	r2, r2, #128
 2783              	.LVL246:
2115:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2784              		.loc 1 2115 0 discriminator 1
 2785 0038 002A     		cmp	r2, #0
 2786 003a EAD0     		beq	.L202
2117:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2787              		.loc 1 2117 0
 2788 003c 0023     		movs	r3, #0
 2789 003e E384     		strh	r3, [r4, #38]	@ movhi
2118:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2790              		.loc 1 2118 0
 2791 0040 2046     		mov	r0, r4
 2792              	.LVL247:
 2793 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2794              	.LVL248:
 2795 0046 E4E7     		b	.L202
 2796              	.LVL249:
 2797              	.L206:
2123:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2798              		.loc 1 2123 0 discriminator 1
 2799 0048 002A     		cmp	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 101


 2800 004a EBD0     		beq	.L203
2125:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2801              		.loc 1 2125 0
 2802 004c 0023     		movs	r3, #0
 2803 004e E385     		strh	r3, [r4, #46]	@ movhi
2126:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2804              		.loc 1 2126 0
 2805 0050 2046     		mov	r0, r4
 2806 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2807              	.LVL250:
 2808 0056 E5E7     		b	.L203
 2809              		.cfi_endproc
 2810              	.LFE168:
 2812              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2813              		.align	1
 2814              		.global	HAL_UART_IRQHandler
 2815              		.syntax unified
 2816              		.thumb
 2817              		.thumb_func
 2818              		.fpu fpv4-sp-d16
 2820              	HAL_UART_IRQHandler:
 2821              	.LFB148:
1558:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2822              		.loc 1 1558 0
 2823              		.cfi_startproc
 2824              		@ args = 0, pretend = 0, frame = 0
 2825              		@ frame_needed = 0, uses_anonymous_args = 0
 2826              	.LVL251:
 2827 0000 10B5     		push	{r4, lr}
 2828              	.LCFI38:
 2829              		.cfi_def_cfa_offset 8
 2830              		.cfi_offset 4, -8
 2831              		.cfi_offset 14, -4
 2832 0002 0446     		mov	r4, r0
1559:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2833              		.loc 1 1559 0
 2834 0004 0268     		ldr	r2, [r0]
 2835 0006 1368     		ldr	r3, [r2]
 2836              	.LVL252:
1560:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2837              		.loc 1 1560 0
 2838 0008 D168     		ldr	r1, [r2, #12]
 2839              	.LVL253:
1561:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2840              		.loc 1 1561 0
 2841 000a 5269     		ldr	r2, [r2, #20]
 2842              	.LVL254:
1567:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2843              		.loc 1 1567 0
 2844 000c 13F00F00 		ands	r0, r3, #15
 2845              	.LVL255:
 2846 0010 05D1     		bne	.L208
1570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2847              		.loc 1 1570 0
 2848 0012 13F0200F 		tst	r3, #32
 2849 0016 02D0     		beq	.L208
1570:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 102


 2850              		.loc 1 1570 0 is_stmt 0 discriminator 1
 2851 0018 11F0200F 		tst	r1, #32
 2852 001c 53D1     		bne	.L223
 2853              	.L208:
1578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2854              		.loc 1 1578 0 is_stmt 1
 2855 001e 0028     		cmp	r0, #0
 2856 0020 67D0     		beq	.L210
1578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2857              		.loc 1 1578 0 is_stmt 0 discriminator 1
 2858 0022 12F00102 		ands	r2, r2, #1
 2859              	.LVL256:
 2860 0026 02D1     		bne	.L211
1578:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2861              		.loc 1 1578 0 discriminator 2
 2862 0028 11F4907F 		tst	r1, #288
 2863 002c 61D0     		beq	.L210
 2864              	.L211:
1581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2865              		.loc 1 1581 0 is_stmt 1
 2866 002e 13F0010F 		tst	r3, #1
 2867 0032 06D0     		beq	.L212
1581:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2868              		.loc 1 1581 0 is_stmt 0 discriminator 1
 2869 0034 11F4807F 		tst	r1, #256
 2870 0038 03D0     		beq	.L212
1583:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2871              		.loc 1 1583 0 is_stmt 1
 2872 003a E06B     		ldr	r0, [r4, #60]
 2873              	.LVL257:
 2874 003c 40F00100 		orr	r0, r0, #1
 2875 0040 E063     		str	r0, [r4, #60]
 2876              	.L212:
1587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2877              		.loc 1 1587 0
 2878 0042 13F0040F 		tst	r3, #4
 2879 0046 04D0     		beq	.L213
1587:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2880              		.loc 1 1587 0 is_stmt 0 discriminator 1
 2881 0048 1AB1     		cbz	r2, .L213
1589:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2882              		.loc 1 1589 0 is_stmt 1
 2883 004a E06B     		ldr	r0, [r4, #60]
 2884 004c 40F00200 		orr	r0, r0, #2
 2885 0050 E063     		str	r0, [r4, #60]
 2886              	.L213:
1593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2887              		.loc 1 1593 0
 2888 0052 13F0020F 		tst	r3, #2
 2889 0056 04D0     		beq	.L214
1593:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2890              		.loc 1 1593 0 is_stmt 0 discriminator 1
 2891 0058 1AB1     		cbz	r2, .L214
1595:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2892              		.loc 1 1595 0 is_stmt 1
 2893 005a E06B     		ldr	r0, [r4, #60]
 2894 005c 40F00400 		orr	r0, r0, #4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 103


 2895 0060 E063     		str	r0, [r4, #60]
 2896              	.L214:
1599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2897              		.loc 1 1599 0
 2898 0062 13F0080F 		tst	r3, #8
 2899 0066 04D0     		beq	.L215
1599:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2900              		.loc 1 1599 0 is_stmt 0 discriminator 1
 2901 0068 1AB1     		cbz	r2, .L215
1601:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2902              		.loc 1 1601 0 is_stmt 1
 2903 006a E26B     		ldr	r2, [r4, #60]
 2904 006c 42F00802 		orr	r2, r2, #8
 2905 0070 E263     		str	r2, [r4, #60]
 2906              	.L215:
1605:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2907              		.loc 1 1605 0
 2908 0072 E26B     		ldr	r2, [r4, #60]
 2909 0074 002A     		cmp	r2, #0
 2910 0076 48D0     		beq	.L207
1608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2911              		.loc 1 1608 0
 2912 0078 13F0200F 		tst	r3, #32
 2913 007c 02D0     		beq	.L216
1608:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2914              		.loc 1 1608 0 is_stmt 0 discriminator 1
 2915 007e 11F0200F 		tst	r1, #32
 2916 0082 24D1     		bne	.L224
 2917              	.LVL258:
 2918              	.L216:
1615:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2919              		.loc 1 1615 0 is_stmt 1
 2920 0084 2368     		ldr	r3, [r4]
 2921 0086 5B69     		ldr	r3, [r3, #20]
 2922 0088 03F04003 		and	r3, r3, #64
 2923              	.LVL259:
1616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2924              		.loc 1 1616 0
 2925 008c E26B     		ldr	r2, [r4, #60]
 2926 008e 12F0080F 		tst	r2, #8
 2927 0092 00D1     		bne	.L217
1616:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2928              		.loc 1 1616 0 is_stmt 0 discriminator 1
 2929 0094 3BB3     		cbz	r3, .L218
 2930              	.L217:
1621:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2931              		.loc 1 1621 0 is_stmt 1
 2932 0096 2046     		mov	r0, r4
 2933 0098 FFF7FEFF 		bl	UART_EndRxTransfer
 2934              	.LVL260:
1624:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2935              		.loc 1 1624 0
 2936 009c 2368     		ldr	r3, [r4]
 2937 009e 5A69     		ldr	r2, [r3, #20]
 2938 00a0 12F0400F 		tst	r2, #64
 2939 00a4 1BD0     		beq	.L219
1626:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 104


 2940              		.loc 1 1626 0
 2941 00a6 5A69     		ldr	r2, [r3, #20]
 2942 00a8 22F04002 		bic	r2, r2, #64
 2943 00ac 5A61     		str	r2, [r3, #20]
1629:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2944              		.loc 1 1629 0
 2945 00ae 636B     		ldr	r3, [r4, #52]
 2946 00b0 8BB1     		cbz	r3, .L220
1633:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2947              		.loc 1 1633 0
 2948 00b2 1A4A     		ldr	r2, .L227
 2949 00b4 5A63     		str	r2, [r3, #52]
1634:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
 2950              		.loc 1 1634 0
 2951 00b6 606B     		ldr	r0, [r4, #52]
 2952 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2953              	.LVL261:
 2954 00bc 28B3     		cbz	r0, .L207
1637:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
 2955              		.loc 1 1637 0
 2956 00be 606B     		ldr	r0, [r4, #52]
 2957 00c0 436B     		ldr	r3, [r0, #52]
 2958 00c2 9847     		blx	r3
 2959              	.LVL262:
 2960 00c4 21E0     		b	.L207
 2961              	.LVL263:
 2962              	.L223:
1572:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 2963              		.loc 1 1572 0
 2964 00c6 2046     		mov	r0, r4
 2965              	.LVL264:
 2966 00c8 FFF7FEFF 		bl	UART_Receive_IT
 2967              	.LVL265:
1573:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2968              		.loc 1 1573 0
 2969 00cc 1DE0     		b	.L207
 2970              	.LVL266:
 2971              	.L224:
1610:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2972              		.loc 1 1610 0
 2973 00ce 2046     		mov	r0, r4
 2974 00d0 FFF7FEFF 		bl	UART_Receive_IT
 2975              	.LVL267:
 2976 00d4 D6E7     		b	.L216
 2977              	.LVL268:
 2978              	.L220:
1643:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
 2979              		.loc 1 1643 0
 2980 00d6 2046     		mov	r0, r4
 2981 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2982              	.LVL269:
 2983 00dc 15E0     		b	.L207
 2984              	.L219:
1649:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 2985              		.loc 1 1649 0
 2986 00de 2046     		mov	r0, r4
 2987 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 105


 2988              	.LVL270:
 2989 00e4 11E0     		b	.L207
 2990              	.LVL271:
 2991              	.L218:
1656:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2992              		.loc 1 1656 0
 2993 00e6 2046     		mov	r0, r4
 2994 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2995              	.LVL272:
1657:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2996              		.loc 1 1657 0
 2997 00ec 0023     		movs	r3, #0
 2998 00ee E363     		str	r3, [r4, #60]
 2999 00f0 0BE0     		b	.L207
 3000              	.LVL273:
 3001              	.L210:
1664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3002              		.loc 1 1664 0
 3003 00f2 13F0800F 		tst	r3, #128
 3004 00f6 02D0     		beq	.L221
1664:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3005              		.loc 1 1664 0 is_stmt 0 discriminator 1
 3006 00f8 11F0800F 		tst	r1, #128
 3007 00fc 06D1     		bne	.L225
 3008              	.L221:
1671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3009              		.loc 1 1671 0 is_stmt 1
 3010 00fe 13F0400F 		tst	r3, #64
 3011 0102 02D0     		beq	.L207
1671:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3012              		.loc 1 1671 0 is_stmt 0 discriminator 1
 3013 0104 11F0400F 		tst	r1, #64
 3014 0108 04D1     		bne	.L226
 3015              	.LVL274:
 3016              	.L207:
1676:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3017              		.loc 1 1676 0 is_stmt 1
 3018 010a 10BD     		pop	{r4, pc}
 3019              	.LVL275:
 3020              	.L225:
1666:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3021              		.loc 1 1666 0
 3022 010c 2046     		mov	r0, r4
 3023              	.LVL276:
 3024 010e FFF7FEFF 		bl	UART_Transmit_IT
 3025              	.LVL277:
1667:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3026              		.loc 1 1667 0
 3027 0112 FAE7     		b	.L207
 3028              	.LVL278:
 3029              	.L226:
1673:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3030              		.loc 1 1673 0
 3031 0114 2046     		mov	r0, r4
 3032              	.LVL279:
 3033 0116 FFF7FEFF 		bl	UART_EndTransmit_IT
 3034              	.LVL280:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 106


1674:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3035              		.loc 1 1674 0
 3036 011a F6E7     		b	.L207
 3037              	.L228:
 3038              		.align	2
 3039              	.L227:
 3040 011c 00000000 		.word	UART_DMAAbortOnError
 3041              		.cfi_endproc
 3042              	.LFE148:
 3044              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3045              		.align	1
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3049              		.fpu fpv4-sp-d16
 3051              	UART_DMAAbortOnError:
 3052              	.LFB172:
2207:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3053              		.loc 1 2207 0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057              	.LVL281:
 3058 0000 08B5     		push	{r3, lr}
 3059              	.LCFI39:
 3060              		.cfi_def_cfa_offset 8
 3061              		.cfi_offset 3, -8
 3062              		.cfi_offset 14, -4
2208:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3063              		.loc 1 2208 0
 3064 0002 406A     		ldr	r0, [r0, #36]
 3065              	.LVL282:
2209:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3066              		.loc 1 2209 0
 3067 0004 0023     		movs	r3, #0
 3068 0006 C385     		strh	r3, [r0, #46]	@ movhi
2210:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3069              		.loc 1 2210 0
 3070 0008 C384     		strh	r3, [r0, #38]	@ movhi
2212:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3071              		.loc 1 2212 0
 3072 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3073              	.LVL283:
2213:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3074              		.loc 1 2213 0
 3075 000e 08BD     		pop	{r3, pc}
 3076              		.cfi_endproc
 3077              	.LFE172:
 3079              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3080              		.align	1
 3081              		.weak	HAL_UART_AbortCpltCallback
 3082              		.syntax unified
 3083              		.thumb
 3084              		.thumb_func
 3085              		.fpu fpv4-sp-d16
 3087              	HAL_UART_AbortCpltCallback:
 3088              	.LFB154:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 107


1759:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3089              		.loc 1 1759 0
 3090              		.cfi_startproc
 3091              		@ args = 0, pretend = 0, frame = 0
 3092              		@ frame_needed = 0, uses_anonymous_args = 0
 3093              		@ link register save eliminated.
 3094              	.LVL284:
1766:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 3095              		.loc 1 1766 0
 3096 0000 7047     		bx	lr
 3097              		.cfi_endproc
 3098              	.LFE154:
 3100              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3101              		.align	1
 3102              		.global	HAL_UART_Abort_IT
 3103              		.syntax unified
 3104              		.thumb
 3105              		.thumb_func
 3106              		.fpu fpv4-sp-d16
 3108              	HAL_UART_Abort_IT:
 3109              	.LFB145:
1313:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3110              		.loc 1 1313 0
 3111              		.cfi_startproc
 3112              		@ args = 0, pretend = 0, frame = 0
 3113              		@ frame_needed = 0, uses_anonymous_args = 0
 3114              	.LVL285:
 3115 0000 10B5     		push	{r4, lr}
 3116              	.LCFI40:
 3117              		.cfi_def_cfa_offset 8
 3118              		.cfi_offset 4, -8
 3119              		.cfi_offset 14, -4
 3120 0002 0446     		mov	r4, r0
 3121              	.LVL286:
1317:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3122              		.loc 1 1317 0
 3123 0004 0268     		ldr	r2, [r0]
 3124 0006 D368     		ldr	r3, [r2, #12]
 3125 0008 23F4F073 		bic	r3, r3, #480
 3126 000c D360     		str	r3, [r2, #12]
1318:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3127              		.loc 1 1318 0
 3128 000e 0268     		ldr	r2, [r0]
 3129 0010 5369     		ldr	r3, [r2, #20]
 3130 0012 23F00103 		bic	r3, r3, #1
 3131 0016 5361     		str	r3, [r2, #20]
1323:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3132              		.loc 1 1323 0
 3133 0018 036B     		ldr	r3, [r0, #48]
 3134 001a 33B1     		cbz	r3, .L233
1327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3135              		.loc 1 1327 0
 3136 001c 0268     		ldr	r2, [r0]
 3137 001e 5269     		ldr	r2, [r2, #20]
 3138 0020 12F0800F 		tst	r2, #128
 3139 0024 1DD0     		beq	.L234
1329:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 108


 3140              		.loc 1 1329 0
 3141 0026 254A     		ldr	r2, .L245
 3142 0028 5A63     		str	r2, [r3, #52]
 3143              	.L233:
1337:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3144              		.loc 1 1337 0
 3145 002a 636B     		ldr	r3, [r4, #52]
 3146 002c 33B1     		cbz	r3, .L235
1341:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3147              		.loc 1 1341 0
 3148 002e 2268     		ldr	r2, [r4]
 3149 0030 5269     		ldr	r2, [r2, #20]
 3150 0032 12F0400F 		tst	r2, #64
 3151 0036 17D0     		beq	.L236
1343:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3152              		.loc 1 1343 0
 3153 0038 214A     		ldr	r2, .L245+4
 3154 003a 5A63     		str	r2, [r3, #52]
 3155              	.L235:
1352:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3156              		.loc 1 1352 0
 3157 003c 2368     		ldr	r3, [r4]
 3158 003e 5A69     		ldr	r2, [r3, #20]
 3159 0040 12F0800F 		tst	r2, #128
 3160 0044 13D0     		beq	.L241
1355:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3161              		.loc 1 1355 0
 3162 0046 5A69     		ldr	r2, [r3, #20]
 3163 0048 22F08002 		bic	r2, r2, #128
 3164 004c 5A61     		str	r2, [r3, #20]
1358:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3165              		.loc 1 1358 0
 3166 004e 206B     		ldr	r0, [r4, #48]
 3167              	.LVL287:
 3168 0050 60B3     		cbz	r0, .L242
1364:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3169              		.loc 1 1364 0
 3170 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3171              	.LVL288:
 3172 0056 58B3     		cbz	r0, .L243
1366:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3173              		.loc 1 1366 0
 3174 0058 236B     		ldr	r3, [r4, #48]
 3175 005a 0022     		movs	r2, #0
 3176 005c 5A63     		str	r2, [r3, #52]
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3177              		.loc 1 1314 0
 3178 005e 0121     		movs	r1, #1
 3179 0060 06E0     		b	.L237
 3180              	.LVL289:
 3181              	.L234:
1333:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3182              		.loc 1 1333 0
 3183 0062 0022     		movs	r2, #0
 3184 0064 5A63     		str	r2, [r3, #52]
 3185 0066 E0E7     		b	.L233
 3186              	.L236:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 109


1347:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3187              		.loc 1 1347 0
 3188 0068 0022     		movs	r2, #0
 3189 006a 5A63     		str	r2, [r3, #52]
 3190 006c E6E7     		b	.L235
 3191              	.L241:
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3192              		.loc 1 1314 0
 3193 006e 0121     		movs	r1, #1
 3194              	.LVL290:
 3195              	.L237:
1376:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3196              		.loc 1 1376 0
 3197 0070 2368     		ldr	r3, [r4]
 3198 0072 5A69     		ldr	r2, [r3, #20]
 3199 0074 12F0400F 		tst	r2, #64
 3200 0078 1CD0     		beq	.L238
1378:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3201              		.loc 1 1378 0
 3202 007a 5A69     		ldr	r2, [r3, #20]
 3203 007c 22F04002 		bic	r2, r2, #64
 3204 0080 5A61     		str	r2, [r3, #20]
1381:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3205              		.loc 1 1381 0
 3206 0082 606B     		ldr	r0, [r4, #52]
 3207 0084 B0B1     		cbz	r0, .L238
1387:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3208              		.loc 1 1387 0
 3209 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3210              	.LVL291:
 3211 008a A8B1     		cbz	r0, .L239
1389:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 3212              		.loc 1 1389 0
 3213 008c 636B     		ldr	r3, [r4, #52]
 3214 008e 0022     		movs	r2, #0
 3215 0090 5A63     		str	r2, [r3, #52]
 3216              	.LVL292:
 3217              	.L240:
1403:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3218              		.loc 1 1403 0
 3219 0092 0023     		movs	r3, #0
 3220 0094 E384     		strh	r3, [r4, #38]	@ movhi
1404:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3221              		.loc 1 1404 0
 3222 0096 E385     		strh	r3, [r4, #46]	@ movhi
1407:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3223              		.loc 1 1407 0
 3224 0098 E363     		str	r3, [r4, #60]
1410:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3225              		.loc 1 1410 0
 3226 009a 2023     		movs	r3, #32
 3227 009c 84F83930 		strb	r3, [r4, #57]
1411:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3228              		.loc 1 1411 0
 3229 00a0 84F83A30 		strb	r3, [r4, #58]
1414:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3230              		.loc 1 1414 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 110


 3231 00a4 2046     		mov	r0, r4
 3232 00a6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3233              	.LVL293:
 3234 00aa 05E0     		b	.L239
 3235              	.LVL294:
 3236              	.L242:
1314:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3237              		.loc 1 1314 0
 3238 00ac 0121     		movs	r1, #1
 3239 00ae DFE7     		b	.L237
 3240              	.L243:
1370:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3241              		.loc 1 1370 0
 3242 00b0 0021     		movs	r1, #0
 3243 00b2 DDE7     		b	.L237
 3244              	.LVL295:
 3245              	.L238:
1400:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3246              		.loc 1 1400 0
 3247 00b4 0029     		cmp	r1, #0
 3248 00b6 ECD1     		bne	.L240
 3249              	.LVL296:
 3250              	.L239:
1418:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3251              		.loc 1 1418 0
 3252 00b8 0020     		movs	r0, #0
 3253 00ba 10BD     		pop	{r4, pc}
 3254              	.LVL297:
 3255              	.L246:
 3256              		.align	2
 3257              	.L245:
 3258 00bc 00000000 		.word	UART_DMATxAbortCallback
 3259 00c0 00000000 		.word	UART_DMARxAbortCallback
 3260              		.cfi_endproc
 3261              	.LFE145:
 3263              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3264              		.align	1
 3265              		.syntax unified
 3266              		.thumb
 3267              		.thumb_func
 3268              		.fpu fpv4-sp-d16
 3270              	UART_DMARxAbortCallback:
 3271              	.LFB174:
2262:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3272              		.loc 1 2262 0
 3273              		.cfi_startproc
 3274              		@ args = 0, pretend = 0, frame = 0
 3275              		@ frame_needed = 0, uses_anonymous_args = 0
 3276              	.LVL298:
 3277 0000 08B5     		push	{r3, lr}
 3278              	.LCFI41:
 3279              		.cfi_def_cfa_offset 8
 3280              		.cfi_offset 3, -8
 3281              		.cfi_offset 14, -4
2263:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3282              		.loc 1 2263 0
 3283 0002 406A     		ldr	r0, [r0, #36]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 111


 3284              	.LVL299:
2265:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3285              		.loc 1 2265 0
 3286 0004 436B     		ldr	r3, [r0, #52]
 3287 0006 0022     		movs	r2, #0
 3288 0008 5A63     		str	r2, [r3, #52]
2268:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3289              		.loc 1 2268 0
 3290 000a 036B     		ldr	r3, [r0, #48]
 3291 000c 13B1     		cbz	r3, .L248
2270:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3292              		.loc 1 2270 0
 3293 000e 5B6B     		ldr	r3, [r3, #52]
 3294 0010 03B1     		cbz	r3, .L248
 3295              	.LVL300:
 3296              	.L247:
2289:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3297              		.loc 1 2289 0
 3298 0012 08BD     		pop	{r3, pc}
 3299              	.LVL301:
 3300              	.L248:
2277:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3301              		.loc 1 2277 0
 3302 0014 0023     		movs	r3, #0
 3303 0016 C384     		strh	r3, [r0, #38]	@ movhi
2278:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3304              		.loc 1 2278 0
 3305 0018 C385     		strh	r3, [r0, #46]	@ movhi
2281:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3306              		.loc 1 2281 0
 3307 001a C363     		str	r3, [r0, #60]
2284:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3308              		.loc 1 2284 0
 3309 001c 2023     		movs	r3, #32
 3310 001e 80F83930 		strb	r3, [r0, #57]
2285:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3311              		.loc 1 2285 0
 3312 0022 80F83A30 		strb	r3, [r0, #58]
2288:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3313              		.loc 1 2288 0
 3314 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3315              	.LVL302:
 3316 002a F2E7     		b	.L247
 3317              		.cfi_endproc
 3318              	.LFE174:
 3320              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3321              		.align	1
 3322              		.syntax unified
 3323              		.thumb
 3324              		.thumb_func
 3325              		.fpu fpv4-sp-d16
 3327              	UART_DMATxAbortCallback:
 3328              	.LFB173:
2224:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3329              		.loc 1 2224 0
 3330              		.cfi_startproc
 3331              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 112


 3332              		@ frame_needed = 0, uses_anonymous_args = 0
 3333              	.LVL303:
 3334 0000 08B5     		push	{r3, lr}
 3335              	.LCFI42:
 3336              		.cfi_def_cfa_offset 8
 3337              		.cfi_offset 3, -8
 3338              		.cfi_offset 14, -4
2225:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3339              		.loc 1 2225 0
 3340 0002 406A     		ldr	r0, [r0, #36]
 3341              	.LVL304:
2227:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3342              		.loc 1 2227 0
 3343 0004 036B     		ldr	r3, [r0, #48]
 3344 0006 0022     		movs	r2, #0
 3345 0008 5A63     		str	r2, [r3, #52]
2230:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3346              		.loc 1 2230 0
 3347 000a 436B     		ldr	r3, [r0, #52]
 3348 000c 13B1     		cbz	r3, .L252
2232:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3349              		.loc 1 2232 0
 3350 000e 5B6B     		ldr	r3, [r3, #52]
 3351 0010 03B1     		cbz	r3, .L252
 3352              	.LVL305:
 3353              	.L251:
2251:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3354              		.loc 1 2251 0
 3355 0012 08BD     		pop	{r3, pc}
 3356              	.LVL306:
 3357              	.L252:
2239:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3358              		.loc 1 2239 0
 3359 0014 0023     		movs	r3, #0
 3360 0016 C384     		strh	r3, [r0, #38]	@ movhi
2240:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3361              		.loc 1 2240 0
 3362 0018 C385     		strh	r3, [r0, #46]	@ movhi
2243:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3363              		.loc 1 2243 0
 3364 001a C363     		str	r3, [r0, #60]
2246:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3365              		.loc 1 2246 0
 3366 001c 2023     		movs	r3, #32
 3367 001e 80F83930 		strb	r3, [r0, #57]
2247:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3368              		.loc 1 2247 0
 3369 0022 80F83A30 		strb	r3, [r0, #58]
2250:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3370              		.loc 1 2250 0
 3371 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3372              	.LVL307:
 3373 002a F2E7     		b	.L251
 3374              		.cfi_endproc
 3375              	.LFE173:
 3377              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3378              		.align	1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 113


 3379              		.weak	HAL_UART_AbortTransmitCpltCallback
 3380              		.syntax unified
 3381              		.thumb
 3382              		.thumb_func
 3383              		.fpu fpv4-sp-d16
 3385              	HAL_UART_AbortTransmitCpltCallback:
 3386              	.LFB155:
1773:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3387              		.loc 1 1773 0
 3388              		.cfi_startproc
 3389              		@ args = 0, pretend = 0, frame = 0
 3390              		@ frame_needed = 0, uses_anonymous_args = 0
 3391              		@ link register save eliminated.
 3392              	.LVL308:
1780:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3393              		.loc 1 1780 0
 3394 0000 7047     		bx	lr
 3395              		.cfi_endproc
 3396              	.LFE155:
 3398              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3399              		.align	1
 3400              		.global	HAL_UART_AbortTransmit_IT
 3401              		.syntax unified
 3402              		.thumb
 3403              		.thumb_func
 3404              		.fpu fpv4-sp-d16
 3406              	HAL_UART_AbortTransmit_IT:
 3407              	.LFB146:
1435:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3408              		.loc 1 1435 0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 0
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              	.LVL309:
 3413 0000 10B5     		push	{r4, lr}
 3414              	.LCFI43:
 3415              		.cfi_def_cfa_offset 8
 3416              		.cfi_offset 4, -8
 3417              		.cfi_offset 14, -4
 3418 0002 0446     		mov	r4, r0
1437:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3419              		.loc 1 1437 0
 3420 0004 0268     		ldr	r2, [r0]
 3421 0006 D368     		ldr	r3, [r2, #12]
 3422 0008 23F0C003 		bic	r3, r3, #192
 3423 000c D360     		str	r3, [r2, #12]
1440:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3424              		.loc 1 1440 0
 3425 000e 0368     		ldr	r3, [r0]
 3426 0010 5A69     		ldr	r2, [r3, #20]
 3427 0012 12F0800F 		tst	r2, #128
 3428 0016 18D0     		beq	.L257
1442:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3429              		.loc 1 1442 0
 3430 0018 5A69     		ldr	r2, [r3, #20]
 3431 001a 22F08002 		bic	r2, r2, #128
 3432 001e 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 114


1445:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3433              		.loc 1 1445 0
 3434 0020 036B     		ldr	r3, [r0, #48]
 3435 0022 53B1     		cbz	r3, .L258
1449:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3436              		.loc 1 1449 0
 3437 0024 0D4A     		ldr	r2, .L261
 3438 0026 5A63     		str	r2, [r3, #52]
1452:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3439              		.loc 1 1452 0
 3440 0028 006B     		ldr	r0, [r0, #48]
 3441              	.LVL310:
 3442 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3443              	.LVL311:
 3444 002e 10B1     		cbz	r0, .L259
1455:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3445              		.loc 1 1455 0
 3446 0030 206B     		ldr	r0, [r4, #48]
 3447 0032 436B     		ldr	r3, [r0, #52]
 3448 0034 9847     		blx	r3
 3449              	.LVL312:
 3450              	.L259:
1483:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3451              		.loc 1 1483 0
 3452 0036 0020     		movs	r0, #0
 3453 0038 10BD     		pop	{r4, pc}
 3454              	.LVL313:
 3455              	.L258:
1461:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3456              		.loc 1 1461 0
 3457 003a 0023     		movs	r3, #0
 3458 003c C384     		strh	r3, [r0, #38]	@ movhi
1464:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3459              		.loc 1 1464 0
 3460 003e 2023     		movs	r3, #32
 3461 0040 80F83930 		strb	r3, [r0, #57]
1467:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3462              		.loc 1 1467 0
 3463 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3464              	.LVL314:
 3465 0048 F5E7     		b	.L259
 3466              	.LVL315:
 3467              	.L257:
1473:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3468              		.loc 1 1473 0
 3469 004a 0023     		movs	r3, #0
 3470 004c C384     		strh	r3, [r0, #38]	@ movhi
1476:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3471              		.loc 1 1476 0
 3472 004e 2023     		movs	r3, #32
 3473 0050 80F83930 		strb	r3, [r0, #57]
1479:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3474              		.loc 1 1479 0
 3475 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3476              	.LVL316:
 3477 0058 EDE7     		b	.L259
 3478              	.L262:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 115


 3479 005a 00BF     		.align	2
 3480              	.L261:
 3481 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3482              		.cfi_endproc
 3483              	.LFE146:
 3485              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3486              		.align	1
 3487              		.syntax unified
 3488              		.thumb
 3489              		.thumb_func
 3490              		.fpu fpv4-sp-d16
 3492              	UART_DMATxOnlyAbortCallback:
 3493              	.LFB175:
2300:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3494              		.loc 1 2300 0
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              	.LVL317:
 3499 0000 08B5     		push	{r3, lr}
 3500              	.LCFI44:
 3501              		.cfi_def_cfa_offset 8
 3502              		.cfi_offset 3, -8
 3503              		.cfi_offset 14, -4
2301:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3504              		.loc 1 2301 0
 3505 0002 406A     		ldr	r0, [r0, #36]
 3506              	.LVL318:
2303:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3507              		.loc 1 2303 0
 3508 0004 0023     		movs	r3, #0
 3509 0006 C384     		strh	r3, [r0, #38]	@ movhi
2306:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3510              		.loc 1 2306 0
 3511 0008 2023     		movs	r3, #32
 3512 000a 80F83930 		strb	r3, [r0, #57]
2309:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3513              		.loc 1 2309 0
 3514 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3515              	.LVL319:
2310:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3516              		.loc 1 2310 0
 3517 0012 08BD     		pop	{r3, pc}
 3518              		.cfi_endproc
 3519              	.LFE175:
 3521              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3522              		.align	1
 3523              		.weak	HAL_UART_AbortReceiveCpltCallback
 3524              		.syntax unified
 3525              		.thumb
 3526              		.thumb_func
 3527              		.fpu fpv4-sp-d16
 3529              	HAL_UART_AbortReceiveCpltCallback:
 3530              	.LFB156:
1788:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3531              		.loc 1 1788 0
 3532              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 116


 3533              		@ args = 0, pretend = 0, frame = 0
 3534              		@ frame_needed = 0, uses_anonymous_args = 0
 3535              		@ link register save eliminated.
 3536              	.LVL320:
1795:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3537              		.loc 1 1795 0
 3538 0000 7047     		bx	lr
 3539              		.cfi_endproc
 3540              	.LFE156:
 3542              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3543              		.align	1
 3544              		.global	HAL_UART_AbortReceive_IT
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3548              		.fpu fpv4-sp-d16
 3550              	HAL_UART_AbortReceive_IT:
 3551              	.LFB147:
1500:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3552              		.loc 1 1500 0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              	.LVL321:
 3557 0000 10B5     		push	{r4, lr}
 3558              	.LCFI45:
 3559              		.cfi_def_cfa_offset 8
 3560              		.cfi_offset 4, -8
 3561              		.cfi_offset 14, -4
 3562 0002 0446     		mov	r4, r0
1502:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3563              		.loc 1 1502 0
 3564 0004 0268     		ldr	r2, [r0]
 3565 0006 D368     		ldr	r3, [r2, #12]
 3566 0008 23F49073 		bic	r3, r3, #288
 3567 000c D360     		str	r3, [r2, #12]
1503:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3568              		.loc 1 1503 0
 3569 000e 0268     		ldr	r2, [r0]
 3570 0010 5369     		ldr	r3, [r2, #20]
 3571 0012 23F00103 		bic	r3, r3, #1
 3572 0016 5361     		str	r3, [r2, #20]
1506:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3573              		.loc 1 1506 0
 3574 0018 0368     		ldr	r3, [r0]
 3575 001a 5A69     		ldr	r2, [r3, #20]
 3576 001c 12F0400F 		tst	r2, #64
 3577 0020 18D0     		beq	.L267
1508:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3578              		.loc 1 1508 0
 3579 0022 5A69     		ldr	r2, [r3, #20]
 3580 0024 22F04002 		bic	r2, r2, #64
 3581 0028 5A61     		str	r2, [r3, #20]
1511:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3582              		.loc 1 1511 0
 3583 002a 436B     		ldr	r3, [r0, #52]
 3584 002c 53B1     		cbz	r3, .L268
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 117


1515:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3585              		.loc 1 1515 0
 3586 002e 0D4A     		ldr	r2, .L271
 3587 0030 5A63     		str	r2, [r3, #52]
1518:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3588              		.loc 1 1518 0
 3589 0032 406B     		ldr	r0, [r0, #52]
 3590              	.LVL322:
 3591 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3592              	.LVL323:
 3593 0038 10B1     		cbz	r0, .L269
1521:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3594              		.loc 1 1521 0
 3595 003a 606B     		ldr	r0, [r4, #52]
 3596 003c 436B     		ldr	r3, [r0, #52]
 3597 003e 9847     		blx	r3
 3598              	.LVL324:
 3599              	.L269:
1549:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3600              		.loc 1 1549 0
 3601 0040 0020     		movs	r0, #0
 3602 0042 10BD     		pop	{r4, pc}
 3603              	.LVL325:
 3604              	.L268:
1527:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3605              		.loc 1 1527 0
 3606 0044 0023     		movs	r3, #0
 3607 0046 C385     		strh	r3, [r0, #46]	@ movhi
1530:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3608              		.loc 1 1530 0
 3609 0048 2023     		movs	r3, #32
 3610 004a 80F83A30 		strb	r3, [r0, #58]
1533:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3611              		.loc 1 1533 0
 3612 004e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3613              	.LVL326:
 3614 0052 F5E7     		b	.L269
 3615              	.LVL327:
 3616              	.L267:
1539:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3617              		.loc 1 1539 0
 3618 0054 0023     		movs	r3, #0
 3619 0056 C385     		strh	r3, [r0, #46]	@ movhi
1542:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3620              		.loc 1 1542 0
 3621 0058 2023     		movs	r3, #32
 3622 005a 80F83A30 		strb	r3, [r0, #58]
1545:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3623              		.loc 1 1545 0
 3624 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3625              	.LVL328:
 3626 0062 EDE7     		b	.L269
 3627              	.L272:
 3628              		.align	2
 3629              	.L271:
 3630 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3631              		.cfi_endproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 118


 3632              	.LFE147:
 3634              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3635              		.align	1
 3636              		.syntax unified
 3637              		.thumb
 3638              		.thumb_func
 3639              		.fpu fpv4-sp-d16
 3641              	UART_DMARxOnlyAbortCallback:
 3642              	.LFB176:
2321:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3643              		.loc 1 2321 0
 3644              		.cfi_startproc
 3645              		@ args = 0, pretend = 0, frame = 0
 3646              		@ frame_needed = 0, uses_anonymous_args = 0
 3647              	.LVL329:
 3648 0000 08B5     		push	{r3, lr}
 3649              	.LCFI46:
 3650              		.cfi_def_cfa_offset 8
 3651              		.cfi_offset 3, -8
 3652              		.cfi_offset 14, -4
2322:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3653              		.loc 1 2322 0
 3654 0002 406A     		ldr	r0, [r0, #36]
 3655              	.LVL330:
2324:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3656              		.loc 1 2324 0
 3657 0004 0023     		movs	r3, #0
 3658 0006 C385     		strh	r3, [r0, #46]	@ movhi
2327:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3659              		.loc 1 2327 0
 3660 0008 2023     		movs	r3, #32
 3661 000a 80F83A30 		strb	r3, [r0, #58]
2330:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3662              		.loc 1 2330 0
 3663 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3664              	.LVL331:
2331:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3665              		.loc 1 2331 0
 3666 0012 08BD     		pop	{r3, pc}
 3667              		.cfi_endproc
 3668              	.LFE176:
 3670              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3671              		.align	1
 3672              		.global	HAL_LIN_SendBreak
 3673              		.syntax unified
 3674              		.thumb
 3675              		.thumb_func
 3676              		.fpu fpv4-sp-d16
 3678              	HAL_LIN_SendBreak:
 3679              	.LFB157:
1827:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3680              		.loc 1 1827 0
 3681              		.cfi_startproc
 3682              		@ args = 0, pretend = 0, frame = 0
 3683              		@ frame_needed = 0, uses_anonymous_args = 0
 3684              		@ link register save eliminated.
 3685              	.LVL332:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 119


1832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3686              		.loc 1 1832 0
 3687 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3688 0004 012B     		cmp	r3, #1
 3689 0006 12D0     		beq	.L277
1832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3690              		.loc 1 1832 0 is_stmt 0 discriminator 2
 3691 0008 0123     		movs	r3, #1
 3692 000a 80F83830 		strb	r3, [r0, #56]
1834:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3693              		.loc 1 1834 0 is_stmt 1 discriminator 2
 3694 000e 2423     		movs	r3, #36
 3695 0010 80F83930 		strb	r3, [r0, #57]
1837:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 3696              		.loc 1 1837 0 discriminator 2
 3697 0014 0268     		ldr	r2, [r0]
 3698 0016 D368     		ldr	r3, [r2, #12]
 3699 0018 43F00103 		orr	r3, r3, #1
 3700 001c D360     		str	r3, [r2, #12]
1839:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3701              		.loc 1 1839 0 discriminator 2
 3702 001e 2023     		movs	r3, #32
 3703 0020 80F83930 		strb	r3, [r0, #57]
1842:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3704              		.loc 1 1842 0 discriminator 2
 3705 0024 0023     		movs	r3, #0
 3706 0026 80F83830 		strb	r3, [r0, #56]
1844:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3707              		.loc 1 1844 0 discriminator 2
 3708 002a 1846     		mov	r0, r3
 3709              	.LVL333:
 3710 002c 7047     		bx	lr
 3711              	.LVL334:
 3712              	.L277:
1832:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3713              		.loc 1 1832 0
 3714 002e 0220     		movs	r0, #2
 3715              	.LVL335:
1845:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3716              		.loc 1 1845 0
 3717 0030 7047     		bx	lr
 3718              		.cfi_endproc
 3719              	.LFE157:
 3721              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3722              		.align	1
 3723              		.global	HAL_MultiProcessor_EnterMuteMode
 3724              		.syntax unified
 3725              		.thumb
 3726              		.thumb_func
 3727              		.fpu fpv4-sp-d16
 3729              	HAL_MultiProcessor_EnterMuteMode:
 3730              	.LFB158:
1854:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3731              		.loc 1 1854 0
 3732              		.cfi_startproc
 3733              		@ args = 0, pretend = 0, frame = 0
 3734              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 120


 3735              		@ link register save eliminated.
 3736              	.LVL336:
1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3737              		.loc 1 1859 0
 3738 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3739 0004 012B     		cmp	r3, #1
 3740 0006 12D0     		beq	.L280
1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3741              		.loc 1 1859 0 is_stmt 0 discriminator 2
 3742 0008 0123     		movs	r3, #1
 3743 000a 80F83830 		strb	r3, [r0, #56]
1861:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3744              		.loc 1 1861 0 is_stmt 1 discriminator 2
 3745 000e 2423     		movs	r3, #36
 3746 0010 80F83930 		strb	r3, [r0, #57]
1864:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3747              		.loc 1 1864 0 discriminator 2
 3748 0014 0268     		ldr	r2, [r0]
 3749 0016 D368     		ldr	r3, [r2, #12]
 3750 0018 43F00203 		orr	r3, r3, #2
 3751 001c D360     		str	r3, [r2, #12]
1866:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3752              		.loc 1 1866 0 discriminator 2
 3753 001e 2023     		movs	r3, #32
 3754 0020 80F83930 		strb	r3, [r0, #57]
1869:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3755              		.loc 1 1869 0 discriminator 2
 3756 0024 0023     		movs	r3, #0
 3757 0026 80F83830 		strb	r3, [r0, #56]
1871:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3758              		.loc 1 1871 0 discriminator 2
 3759 002a 1846     		mov	r0, r3
 3760              	.LVL337:
 3761 002c 7047     		bx	lr
 3762              	.LVL338:
 3763              	.L280:
1859:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3764              		.loc 1 1859 0
 3765 002e 0220     		movs	r0, #2
 3766              	.LVL339:
1872:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3767              		.loc 1 1872 0
 3768 0030 7047     		bx	lr
 3769              		.cfi_endproc
 3770              	.LFE158:
 3772              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3773              		.align	1
 3774              		.global	HAL_MultiProcessor_ExitMuteMode
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	HAL_MultiProcessor_ExitMuteMode:
 3781              	.LFB159:
1881:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3782              		.loc 1 1881 0
 3783              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 121


 3784              		@ args = 0, pretend = 0, frame = 0
 3785              		@ frame_needed = 0, uses_anonymous_args = 0
 3786              		@ link register save eliminated.
 3787              	.LVL340:
1886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3788              		.loc 1 1886 0
 3789 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3790 0004 012B     		cmp	r3, #1
 3791 0006 12D0     		beq	.L283
1886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3792              		.loc 1 1886 0 is_stmt 0 discriminator 2
 3793 0008 0123     		movs	r3, #1
 3794 000a 80F83830 		strb	r3, [r0, #56]
1888:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3795              		.loc 1 1888 0 is_stmt 1 discriminator 2
 3796 000e 2423     		movs	r3, #36
 3797 0010 80F83930 		strb	r3, [r0, #57]
1891:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3798              		.loc 1 1891 0 discriminator 2
 3799 0014 0268     		ldr	r2, [r0]
 3800 0016 D368     		ldr	r3, [r2, #12]
 3801 0018 23F00203 		bic	r3, r3, #2
 3802 001c D360     		str	r3, [r2, #12]
1893:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3803              		.loc 1 1893 0 discriminator 2
 3804 001e 2023     		movs	r3, #32
 3805 0020 80F83930 		strb	r3, [r0, #57]
1896:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3806              		.loc 1 1896 0 discriminator 2
 3807 0024 0023     		movs	r3, #0
 3808 0026 80F83830 		strb	r3, [r0, #56]
1898:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3809              		.loc 1 1898 0 discriminator 2
 3810 002a 1846     		mov	r0, r3
 3811              	.LVL341:
 3812 002c 7047     		bx	lr
 3813              	.LVL342:
 3814              	.L283:
1886:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3815              		.loc 1 1886 0
 3816 002e 0220     		movs	r0, #2
 3817              	.LVL343:
1899:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3818              		.loc 1 1899 0
 3819 0030 7047     		bx	lr
 3820              		.cfi_endproc
 3821              	.LFE159:
 3823              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3824              		.align	1
 3825              		.global	HAL_HalfDuplex_EnableTransmitter
 3826              		.syntax unified
 3827              		.thumb
 3828              		.thumb_func
 3829              		.fpu fpv4-sp-d16
 3831              	HAL_HalfDuplex_EnableTransmitter:
 3832              	.LFB160:
1908:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 122


 3833              		.loc 1 1908 0
 3834              		.cfi_startproc
 3835              		@ args = 0, pretend = 0, frame = 0
 3836              		@ frame_needed = 0, uses_anonymous_args = 0
 3837              		@ link register save eliminated.
 3838              	.LVL344:
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3839              		.loc 1 1912 0
 3840 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3841 0004 012B     		cmp	r3, #1
 3842 0006 14D0     		beq	.L286
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3843              		.loc 1 1912 0 is_stmt 0 discriminator 2
 3844 0008 0123     		movs	r3, #1
 3845 000a 80F83830 		strb	r3, [r0, #56]
1914:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3846              		.loc 1 1914 0 is_stmt 1 discriminator 2
 3847 000e 2423     		movs	r3, #36
 3848 0010 80F83930 		strb	r3, [r0, #57]
1917:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3849              		.loc 1 1917 0 discriminator 2
 3850 0014 0268     		ldr	r2, [r0]
 3851 0016 D368     		ldr	r3, [r2, #12]
 3852              	.LVL345:
1920:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3853              		.loc 1 1920 0 discriminator 2
 3854 0018 23F00C03 		bic	r3, r3, #12
 3855              	.LVL346:
1923:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3856              		.loc 1 1923 0 discriminator 2
 3857 001c 43F00803 		orr	r3, r3, #8
 3858              	.LVL347:
1926:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3859              		.loc 1 1926 0 discriminator 2
 3860 0020 D360     		str	r3, [r2, #12]
1928:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3861              		.loc 1 1928 0 discriminator 2
 3862 0022 2023     		movs	r3, #32
 3863              	.LVL348:
 3864 0024 80F83930 		strb	r3, [r0, #57]
 3865              	.LVL349:
1931:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3866              		.loc 1 1931 0 discriminator 2
 3867 0028 0023     		movs	r3, #0
 3868 002a 80F83830 		strb	r3, [r0, #56]
1933:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3869              		.loc 1 1933 0 discriminator 2
 3870 002e 1846     		mov	r0, r3
 3871              	.LVL350:
 3872 0030 7047     		bx	lr
 3873              	.LVL351:
 3874              	.L286:
1912:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3875              		.loc 1 1912 0
 3876 0032 0220     		movs	r0, #2
 3877              	.LVL352:
1934:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 123


 3878              		.loc 1 1934 0
 3879 0034 7047     		bx	lr
 3880              		.cfi_endproc
 3881              	.LFE160:
 3883              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3884              		.align	1
 3885              		.global	HAL_HalfDuplex_EnableReceiver
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv4-sp-d16
 3891              	HAL_HalfDuplex_EnableReceiver:
 3892              	.LFB161:
1943:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3893              		.loc 1 1943 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
 3897              		@ link register save eliminated.
 3898              	.LVL353:
1947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3899              		.loc 1 1947 0
 3900 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3901 0004 012B     		cmp	r3, #1
 3902 0006 14D0     		beq	.L289
1947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3903              		.loc 1 1947 0 is_stmt 0 discriminator 2
 3904 0008 0123     		movs	r3, #1
 3905 000a 80F83830 		strb	r3, [r0, #56]
1949:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3906              		.loc 1 1949 0 is_stmt 1 discriminator 2
 3907 000e 2423     		movs	r3, #36
 3908 0010 80F83930 		strb	r3, [r0, #57]
1952:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3909              		.loc 1 1952 0 discriminator 2
 3910 0014 0268     		ldr	r2, [r0]
 3911 0016 D368     		ldr	r3, [r2, #12]
 3912              	.LVL354:
1955:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3913              		.loc 1 1955 0 discriminator 2
 3914 0018 23F00C03 		bic	r3, r3, #12
 3915              	.LVL355:
1958:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3916              		.loc 1 1958 0 discriminator 2
 3917 001c 43F00403 		orr	r3, r3, #4
 3918              	.LVL356:
1961:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3919              		.loc 1 1961 0 discriminator 2
 3920 0020 D360     		str	r3, [r2, #12]
1963:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3921              		.loc 1 1963 0 discriminator 2
 3922 0022 2023     		movs	r3, #32
 3923              	.LVL357:
 3924 0024 80F83930 		strb	r3, [r0, #57]
 3925              	.LVL358:
1966:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3926              		.loc 1 1966 0 discriminator 2
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 124


 3927 0028 0023     		movs	r3, #0
 3928 002a 80F83830 		strb	r3, [r0, #56]
1968:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3929              		.loc 1 1968 0 discriminator 2
 3930 002e 1846     		mov	r0, r3
 3931              	.LVL359:
 3932 0030 7047     		bx	lr
 3933              	.LVL360:
 3934              	.L289:
1947:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3935              		.loc 1 1947 0
 3936 0032 0220     		movs	r0, #2
 3937              	.LVL361:
1969:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3938              		.loc 1 1969 0
 3939 0034 7047     		bx	lr
 3940              		.cfi_endproc
 3941              	.LFE161:
 3943              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3944              		.align	1
 3945              		.global	HAL_UART_GetState
 3946              		.syntax unified
 3947              		.thumb
 3948              		.thumb_func
 3949              		.fpu fpv4-sp-d16
 3951              	HAL_UART_GetState:
 3952              	.LFB162:
2000:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3953              		.loc 1 2000 0
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 0
 3956              		@ frame_needed = 0, uses_anonymous_args = 0
 3957              		@ link register save eliminated.
 3958              	.LVL362:
2002:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 3959              		.loc 1 2002 0
 3960 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 3961              	.LVL363:
2003:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3962              		.loc 1 2003 0
 3963 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 3964              	.LVL364:
2006:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3965              		.loc 1 2006 0
 3966 0008 1843     		orrs	r0, r0, r3
 3967              	.LVL365:
 3968 000a 7047     		bx	lr
 3969              		.cfi_endproc
 3970              	.LFE162:
 3972              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3973              		.align	1
 3974              		.global	HAL_UART_GetError
 3975              		.syntax unified
 3976              		.thumb
 3977              		.thumb_func
 3978              		.fpu fpv4-sp-d16
 3980              	HAL_UART_GetError:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 125


 3981              	.LFB163:
2015:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 3982              		.loc 1 2015 0
 3983              		.cfi_startproc
 3984              		@ args = 0, pretend = 0, frame = 0
 3985              		@ frame_needed = 0, uses_anonymous_args = 0
 3986              		@ link register save eliminated.
 3987              	.LVL366:
2016:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3988              		.loc 1 2016 0
 3989 0000 C06B     		ldr	r0, [r0, #60]
 3990              	.LVL367:
2017:Drivers/Modified_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3991              		.loc 1 2017 0
 3992 0002 7047     		bx	lr
 3993              		.cfi_endproc
 3994              	.LFE163:
 3996              		.text
 3997              	.Letext0:
 3998              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 3999              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 4000              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 4001              		.file 5 "Inc/system_at32f4xx.h"
 4002              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 4003              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 4004              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 4005              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 4006              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 4007              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 4008              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 4009              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 4010              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 4011              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 126


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:17     .text.UART_EndTxTransfer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:23     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:46     .text.UART_EndRxTransfer:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:52     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:79     .text.UART_Transmit_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:85     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:172    .text.UART_SetConfig:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:178    .text.UART_SetConfig:0000000000000000 UART_SetConfig
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:362    .text.UART_SetConfig:00000000000001a4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:368    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:374    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:449    .text.HAL_UART_MspInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:456    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:470    .text.HAL_UART_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:477    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:558    .text.HAL_HalfDuplex_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:565    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:652    .text.HAL_LIN_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:659    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:757    .text.HAL_MultiProcessor_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:764    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:865    .text.HAL_UART_MspDeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:872    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:886    .text.HAL_UART_DeInit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:893    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:941    .text.HAL_UART_Transmit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:948    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1134   .text.HAL_UART_Receive:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1141   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1332   .text.HAL_UART_Transmit_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1339   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1414   .text.HAL_UART_Receive_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1421   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1506   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1513   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1625   .text.HAL_UART_Transmit_DMA:0000000000000080 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2310   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2424   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2731   .text.UART_DMAError:0000000000000000 UART_DMAError
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1632   .text.HAL_UART_Receive_DMA:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1639   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1775   .text.HAL_UART_Receive_DMA:000000000000009c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2475   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2680   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1782   .text.HAL_UART_DMAPause:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1789   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1876   .text.HAL_UART_DMAResume:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1883   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1977   .text.HAL_UART_DMAStop:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:1984   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2073   .text.HAL_UART_Abort:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2080   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2162   .text.HAL_UART_AbortTransmit:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2169   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2220   .text.HAL_UART_AbortReceive:0000000000000000 $t
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 127


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2227   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2283   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2290   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2304   .text.UART_DMATransmitCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2361   .text.UART_EndTransmit_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2367   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2397   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2404   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2418   .text.UART_DMATxHalfCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2448   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2455   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2469   .text.UART_DMAReceiveCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2528   .text.UART_Receive_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2534   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2653   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2660   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2674   .text.UART_DMARxHalfCplt:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2704   .text.HAL_UART_ErrorCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2711   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2725   .text.UART_DMAError:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2813   .text.HAL_UART_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:2820   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3040   .text.HAL_UART_IRQHandler:000000000000011c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3051   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3045   .text.UART_DMAAbortOnError:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3080   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3087   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3101   .text.HAL_UART_Abort_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3108   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3258   .text.HAL_UART_Abort_IT:00000000000000bc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3327   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3270   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3264   .text.UART_DMARxAbortCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3321   .text.UART_DMATxAbortCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3378   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3385   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3399   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3406   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3481   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3492   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3486   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3522   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3529   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3543   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3550   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3630   .text.HAL_UART_AbortReceive_IT:0000000000000064 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3641   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3635   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3671   .text.HAL_LIN_SendBreak:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3678   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3722   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3729   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3773   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3780   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3824   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3831   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3884   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s 			page 128


/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3891   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3944   .text.HAL_UART_GetState:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3951   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3973   .text.HAL_UART_GetError:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccec13Pc.s:3980   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError

UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
