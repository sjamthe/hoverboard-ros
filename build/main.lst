ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.poweroff,"ax",%progbits
  17              		.align	1
  18              		.global	poweroff
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	poweroff:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /*
   2:Src/main.c    **** * This file is part of the hoverboard-firmware-hack project.
   3:Src/main.c    **** *
   4:Src/main.c    **** * Copyright (C) 2017-2018 Rene Hopf <renehopf@mac.com>
   5:Src/main.c    **** * Copyright (C) 2017-2018 Nico Stute <crinq@crinq.de>
   6:Src/main.c    **** * Copyright (C) 2017-2018 Niklas Fauth <niklas.fauth@kit.fail>
   7:Src/main.c    **** *
   8:Src/main.c    **** * This program is free software: you can redistribute it and/or modify
   9:Src/main.c    **** * it under the terms of the GNU General Public License as published by
  10:Src/main.c    **** * the Free Software Foundation, either version 3 of the License, or
  11:Src/main.c    **** * (at your option) any later version.
  12:Src/main.c    **** *
  13:Src/main.c    **** * This program is distributed in the hope that it will be useful,
  14:Src/main.c    **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/main.c    **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/main.c    **** * GNU General Public License for more details.
  17:Src/main.c    **** *
  18:Src/main.c    **** * You should have received a copy of the GNU General Public License
  19:Src/main.c    **** * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/main.c    **** */
  21:Src/main.c    **** 
  22:Src/main.c    **** #include "stm32f1xx_hal.h"
  23:Src/main.c    **** #include "defines.h"
  24:Src/main.c    **** #include "setup.h"
  25:Src/main.c    **** #include "config.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** void SystemClock_Config(void);
  28:Src/main.c    **** void Error_Handler(void);
  29:Src/main.c    **** 
  30:Src/main.c    **** extern ADC_HandleTypeDef hadc1;
  31:Src/main.c    **** extern ADC_HandleTypeDef hadc2;
  32:Src/main.c    **** extern volatile adc_buf_t adc_buffer;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** extern uint8_t buzzerFreq;    // global variable for the buzzer pitch. can be 1, 2, 3, 4, 5, 6, 7..
  35:Src/main.c    **** extern uint8_t buzzerPattern; // global variable for the buzzer pattern. can be 1, 2, 3, 4, 5, 6, 7
  36:Src/main.c    **** 
  37:Src/main.c    **** extern volatile int pwml;  // global variable for pwm left. -1000 to 1000
  38:Src/main.c    **** extern volatile int pwmr;  // global variable for pwm right. -1000 to 1000
  39:Src/main.c    **** 
  40:Src/main.c    **** uint16_t speed = 0;
  41:Src/main.c    **** 
  42:Src/main.c    **** void poweroff() {
  27              		.loc 1 42 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Src/main.c    ****     if (ABS(speed) < 20) {
  31              		.loc 1 43 0
  32 0000 0B4B     		ldr	r3, .L9
  33 0002 1B88     		ldrh	r3, [r3]
  34 0004 132B     		cmp	r3, #19
  35 0006 12D8     		bhi	.L1
  42:Src/main.c    ****     if (ABS(speed) < 20) {
  36              		.loc 1 42 0
  37 0008 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  44:Src/main.c    ****         buzzerPattern = 0;
  42              		.loc 1 44 0
  43 000a 0024     		movs	r4, #0
  44 000c 094B     		ldr	r3, .L9+4
  45 000e 1C70     		strb	r4, [r3]
  46              	.LVL0:
  47              	.LBB2:
  45:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  48              		.loc 1 45 0
  49 0010 05E0     		b	.L3
  50              	.LVL1:
  51              	.L4:
  46:Src/main.c    ****             buzzerFreq = i;
  52              		.loc 1 46 0 discriminator 3
  53 0012 094B     		ldr	r3, .L9+8
  54 0014 1C70     		strb	r4, [r3]
  47:Src/main.c    ****             HAL_Delay(100);
  55              		.loc 1 47 0 discriminator 3
  56 0016 6420     		movs	r0, #100
  57 0018 FFF7FEFF 		bl	HAL_Delay
  58              	.LVL2:
  45:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  59              		.loc 1 45 0 discriminator 3
  60 001c 0134     		adds	r4, r4, #1
  61              	.LVL3:
  62              	.L3:
  45:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  63              		.loc 1 45 0 is_stmt 0 discriminator 1
  64 001e 072C     		cmp	r4, #7
  65 0020 F7DD     		ble	.L4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 3


  66              	.LBE2:
  48:Src/main.c    ****         }
  49:Src/main.c    ****         HAL_GPIO_WritePin(OFF_PORT, OFF_PIN, 0);
  67              		.loc 1 49 0 is_stmt 1
  68 0022 0022     		movs	r2, #0
  69 0024 2021     		movs	r1, #32
  70 0026 0548     		ldr	r0, .L9+12
  71 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  72              	.LVL4:
  73              	.L5:
  74 002c FEE7     		b	.L5
  75              	.LVL5:
  76              	.L1:
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 0
  79              		.cfi_restore 4
  80              		.cfi_restore 14
  81 002e 7047     		bx	lr
  82              	.L10:
  83              		.align	2
  84              	.L9:
  85 0030 00000000 		.word	.LANCHOR0
  86 0034 00000000 		.word	buzzerPattern
  87 0038 00000000 		.word	buzzerFreq
  88 003c 00080140 		.word	1073809408
  89              		.cfi_endproc
  90              	.LFE126:
  92              		.section	.text.SystemClock_Config,"ax",%progbits
  93              		.align	1
  94              		.global	SystemClock_Config
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	SystemClock_Config:
 101              	.LFB128:
  50:Src/main.c    ****         while(1) {}
  51:Src/main.c    ****     }
  52:Src/main.c    **** }
  53:Src/main.c    **** 
  54:Src/main.c    **** 
  55:Src/main.c    **** int main(void) {
  56:Src/main.c    ****   HAL_Init();
  57:Src/main.c    **** 
  58:Src/main.c    ****   __HAL_RCC_AFIO_CLK_ENABLE();
  59:Src/main.c    ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  60:Src/main.c    ****   /* System interrupt init*/
  61:Src/main.c    ****   /* MemoryManagement_IRQn interrupt configuration */
  62:Src/main.c    ****   HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
  63:Src/main.c    ****   /* BusFault_IRQn interrupt configuration */
  64:Src/main.c    ****   HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
  65:Src/main.c    ****   /* UsageFault_IRQn interrupt configuration */
  66:Src/main.c    ****   HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
  67:Src/main.c    ****   /* SVCall_IRQn interrupt configuration */
  68:Src/main.c    ****   HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
  69:Src/main.c    ****   /* DebugMonitor_IRQn interrupt configuration */
  70:Src/main.c    ****   HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 4


  71:Src/main.c    ****   /* PendSV_IRQn interrupt configuration */
  72:Src/main.c    ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  73:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
  74:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  75:Src/main.c    **** 
  76:Src/main.c    ****   SystemClock_Config();
  77:Src/main.c    ****   __HAL_RCC_DMA1_CLK_DISABLE();
  78:Src/main.c    **** 
  79:Src/main.c    ****   MX_GPIO_Init();
  80:Src/main.c    ****   MX_TIM_Init();
  81:Src/main.c    ****   MX_ADC1_Init();
  82:Src/main.c    ****   MX_ADC2_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   HAL_GPIO_WritePin(OFF_PORT, OFF_PIN, 1);
  85:Src/main.c    **** 
  86:Src/main.c    ****   HAL_ADC_Start(&hadc1);
  87:Src/main.c    ****   HAL_ADC_Start(&hadc2);
  88:Src/main.c    **** 
  89:Src/main.c    ****   motor_init();
  90:Src/main.c    **** 
  91:Src/main.c    ****   // ###### STARTUP CHIME #############
  92:Src/main.c    ****   for (int i = 8; i >= 0; i--) {
  93:Src/main.c    ****     buzzerFreq = i;
  94:Src/main.c    ****     HAL_Delay(100);
  95:Src/main.c    ****   }
  96:Src/main.c    ****   buzzerFreq = 0;
  97:Src/main.c    **** 
  98:Src/main.c    ****   HAL_GPIO_WritePin(LED_PORT, LED_PIN, 1);
  99:Src/main.c    ****  
 100:Src/main.c    **** #ifdef CONTROL_MOTOR_TEST
 101:Src/main.c    **** 
 102:Src/main.c    **** 	#ifdef INVERT_R_DIRECTION
 103:Src/main.c    **** 	  pwmr = 60;
 104:Src/main.c    **** 	#else
 105:Src/main.c    **** 	  pwmr = -60;
 106:Src/main.c    **** 	#endif
 107:Src/main.c    **** 	#ifdef INVERT_L_DIRECTION
 108:Src/main.c    **** 	  pwml = -60;
 109:Src/main.c    **** 	#else
 110:Src/main.c    **** 	  pwml = 60;
 111:Src/main.c    **** 	#endif
 112:Src/main.c    **** 
 113:Src/main.c    **** #endif
 114:Src/main.c    ****   while(1) {
 115:Src/main.c    ****     HAL_Delay(DELAY_IN_MAIN_LOOP); //delay in ms
 116:Src/main.c    **** 
 117:Src/main.c    **** 
 118:Src/main.c    ****    // ####### POWEROFF BY POWER-BUTTON #######
 119:Src/main.c    ****    if (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {
 120:Src/main.c    ****      while (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {}
 121:Src/main.c    ****      poweroff();
 122:Src/main.c    ****    }
 123:Src/main.c    ****   }
 124:Src/main.c    **** }
 125:Src/main.c    **** 
 126:Src/main.c    **** /** System Clock Configuration
 127:Src/main.c    **** */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 5


 128:Src/main.c    **** void SystemClock_Config(void) {
 102              		.loc 1 128 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
 129:Src/main.c    **** 
 130:Src/main.c    ****   /**Configure the Systick interrupt time
 131:Src/main.c    ****     */
 132:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 111              		.loc 1 132 0
 112 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 113              	.LVL6:
 114 0006 084B     		ldr	r3, .L13
 115 0008 A3FB0030 		umull	r3, r0, r3, r0
 116 000c 8009     		lsrs	r0, r0, #6
 117 000e FFF7FEFF 		bl	HAL_SYSTICK_Config
 118              	.LVL7:
 133:Src/main.c    **** 
 134:Src/main.c    ****   /**Configure the Systick
 135:Src/main.c    ****     */
 136:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 119              		.loc 1 136 0
 120 0012 0420     		movs	r0, #4
 121 0014 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 122              	.LVL8:
 137:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 138:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 123              		.loc 1 138 0
 124 0018 0022     		movs	r2, #0
 125 001a 1146     		mov	r1, r2
 126 001c 4FF0FF30 		mov	r0, #-1
 127 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 128              	.LVL9:
 139:Src/main.c    **** }
 129              		.loc 1 139 0
 130 0024 08BD     		pop	{r3, pc}
 131              	.L14:
 132 0026 00BF     		.align	2
 133              	.L13:
 134 0028 D34D6210 		.word	274877907
 135              		.cfi_endproc
 136              	.LFE128:
 138              		.section	.text.main,"ax",%progbits
 139              		.align	1
 140              		.global	main
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	main:
 147              	.LFB127:
  55:Src/main.c    ****   HAL_Init();
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 6


 148              		.loc 1 55 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 16
  56:Src/main.c    **** 
 160              		.loc 1 56 0
 161 0004 FFF7FEFF 		bl	HAL_Init
 162              	.LVL10:
 163              	.LBB3:
  58:Src/main.c    ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 164              		.loc 1 58 0
 165 0008 3E4C     		ldr	r4, .L22
 166 000a A369     		ldr	r3, [r4, #24]
 167 000c 43F00103 		orr	r3, r3, #1
 168 0010 A361     		str	r3, [r4, #24]
 169 0012 A369     		ldr	r3, [r4, #24]
 170 0014 03F00103 		and	r3, r3, #1
 171 0018 0193     		str	r3, [sp, #4]
 172 001a 019B     		ldr	r3, [sp, #4]
 173              	.LBE3:
  59:Src/main.c    ****   /* System interrupt init*/
 174              		.loc 1 59 0
 175 001c 0320     		movs	r0, #3
 176 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 177              	.LVL11:
  62:Src/main.c    ****   /* BusFault_IRQn interrupt configuration */
 178              		.loc 1 62 0
 179 0022 0022     		movs	r2, #0
 180 0024 1146     		mov	r1, r2
 181 0026 6FF00B00 		mvn	r0, #11
 182 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL12:
  64:Src/main.c    ****   /* UsageFault_IRQn interrupt configuration */
 184              		.loc 1 64 0
 185 002e 0022     		movs	r2, #0
 186 0030 1146     		mov	r1, r2
 187 0032 6FF00A00 		mvn	r0, #10
 188 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 189              	.LVL13:
  66:Src/main.c    ****   /* SVCall_IRQn interrupt configuration */
 190              		.loc 1 66 0
 191 003a 0022     		movs	r2, #0
 192 003c 1146     		mov	r1, r2
 193 003e 6FF00900 		mvn	r0, #9
 194 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 195              	.LVL14:
  68:Src/main.c    ****   /* DebugMonitor_IRQn interrupt configuration */
 196              		.loc 1 68 0
 197 0046 0022     		movs	r2, #0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 7


 198 0048 1146     		mov	r1, r2
 199 004a 6FF00400 		mvn	r0, #4
 200 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 201              	.LVL15:
  70:Src/main.c    ****   /* PendSV_IRQn interrupt configuration */
 202              		.loc 1 70 0
 203 0052 0022     		movs	r2, #0
 204 0054 1146     		mov	r1, r2
 205 0056 6FF00300 		mvn	r0, #3
 206 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207              	.LVL16:
  72:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 208              		.loc 1 72 0
 209 005e 0022     		movs	r2, #0
 210 0060 1146     		mov	r1, r2
 211 0062 6FF00100 		mvn	r0, #1
 212 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL17:
  74:Src/main.c    **** 
 214              		.loc 1 74 0
 215 006a 0022     		movs	r2, #0
 216 006c 1146     		mov	r1, r2
 217 006e 4FF0FF30 		mov	r0, #-1
 218 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL18:
  76:Src/main.c    ****   __HAL_RCC_DMA1_CLK_DISABLE();
 220              		.loc 1 76 0
 221 0076 FFF7FEFF 		bl	SystemClock_Config
 222              	.LVL19:
  77:Src/main.c    **** 
 223              		.loc 1 77 0
 224 007a 6369     		ldr	r3, [r4, #20]
 225 007c 23F00103 		bic	r3, r3, #1
 226 0080 6361     		str	r3, [r4, #20]
  79:Src/main.c    ****   MX_TIM_Init();
 227              		.loc 1 79 0
 228 0082 FFF7FEFF 		bl	MX_GPIO_Init
 229              	.LVL20:
  80:Src/main.c    ****   MX_ADC1_Init();
 230              		.loc 1 80 0
 231 0086 FFF7FEFF 		bl	MX_TIM_Init
 232              	.LVL21:
  81:Src/main.c    ****   MX_ADC2_Init();
 233              		.loc 1 81 0
 234 008a FFF7FEFF 		bl	MX_ADC1_Init
 235              	.LVL22:
  82:Src/main.c    **** 
 236              		.loc 1 82 0
 237 008e FFF7FEFF 		bl	MX_ADC2_Init
 238              	.LVL23:
  84:Src/main.c    **** 
 239              		.loc 1 84 0
 240 0092 0122     		movs	r2, #1
 241 0094 2021     		movs	r1, #32
 242 0096 1C48     		ldr	r0, .L22+4
 243 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL24:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 8


  86:Src/main.c    ****   HAL_ADC_Start(&hadc2);
 245              		.loc 1 86 0
 246 009c 1B48     		ldr	r0, .L22+8
 247 009e FFF7FEFF 		bl	HAL_ADC_Start
 248              	.LVL25:
  87:Src/main.c    **** 
 249              		.loc 1 87 0
 250 00a2 1B48     		ldr	r0, .L22+12
 251 00a4 FFF7FEFF 		bl	HAL_ADC_Start
 252              	.LVL26:
  89:Src/main.c    **** 
 253              		.loc 1 89 0
 254 00a8 FFF7FEFF 		bl	motor_init
 255              	.LVL27:
 256              	.LBB4:
  92:Src/main.c    ****     buzzerFreq = i;
 257              		.loc 1 92 0
 258 00ac 0824     		movs	r4, #8
 259 00ae 05E0     		b	.L16
 260              	.LVL28:
 261              	.L17:
  93:Src/main.c    ****     HAL_Delay(100);
 262              		.loc 1 93 0 discriminator 3
 263 00b0 184B     		ldr	r3, .L22+16
 264 00b2 1C70     		strb	r4, [r3]
  94:Src/main.c    ****   }
 265              		.loc 1 94 0 discriminator 3
 266 00b4 6420     		movs	r0, #100
 267 00b6 FFF7FEFF 		bl	HAL_Delay
 268              	.LVL29:
  92:Src/main.c    ****     buzzerFreq = i;
 269              		.loc 1 92 0 discriminator 3
 270 00ba 013C     		subs	r4, r4, #1
 271              	.LVL30:
 272              	.L16:
  92:Src/main.c    ****     buzzerFreq = i;
 273              		.loc 1 92 0 is_stmt 0 discriminator 1
 274 00bc 002C     		cmp	r4, #0
 275 00be F7DA     		bge	.L17
 276              	.LBE4:
  96:Src/main.c    **** 
 277              		.loc 1 96 0 is_stmt 1
 278 00c0 144B     		ldr	r3, .L22+16
 279 00c2 0022     		movs	r2, #0
 280 00c4 1A70     		strb	r2, [r3]
  98:Src/main.c    ****  
 281              		.loc 1 98 0
 282 00c6 0122     		movs	r2, #1
 283 00c8 0421     		movs	r1, #4
 284 00ca 1348     		ldr	r0, .L22+20
 285 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 286              	.LVL31:
 105:Src/main.c    **** 	#endif
 287              		.loc 1 105 0
 288 00d0 124B     		ldr	r3, .L22+24
 289 00d2 6FF03B02 		mvn	r2, #59
 290 00d6 1A60     		str	r2, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 9


 110:Src/main.c    **** 	#endif
 291              		.loc 1 110 0
 292 00d8 114B     		ldr	r3, .L22+28
 293 00da 3C22     		movs	r2, #60
 294 00dc 1A60     		str	r2, [r3]
 295              	.L18:
 115:Src/main.c    **** 
 296              		.loc 1 115 0
 297 00de 0520     		movs	r0, #5
 298 00e0 FFF7FEFF 		bl	HAL_Delay
 299              	.LVL32:
 119:Src/main.c    ****      while (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {}
 300              		.loc 1 119 0
 301 00e4 0221     		movs	r1, #2
 302 00e6 0848     		ldr	r0, .L22+4
 303 00e8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 304              	.LVL33:
 305 00ec 0028     		cmp	r0, #0
 306 00ee F6D0     		beq	.L18
 307              	.L19:
 120:Src/main.c    ****      poweroff();
 308              		.loc 1 120 0 discriminator 1
 309 00f0 0221     		movs	r1, #2
 310 00f2 0548     		ldr	r0, .L22+4
 311 00f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 312              	.LVL34:
 313 00f8 0028     		cmp	r0, #0
 314 00fa F9D1     		bne	.L19
 121:Src/main.c    ****    }
 315              		.loc 1 121 0
 316 00fc FFF7FEFF 		bl	poweroff
 317              	.LVL35:
 318 0100 EDE7     		b	.L18
 319              	.L23:
 320 0102 00BF     		.align	2
 321              	.L22:
 322 0104 00100240 		.word	1073876992
 323 0108 00080140 		.word	1073809408
 324 010c 00000000 		.word	hadc1
 325 0110 00000000 		.word	hadc2
 326 0114 00000000 		.word	buzzerFreq
 327 0118 000C0140 		.word	1073810432
 328 011c 00000000 		.word	pwmr
 329 0120 00000000 		.word	pwml
 330              		.cfi_endproc
 331              	.LFE127:
 333              		.section	.text.Error_Handler,"ax",%progbits
 334              		.align	1
 335              		.global	Error_Handler
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	Error_Handler:
 342              	.LFB129:
 140:Src/main.c    **** 
 141:Src/main.c    **** /**
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 10


 142:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 143:Src/main.c    ****   * @param  None
 144:Src/main.c    ****   * @retval None
 145:Src/main.c    ****   */
 146:Src/main.c    **** void Error_Handler(void)
 147:Src/main.c    **** {
 343              		.loc 1 147 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              	.LCFI5:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 352              	.LVL36:
 353              	.LBB5:
 148:Src/main.c    ****   for (int i = 2; i >= 0; i--) {
 354              		.loc 1 148 0
 355 0002 0224     		movs	r4, #2
 356 0004 09E0     		b	.L25
 357              	.LVL37:
 358              	.L26:
 149:Src/main.c    ****     buzzerFreq = 4;
 359              		.loc 1 149 0 discriminator 3
 360 0006 084B     		ldr	r3, .L28
 361 0008 0422     		movs	r2, #4
 362 000a 1A70     		strb	r2, [r3]
 150:Src/main.c    ****     buzzerPattern = 1;
 363              		.loc 1 150 0 discriminator 3
 364 000c 074B     		ldr	r3, .L28+4
 365 000e 0122     		movs	r2, #1
 366 0010 1A70     		strb	r2, [r3]
 151:Src/main.c    ****     HAL_Delay(5);
 367              		.loc 1 151 0 discriminator 3
 368 0012 0520     		movs	r0, #5
 369 0014 FFF7FEFF 		bl	HAL_Delay
 370              	.LVL38:
 148:Src/main.c    ****     buzzerFreq = 4;
 371              		.loc 1 148 0 discriminator 3
 372 0018 013C     		subs	r4, r4, #1
 373              	.LVL39:
 374              	.L25:
 148:Src/main.c    ****     buzzerFreq = 4;
 375              		.loc 1 148 0 is_stmt 0 discriminator 1
 376 001a 002C     		cmp	r4, #0
 377 001c F3DA     		bge	.L26
 378              	.LBE5:
 152:Src/main.c    ****   }
 153:Src/main.c    ****   buzzerFreq = 0;
 379              		.loc 1 153 0 is_stmt 1
 380 001e 024B     		ldr	r3, .L28
 381 0020 0022     		movs	r2, #0
 382 0022 1A70     		strb	r2, [r3]
 154:Src/main.c    **** }...
 383              		.loc 1 154 0
 384 0024 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 11


 385              	.LVL40:
 386              	.L29:
 387 0026 00BF     		.align	2
 388              	.L28:
 389 0028 00000000 		.word	buzzerFreq
 390 002c 00000000 		.word	buzzerPattern
 391              		.cfi_endproc
 392              	.LFE129:
 394              		.global	speed
 395              		.section	.bss.speed,"aw",%nobits
 396              		.align	1
 397              		.set	.LANCHOR0,. + 0
 400              	speed:
 401 0000 0000     		.space	2
 402              		.text
 403              	.Letext0:
 404              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 405              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 406              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 407              		.file 5 "Inc/system_at32f4xx.h"
 408              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 409              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 410              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 411              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 412              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 413              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 414              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 415              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 416              		.file 14 "Inc/defines.h"
 417              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 418              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 419              		.file 17 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 420              		.file 18 "Inc/setup.h"
 421              		.file 19 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:17     .text.poweroff:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:24     .text.poweroff:0000000000000000 poweroff
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:85     .text.poweroff:0000000000000030 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:93     .text.SystemClock_Config:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:100    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:134    .text.SystemClock_Config:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:139    .text.main:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:146    .text.main:0000000000000000 main
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:322    .text.main:0000000000000104 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:334    .text.Error_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:341    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:389    .text.Error_Handler:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:400    .bss.speed:0000000000000000 speed
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccqsie0u.s:396    .bss.speed:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_Delay
HAL_GPIO_WritePin
buzzerPattern
buzzerFreq
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_NVIC_SetPriorityGrouping
MX_GPIO_Init
MX_TIM_Init
MX_ADC1_Init
MX_ADC2_Init
HAL_ADC_Start
motor_init
HAL_GPIO_ReadPin
hadc1
hadc2
pwmr
pwml
