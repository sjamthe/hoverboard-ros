ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.poweroff,"ax",%progbits
  17              		.align	1
  18              		.global	poweroff
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	poweroff:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /*
   2:Src/main.c    **** * This file is part of the hoverboard-firmware-hack project.
   3:Src/main.c    **** *
   4:Src/main.c    **** * Copyright (C) 2017-2018 Rene Hopf <renehopf@mac.com>
   5:Src/main.c    **** * Copyright (C) 2017-2018 Nico Stute <crinq@crinq.de>
   6:Src/main.c    **** * Copyright (C) 2017-2018 Niklas Fauth <niklas.fauth@kit.fail>
   7:Src/main.c    **** *
   8:Src/main.c    **** * This program is free software: you can redistribute it and/or modify
   9:Src/main.c    **** * it under the terms of the GNU General Public License as published by
  10:Src/main.c    **** * the Free Software Foundation, either version 3 of the License, or
  11:Src/main.c    **** * (at your option) any later version.
  12:Src/main.c    **** *
  13:Src/main.c    **** * This program is distributed in the hope that it will be useful,
  14:Src/main.c    **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/main.c    **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/main.c    **** * GNU General Public License for more details.
  17:Src/main.c    **** *
  18:Src/main.c    **** * You should have received a copy of the GNU General Public License
  19:Src/main.c    **** * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/main.c    **** */
  21:Src/main.c    **** 
  22:Src/main.c    **** #include "stm32f1xx_hal.h"
  23:Src/main.c    **** #include "defines.h"
  24:Src/main.c    **** #include "setup.h"
  25:Src/main.c    **** #include "config.h"
  26:Src/main.c    **** #include <string.h>
  27:Src/main.c    **** #include "hallinterrupts.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** void SystemClock_Config(void);
  30:Src/main.c    **** void Error_Handler(void);
  31:Src/main.c    **** void motor_init(void);
  32:Src/main.c    **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 2


  33:Src/main.c    **** //#define CONTROL_SERIAL_USART2_DMA
  34:Src/main.c    **** 
  35:Src/main.c    **** #ifdef CONTROL_SERIAL_USART2
  36:Src/main.c    ****   extern UART_HandleTypeDef huart2; 
  37:Src/main.c    ****   uint8_t ch_buf[10];
  38:Src/main.c    **** #ifdef CONTROL_SERIAL_USART2_DMA
  39:Src/main.c    **** 	extern DMA_HandleTypeDef hdma_usart2_rx;
  40:Src/main.c    **** 	extern DMA_HandleTypeDef hdma_usart2_tx;
  41:Src/main.c    **** #endif
  42:Src/main.c    **** #endif
  43:Src/main.c    **** 
  44:Src/main.c    **** extern ADC_HandleTypeDef hadc1;
  45:Src/main.c    **** extern ADC_HandleTypeDef hadc2;
  46:Src/main.c    **** extern volatile adc_buf_t adc_buffer;
  47:Src/main.c    **** 
  48:Src/main.c    **** extern uint8_t buzzerFreq;    // global variable for the buzzer pitch. can be 1, 2, 3, 4, 5, 6, 7..
  49:Src/main.c    **** extern uint8_t buzzerPattern; // global variable for the buzzer pattern. can be 1, 2, 3, 4, 5, 6, 7
  50:Src/main.c    **** 
  51:Src/main.c    **** extern volatile int pwml;  // global variable for pwm left. -1000 to 1000
  52:Src/main.c    **** extern volatile int pwmr;  // global variable for pwm right. -1000 to 1000
  53:Src/main.c    **** 
  54:Src/main.c    **** uint16_t speed = 0;
  55:Src/main.c    **** char message[100];
  56:Src/main.c    **** uint16_t counter = 0;
  57:Src/main.c    **** 
  58:Src/main.c    **** void poweroff() {
  27              		.loc 1 58 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  59:Src/main.c    ****     if (ABS(speed) < 20) {
  31              		.loc 1 59 0
  32 0000 0B4B     		ldr	r3, .L9
  33 0002 1B88     		ldrh	r3, [r3]
  34 0004 132B     		cmp	r3, #19
  35 0006 12D8     		bhi	.L1
  58:Src/main.c    ****     if (ABS(speed) < 20) {
  36              		.loc 1 58 0
  37 0008 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  60:Src/main.c    ****         buzzerPattern = 0;
  42              		.loc 1 60 0
  43 000a 0024     		movs	r4, #0
  44 000c 094B     		ldr	r3, .L9+4
  45 000e 1C70     		strb	r4, [r3]
  46              	.LVL0:
  47              	.LBB2:
  61:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  48              		.loc 1 61 0
  49 0010 05E0     		b	.L3
  50              	.LVL1:
  51              	.L4:
  62:Src/main.c    ****             buzzerFreq = i;
  52              		.loc 1 62 0 discriminator 3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 3


  53 0012 094B     		ldr	r3, .L9+8
  54 0014 1C70     		strb	r4, [r3]
  63:Src/main.c    ****             HAL_Delay(100);
  55              		.loc 1 63 0 discriminator 3
  56 0016 6420     		movs	r0, #100
  57 0018 FFF7FEFF 		bl	HAL_Delay
  58              	.LVL2:
  61:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  59              		.loc 1 61 0 discriminator 3
  60 001c 0134     		adds	r4, r4, #1
  61              	.LVL3:
  62              	.L3:
  61:Src/main.c    ****         for (int i = 0; i < 8; i++) {
  63              		.loc 1 61 0 is_stmt 0 discriminator 1
  64 001e 072C     		cmp	r4, #7
  65 0020 F7DD     		ble	.L4
  66              	.LBE2:
  64:Src/main.c    ****         }
  65:Src/main.c    ****         HAL_GPIO_WritePin(OFF_PORT, OFF_PIN, 0);
  67              		.loc 1 65 0 is_stmt 1
  68 0022 0022     		movs	r2, #0
  69 0024 2021     		movs	r1, #32
  70 0026 0548     		ldr	r0, .L9+12
  71 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
  72              	.LVL4:
  73              	.L5:
  74 002c FEE7     		b	.L5
  75              	.LVL5:
  76              	.L1:
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 0
  79              		.cfi_restore 4
  80              		.cfi_restore 14
  81 002e 7047     		bx	lr
  82              	.L10:
  83              		.align	2
  84              	.L9:
  85 0030 00000000 		.word	.LANCHOR0
  86 0034 00000000 		.word	buzzerPattern
  87 0038 00000000 		.word	buzzerFreq
  88 003c 00080140 		.word	1073809408
  89              		.cfi_endproc
  90              	.LFE126:
  92              		.section	.text.SystemClock_Config,"ax",%progbits
  93              		.align	1
  94              		.global	SystemClock_Config
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	SystemClock_Config:
 101              	.LFB128:
  66:Src/main.c    ****         while(1) {}
  67:Src/main.c    ****     }
  68:Src/main.c    **** }
  69:Src/main.c    **** 
  70:Src/main.c    **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 4


  71:Src/main.c    **** int main(void) {
  72:Src/main.c    ****   HAL_Init();
  73:Src/main.c    **** 
  74:Src/main.c    ****   __HAL_RCC_AFIO_CLK_ENABLE();
  75:Src/main.c    ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  76:Src/main.c    ****   /* System interrupt init*/
  77:Src/main.c    ****   /* MemoryManagement_IRQn interrupt configuration */
  78:Src/main.c    ****   HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
  79:Src/main.c    ****   /* BusFault_IRQn interrupt configuration */
  80:Src/main.c    ****   HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
  81:Src/main.c    ****   /* UsageFault_IRQn interrupt configuration */
  82:Src/main.c    ****   HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
  83:Src/main.c    ****   /* SVCall_IRQn interrupt configuration */
  84:Src/main.c    ****   HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
  85:Src/main.c    ****   /* DebugMonitor_IRQn interrupt configuration */
  86:Src/main.c    ****   HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
  87:Src/main.c    ****   /* PendSV_IRQn interrupt configuration */
  88:Src/main.c    ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  89:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
  90:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  91:Src/main.c    **** 
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    ****   __HAL_RCC_DMA1_CLK_DISABLE();
  94:Src/main.c    **** 
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   MX_TIM_Init();
  97:Src/main.c    ****   MX_ADC1_Init();
  98:Src/main.c    ****   MX_ADC2_Init();
  99:Src/main.c    **** 
 100:Src/main.c    ****   #ifdef CONTROL_SERIAL_USART2
 101:Src/main.c    ****     UART_Control_Init();
 102:Src/main.c    ****   #endif
 103:Src/main.c    ****   #ifdef CONTROL_SERIAL_USART2_DMA
 104:Src/main.c    ****     if(HAL_UART_Receive_DMA(&huart2, (uint8_t *)&ch_buf, 10)  != HAL_OK) 
 105:Src/main.c    ****     {
 106:Src/main.c    ****       Error_Handler();
 107:Src/main.c    ****     }
 108:Src/main.c    ****   #endif
 109:Src/main.c    **** 
 110:Src/main.c    ****   #ifdef DEBUG_SERIAL_USART3
 111:Src/main.c    ****     UART_Debug_Init();
 112:Src/main.c    ****   #endif
 113:Src/main.c    **** 
 114:Src/main.c    ****   HAL_GPIO_WritePin(OFF_PORT, OFF_PIN, 1);
 115:Src/main.c    **** 
 116:Src/main.c    ****  #ifdef HALL_INTERRUPTS
 117:Src/main.c    ****     HallInterruptinit();
 118:Src/main.c    ****  #endif
 119:Src/main.c    **** 
 120:Src/main.c    ****   HAL_ADC_Start(&hadc1);
 121:Src/main.c    ****   HAL_ADC_Start(&hadc2);
 122:Src/main.c    **** 
 123:Src/main.c    ****   motor_init();
 124:Src/main.c    ****   ros_init();
 125:Src/main.c    **** 
 126:Src/main.c    ****   // ###### STARTUP CHIME #############
 127:Src/main.c    ****   for (int i = 8; i >= 0; i--) {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 5


 128:Src/main.c    ****     buzzerFreq = i;
 129:Src/main.c    ****     HAL_Delay(100);
 130:Src/main.c    ****   }
 131:Src/main.c    ****   buzzerFreq = 0;
 132:Src/main.c    **** 
 133:Src/main.c    ****   HAL_GPIO_WritePin(LED_PORT, LED_PIN, 1);
 134:Src/main.c    ****  
 135:Src/main.c    **** #ifdef CONTROL_MOTOR_TEST
 136:Src/main.c    **** 
 137:Src/main.c    **** 	#ifdef INVERT_R_DIRECTION
 138:Src/main.c    **** 	  pwmr = 60;
 139:Src/main.c    **** 	#else
 140:Src/main.c    **** 	  pwmr = -60;
 141:Src/main.c    **** 	#endif
 142:Src/main.c    **** 	#ifdef INVERT_L_DIRECTION
 143:Src/main.c    **** 	  pwml = -60;
 144:Src/main.c    **** 	#else
 145:Src/main.c    **** 	  pwml = 60;
 146:Src/main.c    **** 	#endif
 147:Src/main.c    **** 
 148:Src/main.c    **** #endif
 149:Src/main.c    **** 
 150:Src/main.c    ****   while(1) {
 151:Src/main.c    ****     HAL_Delay(DELAY_IN_MAIN_LOOP); //delay in ms
 152:Src/main.c    ****     ros_run();
 153:Src/main.c    **** 
 154:Src/main.c    ****     // Test USART2
 155:Src/main.c    ****     // int ch = readUSART2();
 156:Src/main.c    ****     // if(ch != -1)
 157:Src/main.c    ****     // {
 158:Src/main.c    ****     //   putchar(ch);
 159:Src/main.c    ****     // }
 160:Src/main.c    **** 
 161:Src/main.c    ****     #ifdef DEBUG_SERIAL_USART3
 162:Src/main.c    ****       //Test HallInterruptReadPosn
 163:Src/main.c    ****       HALL_POSN p;
 164:Src/main.c    ****       HallInterruptReadPosn(&p, 0);
 165:Src/main.c    ****       if(pwml != 0) 
 166:Src/main.c    ****       {
 167:Src/main.c    ****         printf("left wheel rev %d, rpm %d, pos mm %d, speed mm/s %d\n",
 168:Src/main.c    ****           p.wheel[LEFT].HallPosn,p.wheel[0].HallSpeed, p.wheel[0].HallPosn_mm, p.wheel[0].HallSpeed
 169:Src/main.c    ****       }
 170:Src/main.c    ****       if(pwmr != 0)
 171:Src/main.c    ****       { 
 172:Src/main.c    ****         printf("right wheel rev %d, rpm %d, pos mm %d, speed mm/s %d\n",
 173:Src/main.c    ****           p.wheel[RIGHT].HallPosn,p.wheel[1].HallSpeed, p.wheel[1].HallPosn_mm, p.wheel[1].HallSpee
 174:Src/main.c    ****       }
 175:Src/main.c    **** 
 176:Src/main.c    **** 
 177:Src/main.c    ****       //test if we can stop at 60% angle
 178:Src/main.c    ****       #ifdef CONTROL_MOTOR_TEST
 179:Src/main.c    ****         int langle = 60*HALL_POSN_PER_REV/360;
 180:Src/main.c    ****         int rangle = -60*HALL_POSN_PER_REV/360;
 181:Src/main.c    ****         if(p.wheel[LEFT].HallPosn >= langle) {
 182:Src/main.c    ****           pwml = 0;
 183:Src/main.c    ****         }
 184:Src/main.c    ****         if(p.wheel[RIGHT].HallPosn <=rangle) {
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 6


 185:Src/main.c    ****           pwmr = 0;
 186:Src/main.c    ****         }
 187:Src/main.c    ****       #endif //CONTROL_MOTOR_TEST
 188:Src/main.c    ****     #endif //DEBUG_SERIAL_USART3
 189:Src/main.c    ****    // ####### POWEROFF BY POWER-BUTTON #######
 190:Src/main.c    ****    if (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {
 191:Src/main.c    ****      while (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {}
 192:Src/main.c    ****      poweroff();
 193:Src/main.c    ****    }
 194:Src/main.c    ****   }
 195:Src/main.c    **** }
 196:Src/main.c    **** 
 197:Src/main.c    **** #ifdef CONTROL_SERIAL_USART2_DMA
 198:Src/main.c    **** void DMA1_Stream6_IRQHandler(void)
 199:Src/main.c    **** {
 200:Src/main.c    ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 201:Src/main.c    **** }
 202:Src/main.c    **** 
 203:Src/main.c    **** void USART2_IRQHandler(void)
 204:Src/main.c    **** {
 205:Src/main.c    ****   HAL_UART_IRQHandler(&huart2);
 206:Src/main.c    **** }
 207:Src/main.c    **** #endif
 208:Src/main.c    **** 
 209:Src/main.c    **** /** System Clock Configuration
 210:Src/main.c    **** */
 211:Src/main.c    **** void SystemClock_Config(void) {
 102              		.loc 1 211 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
 212:Src/main.c    **** 
 213:Src/main.c    ****   /**Configure the Systick interrupt time
 214:Src/main.c    ****     */
 215:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 111              		.loc 1 215 0
 112 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 113              	.LVL6:
 114 0006 084B     		ldr	r3, .L13
 115 0008 A3FB0030 		umull	r3, r0, r3, r0
 116 000c 8009     		lsrs	r0, r0, #6
 117 000e FFF7FEFF 		bl	HAL_SYSTICK_Config
 118              	.LVL7:
 216:Src/main.c    **** 
 217:Src/main.c    ****   /**Configure the Systick
 218:Src/main.c    ****     */
 219:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 119              		.loc 1 219 0
 120 0012 0420     		movs	r0, #4
 121 0014 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 122              	.LVL8:
 220:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 7


 221:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 123              		.loc 1 221 0
 124 0018 0022     		movs	r2, #0
 125 001a 1146     		mov	r1, r2
 126 001c 4FF0FF30 		mov	r0, #-1
 127 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 128              	.LVL9:
 222:Src/main.c    **** }
 129              		.loc 1 222 0
 130 0024 08BD     		pop	{r3, pc}
 131              	.L14:
 132 0026 00BF     		.align	2
 133              	.L13:
 134 0028 D34D6210 		.word	274877907
 135              		.cfi_endproc
 136              	.LFE128:
 138              		.section	.text.main,"ax",%progbits
 139              		.align	1
 140              		.global	main
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	main:
 147              	.LFB127:
  71:Src/main.c    ****   HAL_Init();
 148              		.loc 1 71 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 48
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 8EB0     		sub	sp, sp, #56
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 64
  72:Src/main.c    **** 
 160              		.loc 1 72 0
 161 0004 FFF7FEFF 		bl	HAL_Init
 162              	.LVL10:
 163              	.LBB3:
  74:Src/main.c    ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 164              		.loc 1 74 0
 165 0008 4D4C     		ldr	r4, .L26
 166 000a A369     		ldr	r3, [r4, #24]
 167 000c 43F00103 		orr	r3, r3, #1
 168 0010 A361     		str	r3, [r4, #24]
 169 0012 A369     		ldr	r3, [r4, #24]
 170 0014 03F00103 		and	r3, r3, #1
 171 0018 0393     		str	r3, [sp, #12]
 172 001a 039B     		ldr	r3, [sp, #12]
 173              	.LBE3:
  75:Src/main.c    ****   /* System interrupt init*/
 174              		.loc 1 75 0
 175 001c 0320     		movs	r0, #3
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 8


 176 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 177              	.LVL11:
  78:Src/main.c    ****   /* BusFault_IRQn interrupt configuration */
 178              		.loc 1 78 0
 179 0022 0022     		movs	r2, #0
 180 0024 1146     		mov	r1, r2
 181 0026 6FF00B00 		mvn	r0, #11
 182 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL12:
  80:Src/main.c    ****   /* UsageFault_IRQn interrupt configuration */
 184              		.loc 1 80 0
 185 002e 0022     		movs	r2, #0
 186 0030 1146     		mov	r1, r2
 187 0032 6FF00A00 		mvn	r0, #10
 188 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 189              	.LVL13:
  82:Src/main.c    ****   /* SVCall_IRQn interrupt configuration */
 190              		.loc 1 82 0
 191 003a 0022     		movs	r2, #0
 192 003c 1146     		mov	r1, r2
 193 003e 6FF00900 		mvn	r0, #9
 194 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 195              	.LVL14:
  84:Src/main.c    ****   /* DebugMonitor_IRQn interrupt configuration */
 196              		.loc 1 84 0
 197 0046 0022     		movs	r2, #0
 198 0048 1146     		mov	r1, r2
 199 004a 6FF00400 		mvn	r0, #4
 200 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 201              	.LVL15:
  86:Src/main.c    ****   /* PendSV_IRQn interrupt configuration */
 202              		.loc 1 86 0
 203 0052 0022     		movs	r2, #0
 204 0054 1146     		mov	r1, r2
 205 0056 6FF00300 		mvn	r0, #3
 206 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207              	.LVL16:
  88:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 208              		.loc 1 88 0
 209 005e 0022     		movs	r2, #0
 210 0060 1146     		mov	r1, r2
 211 0062 6FF00100 		mvn	r0, #1
 212 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL17:
  90:Src/main.c    **** 
 214              		.loc 1 90 0
 215 006a 0022     		movs	r2, #0
 216 006c 1146     		mov	r1, r2
 217 006e 4FF0FF30 		mov	r0, #-1
 218 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL18:
  92:Src/main.c    ****   __HAL_RCC_DMA1_CLK_DISABLE();
 220              		.loc 1 92 0
 221 0076 FFF7FEFF 		bl	SystemClock_Config
 222              	.LVL19:
  93:Src/main.c    **** 
 223              		.loc 1 93 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 9


 224 007a 6369     		ldr	r3, [r4, #20]
 225 007c 23F00103 		bic	r3, r3, #1
 226 0080 6361     		str	r3, [r4, #20]
  95:Src/main.c    ****   MX_TIM_Init();
 227              		.loc 1 95 0
 228 0082 FFF7FEFF 		bl	MX_GPIO_Init
 229              	.LVL20:
  96:Src/main.c    ****   MX_ADC1_Init();
 230              		.loc 1 96 0
 231 0086 FFF7FEFF 		bl	MX_TIM_Init
 232              	.LVL21:
  97:Src/main.c    ****   MX_ADC2_Init();
 233              		.loc 1 97 0
 234 008a FFF7FEFF 		bl	MX_ADC1_Init
 235              	.LVL22:
  98:Src/main.c    **** 
 236              		.loc 1 98 0
 237 008e FFF7FEFF 		bl	MX_ADC2_Init
 238              	.LVL23:
 101:Src/main.c    ****   #endif
 239              		.loc 1 101 0
 240 0092 FFF7FEFF 		bl	UART_Control_Init
 241              	.LVL24:
 111:Src/main.c    ****   #endif
 242              		.loc 1 111 0
 243 0096 FFF7FEFF 		bl	UART_Debug_Init
 244              	.LVL25:
 114:Src/main.c    **** 
 245              		.loc 1 114 0
 246 009a 0122     		movs	r2, #1
 247 009c 2021     		movs	r1, #32
 248 009e 2948     		ldr	r0, .L26+4
 249 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 250              	.LVL26:
 117:Src/main.c    ****  #endif
 251              		.loc 1 117 0
 252 00a4 FFF7FEFF 		bl	HallInterruptinit
 253              	.LVL27:
 120:Src/main.c    ****   HAL_ADC_Start(&hadc2);
 254              		.loc 1 120 0
 255 00a8 2748     		ldr	r0, .L26+8
 256 00aa FFF7FEFF 		bl	HAL_ADC_Start
 257              	.LVL28:
 121:Src/main.c    **** 
 258              		.loc 1 121 0
 259 00ae 2748     		ldr	r0, .L26+12
 260 00b0 FFF7FEFF 		bl	HAL_ADC_Start
 261              	.LVL29:
 123:Src/main.c    ****   ros_init();
 262              		.loc 1 123 0
 263 00b4 FFF7FEFF 		bl	motor_init
 264              	.LVL30:
 124:Src/main.c    **** 
 265              		.loc 1 124 0
 266 00b8 FFF7FEFF 		bl	ros_init
 267              	.LVL31:
 268              	.LBB4:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 10


 127:Src/main.c    ****     buzzerFreq = i;
 269              		.loc 1 127 0
 270 00bc 0824     		movs	r4, #8
 271 00be 05E0     		b	.L16
 272              	.LVL32:
 273              	.L17:
 128:Src/main.c    ****     HAL_Delay(100);
 274              		.loc 1 128 0 discriminator 3
 275 00c0 234B     		ldr	r3, .L26+16
 276 00c2 1C70     		strb	r4, [r3]
 129:Src/main.c    ****   }
 277              		.loc 1 129 0 discriminator 3
 278 00c4 6420     		movs	r0, #100
 279 00c6 FFF7FEFF 		bl	HAL_Delay
 280              	.LVL33:
 127:Src/main.c    ****     buzzerFreq = i;
 281              		.loc 1 127 0 discriminator 3
 282 00ca 013C     		subs	r4, r4, #1
 283              	.LVL34:
 284              	.L16:
 127:Src/main.c    ****     buzzerFreq = i;
 285              		.loc 1 127 0 is_stmt 0 discriminator 1
 286 00cc 002C     		cmp	r4, #0
 287 00ce F7DA     		bge	.L17
 288              	.LBE4:
 131:Src/main.c    **** 
 289              		.loc 1 131 0 is_stmt 1
 290 00d0 1F4B     		ldr	r3, .L26+16
 291 00d2 0022     		movs	r2, #0
 292 00d4 1A70     		strb	r2, [r3]
 133:Src/main.c    ****  
 293              		.loc 1 133 0
 294 00d6 0122     		movs	r2, #1
 295 00d8 0421     		movs	r1, #4
 296 00da 1E48     		ldr	r0, .L26+20
 297 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 298              	.LVL35:
 299              	.L22:
 300              	.LBB5:
 151:Src/main.c    ****     ros_run();
 301              		.loc 1 151 0
 302 00e0 0520     		movs	r0, #5
 303 00e2 FFF7FEFF 		bl	HAL_Delay
 304              	.LVL36:
 152:Src/main.c    **** 
 305              		.loc 1 152 0
 306 00e6 FFF7FEFF 		bl	ros_run
 307              	.LVL37:
 164:Src/main.c    ****       if(pwml != 0) 
 308              		.loc 1 164 0
 309 00ea 0021     		movs	r1, #0
 310 00ec 04A8     		add	r0, sp, #16
 311 00ee FFF7FEFF 		bl	HallInterruptReadPosn
 312              	.LVL38:
 165:Src/main.c    ****       {
 313              		.loc 1 165 0
 314 00f2 194B     		ldr	r3, .L26+24
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 11


 315 00f4 1B68     		ldr	r3, [r3]
 316 00f6 8BB9     		cbnz	r3, .L24
 317              	.L18:
 170:Src/main.c    ****       { 
 318              		.loc 1 170 0
 319 00f8 184B     		ldr	r3, .L26+28
 320 00fa 1B68     		ldr	r3, [r3]
 321 00fc BBB9     		cbnz	r3, .L25
 322              	.L19:
 190:Src/main.c    ****      while (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN)) {}
 323              		.loc 1 190 0
 324 00fe 0221     		movs	r1, #2
 325 0100 1048     		ldr	r0, .L26+4
 326 0102 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 327              	.LVL39:
 328 0106 0028     		cmp	r0, #0
 329 0108 EAD0     		beq	.L22
 330              	.L21:
 191:Src/main.c    ****      poweroff();
 331              		.loc 1 191 0 discriminator 1
 332 010a 0221     		movs	r1, #2
 333 010c 0D48     		ldr	r0, .L26+4
 334 010e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 335              	.LVL40:
 336 0112 0028     		cmp	r0, #0
 337 0114 F9D1     		bne	.L21
 192:Src/main.c    ****    }
 338              		.loc 1 192 0
 339 0116 FFF7FEFF 		bl	poweroff
 340              	.LVL41:
 341              	.LBE5:
 150:Src/main.c    ****     HAL_Delay(DELAY_IN_MAIN_LOOP); //delay in ms
 342              		.loc 1 150 0
 343 011a E1E7     		b	.L22
 344              	.L24:
 345              	.LBB6:
 167:Src/main.c    ****           p.wheel[LEFT].HallPosn,p.wheel[0].HallSpeed, p.wheel[0].HallPosn_mm, p.wheel[0].HallSpeed
 346              		.loc 1 167 0
 347 011c 079B     		ldr	r3, [sp, #28]
 348 011e 0093     		str	r3, [sp]
 349 0120 069B     		ldr	r3, [sp, #24]
 350 0122 059A     		ldr	r2, [sp, #20]
 351 0124 0499     		ldr	r1, [sp, #16]
 352 0126 0E48     		ldr	r0, .L26+32
 353 0128 FFF7FEFF 		bl	printf
 354              	.LVL42:
 355 012c E4E7     		b	.L18
 356              	.L25:
 172:Src/main.c    ****           p.wheel[RIGHT].HallPosn,p.wheel[1].HallSpeed, p.wheel[1].HallPosn_mm, p.wheel[1].HallSpee
 357              		.loc 1 172 0
 358 012e 0C9B     		ldr	r3, [sp, #48]
 359 0130 0093     		str	r3, [sp]
 360 0132 0B9B     		ldr	r3, [sp, #44]
 361 0134 0A9A     		ldr	r2, [sp, #40]
 362 0136 0999     		ldr	r1, [sp, #36]
 363 0138 0A48     		ldr	r0, .L26+36
 364 013a FFF7FEFF 		bl	printf
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 12


 365              	.LVL43:
 366 013e DEE7     		b	.L19
 367              	.L27:
 368              		.align	2
 369              	.L26:
 370 0140 00100240 		.word	1073876992
 371 0144 00080140 		.word	1073809408
 372 0148 00000000 		.word	hadc1
 373 014c 00000000 		.word	hadc2
 374 0150 00000000 		.word	buzzerFreq
 375 0154 000C0140 		.word	1073810432
 376 0158 00000000 		.word	pwml
 377 015c 00000000 		.word	pwmr
 378 0160 00000000 		.word	.LC0
 379 0164 38000000 		.word	.LC1
 380              	.LBE6:
 381              		.cfi_endproc
 382              	.LFE127:
 384              		.section	.text.Error_Handler,"ax",%progbits
 385              		.align	1
 386              		.global	Error_Handler
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	Error_Handler:
 393              	.LFB129:
 223:Src/main.c    **** 
 224:Src/main.c    **** /**
 225:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 226:Src/main.c    ****   * @param  None
 227:Src/main.c    ****   * @retval None
 228:Src/main.c    ****   */
 229:Src/main.c    **** void Error_Handler(void)
 230:Src/main.c    **** {
 394              		.loc 1 230 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 10B5     		push	{r4, lr}
 399              	.LCFI5:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 4, -8
 402              		.cfi_offset 14, -4
 403              	.LVL44:
 404              	.LBB7:
 231:Src/main.c    ****   for (int i = 2; i >= 0; i--) {
 405              		.loc 1 231 0
 406 0002 0224     		movs	r4, #2
 407 0004 09E0     		b	.L29
 408              	.LVL45:
 409              	.L30:
 232:Src/main.c    ****     buzzerFreq = 4;
 410              		.loc 1 232 0 discriminator 3
 411 0006 084B     		ldr	r3, .L32
 412 0008 0422     		movs	r2, #4
 413 000a 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 13


 233:Src/main.c    ****     buzzerPattern = 1;
 414              		.loc 1 233 0 discriminator 3
 415 000c 074B     		ldr	r3, .L32+4
 416 000e 0122     		movs	r2, #1
 417 0010 1A70     		strb	r2, [r3]
 234:Src/main.c    ****     HAL_Delay(5);
 418              		.loc 1 234 0 discriminator 3
 419 0012 0520     		movs	r0, #5
 420 0014 FFF7FEFF 		bl	HAL_Delay
 421              	.LVL46:
 231:Src/main.c    ****     buzzerFreq = 4;
 422              		.loc 1 231 0 discriminator 3
 423 0018 013C     		subs	r4, r4, #1
 424              	.LVL47:
 425              	.L29:
 231:Src/main.c    ****     buzzerFreq = 4;
 426              		.loc 1 231 0 is_stmt 0 discriminator 1
 427 001a 002C     		cmp	r4, #0
 428 001c F3DA     		bge	.L30
 429              	.LBE7:
 235:Src/main.c    ****   }
 236:Src/main.c    ****   buzzerFreq = 0;
 430              		.loc 1 236 0 is_stmt 1
 431 001e 024B     		ldr	r3, .L32
 432 0020 0022     		movs	r2, #0
 433 0022 1A70     		strb	r2, [r3]
 237:Src/main.c    **** }
 434              		.loc 1 237 0
 435 0024 10BD     		pop	{r4, pc}
 436              	.LVL48:
 437              	.L33:
 438 0026 00BF     		.align	2
 439              	.L32:
 440 0028 00000000 		.word	buzzerFreq
 441 002c 00000000 		.word	buzzerPattern
 442              		.cfi_endproc
 443              	.LFE129:
 445              		.global	counter
 446              		.comm	message,100,4
 447              		.global	speed
 448              		.comm	ch_buf,10,4
 449              		.section	.bss.counter,"aw",%nobits
 450              		.align	1
 453              	counter:
 454 0000 0000     		.space	2
 455              		.section	.bss.speed,"aw",%nobits
 456              		.align	1
 457              		.set	.LANCHOR0,. + 0
 460              	speed:
 461 0000 0000     		.space	2
 462              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 463              		.align	2
 464              	.LC0:
 465 0000 6C656674 		.ascii	"left wheel rev %d, rpm %d, pos mm %d, speed mm/s %d"
 465      20776865 
 465      656C2072 
 465      65762025 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 14


 465      642C2072 
 466 0033 0A00     		.ascii	"\012\000"
 467 0035 000000   		.space	3
 468              	.LC1:
 469 0038 72696768 		.ascii	"right wheel rev %d, rpm %d, pos mm %d, speed mm/s %"
 469      74207768 
 469      65656C20 
 469      72657620 
 469      25642C20 
 470 006b 640A00   		.ascii	"d\012\000"
 471              		.text
 472              	.Letext0:
 473              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 474              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 475              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 476              		.file 5 "Inc/system_at32f4xx.h"
 477              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 478              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 479              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 480              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 481              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 482              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 483              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 484              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 485              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 486              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 487              		.file 16 "Inc/defines.h"
 488              		.file 17 "Inc/control_structures.h"
 489              		.file 18 "Inc/hallinterrupts.h"
 490              		.file 19 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal.h"
 491              		.file 20 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 492              		.file 21 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 493              		.file 22 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 494              		.file 23 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/stdio.h"
 495              		.file 24 "Inc/setup.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:17     .text.poweroff:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:24     .text.poweroff:0000000000000000 poweroff
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:85     .text.poweroff:0000000000000030 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:93     .text.SystemClock_Config:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:100    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:134    .text.SystemClock_Config:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:139    .text.main:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:146    .text.main:0000000000000000 main
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:370    .text.main:0000000000000140 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:385    .text.Error_Handler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:392    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:440    .text.Error_Handler:0000000000000028 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:453    .bss.counter:0000000000000000 counter
                            *COM*:0000000000000064 message
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:460    .bss.speed:0000000000000000 speed
                            *COM*:000000000000000a ch_buf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:450    .bss.counter:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:456    .bss.speed:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//cc2ZKwtX.s:463    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_Delay
HAL_GPIO_WritePin
buzzerPattern
buzzerFreq
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_NVIC_SetPriorityGrouping
MX_GPIO_Init
MX_TIM_Init
MX_ADC1_Init
MX_ADC2_Init
UART_Control_Init
UART_Debug_Init
HallInterruptinit
HAL_ADC_Start
motor_init
ros_init
ros_run
HallInterruptReadPosn
HAL_GPIO_ReadPin
printf
hadc1
hadc2
pwml
pwmr
