ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"setup.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.global	MX_GPIO_Init
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/setup.c"
   1:Src/setup.c   **** /*
   2:Src/setup.c   **** * This file is part of the hoverboard-firmware-hack project.
   3:Src/setup.c   **** *
   4:Src/setup.c   **** * Copyright (C) 2017-2018 Rene Hopf <renehopf@mac.com>
   5:Src/setup.c   **** * Copyright (C) 2017-2018 Nico Stute <crinq@crinq.de>
   6:Src/setup.c   **** * Copyright (C) 2017-2018 Niklas Fauth <niklas.fauth@kit.fail>
   7:Src/setup.c   **** *
   8:Src/setup.c   **** * This program is free software: you can redistribute it and/or modify
   9:Src/setup.c   **** * it under the terms of the GNU General Public License as published by
  10:Src/setup.c   **** * the Free Software Foundation, either version 3 of the License, or
  11:Src/setup.c   **** * (at your option) any later version.
  12:Src/setup.c   **** *
  13:Src/setup.c   **** * This program is distributed in the hope that it will be useful,
  14:Src/setup.c   **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/setup.c   **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/setup.c   **** * GNU General Public License for more details.
  17:Src/setup.c   **** *
  18:Src/setup.c   **** * You should have received a copy of the GNU General Public License
  19:Src/setup.c   **** * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/setup.c   **** */
  21:Src/setup.c   **** 
  22:Src/setup.c   **** /*
  23:Src/setup.c   **** tim1 master, enable -> trgo
  24:Src/setup.c   **** tim8, gated slave mode, trgo by tim1 trgo. overflow -> trgo
  25:Src/setup.c   **** adc1,adc2 triggered by tim8 trgo
  26:Src/setup.c   **** adc 1,2 dual mode
  27:Src/setup.c   **** 
  28:Src/setup.c   **** ADC1             ADC2
  29:Src/setup.c   **** R_Blau PC4 CH14  R_Gelb PC5 CH15
  30:Src/setup.c   **** L_Gr√ºn PA0 CH01  L_Blau PC3 CH13
  31:Src/setup.c   **** R_DC PC1 CH11    L_DC PC0 CH10
  32:Src/setup.c   **** BAT   PC2 CH12   L_TX PA2 CH02
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 2


  33:Src/setup.c   **** BAT   PC2 CH12   L_RX PA3 CH03
  34:Src/setup.c   **** 
  35:Src/setup.c   **** pb10 usart3 dma1 channel2/3
  36:Src/setup.c   **** */
  37:Src/setup.c   **** 
  38:Src/setup.c   **** #include "defines.h"
  39:Src/setup.c   **** #include "config.h"
  40:Src/setup.c   **** #include <stdio.h>
  41:Src/setup.c   **** #include "setup.h"
  42:Src/setup.c   **** 
  43:Src/setup.c   **** TIM_HandleTypeDef htim_right;
  44:Src/setup.c   **** TIM_HandleTypeDef htim_left;
  45:Src/setup.c   **** ADC_HandleTypeDef hadc1;
  46:Src/setup.c   **** ADC_HandleTypeDef hadc2;
  47:Src/setup.c   **** I2C_HandleTypeDef hi2c2;
  48:Src/setup.c   **** UART_HandleTypeDef huart2;
  49:Src/setup.c   **** UART_HandleTypeDef huart3;
  50:Src/setup.c   **** 
  51:Src/setup.c   **** 
  52:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_rx;
  53:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_tx;
  54:Src/setup.c   **** volatile adc_buf_t adc_buffer;
  55:Src/setup.c   **** 
  56:Src/setup.c   **** 
  57:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_rx;
  58:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_tx;
  59:Src/setup.c   **** 
  60:Src/setup.c   **** void MX_GPIO_Init(void) {
  27              		.loc 1 60 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 89B0     		sub	sp, sp, #36
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 72
  46              	.LBB2:
  61:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  62:Src/setup.c   **** 
  63:Src/setup.c   ****   /* GPIO Ports Clock Enable */
  64:Src/setup.c   ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 64 0
  48 0006 7D4B     		ldr	r3, .L3
  49 0008 9A69     		ldr	r2, [r3, #24]
  50 000a 42F00402 		orr	r2, r2, #4
  51 000e 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 3


  52 0010 9A69     		ldr	r2, [r3, #24]
  53 0012 02F00402 		and	r2, r2, #4
  54 0016 0192     		str	r2, [sp, #4]
  55 0018 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
  65:Src/setup.c   ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 65 0
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 42F00802 		orr	r2, r2, #8
  61 0020 9A61     		str	r2, [r3, #24]
  62 0022 9A69     		ldr	r2, [r3, #24]
  63 0024 02F00802 		and	r2, r2, #8
  64 0028 0292     		str	r2, [sp, #8]
  65 002a 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
  66:Src/setup.c   ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 66 0
  69 002c 9A69     		ldr	r2, [r3, #24]
  70 002e 42F01002 		orr	r2, r2, #16
  71 0032 9A61     		str	r2, [r3, #24]
  72 0034 9B69     		ldr	r3, [r3, #24]
  73 0036 03F01003 		and	r3, r3, #16
  74 003a 0393     		str	r3, [sp, #12]
  75 003c 039B     		ldr	r3, [sp, #12]
  76              	.LBE4:
  67:Src/setup.c   **** 
  68:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_NOPULL;
  77              		.loc 1 68 0
  78 003e 4FF00008 		mov	r8, #0
  79 0042 CDF81880 		str	r8, [sp, #24]
  69:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 69 0
  81 0046 0227     		movs	r7, #2
  82 0048 0797     		str	r7, [sp, #28]
  70:Src/setup.c   **** 
  71:Src/setup.c   ****   //#ifdef HALL_INTERRUPTS
  72:Src/setup.c   ****     GPIO_InitStruct.Mode  = GPIO_MODE_IT_RISING_FALLING;
  83              		.loc 1 72 0
  84 004a 6D4B     		ldr	r3, .L3+4
  85 004c 0593     		str	r3, [sp, #20]
  73:Src/setup.c   ****   //#endif
  74:Src/setup.c   ****   
  75:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_U_PIN;
  86              		.loc 1 75 0
  87 004e 4FF0200A 		mov	r10, #32
  88 0052 0DEB0A04 		add	r4, sp, r10
  89 0056 44F810AD 		str	r10, [r4, #-16]!
  76:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_U_PORT, &GPIO_InitStruct);
  90              		.loc 1 76 0
  91 005a 2146     		mov	r1, r4
  92 005c 6948     		ldr	r0, .L3+8
  93 005e FFF7FEFF 		bl	HAL_GPIO_Init
  94              	.LVL0:
  77:Src/setup.c   **** 
  78:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_V_PIN;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 4


  95              		.loc 1 78 0
  96 0062 4023     		movs	r3, #64
  97 0064 0493     		str	r3, [sp, #16]
  79:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_V_PORT, &GPIO_InitStruct);
  98              		.loc 1 79 0
  99 0066 2146     		mov	r1, r4
 100 0068 6648     		ldr	r0, .L3+8
 101 006a FFF7FEFF 		bl	HAL_GPIO_Init
 102              	.LVL1:
  80:Src/setup.c   **** 
  81:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_W_PIN;
 103              		.loc 1 81 0
 104 006e 8025     		movs	r5, #128
 105 0070 0495     		str	r5, [sp, #16]
  82:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_W_PORT, &GPIO_InitStruct);
 106              		.loc 1 82 0
 107 0072 2146     		mov	r1, r4
 108 0074 6348     		ldr	r0, .L3+8
 109 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 110              	.LVL2:
  83:Src/setup.c   **** 
  84:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_U_PIN;
 111              		.loc 1 84 0
 112 007a 4FF48063 		mov	r3, #1024
 113 007e 0493     		str	r3, [sp, #16]
  85:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_U_PORT, &GPIO_InitStruct);
 114              		.loc 1 85 0
 115 0080 2146     		mov	r1, r4
 116 0082 6148     		ldr	r0, .L3+12
 117 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL3:
  86:Src/setup.c   **** 
  87:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_V_PIN;
 119              		.loc 1 87 0
 120 0088 4FF40063 		mov	r3, #2048
 121 008c 0493     		str	r3, [sp, #16]
  88:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_V_PORT, &GPIO_InitStruct);
 122              		.loc 1 88 0
 123 008e 2146     		mov	r1, r4
 124 0090 5D48     		ldr	r0, .L3+12
 125 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL4:
  89:Src/setup.c   **** 
  90:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_W_PIN;
 127              		.loc 1 90 0
 128 0096 4FF48056 		mov	r6, #4096
 129 009a 0496     		str	r6, [sp, #16]
  91:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_W_PORT, &GPIO_InitStruct);
 130              		.loc 1 91 0
 131 009c 2146     		mov	r1, r4
 132 009e 5A48     		ldr	r0, .L3+12
 133 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL5:
  92:Src/setup.c   **** 
  93:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_INPUT;
 135              		.loc 1 93 0
 136 00a4 CDF81480 		str	r8, [sp, #20]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 5


  94:Src/setup.c   **** 
  95:Src/setup.c   ****   GPIO_InitStruct.Pin = CHARGER_PIN;
 137              		.loc 1 95 0
 138 00a8 0496     		str	r6, [sp, #16]
  96:Src/setup.c   ****   HAL_GPIO_Init(CHARGER_PORT, &GPIO_InitStruct);
 139              		.loc 1 96 0
 140 00aa 2146     		mov	r1, r4
 141 00ac 5748     		ldr	r0, .L3+16
 142 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL6:
  97:Src/setup.c   **** 
  98:Src/setup.c   ****   GPIO_InitStruct.Pin = BUTTON_PIN;
 144              		.loc 1 98 0
 145 00b2 0497     		str	r7, [sp, #16]
  99:Src/setup.c   ****   HAL_GPIO_Init(BUTTON_PORT, &GPIO_InitStruct);
 146              		.loc 1 99 0
 147 00b4 2146     		mov	r1, r4
 148 00b6 5548     		ldr	r0, .L3+16
 149 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL7:
 100:Src/setup.c   **** 
 101:Src/setup.c   **** 
 102:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 151              		.loc 1 102 0
 152 00bc 4FF00108 		mov	r8, #1
 153 00c0 CDF81480 		str	r8, [sp, #20]
 103:Src/setup.c   **** 
 104:Src/setup.c   ****   GPIO_InitStruct.Pin = LED_PIN;
 154              		.loc 1 104 0
 155 00c4 4FF00409 		mov	r9, #4
 156 00c8 CDF81090 		str	r9, [sp, #16]
 105:Src/setup.c   ****   HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);
 157              		.loc 1 105 0
 158 00cc 2146     		mov	r1, r4
 159 00ce 4D48     		ldr	r0, .L3+8
 160 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL8:
 106:Src/setup.c   **** 
 107:Src/setup.c   ****   GPIO_InitStruct.Pin = BUZZER_PIN;
 162              		.loc 1 107 0
 163 00d4 1026     		movs	r6, #16
 164 00d6 0496     		str	r6, [sp, #16]
 108:Src/setup.c   ****   HAL_GPIO_Init(BUZZER_PORT, &GPIO_InitStruct);
 165              		.loc 1 108 0
 166 00d8 2146     		mov	r1, r4
 167 00da 4C48     		ldr	r0, .L3+16
 168 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL9:
 109:Src/setup.c   **** 
 110:Src/setup.c   ****   GPIO_InitStruct.Pin = OFF_PIN;
 170              		.loc 1 110 0
 171 00e0 CDF810A0 		str	r10, [sp, #16]
 111:Src/setup.c   ****   HAL_GPIO_Init(OFF_PORT, &GPIO_InitStruct);
 172              		.loc 1 111 0
 173 00e4 2146     		mov	r1, r4
 174 00e6 4948     		ldr	r0, .L3+16
 175 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 6


 176              	.LVL10:
 112:Src/setup.c   **** 
 113:Src/setup.c   **** 
 114:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 177              		.loc 1 114 0
 178 00ec 0323     		movs	r3, #3
 179 00ee 0593     		str	r3, [sp, #20]
 115:Src/setup.c   **** 
 116:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_DC_CUR_PIN;
 180              		.loc 1 116 0
 181 00f0 CDF81080 		str	r8, [sp, #16]
 117:Src/setup.c   ****   HAL_GPIO_Init(LEFT_DC_CUR_PORT, &GPIO_InitStruct);
 182              		.loc 1 117 0
 183 00f4 2146     		mov	r1, r4
 184 00f6 4448     		ldr	r0, .L3+12
 185 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL11:
 118:Src/setup.c   **** 
 119:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_U_CUR_PIN;
 187              		.loc 1 119 0
 188 00fc CDF81080 		str	r8, [sp, #16]
 120:Src/setup.c   ****   HAL_GPIO_Init(LEFT_U_CUR_PORT, &GPIO_InitStruct);
 189              		.loc 1 120 0
 190 0100 2146     		mov	r1, r4
 191 0102 4248     		ldr	r0, .L3+16
 192 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL12:
 121:Src/setup.c   **** 
 122:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_V_CUR_PIN;
 194              		.loc 1 122 0
 195 0108 4FF0080B 		mov	fp, #8
 196 010c CDF810B0 		str	fp, [sp, #16]
 123:Src/setup.c   ****   HAL_GPIO_Init(LEFT_V_CUR_PORT, &GPIO_InitStruct);
 197              		.loc 1 123 0
 198 0110 2146     		mov	r1, r4
 199 0112 3D48     		ldr	r0, .L3+12
 200 0114 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL13:
 124:Src/setup.c   **** 
 125:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_DC_CUR_PIN;
 202              		.loc 1 125 0
 203 0118 0497     		str	r7, [sp, #16]
 126:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_DC_CUR_PORT, &GPIO_InitStruct);
 204              		.loc 1 126 0
 205 011a 2146     		mov	r1, r4
 206 011c 3A48     		ldr	r0, .L3+12
 207 011e FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL14:
 127:Src/setup.c   **** 
 128:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_U_CUR_PIN;
 209              		.loc 1 128 0
 210 0122 0496     		str	r6, [sp, #16]
 129:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_U_CUR_PORT, &GPIO_InitStruct);
 211              		.loc 1 129 0
 212 0124 2146     		mov	r1, r4
 213 0126 3848     		ldr	r0, .L3+12
 214 0128 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 7


 215              	.LVL15:
 130:Src/setup.c   **** 
 131:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_V_CUR_PIN;
 216              		.loc 1 131 0
 217 012c CDF810A0 		str	r10, [sp, #16]
 132:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_V_CUR_PORT, &GPIO_InitStruct);
 218              		.loc 1 132 0
 219 0130 2146     		mov	r1, r4
 220 0132 3548     		ldr	r0, .L3+12
 221 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 222              	.LVL16:
 133:Src/setup.c   **** 
 134:Src/setup.c   ****   GPIO_InitStruct.Pin = DCLINK_PIN;
 223              		.loc 1 134 0
 224 0138 CDF81090 		str	r9, [sp, #16]
 135:Src/setup.c   ****   HAL_GPIO_Init(DCLINK_PORT, &GPIO_InitStruct);
 225              		.loc 1 135 0
 226 013c 2146     		mov	r1, r4
 227 013e 3248     		ldr	r0, .L3+12
 228 0140 FFF7FEFF 		bl	HAL_GPIO_Init
 229              	.LVL17:
 136:Src/setup.c   **** 
 137:Src/setup.c   ****   //Analog in
 138:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 230              		.loc 1 138 0
 231 0144 CDF810B0 		str	fp, [sp, #16]
 139:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 232              		.loc 1 139 0
 233 0148 2146     		mov	r1, r4
 234 014a 3048     		ldr	r0, .L3+16
 235 014c FFF7FEFF 		bl	HAL_GPIO_Init
 236              	.LVL18:
 140:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 237              		.loc 1 140 0
 238 0150 CDF81090 		str	r9, [sp, #16]
 141:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 239              		.loc 1 141 0
 240 0154 2146     		mov	r1, r4
 241 0156 2D48     		ldr	r0, .L3+16
 242 0158 FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL19:
 142:Src/setup.c   **** 
 143:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 244              		.loc 1 143 0
 245 015c 0597     		str	r7, [sp, #20]
 144:Src/setup.c   **** 
 145:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UH_PIN;
 246              		.loc 1 145 0
 247 015e 4023     		movs	r3, #64
 248 0160 0493     		str	r3, [sp, #16]
 146:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UH_PORT, &GPIO_InitStruct);
 249              		.loc 1 146 0
 250 0162 2146     		mov	r1, r4
 251 0164 2848     		ldr	r0, .L3+12
 252 0166 FFF7FEFF 		bl	HAL_GPIO_Init
 253              	.LVL20:
 147:Src/setup.c   **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 8


 148:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VH_PIN;
 254              		.loc 1 148 0
 255 016a 0495     		str	r5, [sp, #16]
 149:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VH_PORT, &GPIO_InitStruct);
 256              		.loc 1 149 0
 257 016c 2146     		mov	r1, r4
 258 016e 2648     		ldr	r0, .L3+12
 259 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 260              	.LVL21:
 150:Src/setup.c   **** 
 151:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WH_PIN;
 261              		.loc 1 151 0
 262 0174 4FF48079 		mov	r9, #256
 263 0178 CDF81090 		str	r9, [sp, #16]
 152:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WH_PORT, &GPIO_InitStruct);
 264              		.loc 1 152 0
 265 017c 2146     		mov	r1, r4
 266 017e 2248     		ldr	r0, .L3+12
 267 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 268              	.LVL22:
 153:Src/setup.c   **** 
 154:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UL_PIN;
 269              		.loc 1 154 0
 270 0184 0495     		str	r5, [sp, #16]
 155:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UL_PORT, &GPIO_InitStruct);
 271              		.loc 1 155 0
 272 0186 2146     		mov	r1, r4
 273 0188 2048     		ldr	r0, .L3+16
 274 018a FFF7FEFF 		bl	HAL_GPIO_Init
 275              	.LVL23:
 156:Src/setup.c   **** 
 157:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VL_PIN;
 276              		.loc 1 157 0
 277 018e CDF81080 		str	r8, [sp, #16]
 158:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VL_PORT, &GPIO_InitStruct);
 278              		.loc 1 158 0
 279 0192 2146     		mov	r1, r4
 280 0194 1B48     		ldr	r0, .L3+8
 281 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL24:
 159:Src/setup.c   **** 
 160:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WL_PIN;
 283              		.loc 1 160 0
 284 019a 0497     		str	r7, [sp, #16]
 161:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WL_PORT, &GPIO_InitStruct);
 285              		.loc 1 161 0
 286 019c 2146     		mov	r1, r4
 287 019e 1948     		ldr	r0, .L3+8
 288 01a0 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL25:
 162:Src/setup.c   **** 
 163:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UH_PIN;
 290              		.loc 1 163 0
 291 01a4 CDF81090 		str	r9, [sp, #16]
 164:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UH_PORT, &GPIO_InitStruct);
 292              		.loc 1 164 0
 293 01a8 2146     		mov	r1, r4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 9


 294 01aa 1848     		ldr	r0, .L3+16
 295 01ac FFF7FEFF 		bl	HAL_GPIO_Init
 296              	.LVL26:
 165:Src/setup.c   **** 
 166:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VH_PIN;
 297              		.loc 1 166 0
 298 01b0 4FF40073 		mov	r3, #512
 299 01b4 0493     		str	r3, [sp, #16]
 167:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VH_PORT, &GPIO_InitStruct);
 300              		.loc 1 167 0
 301 01b6 2146     		mov	r1, r4
 302 01b8 1448     		ldr	r0, .L3+16
 303 01ba FFF7FEFF 		bl	HAL_GPIO_Init
 304              	.LVL27:
 168:Src/setup.c   **** 
 169:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WH_PIN;
 305              		.loc 1 169 0
 306 01be 4FF48063 		mov	r3, #1024
 307 01c2 0493     		str	r3, [sp, #16]
 170:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WH_PORT, &GPIO_InitStruct);
 308              		.loc 1 170 0
 309 01c4 2146     		mov	r1, r4
 310 01c6 1148     		ldr	r0, .L3+16
 311 01c8 FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL28:
 171:Src/setup.c   **** 
 172:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UL_PIN;
 313              		.loc 1 172 0
 314 01cc 4FF40053 		mov	r3, #8192
 315 01d0 0493     		str	r3, [sp, #16]
 173:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UL_PORT, &GPIO_InitStruct);
 316              		.loc 1 173 0
 317 01d2 2146     		mov	r1, r4
 318 01d4 0B48     		ldr	r0, .L3+8
 319 01d6 FFF7FEFF 		bl	HAL_GPIO_Init
 320              	.LVL29:
 174:Src/setup.c   **** 
 175:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VL_PIN;
 321              		.loc 1 175 0
 322 01da 4FF48043 		mov	r3, #16384
 323 01de 0493     		str	r3, [sp, #16]
 176:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VL_PORT, &GPIO_InitStruct);
 324              		.loc 1 176 0
 325 01e0 2146     		mov	r1, r4
 326 01e2 0848     		ldr	r0, .L3+8
 327 01e4 FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL30:
 177:Src/setup.c   **** 
 178:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WL_PIN;
 329              		.loc 1 178 0
 330 01e8 4FF40043 		mov	r3, #32768
 331 01ec 0493     		str	r3, [sp, #16]
 179:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WL_PORT, &GPIO_InitStruct);
 332              		.loc 1 179 0
 333 01ee 2146     		mov	r1, r4
 334 01f0 0448     		ldr	r0, .L3+8
 335 01f2 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 10


 336              	.LVL31:
 180:Src/setup.c   **** 
 181:Src/setup.c   **** }
 337              		.loc 1 181 0
 338 01f6 09B0     		add	sp, sp, #36
 339              	.LCFI2:
 340              		.cfi_def_cfa_offset 36
 341              		@ sp needed
 342 01f8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 343              	.L4:
 344              		.align	2
 345              	.L3:
 346 01fc 00100240 		.word	1073876992
 347 0200 00003110 		.word	271646720
 348 0204 000C0140 		.word	1073810432
 349 0208 00100140 		.word	1073811456
 350 020c 00080140 		.word	1073809408
 351              		.cfi_endproc
 352              	.LFE126:
 354              		.section	.text.Hall_Sensor_Init,"ax",%progbits
 355              		.align	1
 356              		.global	Hall_Sensor_Init
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	Hall_Sensor_Init:
 363              	.LFB127:
 182:Src/setup.c   **** 
 183:Src/setup.c   **** void Hall_Sensor_Init(void) {
 364              		.loc 1 183 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI3:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 184:Src/setup.c   ****     // enable IRQs for type hall effect sensor GPIOs.
 185:Src/setup.c   ****     HAL_NVIC_SetPriority(EXTI9_5_IRQn, 3, 0);
 373              		.loc 1 185 0
 374 0002 0022     		movs	r2, #0
 375 0004 0321     		movs	r1, #3
 376 0006 1720     		movs	r0, #23
 377 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 378              	.LVL32:
 186:Src/setup.c   ****     HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 379              		.loc 1 186 0
 380 000c 1720     		movs	r0, #23
 381 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 382              	.LVL33:
 187:Src/setup.c   ****     HAL_NVIC_SetPriority(EXTI15_10_IRQn, 3, 0);
 383              		.loc 1 187 0
 384 0012 0022     		movs	r2, #0
 385 0014 0321     		movs	r1, #3
 386 0016 2820     		movs	r0, #40
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 11


 387 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 388              	.LVL34:
 188:Src/setup.c   ****     HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 389              		.loc 1 188 0
 390 001c 2820     		movs	r0, #40
 391 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 392              	.LVL35:
 189:Src/setup.c   **** }
 393              		.loc 1 189 0
 394 0022 08BD     		pop	{r3, pc}
 395              		.cfi_endproc
 396              	.LFE127:
 398              		.section	.text.MX_TIM_Init,"ax",%progbits
 399              		.align	1
 400              		.global	MX_TIM_Init
 401              		.syntax unified
 402              		.thumb
 403              		.thumb_func
 404              		.fpu fpv4-sp-d16
 406              	MX_TIM_Init:
 407              	.LFB128:
 190:Src/setup.c   **** 
 191:Src/setup.c   **** void MX_TIM_Init(void) {
 408              		.loc 1 191 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 96
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 413              	.LCFI4:
 414              		.cfi_def_cfa_offset 36
 415              		.cfi_offset 4, -36
 416              		.cfi_offset 5, -32
 417              		.cfi_offset 6, -28
 418              		.cfi_offset 7, -24
 419              		.cfi_offset 8, -20
 420              		.cfi_offset 9, -16
 421              		.cfi_offset 10, -12
 422              		.cfi_offset 11, -8
 423              		.cfi_offset 14, -4
 424 0004 99B0     		sub	sp, sp, #100
 425              	.LCFI5:
 426              		.cfi_def_cfa_offset 136
 427              	.LBB5:
 192:Src/setup.c   ****   __HAL_RCC_TIM1_CLK_ENABLE();
 428              		.loc 1 192 0
 429 0006 794B     		ldr	r3, .L9
 430 0008 9A69     		ldr	r2, [r3, #24]
 431 000a 42F40062 		orr	r2, r2, #2048
 432 000e 9A61     		str	r2, [r3, #24]
 433 0010 9A69     		ldr	r2, [r3, #24]
 434 0012 02F40062 		and	r2, r2, #2048
 435 0016 0192     		str	r2, [sp, #4]
 436 0018 019A     		ldr	r2, [sp, #4]
 437              	.LBE5:
 438              	.LBB6:
 193:Src/setup.c   ****   __HAL_RCC_TIM8_CLK_ENABLE();
 439              		.loc 1 193 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 12


 440 001a 9A69     		ldr	r2, [r3, #24]
 441 001c 42F40052 		orr	r2, r2, #8192
 442 0020 9A61     		str	r2, [r3, #24]
 443 0022 9B69     		ldr	r3, [r3, #24]
 444 0024 03F40053 		and	r3, r3, #8192
 445 0028 0293     		str	r3, [sp, #8]
 446 002a 029B     		ldr	r3, [sp, #8]
 447              	.LBE6:
 194:Src/setup.c   **** 
 195:Src/setup.c   ****   TIM_MasterConfigTypeDef sMasterConfig;
 196:Src/setup.c   ****   TIM_OC_InitTypeDef sConfigOC;
 197:Src/setup.c   ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 198:Src/setup.c   ****   TIM_SlaveConfigTypeDef sTimConfig;
 199:Src/setup.c   **** 
 200:Src/setup.c   ****   htim_right.Instance               = RIGHT_TIM;
 448              		.loc 1 200 0
 449 002c 704E     		ldr	r6, .L9+4
 450 002e 714F     		ldr	r7, .L9+8
 451 0030 3760     		str	r7, [r6]
 201:Src/setup.c   ****   htim_right.Init.Prescaler         = 0;
 452              		.loc 1 201 0
 453 0032 0024     		movs	r4, #0
 454 0034 7460     		str	r4, [r6, #4]
 202:Src/setup.c   ****   htim_right.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 455              		.loc 1 202 0
 456 0036 4FF02008 		mov	r8, #32
 457 003a C6F80880 		str	r8, [r6, #8]
 203:Src/setup.c   ****   htim_right.Init.Period            = SystemCoreClock / 2 / PWM_FREQ;
 458              		.loc 1 203 0
 459 003e DFF8BCB1 		ldr	fp, .L9+16
 460 0042 DBF80030 		ldr	r3, [fp]
 461 0046 DFF8B8A1 		ldr	r10, .L9+20
 462 004a AAFB0323 		umull	r2, r3, r10, r3
 463 004e DB0A     		lsrs	r3, r3, #11
 464 0050 F360     		str	r3, [r6, #12]
 204:Src/setup.c   ****   htim_right.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 465              		.loc 1 204 0
 466 0052 3461     		str	r4, [r6, #16]
 205:Src/setup.c   ****   htim_right.Init.RepetitionCounter = 0;
 467              		.loc 1 205 0
 468 0054 7461     		str	r4, [r6, #20]
 206:Src/setup.c   ****   htim_right.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 469              		.loc 1 206 0
 470 0056 B461     		str	r4, [r6, #24]
 207:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_right);
 471              		.loc 1 207 0
 472 0058 3046     		mov	r0, r6
 473 005a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 474              	.LVL36:
 208:Src/setup.c   **** 
 209:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
 475              		.loc 1 209 0
 476 005e 1023     		movs	r3, #16
 477 0060 1693     		str	r3, [sp, #88]
 210:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 478              		.loc 1 210 0
 479 0062 1794     		str	r4, [sp, #92]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 13


 211:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_right, &sMasterConfig);
 480              		.loc 1 211 0
 481 0064 16A9     		add	r1, sp, #88
 482 0066 3046     		mov	r0, r6
 483 0068 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 484              	.LVL37:
 212:Src/setup.c   **** 
 213:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 485              		.loc 1 213 0
 486 006c 6023     		movs	r3, #96
 487 006e 0F93     		str	r3, [sp, #60]
 214:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 488              		.loc 1 214 0
 489 0070 1094     		str	r4, [sp, #64]
 215:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 490              		.loc 1 215 0
 491 0072 1194     		str	r4, [sp, #68]
 216:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 492              		.loc 1 216 0
 493 0074 0823     		movs	r3, #8
 494 0076 1293     		str	r3, [sp, #72]
 217:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 495              		.loc 1 217 0
 496 0078 1394     		str	r4, [sp, #76]
 218:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 497              		.loc 1 218 0
 498 007a 1494     		str	r4, [sp, #80]
 219:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 499              		.loc 1 219 0
 500 007c 4FF40073 		mov	r3, #512
 501 0080 1593     		str	r3, [sp, #84]
 220:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_1);
 502              		.loc 1 220 0
 503 0082 2246     		mov	r2, r4
 504 0084 0FA9     		add	r1, sp, #60
 505 0086 3046     		mov	r0, r6
 506 0088 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 507              	.LVL38:
 221:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_2);
 508              		.loc 1 221 0
 509 008c 0422     		movs	r2, #4
 510 008e 0FA9     		add	r1, sp, #60
 511 0090 3046     		mov	r0, r6
 512 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 513              	.LVL39:
 222:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_3);
 514              		.loc 1 222 0
 515 0096 0822     		movs	r2, #8
 516 0098 0FA9     		add	r1, sp, #60
 517 009a 3046     		mov	r0, r6
 518 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 519              	.LVL40:
 223:Src/setup.c   **** 
 224:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 520              		.loc 1 224 0
 521 00a0 4FF40063 		mov	r3, #2048
 522 00a4 0893     		str	r3, [sp, #32]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 14


 225:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 523              		.loc 1 225 0
 524 00a6 4FF48063 		mov	r3, #1024
 525 00aa 0993     		str	r3, [sp, #36]
 226:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 526              		.loc 1 226 0
 527 00ac 0A94     		str	r4, [sp, #40]
 227:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 528              		.loc 1 227 0
 529 00ae CDF82C80 		str	r8, [sp, #44]
 228:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 530              		.loc 1 228 0
 531 00b2 0C94     		str	r4, [sp, #48]
 229:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 532              		.loc 1 229 0
 533 00b4 0D94     		str	r4, [sp, #52]
 230:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 534              		.loc 1 230 0
 535 00b6 0E94     		str	r4, [sp, #56]
 231:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_right, &sBreakDeadTimeConfig);
 536              		.loc 1 231 0
 537 00b8 0DEB0801 		add	r1, sp, r8
 538 00bc 3046     		mov	r0, r6
 539 00be FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 540              	.LVL41:
 232:Src/setup.c   **** 
 233:Src/setup.c   ****   htim_left.Instance               = LEFT_TIM;
 541              		.loc 1 233 0
 542 00c2 4D4D     		ldr	r5, .L9+12
 543 00c4 DFF83C91 		ldr	r9, .L9+24
 544 00c8 C5F80090 		str	r9, [r5]
 234:Src/setup.c   ****   htim_left.Init.Prescaler         = 0;
 545              		.loc 1 234 0
 546 00cc 6C60     		str	r4, [r5, #4]
 235:Src/setup.c   ****   htim_left.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 547              		.loc 1 235 0
 548 00ce C5F80880 		str	r8, [r5, #8]
 236:Src/setup.c   ****   htim_left.Init.Period            = SystemCoreClock / 2 / PWM_FREQ;
 549              		.loc 1 236 0
 550 00d2 DBF80030 		ldr	r3, [fp]
 551 00d6 AAFB033A 		umull	r3, r10, r10, r3
 552 00da 4FEADA23 		lsr	r3, r10, #11
 553 00de EB60     		str	r3, [r5, #12]
 237:Src/setup.c   ****   htim_left.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 554              		.loc 1 237 0
 555 00e0 2C61     		str	r4, [r5, #16]
 238:Src/setup.c   ****   htim_left.Init.RepetitionCounter = 0;
 556              		.loc 1 238 0
 557 00e2 6C61     		str	r4, [r5, #20]
 239:Src/setup.c   ****   htim_left.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 558              		.loc 1 239 0
 559 00e4 AC61     		str	r4, [r5, #24]
 240:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_left);
 560              		.loc 1 240 0
 561 00e6 2846     		mov	r0, r5
 562 00e8 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 563              	.LVL42:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 15


 241:Src/setup.c   **** 
 242:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 564              		.loc 1 242 0
 565 00ec CDF85880 		str	r8, [sp, #88]
 243:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_ENABLE;
 566              		.loc 1 243 0
 567 00f0 8023     		movs	r3, #128
 568 00f2 1793     		str	r3, [sp, #92]
 244:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_left, &sMasterConfig);
 569              		.loc 1 244 0
 570 00f4 16A9     		add	r1, sp, #88
 571 00f6 2846     		mov	r0, r5
 572 00f8 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 573              	.LVL43:
 245:Src/setup.c   **** 
 246:Src/setup.c   ****   sTimConfig.InputTrigger = TIM_TS_ITR0;
 574              		.loc 1 246 0
 575 00fc 0494     		str	r4, [sp, #16]
 247:Src/setup.c   ****   sTimConfig.SlaveMode    = TIM_SLAVEMODE_GATED;
 576              		.loc 1 247 0
 577 00fe 18A9     		add	r1, sp, #96
 578 0100 0523     		movs	r3, #5
 579 0102 41F8543D 		str	r3, [r1, #-84]!
 248:Src/setup.c   ****   HAL_TIM_SlaveConfigSynchronization(&htim_left, &sTimConfig);
 580              		.loc 1 248 0
 581 0106 2846     		mov	r0, r5
 582 0108 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchronization
 583              	.LVL44:
 249:Src/setup.c   **** 
 250:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 584              		.loc 1 250 0
 585 010c 6023     		movs	r3, #96
 586 010e 0F93     		str	r3, [sp, #60]
 251:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 587              		.loc 1 251 0
 588 0110 1094     		str	r4, [sp, #64]
 252:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 589              		.loc 1 252 0
 590 0112 1194     		str	r4, [sp, #68]
 253:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 591              		.loc 1 253 0
 592 0114 0823     		movs	r3, #8
 593 0116 1293     		str	r3, [sp, #72]
 254:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 594              		.loc 1 254 0
 595 0118 1394     		str	r4, [sp, #76]
 255:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 596              		.loc 1 255 0
 597 011a 1494     		str	r4, [sp, #80]
 256:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 598              		.loc 1 256 0
 599 011c 4FF40073 		mov	r3, #512
 600 0120 1593     		str	r3, [sp, #84]
 257:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_1);
 601              		.loc 1 257 0
 602 0122 2246     		mov	r2, r4
 603 0124 0FA9     		add	r1, sp, #60
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 16


 604 0126 2846     		mov	r0, r5
 605 0128 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 606              	.LVL45:
 258:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_2);
 607              		.loc 1 258 0
 608 012c 0422     		movs	r2, #4
 609 012e 0FA9     		add	r1, sp, #60
 610 0130 2846     		mov	r0, r5
 611 0132 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 612              	.LVL46:
 259:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_3);
 613              		.loc 1 259 0
 614 0136 0822     		movs	r2, #8
 615 0138 0FA9     		add	r1, sp, #60
 616 013a 2846     		mov	r0, r5
 617 013c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 618              	.LVL47:
 260:Src/setup.c   **** 
 261:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 619              		.loc 1 261 0
 620 0140 4FF40063 		mov	r3, #2048
 621 0144 0893     		str	r3, [sp, #32]
 262:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 622              		.loc 1 262 0
 623 0146 4FF48063 		mov	r3, #1024
 624 014a 0993     		str	r3, [sp, #36]
 263:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 625              		.loc 1 263 0
 626 014c 0A94     		str	r4, [sp, #40]
 264:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 627              		.loc 1 264 0
 628 014e CDF82C80 		str	r8, [sp, #44]
 265:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 629              		.loc 1 265 0
 630 0152 0C94     		str	r4, [sp, #48]
 266:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 631              		.loc 1 266 0
 632 0154 0D94     		str	r4, [sp, #52]
 267:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 633              		.loc 1 267 0
 634 0156 0E94     		str	r4, [sp, #56]
 268:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_left, &sBreakDeadTimeConfig);
 635              		.loc 1 268 0
 636 0158 0DEB0801 		add	r1, sp, r8
 637 015c 2846     		mov	r0, r5
 638 015e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 639              	.LVL48:
 269:Src/setup.c   **** 
 270:Src/setup.c   ****   LEFT_TIM->BDTR &= ~TIM_BDTR_MOE;
 640              		.loc 1 270 0
 641 0162 D9F84430 		ldr	r3, [r9, #68]
 642 0166 23F40043 		bic	r3, r3, #32768
 643 016a C9F84430 		str	r3, [r9, #68]
 271:Src/setup.c   ****   RIGHT_TIM->BDTR &= ~TIM_BDTR_MOE;
 644              		.loc 1 271 0
 645 016e 7B6C     		ldr	r3, [r7, #68]
 646 0170 23F40043 		bic	r3, r3, #32768
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 17


 647 0174 7B64     		str	r3, [r7, #68]
 272:Src/setup.c   **** 
 273:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_1);
 648              		.loc 1 273 0
 649 0176 2146     		mov	r1, r4
 650 0178 2846     		mov	r0, r5
 651 017a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 652              	.LVL49:
 274:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_2);
 653              		.loc 1 274 0
 654 017e 0421     		movs	r1, #4
 655 0180 2846     		mov	r0, r5
 656 0182 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 657              	.LVL50:
 275:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_3);
 658              		.loc 1 275 0
 659 0186 0821     		movs	r1, #8
 660 0188 2846     		mov	r0, r5
 661 018a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 662              	.LVL51:
 276:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_1);
 663              		.loc 1 276 0
 664 018e 2146     		mov	r1, r4
 665 0190 2846     		mov	r0, r5
 666 0192 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 667              	.LVL52:
 277:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_2);
 668              		.loc 1 277 0
 669 0196 0421     		movs	r1, #4
 670 0198 2846     		mov	r0, r5
 671 019a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 672              	.LVL53:
 278:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_3);
 673              		.loc 1 278 0
 674 019e 0821     		movs	r1, #8
 675 01a0 2846     		mov	r0, r5
 676 01a2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 677              	.LVL54:
 279:Src/setup.c   **** 
 280:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_1);
 678              		.loc 1 280 0
 679 01a6 2146     		mov	r1, r4
 680 01a8 3046     		mov	r0, r6
 681 01aa FFF7FEFF 		bl	HAL_TIM_PWM_Start
 682              	.LVL55:
 281:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_2);
 683              		.loc 1 281 0
 684 01ae 0421     		movs	r1, #4
 685 01b0 3046     		mov	r0, r6
 686 01b2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 687              	.LVL56:
 282:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_3);
 688              		.loc 1 282 0
 689 01b6 0821     		movs	r1, #8
 690 01b8 3046     		mov	r0, r6
 691 01ba FFF7FEFF 		bl	HAL_TIM_PWM_Start
 692              	.LVL57:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 18


 283:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_1);
 693              		.loc 1 283 0
 694 01be 2146     		mov	r1, r4
 695 01c0 3046     		mov	r0, r6
 696 01c2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 697              	.LVL58:
 284:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_2);
 698              		.loc 1 284 0
 699 01c6 0421     		movs	r1, #4
 700 01c8 3046     		mov	r0, r6
 701 01ca FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 702              	.LVL59:
 285:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_3);
 703              		.loc 1 285 0
 704 01ce 0821     		movs	r1, #8
 705 01d0 3046     		mov	r0, r6
 706 01d2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 707              	.LVL60:
 286:Src/setup.c   **** 
 287:Src/setup.c   ****   htim_left.Instance->RCR = 1;
 708              		.loc 1 287 0
 709 01d6 2B68     		ldr	r3, [r5]
 710 01d8 0122     		movs	r2, #1
 711 01da 1A63     		str	r2, [r3, #48]
 288:Src/setup.c   **** 
 289:Src/setup.c   ****   __HAL_TIM_ENABLE(&htim_right);
 712              		.loc 1 289 0
 713 01dc 3268     		ldr	r2, [r6]
 714 01de 1368     		ldr	r3, [r2]
 715 01e0 43F00103 		orr	r3, r3, #1
 716 01e4 1360     		str	r3, [r2]
 290:Src/setup.c   **** }
 717              		.loc 1 290 0
 718 01e6 19B0     		add	sp, sp, #100
 719              	.LCFI6:
 720              		.cfi_def_cfa_offset 36
 721              		@ sp needed
 722 01e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 723              	.L10:
 724              		.align	2
 725              	.L9:
 726 01ec 00100240 		.word	1073876992
 727 01f0 00000000 		.word	htim_right
 728 01f4 002C0140 		.word	1073818624
 729 01f8 00000000 		.word	htim_left
 730 01fc 00000000 		.word	SystemCoreClock
 731 0200 D34D6210 		.word	274877907
 732 0204 00340140 		.word	1073820672
 733              		.cfi_endproc
 734              	.LFE128:
 736              		.section	.text.MX_ADC1_Init,"ax",%progbits
 737              		.align	1
 738              		.global	MX_ADC1_Init
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 742              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 19


 744              	MX_ADC1_Init:
 745              	.LFB129:
 291:Src/setup.c   **** 
 292:Src/setup.c   **** void MX_ADC1_Init(void) {
 746              		.loc 1 292 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 24
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 751              	.LCFI7:
 752              		.cfi_def_cfa_offset 24
 753              		.cfi_offset 4, -24
 754              		.cfi_offset 5, -20
 755              		.cfi_offset 6, -16
 756              		.cfi_offset 7, -12
 757              		.cfi_offset 8, -8
 758              		.cfi_offset 14, -4
 759 0004 86B0     		sub	sp, sp, #24
 760              	.LCFI8:
 761              		.cfi_def_cfa_offset 48
 762              	.LBB7:
 293:Src/setup.c   ****   ADC_MultiModeTypeDef multimode;
 294:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 295:Src/setup.c   **** 
 296:Src/setup.c   ****   __HAL_RCC_ADC1_CLK_ENABLE();
 763              		.loc 1 296 0
 764 0006 424E     		ldr	r6, .L13
 765 0008 B369     		ldr	r3, [r6, #24]
 766 000a 43F40073 		orr	r3, r3, #512
 767 000e B361     		str	r3, [r6, #24]
 768 0010 B369     		ldr	r3, [r6, #24]
 769 0012 03F40073 		and	r3, r3, #512
 770 0016 0093     		str	r3, [sp]
 771 0018 009B     		ldr	r3, [sp]
 772              	.LBE7:
 297:Src/setup.c   **** 
 298:Src/setup.c   ****   hadc1.Instance                   = ADC1;
 773              		.loc 1 298 0
 774 001a 3E4C     		ldr	r4, .L13+4
 775 001c 3E4B     		ldr	r3, .L13+8
 776 001e 2360     		str	r3, [r4]
 299:Src/setup.c   ****   hadc1.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 777              		.loc 1 299 0
 778 0020 4FF48073 		mov	r3, #256
 779 0024 A360     		str	r3, [r4, #8]
 300:Src/setup.c   ****   hadc1.Init.ContinuousConvMode    = DISABLE;
 780              		.loc 1 300 0
 781 0026 0025     		movs	r5, #0
 782 0028 E560     		str	r5, [r4, #12]
 301:Src/setup.c   ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 783              		.loc 1 301 0
 784 002a 6561     		str	r5, [r4, #20]
 302:Src/setup.c   ****   hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T8_TRGO;
 785              		.loc 1 302 0
 786 002c 4FF44023 		mov	r3, #786432
 787 0030 E361     		str	r3, [r4, #28]
 303:Src/setup.c   ****   hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 20


 788              		.loc 1 303 0
 789 0032 6560     		str	r5, [r4, #4]
 304:Src/setup.c   ****   hadc1.Init.NbrOfConversion       = 5;
 790              		.loc 1 304 0
 791 0034 4FF00508 		mov	r8, #5
 792 0038 C4F81080 		str	r8, [r4, #16]
 305:Src/setup.c   ****   HAL_ADC_Init(&hadc1);
 793              		.loc 1 305 0
 794 003c 2046     		mov	r0, r4
 795 003e FFF7FEFF 		bl	HAL_ADC_Init
 796              	.LVL61:
 306:Src/setup.c   ****   /**Enable or disable the remapping of ADC1_ETRGREG:
 307:Src/setup.c   ****     * ADC1 External Event regular conversion is connected to TIM8 TRG0
 308:Src/setup.c   ****     */
 309:Src/setup.c   ****   __HAL_AFIO_REMAP_ADC1_ETRGREG_ENABLE();
 797              		.loc 1 309 0
 798 0042 364A     		ldr	r2, .L13+12
 799 0044 5368     		ldr	r3, [r2, #4]
 800 0046 43F48023 		orr	r3, r3, #262144
 801 004a 5360     		str	r3, [r2, #4]
 310:Src/setup.c   **** 
 311:Src/setup.c   ****   /**Configure the ADC multi-mode
 312:Src/setup.c   ****     */
 313:Src/setup.c   ****   multimode.Mode = ADC_DUALMODE_REGSIMULT;
 802              		.loc 1 313 0
 803 004c 06A9     		add	r1, sp, #24
 804 004e 4FF4C023 		mov	r3, #393216
 805 0052 41F8043D 		str	r3, [r1, #-4]!
 314:Src/setup.c   ****   HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode);
 806              		.loc 1 314 0
 807 0056 2046     		mov	r0, r4
 808 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 809              	.LVL62:
 315:Src/setup.c   **** 
 316:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 810              		.loc 1 316 0
 811 005c 0123     		movs	r3, #1
 812 005e 0493     		str	r3, [sp, #16]
 317:Src/setup.c   **** 
 318:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_14;  // pc4 left b
 813              		.loc 1 318 0
 814 0060 0E22     		movs	r2, #14
 815 0062 0292     		str	r2, [sp, #8]
 319:Src/setup.c   ****   sConfig.Rank    = 1;
 816              		.loc 1 319 0
 817 0064 0393     		str	r3, [sp, #12]
 320:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 818              		.loc 1 320 0
 819 0066 02A9     		add	r1, sp, #8
 820 0068 2046     		mov	r0, r4
 821 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 822              	.LVL63:
 321:Src/setup.c   **** 
 322:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_0;  // pa0 right a
 823              		.loc 1 322 0
 824 006e 0295     		str	r5, [sp, #8]
 323:Src/setup.c   ****   sConfig.Rank    = 2;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 21


 825              		.loc 1 323 0
 826 0070 0227     		movs	r7, #2
 827 0072 0397     		str	r7, [sp, #12]
 324:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 828              		.loc 1 324 0
 829 0074 02A9     		add	r1, sp, #8
 830 0076 2046     		mov	r0, r4
 831 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 832              	.LVL64:
 325:Src/setup.c   **** 
 326:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 833              		.loc 1 326 0
 834 007c 0497     		str	r7, [sp, #16]
 327:Src/setup.c   **** 
 328:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_11;  // pc1 left cur
 835              		.loc 1 328 0
 836 007e 0B27     		movs	r7, #11
 837 0080 0297     		str	r7, [sp, #8]
 329:Src/setup.c   ****   sConfig.Rank    = 3;
 838              		.loc 1 329 0
 839 0082 0323     		movs	r3, #3
 840 0084 0393     		str	r3, [sp, #12]
 330:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 841              		.loc 1 330 0
 842 0086 02A9     		add	r1, sp, #8
 843 0088 2046     		mov	r0, r4
 844 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 845              	.LVL65:
 331:Src/setup.c   **** 
 332:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_12;  // pc2 vbat
 846              		.loc 1 332 0
 847 008e 0C23     		movs	r3, #12
 848 0090 0293     		str	r3, [sp, #8]
 333:Src/setup.c   ****   sConfig.Rank    = 4;
 849              		.loc 1 333 0
 850 0092 0423     		movs	r3, #4
 851 0094 0393     		str	r3, [sp, #12]
 334:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 852              		.loc 1 334 0
 853 0096 02A9     		add	r1, sp, #8
 854 0098 2046     		mov	r0, r4
 855 009a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 856              	.LVL66:
 335:Src/setup.c   **** 
 336:Src/setup.c   ****   //temperature requires at least 17.1uS sampling time
 337:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 857              		.loc 1 337 0
 858 009e 0723     		movs	r3, #7
 859 00a0 0493     		str	r3, [sp, #16]
 338:Src/setup.c   **** 
 339:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;  // internal temp
 860              		.loc 1 339 0
 861 00a2 1023     		movs	r3, #16
 862 00a4 0293     		str	r3, [sp, #8]
 340:Src/setup.c   ****   sConfig.Rank    = 5;
 863              		.loc 1 340 0
 864 00a6 CDF80C80 		str	r8, [sp, #12]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 22


 341:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 865              		.loc 1 341 0
 866 00aa 02A9     		add	r1, sp, #8
 867 00ac 2046     		mov	r0, r4
 868 00ae FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 869              	.LVL67:
 342:Src/setup.c   **** 
 343:Src/setup.c   ****   hadc1.Instance->CR2 |= ADC_CR2_DMA | ADC_CR2_TSVREFE;
 870              		.loc 1 343 0
 871 00b2 2268     		ldr	r2, [r4]
 872 00b4 9368     		ldr	r3, [r2, #8]
 873 00b6 43F40003 		orr	r3, r3, #8388608
 874 00ba 43F48073 		orr	r3, r3, #256
 875 00be 9360     		str	r3, [r2, #8]
 344:Src/setup.c   **** 
 345:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc1);
 876              		.loc 1 345 0
 877 00c0 9368     		ldr	r3, [r2, #8]
 878 00c2 43F00103 		orr	r3, r3, #1
 879 00c6 9360     		str	r3, [r2, #8]
 880              	.LBB8:
 346:Src/setup.c   **** 
 347:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 881              		.loc 1 347 0
 882 00c8 7369     		ldr	r3, [r6, #20]
 883 00ca 43F00103 		orr	r3, r3, #1
 884 00ce 7361     		str	r3, [r6, #20]
 885 00d0 7369     		ldr	r3, [r6, #20]
 886 00d2 03F00103 		and	r3, r3, #1
 887 00d6 0193     		str	r3, [sp, #4]
 888 00d8 019B     		ldr	r3, [sp, #4]
 889              	.LBE8:
 348:Src/setup.c   **** 
 349:Src/setup.c   ****   DMA1_Channel1->CCR   = 0;
 890              		.loc 1 349 0
 891 00da 114B     		ldr	r3, .L13+16
 892 00dc 1D60     		str	r5, [r3]
 350:Src/setup.c   ****   DMA1_Channel1->CNDTR = 5;
 893              		.loc 1 350 0
 894 00de C3F80480 		str	r8, [r3, #4]
 351:Src/setup.c   ****   DMA1_Channel1->CPAR  = (uint32_t) & (ADC1->DR);
 895              		.loc 1 351 0
 896 00e2 104A     		ldr	r2, .L13+20
 897 00e4 9A60     		str	r2, [r3, #8]
 352:Src/setup.c   ****   DMA1_Channel1->CMAR  = (uint32_t)&adc_buffer;
 898              		.loc 1 352 0
 899 00e6 104A     		ldr	r2, .L13+24
 900 00e8 DA60     		str	r2, [r3, #12]
 353:Src/setup.c   ****   DMA1_Channel1->CCR   = DMA_CCR_MSIZE_1 | DMA_CCR_PSIZE_1 | DMA_CCR_MINC | DMA_CCR_CIRC | DMA_CCR_
 901              		.loc 1 353 0
 902 00ea 40F6A222 		movw	r2, #2722
 903 00ee 1A60     		str	r2, [r3]
 354:Src/setup.c   ****   DMA1_Channel1->CCR |= DMA_CCR_EN;
 904              		.loc 1 354 0
 905 00f0 1A68     		ldr	r2, [r3]
 906 00f2 42F00102 		orr	r2, r2, #1
 907 00f6 1A60     		str	r2, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 23


 355:Src/setup.c   **** 
 356:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 908              		.loc 1 356 0
 909 00f8 2A46     		mov	r2, r5
 910 00fa 2946     		mov	r1, r5
 911 00fc 3846     		mov	r0, r7
 912 00fe FFF7FEFF 		bl	HAL_NVIC_SetPriority
 913              	.LVL68:
 357:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 914              		.loc 1 357 0
 915 0102 3846     		mov	r0, r7
 916 0104 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 917              	.LVL69:
 358:Src/setup.c   **** }
 918              		.loc 1 358 0
 919 0108 06B0     		add	sp, sp, #24
 920              	.LCFI9:
 921              		.cfi_def_cfa_offset 24
 922              		@ sp needed
 923 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 924              	.L14:
 925 010e 00BF     		.align	2
 926              	.L13:
 927 0110 00100240 		.word	1073876992
 928 0114 00000000 		.word	hadc1
 929 0118 00240140 		.word	1073816576
 930 011c 00000140 		.word	1073807360
 931 0120 08000240 		.word	1073872904
 932 0124 4C240140 		.word	1073816652
 933 0128 00000000 		.word	adc_buffer
 934              		.cfi_endproc
 935              	.LFE129:
 937              		.section	.text.MX_ADC2_Init,"ax",%progbits
 938              		.align	1
 939              		.global	MX_ADC2_Init
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 943              		.fpu fpv4-sp-d16
 945              	MX_ADC2_Init:
 946              	.LFB130:
 359:Src/setup.c   **** 
 360:Src/setup.c   **** /* ADC2 init function */
 361:Src/setup.c   **** void MX_ADC2_Init(void) {
 947              		.loc 1 361 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 16
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 952              	.LCFI10:
 953              		.cfi_def_cfa_offset 20
 954              		.cfi_offset 4, -20
 955              		.cfi_offset 5, -16
 956              		.cfi_offset 6, -12
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 85B0     		sub	sp, sp, #20
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 24


 960              	.LCFI11:
 961              		.cfi_def_cfa_offset 40
 962              	.LBB9:
 362:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 363:Src/setup.c   **** 
 364:Src/setup.c   ****   __HAL_RCC_ADC2_CLK_ENABLE();
 963              		.loc 1 364 0
 964 0004 284B     		ldr	r3, .L17
 965 0006 9A69     		ldr	r2, [r3, #24]
 966 0008 42F48062 		orr	r2, r2, #1024
 967 000c 9A61     		str	r2, [r3, #24]
 968 000e 9B69     		ldr	r3, [r3, #24]
 969 0010 03F48063 		and	r3, r3, #1024
 970 0014 0093     		str	r3, [sp]
 971 0016 009B     		ldr	r3, [sp]
 972              	.LBE9:
 365:Src/setup.c   **** 
 366:Src/setup.c   ****   // HAL_ADC_DeInit(&hadc2);
 367:Src/setup.c   ****   // hadc2.Instance->CR2 = 0;
 368:Src/setup.c   ****   /**Common config
 369:Src/setup.c   ****     */
 370:Src/setup.c   ****   hadc2.Instance                   = ADC2;
 973              		.loc 1 370 0
 974 0018 244C     		ldr	r4, .L17+4
 975 001a 254B     		ldr	r3, .L17+8
 976 001c 2360     		str	r3, [r4]
 371:Src/setup.c   ****   hadc2.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 977              		.loc 1 371 0
 978 001e 4FF48073 		mov	r3, #256
 979 0022 A360     		str	r3, [r4, #8]
 372:Src/setup.c   ****   hadc2.Init.ContinuousConvMode    = DISABLE;
 980              		.loc 1 372 0
 981 0024 0023     		movs	r3, #0
 982 0026 E360     		str	r3, [r4, #12]
 373:Src/setup.c   ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 983              		.loc 1 373 0
 984 0028 6361     		str	r3, [r4, #20]
 374:Src/setup.c   ****   hadc2.Init.ExternalTrigConv      = ADC_SOFTWARE_START;
 985              		.loc 1 374 0
 986 002a 4FF46022 		mov	r2, #917504
 987 002e E261     		str	r2, [r4, #28]
 375:Src/setup.c   ****   hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 988              		.loc 1 375 0
 989 0030 6360     		str	r3, [r4, #4]
 376:Src/setup.c   ****   hadc2.Init.NbrOfConversion       = 5;
 990              		.loc 1 376 0
 991 0032 0526     		movs	r6, #5
 992 0034 2661     		str	r6, [r4, #16]
 377:Src/setup.c   ****   HAL_ADC_Init(&hadc2);
 993              		.loc 1 377 0
 994 0036 2046     		mov	r0, r4
 995 0038 FFF7FEFF 		bl	HAL_ADC_Init
 996              	.LVL70:
 378:Src/setup.c   **** 
 379:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 997              		.loc 1 379 0
 998 003c 0123     		movs	r3, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 25


 999 003e 0393     		str	r3, [sp, #12]
 380:Src/setup.c   **** 
 381:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_15;  // pc5 left c
 1000              		.loc 1 381 0
 1001 0040 0F22     		movs	r2, #15
 1002 0042 0192     		str	r2, [sp, #4]
 382:Src/setup.c   ****   sConfig.Rank    = 1;
 1003              		.loc 1 382 0
 1004 0044 0293     		str	r3, [sp, #8]
 383:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1005              		.loc 1 383 0
 1006 0046 01A9     		add	r1, sp, #4
 1007 0048 2046     		mov	r0, r4
 1008 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1009              	.LVL71:
 384:Src/setup.c   **** 
 385:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_13;  // pc3 right b
 1010              		.loc 1 385 0
 1011 004e 0D23     		movs	r3, #13
 1012 0050 0193     		str	r3, [sp, #4]
 386:Src/setup.c   ****   sConfig.Rank    = 2;
 1013              		.loc 1 386 0
 1014 0052 0225     		movs	r5, #2
 1015 0054 0295     		str	r5, [sp, #8]
 387:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1016              		.loc 1 387 0
 1017 0056 01A9     		add	r1, sp, #4
 1018 0058 2046     		mov	r0, r4
 1019 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1020              	.LVL72:
 388:Src/setup.c   **** 
 389:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 1021              		.loc 1 389 0
 1022 005e 0395     		str	r5, [sp, #12]
 390:Src/setup.c   **** 
 391:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_10;  // pc0 right cur
 1023              		.loc 1 391 0
 1024 0060 0A23     		movs	r3, #10
 1025 0062 0193     		str	r3, [sp, #4]
 392:Src/setup.c   ****   sConfig.Rank    = 3;
 1026              		.loc 1 392 0
 1027 0064 0327     		movs	r7, #3
 1028 0066 0297     		str	r7, [sp, #8]
 393:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1029              		.loc 1 393 0
 1030 0068 01A9     		add	r1, sp, #4
 1031 006a 2046     		mov	r0, r4
 1032 006c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1033              	.LVL73:
 394:Src/setup.c   **** 
 395:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_2;  // pa2 uart-l-tx
 1034              		.loc 1 395 0
 1035 0070 0195     		str	r5, [sp, #4]
 396:Src/setup.c   ****   sConfig.Rank    = 4;
 1036              		.loc 1 396 0
 1037 0072 0423     		movs	r3, #4
 1038 0074 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 26


 397:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1039              		.loc 1 397 0
 1040 0076 0DEB0301 		add	r1, sp, r3
 1041 007a 2046     		mov	r0, r4
 1042 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1043              	.LVL74:
 398:Src/setup.c   **** 
 399:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 1044              		.loc 1 399 0
 1045 0080 0723     		movs	r3, #7
 1046 0082 0393     		str	r3, [sp, #12]
 400:Src/setup.c   **** 
 401:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_3;  // pa3 uart-l-rx
 1047              		.loc 1 401 0
 1048 0084 0197     		str	r7, [sp, #4]
 402:Src/setup.c   ****   sConfig.Rank    = 5;
 1049              		.loc 1 402 0
 1050 0086 0296     		str	r6, [sp, #8]
 403:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1051              		.loc 1 403 0
 1052 0088 01A9     		add	r1, sp, #4
 1053 008a 2046     		mov	r0, r4
 1054 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1055              	.LVL75:
 404:Src/setup.c   **** 
 405:Src/setup.c   ****   hadc2.Instance->CR2 |= ADC_CR2_DMA;
 1056              		.loc 1 405 0
 1057 0090 2368     		ldr	r3, [r4]
 1058 0092 9A68     		ldr	r2, [r3, #8]
 1059 0094 42F48072 		orr	r2, r2, #256
 1060 0098 9A60     		str	r2, [r3, #8]
 406:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc2);
 1061              		.loc 1 406 0
 1062 009a 9A68     		ldr	r2, [r3, #8]
 1063 009c 42F00102 		orr	r2, r2, #1
 1064 00a0 9A60     		str	r2, [r3, #8]
 407:Src/setup.c   **** }
 1065              		.loc 1 407 0
 1066 00a2 05B0     		add	sp, sp, #20
 1067              	.LCFI12:
 1068              		.cfi_def_cfa_offset 20
 1069              		@ sp needed
 1070 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1071              	.L18:
 1072 00a6 00BF     		.align	2
 1073              	.L17:
 1074 00a8 00100240 		.word	1073876992
 1075 00ac 00000000 		.word	hadc2
 1076 00b0 00280140 		.word	1073817600
 1077              		.cfi_endproc
 1078              	.LFE130:
 1080              		.section	.text.UART_Debug_Init,"ax",%progbits
 1081              		.align	1
 1082              		.global	UART_Debug_Init
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 27


 1086              		.fpu fpv4-sp-d16
 1088              	UART_Debug_Init:
 1089              	.LFB131:
 408:Src/setup.c   **** 
 409:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART3
 410:Src/setup.c   **** 
 411:Src/setup.c   **** void UART_Debug_Init() {
 1090              		.loc 1 411 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 24
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094 0000 30B5     		push	{r4, r5, lr}
 1095              	.LCFI13:
 1096              		.cfi_def_cfa_offset 12
 1097              		.cfi_offset 4, -12
 1098              		.cfi_offset 5, -8
 1099              		.cfi_offset 14, -4
 1100 0002 87B0     		sub	sp, sp, #28
 1101              	.LCFI14:
 1102              		.cfi_def_cfa_offset 40
 1103              	.LBB10:
 412:Src/setup.c   ****   __HAL_RCC_USART3_CLK_ENABLE();
 1104              		.loc 1 412 0
 1105 0004 1F4B     		ldr	r3, .L21
 1106 0006 DA69     		ldr	r2, [r3, #28]
 1107 0008 42F48022 		orr	r2, r2, #262144
 1108 000c DA61     		str	r2, [r3, #28]
 1109 000e DA69     		ldr	r2, [r3, #28]
 1110 0010 02F48022 		and	r2, r2, #262144
 1111 0014 0092     		str	r2, [sp]
 1112 0016 009A     		ldr	r2, [sp]
 1113              	.LBE10:
 1114              	.LBB11:
 413:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1115              		.loc 1 413 0
 1116 0018 5A69     		ldr	r2, [r3, #20]
 1117 001a 42F00102 		orr	r2, r2, #1
 1118 001e 5A61     		str	r2, [r3, #20]
 1119 0020 5B69     		ldr	r3, [r3, #20]
 1120 0022 03F00103 		and	r3, r3, #1
 1121 0026 0193     		str	r3, [sp, #4]
 1122 0028 019B     		ldr	r3, [sp, #4]
 1123              	.LBE11:
 414:Src/setup.c   **** 
 415:Src/setup.c   ****   huart3.Instance          = USART3;
 1124              		.loc 1 415 0
 1125 002a 1748     		ldr	r0, .L21+4
 1126 002c 174D     		ldr	r5, .L21+8
 1127 002e 0560     		str	r5, [r0]
 416:Src/setup.c   ****   huart3.Init.BaudRate     = DEBUG_BAUD;
 1128              		.loc 1 416 0
 1129 0030 4FF4E133 		mov	r3, #115200
 1130 0034 4360     		str	r3, [r0, #4]
 417:Src/setup.c   ****   huart3.Init.WordLength   = UART_WORDLENGTH_8B;
 1131              		.loc 1 417 0
 1132 0036 0024     		movs	r4, #0
 1133 0038 8460     		str	r4, [r0, #8]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 28


 418:Src/setup.c   ****   huart3.Init.StopBits     = UART_STOPBITS_1;
 1134              		.loc 1 418 0
 1135 003a C460     		str	r4, [r0, #12]
 419:Src/setup.c   ****   huart3.Init.Parity       = UART_PARITY_NONE;
 1136              		.loc 1 419 0
 1137 003c 0461     		str	r4, [r0, #16]
 420:Src/setup.c   ****   huart3.Init.Mode         = UART_MODE_TX;
 1138              		.loc 1 420 0
 1139 003e 0823     		movs	r3, #8
 1140 0040 4361     		str	r3, [r0, #20]
 421:Src/setup.c   ****   huart3.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 1141              		.loc 1 421 0
 1142 0042 8461     		str	r4, [r0, #24]
 422:Src/setup.c   ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1143              		.loc 1 422 0
 1144 0044 C461     		str	r4, [r0, #28]
 423:Src/setup.c   ****   HAL_UART_Init(&huart3);
 1145              		.loc 1 423 0
 1146 0046 FFF7FEFF 		bl	HAL_UART_Init
 1147              	.LVL76:
 424:Src/setup.c   **** 
 425:Src/setup.c   ****   USART3->CR3 |= USART_CR3_DMAT;  // | USART_CR3_DMAR | USART_CR3_OVRDIS;
 1148              		.loc 1 425 0
 1149 004a 6B69     		ldr	r3, [r5, #20]
 1150 004c 43F08003 		orr	r3, r3, #128
 1151 0050 6B61     		str	r3, [r5, #20]
 426:Src/setup.c   **** 
 427:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 428:Src/setup.c   ****   GPIO_InitStruct.Pin   = GPIO_PIN_10;
 1152              		.loc 1 428 0
 1153 0052 4FF48063 		mov	r3, #1024
 1154 0056 0293     		str	r3, [sp, #8]
 429:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_PULLUP;
 1155              		.loc 1 429 0
 1156 0058 0123     		movs	r3, #1
 1157 005a 0493     		str	r3, [sp, #16]
 430:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
 1158              		.loc 1 430 0
 1159 005c 0223     		movs	r3, #2
 1160 005e 0393     		str	r3, [sp, #12]
 431:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1161              		.loc 1 431 0
 1162 0060 0323     		movs	r3, #3
 1163 0062 0593     		str	r3, [sp, #20]
 432:Src/setup.c   ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1164              		.loc 1 432 0
 1165 0064 02A9     		add	r1, sp, #8
 1166 0066 0A48     		ldr	r0, .L21+12
 1167 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 1168              	.LVL77:
 433:Src/setup.c   **** 
 434:Src/setup.c   ****   DMA1_Channel2->CCR   = 0;
 1169              		.loc 1 434 0
 1170 006c 094B     		ldr	r3, .L21+16
 1171 006e 1C60     		str	r4, [r3]
 435:Src/setup.c   ****   DMA1_Channel2->CPAR  = (uint32_t) & (USART3->DR);
 1172              		.loc 1 435 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 29


 1173 0070 094A     		ldr	r2, .L21+20
 1174 0072 9A60     		str	r2, [r3, #8]
 436:Src/setup.c   ****   DMA1_Channel2->CNDTR = 0;
 1175              		.loc 1 436 0
 1176 0074 5C60     		str	r4, [r3, #4]
 437:Src/setup.c   ****   DMA1_Channel2->CCR   = DMA_CCR_MINC | DMA_CCR_DIR;
 1177              		.loc 1 437 0
 1178 0076 9022     		movs	r2, #144
 1179 0078 1A60     		str	r2, [r3]
 438:Src/setup.c   ****   DMA1->IFCR           = DMA_IFCR_CTCIF2 | DMA_IFCR_CHTIF2 | DMA_IFCR_CGIF2;
 1180              		.loc 1 438 0
 1181 007a 1C3B     		subs	r3, r3, #28
 1182 007c 7022     		movs	r2, #112
 1183 007e 5A60     		str	r2, [r3, #4]
 439:Src/setup.c   **** }
 1184              		.loc 1 439 0
 1185 0080 07B0     		add	sp, sp, #28
 1186              	.LCFI15:
 1187              		.cfi_def_cfa_offset 12
 1188              		@ sp needed
 1189 0082 30BD     		pop	{r4, r5, pc}
 1190              	.L22:
 1191              		.align	2
 1192              	.L21:
 1193 0084 00100240 		.word	1073876992
 1194 0088 00000000 		.word	huart3
 1195 008c 00480040 		.word	1073760256
 1196 0090 000C0140 		.word	1073810432
 1197 0094 1C000240 		.word	1073872924
 1198 0098 04480040 		.word	1073760260
 1199              		.cfi_endproc
 1200              	.LFE131:
 1202              		.section	.text.__io_putchar,"ax",%progbits
 1203              		.align	1
 1204              		.global	__io_putchar
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv4-sp-d16
 1210              	__io_putchar:
 1211              	.LFB133:
 440:Src/setup.c   **** 
 441:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART3_DMA
 442:Src/setup.c   **** 
 443:Src/setup.c   **** /* consoleLog uses DMA for heavy writes */
 444:Src/setup.c   **** void debugLog(char *message, int len)
 445:Src/setup.c   **** {
 446:Src/setup.c   ****   #define UART_DMA_CHANNEL DMA1_Channel2
 447:Src/setup.c   **** 
 448:Src/setup.c   ****     if(UART_DMA_CHANNEL->CNDTR == 0) {
 449:Src/setup.c   ****       UART_DMA_CHANNEL->CCR &= ~DMA_CCR_EN;
 450:Src/setup.c   ****       UART_DMA_CHANNEL->CNDTR = len;
 451:Src/setup.c   ****       UART_DMA_CHANNEL->CMAR  = (uint32_t)message;
 452:Src/setup.c   ****       UART_DMA_CHANNEL->CCR |= DMA_CCR_EN;
 453:Src/setup.c   ****     }
 454:Src/setup.c   **** }
 455:Src/setup.c   **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 30


 456:Src/setup.c   **** #endif
 457:Src/setup.c   **** /*
 458:Src/setup.c   **** * Setting to redirect STDOUT to COM PORT
 459:Src/setup.c   **** */
 460:Src/setup.c   **** 
 461:Src/setup.c   **** #ifdef __GNUC__
 462:Src/setup.c   ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 463:Src/setup.c   ****      set to 'Yes') calls __io_putchar() */
 464:Src/setup.c   ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 465:Src/setup.c   **** #else
 466:Src/setup.c   ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 467:Src/setup.c   **** #endif /* __GNUC__ */
 468:Src/setup.c   **** 
 469:Src/setup.c   **** int _write(int file, char *data, int len)
 470:Src/setup.c   **** {
 471:Src/setup.c   ****   int bytes_written;
 472:Src/setup.c   ****   char ch;
 473:Src/setup.c   **** 
 474:Src/setup.c   ****   if ((file != 1) && (file != 2))
 475:Src/setup.c   ****   {
 476:Src/setup.c   ****     return -1;
 477:Src/setup.c   ****   }
 478:Src/setup.c   **** 
 479:Src/setup.c   ****   // if(len > 1) 
 480:Src/setup.c   ****   // {
 481:Src/setup.c   ****   //   debugLog(data, len);
 482:Src/setup.c   ****   // }
 483:Src/setup.c   ****   // else 
 484:Src/setup.c   ****   // {
 485:Src/setup.c   ****   //   __io_putchar(ch);
 486:Src/setup.c   ****   // }
 487:Src/setup.c   ****   for (bytes_written = 0; bytes_written < len; bytes_written++)
 488:Src/setup.c   ****   {
 489:Src/setup.c   ****     ch = *data;
 490:Src/setup.c   ****     data++;
 491:Src/setup.c   ****     __io_putchar(ch);
 492:Src/setup.c   ****   }
 493:Src/setup.c   **** 
 494:Src/setup.c   ****   return len;
 495:Src/setup.c   **** }
 496:Src/setup.c   **** 
 497:Src/setup.c   **** /**
 498:Src/setup.c   ****   * @brief  Retargets the C library printf function to the USART.
 499:Src/setup.c   ****   * @param  None
 500:Src/setup.c   ****   * @retval None
 501:Src/setup.c   ****   */
 502:Src/setup.c   **** PUTCHAR_PROTOTYPE
 503:Src/setup.c   **** {
 1212              		.loc 1 503 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              	.LVL78:
 1217 0000 00B5     		push	{lr}
 1218              	.LCFI16:
 1219              		.cfi_def_cfa_offset 4
 1220              		.cfi_offset 14, -4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 31


 1221 0002 83B0     		sub	sp, sp, #12
 1222              	.LCFI17:
 1223              		.cfi_def_cfa_offset 16
 1224 0004 02A9     		add	r1, sp, #8
 1225 0006 41F8040D 		str	r0, [r1, #-4]!
 504:Src/setup.c   ****   HAL_UART_Transmit(&huart3, (uint8_t *) &ch, 1, 10);
 1226              		.loc 1 504 0
 1227 000a 0A23     		movs	r3, #10
 1228 000c 0122     		movs	r2, #1
 1229 000e 0348     		ldr	r0, .L25
 1230              	.LVL79:
 1231 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1232              	.LVL80:
 505:Src/setup.c   **** 	return ch;
 506:Src/setup.c   **** }
 1233              		.loc 1 506 0
 1234 0014 0198     		ldr	r0, [sp, #4]
 1235 0016 03B0     		add	sp, sp, #12
 1236              	.LCFI18:
 1237              		.cfi_def_cfa_offset 4
 1238              		@ sp needed
 1239 0018 5DF804FB 		ldr	pc, [sp], #4
 1240              	.L26:
 1241              		.align	2
 1242              	.L25:
 1243 001c 00000000 		.word	huart3
 1244              		.cfi_endproc
 1245              	.LFE133:
 1247              		.section	.text._write,"ax",%progbits
 1248              		.align	1
 1249              		.global	_write
 1250              		.syntax unified
 1251              		.thumb
 1252              		.thumb_func
 1253              		.fpu fpv4-sp-d16
 1255              	_write:
 1256              	.LFB132:
 470:Src/setup.c   ****   int bytes_written;
 1257              		.loc 1 470 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              	.LVL81:
 1262 0000 70B5     		push	{r4, r5, r6, lr}
 1263              	.LCFI19:
 1264              		.cfi_def_cfa_offset 16
 1265              		.cfi_offset 4, -16
 1266              		.cfi_offset 5, -12
 1267              		.cfi_offset 6, -8
 1268              		.cfi_offset 14, -4
 474:Src/setup.c   ****   {
 1269              		.loc 1 474 0
 1270 0002 0138     		subs	r0, r0, #1
 1271              	.LVL82:
 1272 0004 0128     		cmp	r0, #1
 1273 0006 0CD8     		bhi	.L31
 1274 0008 0D46     		mov	r5, r1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 32


 1275 000a 1646     		mov	r6, r2
 487:Src/setup.c   ****   {
 1276              		.loc 1 487 0
 1277 000c 0024     		movs	r4, #0
 1278 000e 04E0     		b	.L29
 1279              	.LVL83:
 1280              	.L30:
 1281              	.LBB12:
 491:Src/setup.c   ****   }
 1282              		.loc 1 491 0 discriminator 3
 1283 0010 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 1284              	.LVL84:
 1285 0014 FFF7FEFF 		bl	__io_putchar
 1286              	.LVL85:
 1287              	.LBE12:
 487:Src/setup.c   ****   {
 1288              		.loc 1 487 0 discriminator 3
 1289 0018 0134     		adds	r4, r4, #1
 1290              	.LVL86:
 1291              	.L29:
 487:Src/setup.c   ****   {
 1292              		.loc 1 487 0 is_stmt 0 discriminator 1
 1293 001a B442     		cmp	r4, r6
 1294 001c F8DB     		blt	.L30
 1295              	.LVL87:
 1296              	.L28:
 495:Src/setup.c   **** 
 1297              		.loc 1 495 0 is_stmt 1
 1298 001e 3046     		mov	r0, r6
 1299 0020 70BD     		pop	{r4, r5, r6, pc}
 1300              	.LVL88:
 1301              	.L31:
 476:Src/setup.c   ****   }
 1302              		.loc 1 476 0
 1303 0022 4FF0FF36 		mov	r6, #-1
 1304 0026 FAE7     		b	.L28
 1305              		.cfi_endproc
 1306              	.LFE132:
 1308              		.section	.text.UART_Control_Init,"ax",%progbits
 1309              		.align	1
 1310              		.global	UART_Control_Init
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	UART_Control_Init:
 1317              	.LFB134:
 507:Src/setup.c   **** 
 508:Src/setup.c   **** #endif //END of DEBUG_SERIAL_USART3
 509:Src/setup.c   **** 
 510:Src/setup.c   **** #ifdef CONTROL_SERIAL_USART2
 511:Src/setup.c   **** 
 512:Src/setup.c   **** void UART_Control_Init() {
 1318              		.loc 1 512 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 32
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 33


 1322 0000 30B5     		push	{r4, r5, lr}
 1323              	.LCFI20:
 1324              		.cfi_def_cfa_offset 12
 1325              		.cfi_offset 4, -12
 1326              		.cfi_offset 5, -8
 1327              		.cfi_offset 14, -4
 1328 0002 89B0     		sub	sp, sp, #36
 1329              	.LCFI21:
 1330              		.cfi_def_cfa_offset 48
 1331              	.LBB13:
 513:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 514:Src/setup.c   ****   __HAL_RCC_USART2_CLK_ENABLE();
 1332              		.loc 1 514 0
 1333 0004 254C     		ldr	r4, .L35
 1334 0006 E369     		ldr	r3, [r4, #28]
 1335 0008 43F40033 		orr	r3, r3, #131072
 1336 000c E361     		str	r3, [r4, #28]
 1337 000e E369     		ldr	r3, [r4, #28]
 1338 0010 03F40033 		and	r3, r3, #131072
 1339 0014 0193     		str	r3, [sp, #4]
 1340 0016 019B     		ldr	r3, [sp, #4]
 1341              	.LBE13:
 515:Src/setup.c   ****   // /* DMA1_Channel6_IRQn interrupt configuration */
 516:Src/setup.c   ****   // HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 5, 6);
 517:Src/setup.c   ****   // HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
 518:Src/setup.c   ****   // /* DMA1_Channel7_IRQn interrupt configuration */
 519:Src/setup.c   ****   // HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 5, 7);
 520:Src/setup.c   ****   // HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
 521:Src/setup.c   **** 
 522:Src/setup.c   ****   huart2.Instance = USART2;
 1342              		.loc 1 522 0
 1343 0018 2148     		ldr	r0, .L35+4
 1344 001a 224B     		ldr	r3, .L35+8
 1345 001c 0360     		str	r3, [r0]
 523:Src/setup.c   ****   huart2.Init.BaudRate = CONTROL_BAUD;
 1346              		.loc 1 523 0
 1347 001e 4FF4E133 		mov	r3, #115200
 1348 0022 4360     		str	r3, [r0, #4]
 524:Src/setup.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1349              		.loc 1 524 0
 1350 0024 0025     		movs	r5, #0
 1351 0026 8560     		str	r5, [r0, #8]
 525:Src/setup.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1352              		.loc 1 525 0
 1353 0028 C560     		str	r5, [r0, #12]
 526:Src/setup.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
 1354              		.loc 1 526 0
 1355 002a 0561     		str	r5, [r0, #16]
 527:Src/setup.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1356              		.loc 1 527 0
 1357 002c 0C23     		movs	r3, #12
 1358 002e 4361     		str	r3, [r0, #20]
 528:Src/setup.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1359              		.loc 1 528 0
 1360 0030 8561     		str	r5, [r0, #24]
 529:Src/setup.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16; 
 1361              		.loc 1 529 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 34


 1362 0032 C561     		str	r5, [r0, #28]
 530:Src/setup.c   ****   HAL_UART_Init(&huart2);
 1363              		.loc 1 530 0
 1364 0034 FFF7FEFF 		bl	HAL_UART_Init
 1365              	.LVL89:
 1366              	.LBB14:
 531:Src/setup.c   **** 
 532:Src/setup.c   **** 
 533:Src/setup.c   ****   // __HAL_RCC_DMA1_CLK_ENABLE();
 534:Src/setup.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
 535:Src/setup.c   ****    __HAL_RCC_GPIOA_CLK_ENABLE();
 1367              		.loc 1 535 0
 1368 0038 A369     		ldr	r3, [r4, #24]
 1369 003a 43F00403 		orr	r3, r3, #4
 1370 003e A361     		str	r3, [r4, #24]
 1371 0040 A369     		ldr	r3, [r4, #24]
 1372 0042 03F00403 		and	r3, r3, #4
 1373 0046 0293     		str	r3, [sp, #8]
 1374 0048 029B     		ldr	r3, [sp, #8]
 1375              	.LBE14:
 1376              	.LBB15:
 536:Src/setup.c   ****   /* USER CODE END USART2_MspInit 0 */
 537:Src/setup.c   ****    /* Peripheral clock enable */
 538:Src/setup.c   ****    __HAL_RCC_USART2_CLK_ENABLE(); // Why again?
 1377              		.loc 1 538 0
 1378 004a E369     		ldr	r3, [r4, #28]
 1379 004c 43F40033 		orr	r3, r3, #131072
 1380 0050 E361     		str	r3, [r4, #28]
 1381 0052 E369     		ldr	r3, [r4, #28]
 1382 0054 03F40033 		and	r3, r3, #131072
 1383 0058 0393     		str	r3, [sp, #12]
 1384 005a 039B     		ldr	r3, [sp, #12]
 1385              	.LBE15:
 539:Src/setup.c   **** 
 540:Src/setup.c   ****   GPIO_InitStruct.Pull = GPIO_PULLUP; //GPIO_NOPULL;
 1386              		.loc 1 540 0
 1387 005c 0123     		movs	r3, #1
 1388 005e 0693     		str	r3, [sp, #24]
 541:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 1389              		.loc 1 541 0
 1390 0060 0423     		movs	r3, #4
 1391 0062 0493     		str	r3, [sp, #16]
 542:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1392              		.loc 1 542 0
 1393 0064 0223     		movs	r3, #2
 1394 0066 0593     		str	r3, [sp, #20]
 543:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1395              		.loc 1 543 0
 1396 0068 0323     		movs	r3, #3
 1397 006a 0793     		str	r3, [sp, #28]
 544:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1398              		.loc 1 544 0
 1399 006c A4F58434 		sub	r4, r4, #67584
 1400 0070 04A9     		add	r1, sp, #16
 1401 0072 2046     		mov	r0, r4
 1402 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 1403              	.LVL90:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 35


 545:Src/setup.c   **** 
 546:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 1404              		.loc 1 546 0
 1405 0078 0823     		movs	r3, #8
 1406 007a 0493     		str	r3, [sp, #16]
 547:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT; //GPIO_MODE_AF_PP;
 1407              		.loc 1 547 0
 1408 007c 0595     		str	r5, [sp, #20]
 548:Src/setup.c   ****   // GPIO_InitStruct.Pull = GPIO_NOPULL;
 549:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1409              		.loc 1 549 0
 1410 007e 04A9     		add	r1, sp, #16
 1411 0080 2046     		mov	r0, r4
 1412 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 1413              	.LVL91:
 550:Src/setup.c   **** 
 551:Src/setup.c   ****   /* Peripheral DMA init*/
 552:Src/setup.c   **** 
 553:Src/setup.c   ****   // hdma_usart2_rx.Instance = DMA1_Channel6;
 554:Src/setup.c   ****   // hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 555:Src/setup.c   ****   // hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 556:Src/setup.c   ****   // hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 557:Src/setup.c   ****   // hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 558:Src/setup.c   ****   // hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 559:Src/setup.c   ****   // hdma_usart2_rx.Init.Mode = DMA_CIRCULAR; //DMA_NORMAL;
 560:Src/setup.c   ****   // hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 561:Src/setup.c   ****   // HAL_DMA_Init(&hdma_usart2_rx);
 562:Src/setup.c   **** 
 563:Src/setup.c   ****   // __HAL_LINKDMA(&huart2,hdmarx,hdma_usart2_rx);
 564:Src/setup.c   **** 
 565:Src/setup.c   ****   // hdma_usart2_tx.Instance = DMA1_Channel7;
 566:Src/setup.c   ****   // hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 567:Src/setup.c   ****   // hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 568:Src/setup.c   ****   // hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 569:Src/setup.c   ****   // hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 570:Src/setup.c   ****   // hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 571:Src/setup.c   ****   // hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 572:Src/setup.c   ****   // hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 573:Src/setup.c   ****   // HAL_DMA_Init(&hdma_usart2_tx);
 574:Src/setup.c   ****   // __HAL_LINKDMA(&huart2,hdmatx,hdma_usart2_tx);
 575:Src/setup.c   **** 
 576:Src/setup.c   ****   HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);                                        
 1414              		.loc 1 576 0
 1415 0086 2A46     		mov	r2, r5
 1416 0088 2946     		mov	r1, r5
 1417 008a 2620     		movs	r0, #38
 1418 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1419              	.LVL92:
 577:Src/setup.c   ****   HAL_NVIC_EnableIRQ(USART2_IRQn); //Necessary for DMA
 1420              		.loc 1 577 0
 1421 0090 2620     		movs	r0, #38
 1422 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1423              	.LVL93:
 578:Src/setup.c   **** }
 1424              		.loc 1 578 0
 1425 0096 09B0     		add	sp, sp, #36
 1426              	.LCFI22:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 36


 1427              		.cfi_def_cfa_offset 12
 1428              		@ sp needed
 1429 0098 30BD     		pop	{r4, r5, pc}
 1430              	.L36:
 1431 009a 00BF     		.align	2
 1432              	.L35:
 1433 009c 00100240 		.word	1073876992
 1434 00a0 00000000 		.word	huart2
 1435 00a4 00440040 		.word	1073759232
 1436              		.cfi_endproc
 1437              	.LFE134:
 1439              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1440              		.align	1
 1441              		.global	USART2_IRQHandler
 1442              		.syntax unified
 1443              		.thumb
 1444              		.thumb_func
 1445              		.fpu fpv4-sp-d16
 1447              	USART2_IRQHandler:
 1448              	.LFB135:
 579:Src/setup.c   **** 
 580:Src/setup.c   **** void USART2_IRQHandler(void)
 581:Src/setup.c   **** {
 1449              		.loc 1 581 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453 0000 08B5     		push	{r3, lr}
 1454              	.LCFI23:
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 3, -8
 1457              		.cfi_offset 14, -4
 582:Src/setup.c   ****   HAL_UART_IRQHandler(&huart2);
 1458              		.loc 1 582 0
 1459 0002 0248     		ldr	r0, .L39
 1460 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 1461              	.LVL94:
 583:Src/setup.c   **** }
 1462              		.loc 1 583 0
 1463 0008 08BD     		pop	{r3, pc}
 1464              	.L40:
 1465 000a 00BF     		.align	2
 1466              	.L39:
 1467 000c 00000000 		.word	huart2
 1468              		.cfi_endproc
 1469              	.LFE135:
 1471              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1472              		.align	1
 1473              		.global	HAL_UART_RxCpltCallback
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1477              		.fpu fpv4-sp-d16
 1479              	HAL_UART_RxCpltCallback:
 1480              	.LFB136:
 584:Src/setup.c   **** 
 585:Src/setup.c   **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 37


 586:Src/setup.c   **** uint8_t g_RxBuf[RX_BUF_SIZE];		/* receive buffer */
 587:Src/setup.c   **** uint8_t byte;
 588:Src/setup.c   **** uint8_t g_RxRead = 0;
 589:Src/setup.c   **** uint8_t g_RxWritten = 0;
 590:Src/setup.c   **** 
 591:Src/setup.c   **** /*
 592:Src/setup.c   **** * In callback move the byte read to RxBuffer.
 593:Src/setup.c   **** * If there is no space in buffer disable interrupt.
 594:Src/setup.c   **** * Interrupt is enabled back after buffer is read and clear.
 595:Src/setup.c   **** */
 596:Src/setup.c   **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 597:Src/setup.c   **** {
 1481              		.loc 1 597 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL95:
 1486 0000 08B5     		push	{r3, lr}
 1487              	.LCFI24:
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 3, -8
 1490              		.cfi_offset 14, -4
 598:Src/setup.c   ****   if(huart->Instance == huart2.Instance)
 1491              		.loc 1 598 0
 1492 0002 0268     		ldr	r2, [r0]
 1493 0004 084B     		ldr	r3, .L45
 1494 0006 1B68     		ldr	r3, [r3]
 1495 0008 9A42     		cmp	r2, r3
 1496 000a 00D0     		beq	.L44
 1497              	.LVL96:
 1498              	.L41:
 599:Src/setup.c   ****   {
 600:Src/setup.c   ****     g_RxBuf[g_RxWritten++] = byte;
 601:Src/setup.c   ****     if(g_RxWritten == RX_BUF_SIZE)
 602:Src/setup.c   ****     {
 603:Src/setup.c   ****       __HAL_UART_DISABLE_IT(&huart2, UART_IT_TC);
 604:Src/setup.c   ****     } 
 605:Src/setup.c   ****     else
 606:Src/setup.c   ****     {
 607:Src/setup.c   ****       HAL_UART_Receive_IT(&huart2, &byte, 1);
 608:Src/setup.c   ****     }
 609:Src/setup.c   ****     
 610:Src/setup.c   ****   }
 611:Src/setup.c   **** }
 1499              		.loc 1 611 0
 1500 000c 08BD     		pop	{r3, pc}
 1501              	.LVL97:
 1502              	.L44:
 600:Src/setup.c   ****     if(g_RxWritten == RX_BUF_SIZE)
 1503              		.loc 1 600 0
 1504 000e 074A     		ldr	r2, .L45+4
 1505 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1506 0012 591C     		adds	r1, r3, #1
 1507 0014 1170     		strb	r1, [r2]
 1508 0016 0649     		ldr	r1, .L45+8
 1509 0018 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1510              	.LVL98:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 38


 1511 001a 064A     		ldr	r2, .L45+12
 1512 001c D054     		strb	r0, [r2, r3]
 607:Src/setup.c   ****     }
 1513              		.loc 1 607 0
 1514 001e 0122     		movs	r2, #1
 1515 0020 0148     		ldr	r0, .L45
 1516 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1517              	.LVL99:
 1518              		.loc 1 611 0
 1519 0026 F1E7     		b	.L41
 1520              	.L46:
 1521              		.align	2
 1522              	.L45:
 1523 0028 00000000 		.word	huart2
 1524 002c 00000000 		.word	.LANCHOR0
 1525 0030 00000000 		.word	byte
 1526 0034 00000000 		.word	g_RxBuf
 1527              		.cfi_endproc
 1528              	.LFE136:
 1530              		.section	.text.readUSART2,"ax",%progbits
 1531              		.align	1
 1532              		.global	readUSART2
 1533              		.syntax unified
 1534              		.thumb
 1535              		.thumb_func
 1536              		.fpu fpv4-sp-d16
 1538              	readUSART2:
 1539              	.LFB137:
 612:Src/setup.c   **** 
 613:Src/setup.c   **** int readUSART2(void)
 614:Src/setup.c   **** {
 1540              		.loc 1 614 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545              	.LVL100:
 615:Src/setup.c   ****   int ucData = -1;
 616:Src/setup.c   ****   
 617:Src/setup.c   ****   if(g_RxRead < g_RxWritten)
 1546              		.loc 1 617 0
 1547 0000 074B     		ldr	r3, .L50
 1548 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1549 0004 074A     		ldr	r2, .L50+4
 1550 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1551 0008 9342     		cmp	r3, r2
 1552 000a 05D2     		bcs	.L49
 618:Src/setup.c   ****   {
 619:Src/setup.c   ****     ucData = g_RxBuf[g_RxRead++];
 1553              		.loc 1 619 0
 1554 000c 591C     		adds	r1, r3, #1
 1555 000e 044A     		ldr	r2, .L50
 1556 0010 1170     		strb	r1, [r2]
 1557 0012 054A     		ldr	r2, .L50+8
 1558 0014 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1559              	.LVL101:
 1560 0016 7047     		bx	lr
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 39


 1561              	.LVL102:
 1562              	.L49:
 615:Src/setup.c   ****   int ucData = -1;
 1563              		.loc 1 615 0
 1564 0018 4FF0FF30 		mov	r0, #-1
 620:Src/setup.c   ****   }
 621:Src/setup.c   ****   if(g_RxRead == RX_BUF_SIZE )
 622:Src/setup.c   ****   {
 623:Src/setup.c   ****     g_RxRead = 0;
 624:Src/setup.c   ****     g_RxWritten = 0;
 625:Src/setup.c   ****     //Enable the interrupt so we can read again.
 626:Src/setup.c   ****     __HAL_UART_ENABLE_IT(&huart2, UART_IT_TC);
 627:Src/setup.c   ****     HAL_UART_Receive_IT(&huart2, &byte, 1);
 628:Src/setup.c   ****   }
 629:Src/setup.c   ****   return ucData;
 630:Src/setup.c   **** }
 1565              		.loc 1 630 0
 1566 001c 7047     		bx	lr
 1567              	.L51:
 1568 001e 00BF     		.align	2
 1569              	.L50:
 1570 0020 00000000 		.word	.LANCHOR1
 1571 0024 00000000 		.word	.LANCHOR0
 1572 0028 00000000 		.word	g_RxBuf
 1573              		.cfi_endproc
 1574              	.LFE137:
 1576              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1577              		.align	1
 1578              		.global	HAL_UART_TxCpltCallback
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv4-sp-d16
 1584              	HAL_UART_TxCpltCallback:
 1585              	.LFB138:
 631:Src/setup.c   **** 
 632:Src/setup.c   **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *UartHandle)
 633:Src/setup.c   **** {
 1586              		.loc 1 633 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
 1591              	.LVL103:
 634:Src/setup.c   ****   //__NOP;
 635:Src/setup.c   **** }
 1592              		.loc 1 635 0
 1593 0000 7047     		bx	lr
 1594              		.cfi_endproc
 1595              	.LFE138:
 1597              		.global	g_RxWritten
 1598              		.global	g_RxRead
 1599              		.comm	byte,1,1
 1600              		.comm	g_RxBuf,512,4
 1601              		.comm	hdma_i2c2_tx,68,4
 1602              		.comm	hdma_i2c2_rx,68,4
 1603              		.comm	adc_buffer,20,4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 40


 1604              		.comm	hdma_usart2_tx,68,4
 1605              		.comm	hdma_usart2_rx,68,4
 1606              		.comm	huart3,64,4
 1607              		.comm	huart2,64,4
 1608              		.comm	hi2c2,84,4
 1609              		.comm	hadc2,48,4
 1610              		.comm	hadc1,48,4
 1611              		.comm	htim_left,64,4
 1612              		.comm	htim_right,64,4
 1613              		.section	.bss.g_RxRead,"aw",%nobits
 1614              		.set	.LANCHOR1,. + 0
 1617              	g_RxRead:
 1618 0000 00       		.space	1
 1619              		.section	.bss.g_RxWritten,"aw",%nobits
 1620              		.set	.LANCHOR0,. + 0
 1623              	g_RxWritten:
 1624 0000 00       		.space	1
 1625              		.text
 1626              	.Letext0:
 1627              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1628              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1629              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 1630              		.file 5 "Inc/system_at32f4xx.h"
 1631              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1632              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1633              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1634              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1635              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1636              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1637              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1638              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1639              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1640              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1641              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1642              		.file 17 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1643              		.file 18 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1644              		.file 19 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1645              		.file 20 "Inc/defines.h"
 1646              		.file 21 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 setup.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:17     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:346    .text.MX_GPIO_Init:00000000000001fc $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:355    .text.Hall_Sensor_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:362    .text.Hall_Sensor_Init:0000000000000000 Hall_Sensor_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:399    .text.MX_TIM_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:406    .text.MX_TIM_Init:0000000000000000 MX_TIM_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:726    .text.MX_TIM_Init:00000000000001ec $d
                            *COM*:0000000000000040 htim_right
                            *COM*:0000000000000040 htim_left
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:737    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:744    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:927    .text.MX_ADC1_Init:0000000000000110 $d
                            *COM*:0000000000000030 hadc1
                            *COM*:0000000000000014 adc_buffer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:938    .text.MX_ADC2_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:945    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1074   .text.MX_ADC2_Init:00000000000000a8 $d
                            *COM*:0000000000000030 hadc2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1081   .text.UART_Debug_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1088   .text.UART_Debug_Init:0000000000000000 UART_Debug_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1193   .text.UART_Debug_Init:0000000000000084 $d
                            *COM*:0000000000000040 huart3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1203   .text.__io_putchar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1210   .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1243   .text.__io_putchar:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1248   .text._write:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1255   .text._write:0000000000000000 _write
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1309   .text.UART_Control_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1316   .text.UART_Control_Init:0000000000000000 UART_Control_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1433   .text.UART_Control_Init:000000000000009c $d
                            *COM*:0000000000000040 huart2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1440   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1447   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1467   .text.USART2_IRQHandler:000000000000000c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1472   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1479   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1523   .text.HAL_UART_RxCpltCallback:0000000000000028 $d
                            *COM*:0000000000000001 byte
                            *COM*:0000000000000200 g_RxBuf
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1531   .text.readUSART2:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1538   .text.readUSART2:0000000000000000 readUSART2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1570   .text.readUSART2:0000000000000020 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1577   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1584   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1623   .bss.g_RxWritten:0000000000000000 g_RxWritten
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1617   .bss.g_RxRead:0000000000000000 g_RxRead
                            *COM*:0000000000000044 hdma_i2c2_tx
                            *COM*:0000000000000044 hdma_i2c2_rx
                            *COM*:0000000000000044 hdma_usart2_tx
                            *COM*:0000000000000044 hdma_usart2_rx
                            *COM*:0000000000000054 hi2c2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1618   .bss.g_RxRead:0000000000000000 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s:1624   .bss.g_RxWritten:0000000000000000 $d

ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccNUo9dh.s 			page 42


UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_SlaveConfigSynchronization
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
SystemCoreClock
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UART_Transmit
HAL_UART_IRQHandler
HAL_UART_Receive_IT
