ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"setup.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.global	MX_GPIO_Init
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/setup.c"
   1:Src/setup.c   **** /*
   2:Src/setup.c   **** * This file is part of the hoverboard-firmware-hack project.
   3:Src/setup.c   **** *
   4:Src/setup.c   **** * Copyright (C) 2017-2018 Rene Hopf <renehopf@mac.com>
   5:Src/setup.c   **** * Copyright (C) 2017-2018 Nico Stute <crinq@crinq.de>
   6:Src/setup.c   **** * Copyright (C) 2017-2018 Niklas Fauth <niklas.fauth@kit.fail>
   7:Src/setup.c   **** *
   8:Src/setup.c   **** * This program is free software: you can redistribute it and/or modify
   9:Src/setup.c   **** * it under the terms of the GNU General Public License as published by
  10:Src/setup.c   **** * the Free Software Foundation, either version 3 of the License, or
  11:Src/setup.c   **** * (at your option) any later version.
  12:Src/setup.c   **** *
  13:Src/setup.c   **** * This program is distributed in the hope that it will be useful,
  14:Src/setup.c   **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:Src/setup.c   **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:Src/setup.c   **** * GNU General Public License for more details.
  17:Src/setup.c   **** *
  18:Src/setup.c   **** * You should have received a copy of the GNU General Public License
  19:Src/setup.c   **** * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:Src/setup.c   **** */
  21:Src/setup.c   **** 
  22:Src/setup.c   **** /*
  23:Src/setup.c   **** tim1 master, enable -> trgo
  24:Src/setup.c   **** tim8, gated slave mode, trgo by tim1 trgo. overflow -> trgo
  25:Src/setup.c   **** adc1,adc2 triggered by tim8 trgo
  26:Src/setup.c   **** adc 1,2 dual mode
  27:Src/setup.c   **** 
  28:Src/setup.c   **** ADC1             ADC2
  29:Src/setup.c   **** R_Blau PC4 CH14  R_Gelb PC5 CH15
  30:Src/setup.c   **** L_Gr√ºn PA0 CH01  L_Blau PC3 CH13
  31:Src/setup.c   **** R_DC PC1 CH11    L_DC PC0 CH10
  32:Src/setup.c   **** BAT   PC2 CH12   L_TX PA2 CH02
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 2


  33:Src/setup.c   **** BAT   PC2 CH12   L_RX PA3 CH03
  34:Src/setup.c   **** 
  35:Src/setup.c   **** pb10 usart3 dma1 channel2/3
  36:Src/setup.c   **** */
  37:Src/setup.c   **** 
  38:Src/setup.c   **** #include "defines.h"
  39:Src/setup.c   **** #include "config.h"
  40:Src/setup.c   **** #include <stdio.h>
  41:Src/setup.c   **** 
  42:Src/setup.c   **** TIM_HandleTypeDef htim_right;
  43:Src/setup.c   **** TIM_HandleTypeDef htim_left;
  44:Src/setup.c   **** ADC_HandleTypeDef hadc1;
  45:Src/setup.c   **** ADC_HandleTypeDef hadc2;
  46:Src/setup.c   **** I2C_HandleTypeDef hi2c2;
  47:Src/setup.c   **** UART_HandleTypeDef huart2;
  48:Src/setup.c   **** UART_HandleTypeDef huart3;
  49:Src/setup.c   **** 
  50:Src/setup.c   **** 
  51:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_rx;
  52:Src/setup.c   **** DMA_HandleTypeDef hdma_usart2_tx;
  53:Src/setup.c   **** volatile adc_buf_t adc_buffer;
  54:Src/setup.c   **** 
  55:Src/setup.c   **** 
  56:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_rx;
  57:Src/setup.c   **** DMA_HandleTypeDef hdma_i2c2_tx;
  58:Src/setup.c   **** 
  59:Src/setup.c   **** void MX_GPIO_Init(void) {
  27              		.loc 1 59 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 89B0     		sub	sp, sp, #36
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 72
  46              	.LBB2:
  60:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  61:Src/setup.c   **** 
  62:Src/setup.c   ****   /* GPIO Ports Clock Enable */
  63:Src/setup.c   ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 63 0
  48 0006 7B4B     		ldr	r3, .L3
  49 0008 9A69     		ldr	r2, [r3, #24]
  50 000a 42F00402 		orr	r2, r2, #4
  51 000e 9A61     		str	r2, [r3, #24]
  52 0010 9A69     		ldr	r2, [r3, #24]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 3


  53 0012 02F00402 		and	r2, r2, #4
  54 0016 0192     		str	r2, [sp, #4]
  55 0018 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
  64:Src/setup.c   ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 64 0
  59 001a 9A69     		ldr	r2, [r3, #24]
  60 001c 42F00802 		orr	r2, r2, #8
  61 0020 9A61     		str	r2, [r3, #24]
  62 0022 9A69     		ldr	r2, [r3, #24]
  63 0024 02F00802 		and	r2, r2, #8
  64 0028 0292     		str	r2, [sp, #8]
  65 002a 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
  65:Src/setup.c   ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 65 0
  69 002c 9A69     		ldr	r2, [r3, #24]
  70 002e 42F01002 		orr	r2, r2, #16
  71 0032 9A61     		str	r2, [r3, #24]
  72 0034 9B69     		ldr	r3, [r3, #24]
  73 0036 03F01003 		and	r3, r3, #16
  74 003a 0393     		str	r3, [sp, #12]
  75 003c 039B     		ldr	r3, [sp, #12]
  76              	.LBE4:
  66:Src/setup.c   **** 
  67:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_INPUT;
  68:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_NOPULL;
  77              		.loc 1 68 0
  78 003e 0023     		movs	r3, #0
  79 0040 0693     		str	r3, [sp, #24]
  69:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 69 0
  81 0042 0227     		movs	r7, #2
  82 0044 0797     		str	r7, [sp, #28]
  70:Src/setup.c   **** 
  71:Src/setup.c   ****   #ifdef HALL_INTERRUPTS
  72:Src/setup.c   ****     GPIO_InitStruct.Mode  = GPIO_MODE_IT_RISING_FALLING;
  83              		.loc 1 72 0
  84 0046 6C4B     		ldr	r3, .L3+4
  85 0048 0593     		str	r3, [sp, #20]
  73:Src/setup.c   ****   #endif
  74:Src/setup.c   ****   
  75:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_U_PIN;
  86              		.loc 1 75 0
  87 004a 4FF0200A 		mov	r10, #32
  88 004e 0DEB0A04 		add	r4, sp, r10
  89 0052 44F810AD 		str	r10, [r4, #-16]!
  76:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_U_PORT, &GPIO_InitStruct);
  90              		.loc 1 76 0
  91 0056 2146     		mov	r1, r4
  92 0058 6848     		ldr	r0, .L3+8
  93 005a FFF7FEFF 		bl	HAL_GPIO_Init
  94              	.LVL0:
  77:Src/setup.c   **** 
  78:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_V_PIN;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 4


  95              		.loc 1 78 0
  96 005e 4023     		movs	r3, #64
  97 0060 0493     		str	r3, [sp, #16]
  79:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_V_PORT, &GPIO_InitStruct);
  98              		.loc 1 79 0
  99 0062 2146     		mov	r1, r4
 100 0064 6548     		ldr	r0, .L3+8
 101 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 102              	.LVL1:
  80:Src/setup.c   **** 
  81:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_HALL_W_PIN;
 103              		.loc 1 81 0
 104 006a 8025     		movs	r5, #128
 105 006c 0495     		str	r5, [sp, #16]
  82:Src/setup.c   ****   HAL_GPIO_Init(LEFT_HALL_W_PORT, &GPIO_InitStruct);
 106              		.loc 1 82 0
 107 006e 2146     		mov	r1, r4
 108 0070 6248     		ldr	r0, .L3+8
 109 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 110              	.LVL2:
  83:Src/setup.c   **** 
  84:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_U_PIN;
 111              		.loc 1 84 0
 112 0076 4FF48063 		mov	r3, #1024
 113 007a 0493     		str	r3, [sp, #16]
  85:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_U_PORT, &GPIO_InitStruct);
 114              		.loc 1 85 0
 115 007c 2146     		mov	r1, r4
 116 007e 6048     		ldr	r0, .L3+12
 117 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL3:
  86:Src/setup.c   **** 
  87:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_V_PIN;
 119              		.loc 1 87 0
 120 0084 4FF40063 		mov	r3, #2048
 121 0088 0493     		str	r3, [sp, #16]
  88:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_V_PORT, &GPIO_InitStruct);
 122              		.loc 1 88 0
 123 008a 2146     		mov	r1, r4
 124 008c 5C48     		ldr	r0, .L3+12
 125 008e FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL4:
  89:Src/setup.c   **** 
  90:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_HALL_W_PIN;
 127              		.loc 1 90 0
 128 0092 4FF48056 		mov	r6, #4096
 129 0096 0496     		str	r6, [sp, #16]
  91:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_HALL_W_PORT, &GPIO_InitStruct);
 130              		.loc 1 91 0
 131 0098 2146     		mov	r1, r4
 132 009a 5948     		ldr	r0, .L3+12
 133 009c FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL5:
  92:Src/setup.c   **** 
  93:Src/setup.c   ****   GPIO_InitStruct.Pin = CHARGER_PIN;
 135              		.loc 1 93 0
 136 00a0 0496     		str	r6, [sp, #16]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 5


  94:Src/setup.c   ****   HAL_GPIO_Init(CHARGER_PORT, &GPIO_InitStruct);
 137              		.loc 1 94 0
 138 00a2 2146     		mov	r1, r4
 139 00a4 5748     		ldr	r0, .L3+16
 140 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL6:
  95:Src/setup.c   **** 
  96:Src/setup.c   ****   GPIO_InitStruct.Pin = BUTTON_PIN;
 142              		.loc 1 96 0
 143 00aa 0497     		str	r7, [sp, #16]
  97:Src/setup.c   ****   HAL_GPIO_Init(BUTTON_PORT, &GPIO_InitStruct);
 144              		.loc 1 97 0
 145 00ac 2146     		mov	r1, r4
 146 00ae 5548     		ldr	r0, .L3+16
 147 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL7:
  98:Src/setup.c   **** 
  99:Src/setup.c   **** 
 100:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 149              		.loc 1 100 0
 150 00b4 4FF00108 		mov	r8, #1
 151 00b8 CDF81480 		str	r8, [sp, #20]
 101:Src/setup.c   **** 
 102:Src/setup.c   ****   GPIO_InitStruct.Pin = LED_PIN;
 152              		.loc 1 102 0
 153 00bc 4FF00409 		mov	r9, #4
 154 00c0 CDF81090 		str	r9, [sp, #16]
 103:Src/setup.c   ****   HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);
 155              		.loc 1 103 0
 156 00c4 2146     		mov	r1, r4
 157 00c6 4D48     		ldr	r0, .L3+8
 158 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL8:
 104:Src/setup.c   **** 
 105:Src/setup.c   ****   GPIO_InitStruct.Pin = BUZZER_PIN;
 160              		.loc 1 105 0
 161 00cc 1026     		movs	r6, #16
 162 00ce 0496     		str	r6, [sp, #16]
 106:Src/setup.c   ****   HAL_GPIO_Init(BUZZER_PORT, &GPIO_InitStruct);
 163              		.loc 1 106 0
 164 00d0 2146     		mov	r1, r4
 165 00d2 4C48     		ldr	r0, .L3+16
 166 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL9:
 107:Src/setup.c   **** 
 108:Src/setup.c   ****   GPIO_InitStruct.Pin = OFF_PIN;
 168              		.loc 1 108 0
 169 00d8 CDF810A0 		str	r10, [sp, #16]
 109:Src/setup.c   ****   HAL_GPIO_Init(OFF_PORT, &GPIO_InitStruct);
 170              		.loc 1 109 0
 171 00dc 2146     		mov	r1, r4
 172 00de 4948     		ldr	r0, .L3+16
 173 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL10:
 110:Src/setup.c   **** 
 111:Src/setup.c   **** 
 112:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 6


 175              		.loc 1 112 0
 176 00e4 0323     		movs	r3, #3
 177 00e6 0593     		str	r3, [sp, #20]
 113:Src/setup.c   **** 
 114:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_DC_CUR_PIN;
 178              		.loc 1 114 0
 179 00e8 CDF81080 		str	r8, [sp, #16]
 115:Src/setup.c   ****   HAL_GPIO_Init(LEFT_DC_CUR_PORT, &GPIO_InitStruct);
 180              		.loc 1 115 0
 181 00ec 2146     		mov	r1, r4
 182 00ee 4448     		ldr	r0, .L3+12
 183 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 184              	.LVL11:
 116:Src/setup.c   **** 
 117:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_U_CUR_PIN;
 185              		.loc 1 117 0
 186 00f4 CDF81080 		str	r8, [sp, #16]
 118:Src/setup.c   ****   HAL_GPIO_Init(LEFT_U_CUR_PORT, &GPIO_InitStruct);
 187              		.loc 1 118 0
 188 00f8 2146     		mov	r1, r4
 189 00fa 4248     		ldr	r0, .L3+16
 190 00fc FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL12:
 119:Src/setup.c   **** 
 120:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_V_CUR_PIN;
 192              		.loc 1 120 0
 193 0100 4FF0080B 		mov	fp, #8
 194 0104 CDF810B0 		str	fp, [sp, #16]
 121:Src/setup.c   ****   HAL_GPIO_Init(LEFT_V_CUR_PORT, &GPIO_InitStruct);
 195              		.loc 1 121 0
 196 0108 2146     		mov	r1, r4
 197 010a 3D48     		ldr	r0, .L3+12
 198 010c FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL13:
 122:Src/setup.c   **** 
 123:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_DC_CUR_PIN;
 200              		.loc 1 123 0
 201 0110 0497     		str	r7, [sp, #16]
 124:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_DC_CUR_PORT, &GPIO_InitStruct);
 202              		.loc 1 124 0
 203 0112 2146     		mov	r1, r4
 204 0114 3A48     		ldr	r0, .L3+12
 205 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 206              	.LVL14:
 125:Src/setup.c   **** 
 126:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_U_CUR_PIN;
 207              		.loc 1 126 0
 208 011a 0496     		str	r6, [sp, #16]
 127:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_U_CUR_PORT, &GPIO_InitStruct);
 209              		.loc 1 127 0
 210 011c 2146     		mov	r1, r4
 211 011e 3848     		ldr	r0, .L3+12
 212 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL15:
 128:Src/setup.c   **** 
 129:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_V_CUR_PIN;
 214              		.loc 1 129 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 7


 215 0124 CDF810A0 		str	r10, [sp, #16]
 130:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_V_CUR_PORT, &GPIO_InitStruct);
 216              		.loc 1 130 0
 217 0128 2146     		mov	r1, r4
 218 012a 3548     		ldr	r0, .L3+12
 219 012c FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL16:
 131:Src/setup.c   **** 
 132:Src/setup.c   ****   GPIO_InitStruct.Pin = DCLINK_PIN;
 221              		.loc 1 132 0
 222 0130 CDF81090 		str	r9, [sp, #16]
 133:Src/setup.c   ****   HAL_GPIO_Init(DCLINK_PORT, &GPIO_InitStruct);
 223              		.loc 1 133 0
 224 0134 2146     		mov	r1, r4
 225 0136 3248     		ldr	r0, .L3+12
 226 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 227              	.LVL17:
 134:Src/setup.c   **** 
 135:Src/setup.c   ****   //Analog in
 136:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 228              		.loc 1 136 0
 229 013c CDF810B0 		str	fp, [sp, #16]
 137:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 230              		.loc 1 137 0
 231 0140 2146     		mov	r1, r4
 232 0142 3048     		ldr	r0, .L3+16
 233 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 234              	.LVL18:
 138:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 235              		.loc 1 138 0
 236 0148 CDF81090 		str	r9, [sp, #16]
 139:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237              		.loc 1 139 0
 238 014c 2146     		mov	r1, r4
 239 014e 2D48     		ldr	r0, .L3+16
 240 0150 FFF7FEFF 		bl	HAL_GPIO_Init
 241              	.LVL19:
 140:Src/setup.c   **** 
 141:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 242              		.loc 1 141 0
 243 0154 0597     		str	r7, [sp, #20]
 142:Src/setup.c   **** 
 143:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UH_PIN;
 244              		.loc 1 143 0
 245 0156 4023     		movs	r3, #64
 246 0158 0493     		str	r3, [sp, #16]
 144:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UH_PORT, &GPIO_InitStruct);
 247              		.loc 1 144 0
 248 015a 2146     		mov	r1, r4
 249 015c 2848     		ldr	r0, .L3+12
 250 015e FFF7FEFF 		bl	HAL_GPIO_Init
 251              	.LVL20:
 145:Src/setup.c   **** 
 146:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VH_PIN;
 252              		.loc 1 146 0
 253 0162 0495     		str	r5, [sp, #16]
 147:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VH_PORT, &GPIO_InitStruct);
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 8


 254              		.loc 1 147 0
 255 0164 2146     		mov	r1, r4
 256 0166 2648     		ldr	r0, .L3+12
 257 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL21:
 148:Src/setup.c   **** 
 149:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WH_PIN;
 259              		.loc 1 149 0
 260 016c 4FF48079 		mov	r9, #256
 261 0170 CDF81090 		str	r9, [sp, #16]
 150:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WH_PORT, &GPIO_InitStruct);
 262              		.loc 1 150 0
 263 0174 2146     		mov	r1, r4
 264 0176 2248     		ldr	r0, .L3+12
 265 0178 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL22:
 151:Src/setup.c   **** 
 152:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_UL_PIN;
 267              		.loc 1 152 0
 268 017c 0495     		str	r5, [sp, #16]
 153:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_UL_PORT, &GPIO_InitStruct);
 269              		.loc 1 153 0
 270 017e 2146     		mov	r1, r4
 271 0180 2048     		ldr	r0, .L3+16
 272 0182 FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL23:
 154:Src/setup.c   **** 
 155:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_VL_PIN;
 274              		.loc 1 155 0
 275 0186 CDF81080 		str	r8, [sp, #16]
 156:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_VL_PORT, &GPIO_InitStruct);
 276              		.loc 1 156 0
 277 018a 2146     		mov	r1, r4
 278 018c 1B48     		ldr	r0, .L3+8
 279 018e FFF7FEFF 		bl	HAL_GPIO_Init
 280              	.LVL24:
 157:Src/setup.c   **** 
 158:Src/setup.c   ****   GPIO_InitStruct.Pin = LEFT_TIM_WL_PIN;
 281              		.loc 1 158 0
 282 0192 0497     		str	r7, [sp, #16]
 159:Src/setup.c   ****   HAL_GPIO_Init(LEFT_TIM_WL_PORT, &GPIO_InitStruct);
 283              		.loc 1 159 0
 284 0194 2146     		mov	r1, r4
 285 0196 1948     		ldr	r0, .L3+8
 286 0198 FFF7FEFF 		bl	HAL_GPIO_Init
 287              	.LVL25:
 160:Src/setup.c   **** 
 161:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UH_PIN;
 288              		.loc 1 161 0
 289 019c CDF81090 		str	r9, [sp, #16]
 162:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UH_PORT, &GPIO_InitStruct);
 290              		.loc 1 162 0
 291 01a0 2146     		mov	r1, r4
 292 01a2 1848     		ldr	r0, .L3+16
 293 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL26:
 163:Src/setup.c   **** 
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 9


 164:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VH_PIN;
 295              		.loc 1 164 0
 296 01a8 4FF40073 		mov	r3, #512
 297 01ac 0493     		str	r3, [sp, #16]
 165:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VH_PORT, &GPIO_InitStruct);
 298              		.loc 1 165 0
 299 01ae 2146     		mov	r1, r4
 300 01b0 1448     		ldr	r0, .L3+16
 301 01b2 FFF7FEFF 		bl	HAL_GPIO_Init
 302              	.LVL27:
 166:Src/setup.c   **** 
 167:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WH_PIN;
 303              		.loc 1 167 0
 304 01b6 4FF48063 		mov	r3, #1024
 305 01ba 0493     		str	r3, [sp, #16]
 168:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WH_PORT, &GPIO_InitStruct);
 306              		.loc 1 168 0
 307 01bc 2146     		mov	r1, r4
 308 01be 1148     		ldr	r0, .L3+16
 309 01c0 FFF7FEFF 		bl	HAL_GPIO_Init
 310              	.LVL28:
 169:Src/setup.c   **** 
 170:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_UL_PIN;
 311              		.loc 1 170 0
 312 01c4 4FF40053 		mov	r3, #8192
 313 01c8 0493     		str	r3, [sp, #16]
 171:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_UL_PORT, &GPIO_InitStruct);
 314              		.loc 1 171 0
 315 01ca 2146     		mov	r1, r4
 316 01cc 0B48     		ldr	r0, .L3+8
 317 01ce FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL29:
 172:Src/setup.c   **** 
 173:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_VL_PIN;
 319              		.loc 1 173 0
 320 01d2 4FF48043 		mov	r3, #16384
 321 01d6 0493     		str	r3, [sp, #16]
 174:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_VL_PORT, &GPIO_InitStruct);
 322              		.loc 1 174 0
 323 01d8 2146     		mov	r1, r4
 324 01da 0848     		ldr	r0, .L3+8
 325 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL30:
 175:Src/setup.c   **** 
 176:Src/setup.c   ****   GPIO_InitStruct.Pin = RIGHT_TIM_WL_PIN;
 327              		.loc 1 176 0
 328 01e0 4FF40043 		mov	r3, #32768
 329 01e4 0493     		str	r3, [sp, #16]
 177:Src/setup.c   ****   HAL_GPIO_Init(RIGHT_TIM_WL_PORT, &GPIO_InitStruct);
 330              		.loc 1 177 0
 331 01e6 2146     		mov	r1, r4
 332 01e8 0448     		ldr	r0, .L3+8
 333 01ea FFF7FEFF 		bl	HAL_GPIO_Init
 334              	.LVL31:
 178:Src/setup.c   **** }
 335              		.loc 1 178 0
 336 01ee 09B0     		add	sp, sp, #36
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 10


 337              	.LCFI2:
 338              		.cfi_def_cfa_offset 36
 339              		@ sp needed
 340 01f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 341              	.L4:
 342              		.align	2
 343              	.L3:
 344 01f4 00100240 		.word	1073876992
 345 01f8 00003110 		.word	271646720
 346 01fc 000C0140 		.word	1073810432
 347 0200 00100140 		.word	1073811456
 348 0204 00080140 		.word	1073809408
 349              		.cfi_endproc
 350              	.LFE126:
 352              		.section	.text.MX_TIM_Init,"ax",%progbits
 353              		.align	1
 354              		.global	MX_TIM_Init
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	MX_TIM_Init:
 361              	.LFB127:
 179:Src/setup.c   **** 
 180:Src/setup.c   **** void MX_TIM_Init(void) {
 362              		.loc 1 180 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 96
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 367              	.LCFI3:
 368              		.cfi_def_cfa_offset 36
 369              		.cfi_offset 4, -36
 370              		.cfi_offset 5, -32
 371              		.cfi_offset 6, -28
 372              		.cfi_offset 7, -24
 373              		.cfi_offset 8, -20
 374              		.cfi_offset 9, -16
 375              		.cfi_offset 10, -12
 376              		.cfi_offset 11, -8
 377              		.cfi_offset 14, -4
 378 0004 99B0     		sub	sp, sp, #100
 379              	.LCFI4:
 380              		.cfi_def_cfa_offset 136
 381              	.LBB5:
 181:Src/setup.c   ****   __HAL_RCC_TIM1_CLK_ENABLE();
 382              		.loc 1 181 0
 383 0006 794B     		ldr	r3, .L7
 384 0008 9A69     		ldr	r2, [r3, #24]
 385 000a 42F40062 		orr	r2, r2, #2048
 386 000e 9A61     		str	r2, [r3, #24]
 387 0010 9A69     		ldr	r2, [r3, #24]
 388 0012 02F40062 		and	r2, r2, #2048
 389 0016 0192     		str	r2, [sp, #4]
 390 0018 019A     		ldr	r2, [sp, #4]
 391              	.LBE5:
 392              	.LBB6:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 11


 182:Src/setup.c   ****   __HAL_RCC_TIM8_CLK_ENABLE();
 393              		.loc 1 182 0
 394 001a 9A69     		ldr	r2, [r3, #24]
 395 001c 42F40052 		orr	r2, r2, #8192
 396 0020 9A61     		str	r2, [r3, #24]
 397 0022 9B69     		ldr	r3, [r3, #24]
 398 0024 03F40053 		and	r3, r3, #8192
 399 0028 0293     		str	r3, [sp, #8]
 400 002a 029B     		ldr	r3, [sp, #8]
 401              	.LBE6:
 183:Src/setup.c   **** 
 184:Src/setup.c   ****   TIM_MasterConfigTypeDef sMasterConfig;
 185:Src/setup.c   ****   TIM_OC_InitTypeDef sConfigOC;
 186:Src/setup.c   ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 187:Src/setup.c   ****   TIM_SlaveConfigTypeDef sTimConfig;
 188:Src/setup.c   **** 
 189:Src/setup.c   ****   htim_right.Instance               = RIGHT_TIM;
 402              		.loc 1 189 0
 403 002c 704E     		ldr	r6, .L7+4
 404 002e 714F     		ldr	r7, .L7+8
 405 0030 3760     		str	r7, [r6]
 190:Src/setup.c   ****   htim_right.Init.Prescaler         = 0;
 406              		.loc 1 190 0
 407 0032 0024     		movs	r4, #0
 408 0034 7460     		str	r4, [r6, #4]
 191:Src/setup.c   ****   htim_right.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 409              		.loc 1 191 0
 410 0036 4FF02008 		mov	r8, #32
 411 003a C6F80880 		str	r8, [r6, #8]
 192:Src/setup.c   ****   htim_right.Init.Period            = SystemCoreClock / 2 / PWM_FREQ;
 412              		.loc 1 192 0
 413 003e DFF8BCB1 		ldr	fp, .L7+16
 414 0042 DBF80030 		ldr	r3, [fp]
 415 0046 DFF8B8A1 		ldr	r10, .L7+20
 416 004a AAFB0323 		umull	r2, r3, r10, r3
 417 004e DB0A     		lsrs	r3, r3, #11
 418 0050 F360     		str	r3, [r6, #12]
 193:Src/setup.c   ****   htim_right.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 419              		.loc 1 193 0
 420 0052 3461     		str	r4, [r6, #16]
 194:Src/setup.c   ****   htim_right.Init.RepetitionCounter = 0;
 421              		.loc 1 194 0
 422 0054 7461     		str	r4, [r6, #20]
 195:Src/setup.c   ****   htim_right.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 423              		.loc 1 195 0
 424 0056 B461     		str	r4, [r6, #24]
 196:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_right);
 425              		.loc 1 196 0
 426 0058 3046     		mov	r0, r6
 427 005a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 428              	.LVL32:
 197:Src/setup.c   **** 
 198:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
 429              		.loc 1 198 0
 430 005e 1023     		movs	r3, #16
 431 0060 1693     		str	r3, [sp, #88]
 199:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 12


 432              		.loc 1 199 0
 433 0062 1794     		str	r4, [sp, #92]
 200:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_right, &sMasterConfig);
 434              		.loc 1 200 0
 435 0064 16A9     		add	r1, sp, #88
 436 0066 3046     		mov	r0, r6
 437 0068 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 438              	.LVL33:
 201:Src/setup.c   **** 
 202:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 439              		.loc 1 202 0
 440 006c 6023     		movs	r3, #96
 441 006e 0F93     		str	r3, [sp, #60]
 203:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 442              		.loc 1 203 0
 443 0070 1094     		str	r4, [sp, #64]
 204:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 444              		.loc 1 204 0
 445 0072 1194     		str	r4, [sp, #68]
 205:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 446              		.loc 1 205 0
 447 0074 0823     		movs	r3, #8
 448 0076 1293     		str	r3, [sp, #72]
 206:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 449              		.loc 1 206 0
 450 0078 1394     		str	r4, [sp, #76]
 207:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 451              		.loc 1 207 0
 452 007a 1494     		str	r4, [sp, #80]
 208:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 453              		.loc 1 208 0
 454 007c 4FF40073 		mov	r3, #512
 455 0080 1593     		str	r3, [sp, #84]
 209:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_1);
 456              		.loc 1 209 0
 457 0082 2246     		mov	r2, r4
 458 0084 0FA9     		add	r1, sp, #60
 459 0086 3046     		mov	r0, r6
 460 0088 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 461              	.LVL34:
 210:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_2);
 462              		.loc 1 210 0
 463 008c 0422     		movs	r2, #4
 464 008e 0FA9     		add	r1, sp, #60
 465 0090 3046     		mov	r0, r6
 466 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 467              	.LVL35:
 211:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_right, &sConfigOC, TIM_CHANNEL_3);
 468              		.loc 1 211 0
 469 0096 0822     		movs	r2, #8
 470 0098 0FA9     		add	r1, sp, #60
 471 009a 3046     		mov	r0, r6
 472 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 473              	.LVL36:
 212:Src/setup.c   **** 
 213:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 474              		.loc 1 213 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 13


 475 00a0 4FF40063 		mov	r3, #2048
 476 00a4 0893     		str	r3, [sp, #32]
 214:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 477              		.loc 1 214 0
 478 00a6 4FF48063 		mov	r3, #1024
 479 00aa 0993     		str	r3, [sp, #36]
 215:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 480              		.loc 1 215 0
 481 00ac 0A94     		str	r4, [sp, #40]
 216:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 482              		.loc 1 216 0
 483 00ae CDF82C80 		str	r8, [sp, #44]
 217:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 484              		.loc 1 217 0
 485 00b2 0C94     		str	r4, [sp, #48]
 218:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 486              		.loc 1 218 0
 487 00b4 0D94     		str	r4, [sp, #52]
 219:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 488              		.loc 1 219 0
 489 00b6 0E94     		str	r4, [sp, #56]
 220:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_right, &sBreakDeadTimeConfig);
 490              		.loc 1 220 0
 491 00b8 0DEB0801 		add	r1, sp, r8
 492 00bc 3046     		mov	r0, r6
 493 00be FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 494              	.LVL37:
 221:Src/setup.c   **** 
 222:Src/setup.c   ****   htim_left.Instance               = LEFT_TIM;
 495              		.loc 1 222 0
 496 00c2 4D4D     		ldr	r5, .L7+12
 497 00c4 DFF83C91 		ldr	r9, .L7+24
 498 00c8 C5F80090 		str	r9, [r5]
 223:Src/setup.c   ****   htim_left.Init.Prescaler         = 0;
 499              		.loc 1 223 0
 500 00cc 6C60     		str	r4, [r5, #4]
 224:Src/setup.c   ****   htim_left.Init.CounterMode       = TIM_COUNTERMODE_CENTERALIGNED1;
 501              		.loc 1 224 0
 502 00ce C5F80880 		str	r8, [r5, #8]
 225:Src/setup.c   ****   htim_left.Init.Period            = SystemCoreClock / 2 / PWM_FREQ;
 503              		.loc 1 225 0
 504 00d2 DBF80030 		ldr	r3, [fp]
 505 00d6 AAFB033A 		umull	r3, r10, r10, r3
 506 00da 4FEADA23 		lsr	r3, r10, #11
 507 00de EB60     		str	r3, [r5, #12]
 226:Src/setup.c   ****   htim_left.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 508              		.loc 1 226 0
 509 00e0 2C61     		str	r4, [r5, #16]
 227:Src/setup.c   ****   htim_left.Init.RepetitionCounter = 0;
 510              		.loc 1 227 0
 511 00e2 6C61     		str	r4, [r5, #20]
 228:Src/setup.c   ****   htim_left.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 512              		.loc 1 228 0
 513 00e4 AC61     		str	r4, [r5, #24]
 229:Src/setup.c   ****   HAL_TIM_PWM_Init(&htim_left);
 514              		.loc 1 229 0
 515 00e6 2846     		mov	r0, r5
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 14


 516 00e8 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 517              	.LVL38:
 230:Src/setup.c   **** 
 231:Src/setup.c   ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 518              		.loc 1 231 0
 519 00ec CDF85880 		str	r8, [sp, #88]
 232:Src/setup.c   ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_ENABLE;
 520              		.loc 1 232 0
 521 00f0 8023     		movs	r3, #128
 522 00f2 1793     		str	r3, [sp, #92]
 233:Src/setup.c   ****   HAL_TIMEx_MasterConfigSynchronization(&htim_left, &sMasterConfig);
 523              		.loc 1 233 0
 524 00f4 16A9     		add	r1, sp, #88
 525 00f6 2846     		mov	r0, r5
 526 00f8 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 527              	.LVL39:
 234:Src/setup.c   **** 
 235:Src/setup.c   ****   sTimConfig.InputTrigger = TIM_TS_ITR0;
 528              		.loc 1 235 0
 529 00fc 0494     		str	r4, [sp, #16]
 236:Src/setup.c   ****   sTimConfig.SlaveMode    = TIM_SLAVEMODE_GATED;
 530              		.loc 1 236 0
 531 00fe 18A9     		add	r1, sp, #96
 532 0100 0523     		movs	r3, #5
 533 0102 41F8543D 		str	r3, [r1, #-84]!
 237:Src/setup.c   ****   HAL_TIM_SlaveConfigSynchronization(&htim_left, &sTimConfig);
 534              		.loc 1 237 0
 535 0106 2846     		mov	r0, r5
 536 0108 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchronization
 537              	.LVL40:
 238:Src/setup.c   **** 
 239:Src/setup.c   ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 538              		.loc 1 239 0
 539 010c 6023     		movs	r3, #96
 540 010e 0F93     		str	r3, [sp, #60]
 240:Src/setup.c   ****   sConfigOC.Pulse        = 0;
 541              		.loc 1 240 0
 542 0110 1094     		str	r4, [sp, #64]
 241:Src/setup.c   ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 543              		.loc 1 241 0
 544 0112 1194     		str	r4, [sp, #68]
 242:Src/setup.c   ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 545              		.loc 1 242 0
 546 0114 0823     		movs	r3, #8
 547 0116 1293     		str	r3, [sp, #72]
 243:Src/setup.c   ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 548              		.loc 1 243 0
 549 0118 1394     		str	r4, [sp, #76]
 244:Src/setup.c   ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 550              		.loc 1 244 0
 551 011a 1494     		str	r4, [sp, #80]
 245:Src/setup.c   ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 552              		.loc 1 245 0
 553 011c 4FF40073 		mov	r3, #512
 554 0120 1593     		str	r3, [sp, #84]
 246:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_1);
 555              		.loc 1 246 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 15


 556 0122 2246     		mov	r2, r4
 557 0124 0FA9     		add	r1, sp, #60
 558 0126 2846     		mov	r0, r5
 559 0128 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 560              	.LVL41:
 247:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_2);
 561              		.loc 1 247 0
 562 012c 0422     		movs	r2, #4
 563 012e 0FA9     		add	r1, sp, #60
 564 0130 2846     		mov	r0, r5
 565 0132 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 566              	.LVL42:
 248:Src/setup.c   ****   HAL_TIM_PWM_ConfigChannel(&htim_left, &sConfigOC, TIM_CHANNEL_3);
 567              		.loc 1 248 0
 568 0136 0822     		movs	r2, #8
 569 0138 0FA9     		add	r1, sp, #60
 570 013a 2846     		mov	r0, r5
 571 013c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 572              	.LVL43:
 249:Src/setup.c   **** 
 250:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 573              		.loc 1 250 0
 574 0140 4FF40063 		mov	r3, #2048
 575 0144 0893     		str	r3, [sp, #32]
 251:Src/setup.c   ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 576              		.loc 1 251 0
 577 0146 4FF48063 		mov	r3, #1024
 578 014a 0993     		str	r3, [sp, #36]
 252:Src/setup.c   ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 579              		.loc 1 252 0
 580 014c 0A94     		str	r4, [sp, #40]
 253:Src/setup.c   ****   sBreakDeadTimeConfig.DeadTime         = DEAD_TIME;
 581              		.loc 1 253 0
 582 014e CDF82C80 		str	r8, [sp, #44]
 254:Src/setup.c   ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 583              		.loc 1 254 0
 584 0152 0C94     		str	r4, [sp, #48]
 255:Src/setup.c   ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 585              		.loc 1 255 0
 586 0154 0D94     		str	r4, [sp, #52]
 256:Src/setup.c   ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_DISABLE;
 587              		.loc 1 256 0
 588 0156 0E94     		str	r4, [sp, #56]
 257:Src/setup.c   ****   HAL_TIMEx_ConfigBreakDeadTime(&htim_left, &sBreakDeadTimeConfig);
 589              		.loc 1 257 0
 590 0158 0DEB0801 		add	r1, sp, r8
 591 015c 2846     		mov	r0, r5
 592 015e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 593              	.LVL44:
 258:Src/setup.c   **** 
 259:Src/setup.c   ****   LEFT_TIM->BDTR &= ~TIM_BDTR_MOE;
 594              		.loc 1 259 0
 595 0162 D9F84430 		ldr	r3, [r9, #68]
 596 0166 23F40043 		bic	r3, r3, #32768
 597 016a C9F84430 		str	r3, [r9, #68]
 260:Src/setup.c   ****   RIGHT_TIM->BDTR &= ~TIM_BDTR_MOE;
 598              		.loc 1 260 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 16


 599 016e 7B6C     		ldr	r3, [r7, #68]
 600 0170 23F40043 		bic	r3, r3, #32768
 601 0174 7B64     		str	r3, [r7, #68]
 261:Src/setup.c   **** 
 262:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_1);
 602              		.loc 1 262 0
 603 0176 2146     		mov	r1, r4
 604 0178 2846     		mov	r0, r5
 605 017a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 606              	.LVL45:
 263:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_2);
 607              		.loc 1 263 0
 608 017e 0421     		movs	r1, #4
 609 0180 2846     		mov	r0, r5
 610 0182 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 611              	.LVL46:
 264:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_left, TIM_CHANNEL_3);
 612              		.loc 1 264 0
 613 0186 0821     		movs	r1, #8
 614 0188 2846     		mov	r0, r5
 615 018a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 616              	.LVL47:
 265:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_1);
 617              		.loc 1 265 0
 618 018e 2146     		mov	r1, r4
 619 0190 2846     		mov	r0, r5
 620 0192 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 621              	.LVL48:
 266:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_2);
 622              		.loc 1 266 0
 623 0196 0421     		movs	r1, #4
 624 0198 2846     		mov	r0, r5
 625 019a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 626              	.LVL49:
 267:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_left, TIM_CHANNEL_3);
 627              		.loc 1 267 0
 628 019e 0821     		movs	r1, #8
 629 01a0 2846     		mov	r0, r5
 630 01a2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 631              	.LVL50:
 268:Src/setup.c   **** 
 269:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_1);
 632              		.loc 1 269 0
 633 01a6 2146     		mov	r1, r4
 634 01a8 3046     		mov	r0, r6
 635 01aa FFF7FEFF 		bl	HAL_TIM_PWM_Start
 636              	.LVL51:
 270:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_2);
 637              		.loc 1 270 0
 638 01ae 0421     		movs	r1, #4
 639 01b0 3046     		mov	r0, r6
 640 01b2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 641              	.LVL52:
 271:Src/setup.c   ****   HAL_TIM_PWM_Start(&htim_right, TIM_CHANNEL_3);
 642              		.loc 1 271 0
 643 01b6 0821     		movs	r1, #8
 644 01b8 3046     		mov	r0, r6
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 17


 645 01ba FFF7FEFF 		bl	HAL_TIM_PWM_Start
 646              	.LVL53:
 272:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_1);
 647              		.loc 1 272 0
 648 01be 2146     		mov	r1, r4
 649 01c0 3046     		mov	r0, r6
 650 01c2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 651              	.LVL54:
 273:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_2);
 652              		.loc 1 273 0
 653 01c6 0421     		movs	r1, #4
 654 01c8 3046     		mov	r0, r6
 655 01ca FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 656              	.LVL55:
 274:Src/setup.c   ****   HAL_TIMEx_PWMN_Start(&htim_right, TIM_CHANNEL_3);
 657              		.loc 1 274 0
 658 01ce 0821     		movs	r1, #8
 659 01d0 3046     		mov	r0, r6
 660 01d2 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 661              	.LVL56:
 275:Src/setup.c   **** 
 276:Src/setup.c   ****   htim_left.Instance->RCR = 1;
 662              		.loc 1 276 0
 663 01d6 2B68     		ldr	r3, [r5]
 664 01d8 0122     		movs	r2, #1
 665 01da 1A63     		str	r2, [r3, #48]
 277:Src/setup.c   **** 
 278:Src/setup.c   ****   __HAL_TIM_ENABLE(&htim_right);
 666              		.loc 1 278 0
 667 01dc 3268     		ldr	r2, [r6]
 668 01de 1368     		ldr	r3, [r2]
 669 01e0 43F00103 		orr	r3, r3, #1
 670 01e4 1360     		str	r3, [r2]
 279:Src/setup.c   **** }
 671              		.loc 1 279 0
 672 01e6 19B0     		add	sp, sp, #100
 673              	.LCFI5:
 674              		.cfi_def_cfa_offset 36
 675              		@ sp needed
 676 01e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 677              	.L8:
 678              		.align	2
 679              	.L7:
 680 01ec 00100240 		.word	1073876992
 681 01f0 00000000 		.word	htim_right
 682 01f4 002C0140 		.word	1073818624
 683 01f8 00000000 		.word	htim_left
 684 01fc 00000000 		.word	SystemCoreClock
 685 0200 D34D6210 		.word	274877907
 686 0204 00340140 		.word	1073820672
 687              		.cfi_endproc
 688              	.LFE127:
 690              		.section	.text.MX_ADC1_Init,"ax",%progbits
 691              		.align	1
 692              		.global	MX_ADC1_Init
 693              		.syntax unified
 694              		.thumb
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 18


 695              		.thumb_func
 696              		.fpu fpv4-sp-d16
 698              	MX_ADC1_Init:
 699              	.LFB128:
 280:Src/setup.c   **** 
 281:Src/setup.c   **** void MX_ADC1_Init(void) {
 700              		.loc 1 281 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 24
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 705              	.LCFI6:
 706              		.cfi_def_cfa_offset 24
 707              		.cfi_offset 4, -24
 708              		.cfi_offset 5, -20
 709              		.cfi_offset 6, -16
 710              		.cfi_offset 7, -12
 711              		.cfi_offset 8, -8
 712              		.cfi_offset 14, -4
 713 0004 86B0     		sub	sp, sp, #24
 714              	.LCFI7:
 715              		.cfi_def_cfa_offset 48
 716              	.LBB7:
 282:Src/setup.c   ****   ADC_MultiModeTypeDef multimode;
 283:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 284:Src/setup.c   **** 
 285:Src/setup.c   ****   __HAL_RCC_ADC1_CLK_ENABLE();
 717              		.loc 1 285 0
 718 0006 424E     		ldr	r6, .L11
 719 0008 B369     		ldr	r3, [r6, #24]
 720 000a 43F40073 		orr	r3, r3, #512
 721 000e B361     		str	r3, [r6, #24]
 722 0010 B369     		ldr	r3, [r6, #24]
 723 0012 03F40073 		and	r3, r3, #512
 724 0016 0093     		str	r3, [sp]
 725 0018 009B     		ldr	r3, [sp]
 726              	.LBE7:
 286:Src/setup.c   **** 
 287:Src/setup.c   ****   hadc1.Instance                   = ADC1;
 727              		.loc 1 287 0
 728 001a 3E4C     		ldr	r4, .L11+4
 729 001c 3E4B     		ldr	r3, .L11+8
 730 001e 2360     		str	r3, [r4]
 288:Src/setup.c   ****   hadc1.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 731              		.loc 1 288 0
 732 0020 4FF48073 		mov	r3, #256
 733 0024 A360     		str	r3, [r4, #8]
 289:Src/setup.c   ****   hadc1.Init.ContinuousConvMode    = DISABLE;
 734              		.loc 1 289 0
 735 0026 0025     		movs	r5, #0
 736 0028 E560     		str	r5, [r4, #12]
 290:Src/setup.c   ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 737              		.loc 1 290 0
 738 002a 6561     		str	r5, [r4, #20]
 291:Src/setup.c   ****   hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T8_TRGO;
 739              		.loc 1 291 0
 740 002c 4FF44023 		mov	r3, #786432
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 19


 741 0030 E361     		str	r3, [r4, #28]
 292:Src/setup.c   ****   hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 742              		.loc 1 292 0
 743 0032 6560     		str	r5, [r4, #4]
 293:Src/setup.c   ****   hadc1.Init.NbrOfConversion       = 5;
 744              		.loc 1 293 0
 745 0034 4FF00508 		mov	r8, #5
 746 0038 C4F81080 		str	r8, [r4, #16]
 294:Src/setup.c   ****   HAL_ADC_Init(&hadc1);
 747              		.loc 1 294 0
 748 003c 2046     		mov	r0, r4
 749 003e FFF7FEFF 		bl	HAL_ADC_Init
 750              	.LVL57:
 295:Src/setup.c   ****   /**Enable or disable the remapping of ADC1_ETRGREG:
 296:Src/setup.c   ****     * ADC1 External Event regular conversion is connected to TIM8 TRG0
 297:Src/setup.c   ****     */
 298:Src/setup.c   ****   __HAL_AFIO_REMAP_ADC1_ETRGREG_ENABLE();
 751              		.loc 1 298 0
 752 0042 364A     		ldr	r2, .L11+12
 753 0044 5368     		ldr	r3, [r2, #4]
 754 0046 43F48023 		orr	r3, r3, #262144
 755 004a 5360     		str	r3, [r2, #4]
 299:Src/setup.c   **** 
 300:Src/setup.c   ****   /**Configure the ADC multi-mode
 301:Src/setup.c   ****     */
 302:Src/setup.c   ****   multimode.Mode = ADC_DUALMODE_REGSIMULT;
 756              		.loc 1 302 0
 757 004c 06A9     		add	r1, sp, #24
 758 004e 4FF4C023 		mov	r3, #393216
 759 0052 41F8043D 		str	r3, [r1, #-4]!
 303:Src/setup.c   ****   HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode);
 760              		.loc 1 303 0
 761 0056 2046     		mov	r0, r4
 762 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 763              	.LVL58:
 304:Src/setup.c   **** 
 305:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 764              		.loc 1 305 0
 765 005c 0123     		movs	r3, #1
 766 005e 0493     		str	r3, [sp, #16]
 306:Src/setup.c   **** 
 307:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_14;  // pc4 left b
 767              		.loc 1 307 0
 768 0060 0E22     		movs	r2, #14
 769 0062 0292     		str	r2, [sp, #8]
 308:Src/setup.c   ****   sConfig.Rank    = 1;
 770              		.loc 1 308 0
 771 0064 0393     		str	r3, [sp, #12]
 309:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 772              		.loc 1 309 0
 773 0066 02A9     		add	r1, sp, #8
 774 0068 2046     		mov	r0, r4
 775 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 776              	.LVL59:
 310:Src/setup.c   **** 
 311:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_0;  // pa0 right a
 777              		.loc 1 311 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 20


 778 006e 0295     		str	r5, [sp, #8]
 312:Src/setup.c   ****   sConfig.Rank    = 2;
 779              		.loc 1 312 0
 780 0070 0227     		movs	r7, #2
 781 0072 0397     		str	r7, [sp, #12]
 313:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 782              		.loc 1 313 0
 783 0074 02A9     		add	r1, sp, #8
 784 0076 2046     		mov	r0, r4
 785 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 786              	.LVL60:
 314:Src/setup.c   **** 
 315:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 787              		.loc 1 315 0
 788 007c 0497     		str	r7, [sp, #16]
 316:Src/setup.c   **** 
 317:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_11;  // pc1 left cur
 789              		.loc 1 317 0
 790 007e 0B27     		movs	r7, #11
 791 0080 0297     		str	r7, [sp, #8]
 318:Src/setup.c   ****   sConfig.Rank    = 3;
 792              		.loc 1 318 0
 793 0082 0323     		movs	r3, #3
 794 0084 0393     		str	r3, [sp, #12]
 319:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 795              		.loc 1 319 0
 796 0086 02A9     		add	r1, sp, #8
 797 0088 2046     		mov	r0, r4
 798 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 799              	.LVL61:
 320:Src/setup.c   **** 
 321:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_12;  // pc2 vbat
 800              		.loc 1 321 0
 801 008e 0C23     		movs	r3, #12
 802 0090 0293     		str	r3, [sp, #8]
 322:Src/setup.c   ****   sConfig.Rank    = 4;
 803              		.loc 1 322 0
 804 0092 0423     		movs	r3, #4
 805 0094 0393     		str	r3, [sp, #12]
 323:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 806              		.loc 1 323 0
 807 0096 02A9     		add	r1, sp, #8
 808 0098 2046     		mov	r0, r4
 809 009a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 810              	.LVL62:
 324:Src/setup.c   **** 
 325:Src/setup.c   ****   //temperature requires at least 17.1uS sampling time
 326:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 811              		.loc 1 326 0
 812 009e 0723     		movs	r3, #7
 813 00a0 0493     		str	r3, [sp, #16]
 327:Src/setup.c   **** 
 328:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;  // internal temp
 814              		.loc 1 328 0
 815 00a2 1023     		movs	r3, #16
 816 00a4 0293     		str	r3, [sp, #8]
 329:Src/setup.c   ****   sConfig.Rank    = 5;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 21


 817              		.loc 1 329 0
 818 00a6 CDF80C80 		str	r8, [sp, #12]
 330:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 819              		.loc 1 330 0
 820 00aa 02A9     		add	r1, sp, #8
 821 00ac 2046     		mov	r0, r4
 822 00ae FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 823              	.LVL63:
 331:Src/setup.c   **** 
 332:Src/setup.c   ****   hadc1.Instance->CR2 |= ADC_CR2_DMA | ADC_CR2_TSVREFE;
 824              		.loc 1 332 0
 825 00b2 2268     		ldr	r2, [r4]
 826 00b4 9368     		ldr	r3, [r2, #8]
 827 00b6 43F40003 		orr	r3, r3, #8388608
 828 00ba 43F48073 		orr	r3, r3, #256
 829 00be 9360     		str	r3, [r2, #8]
 333:Src/setup.c   **** 
 334:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc1);
 830              		.loc 1 334 0
 831 00c0 9368     		ldr	r3, [r2, #8]
 832 00c2 43F00103 		orr	r3, r3, #1
 833 00c6 9360     		str	r3, [r2, #8]
 834              	.LBB8:
 335:Src/setup.c   **** 
 336:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 835              		.loc 1 336 0
 836 00c8 7369     		ldr	r3, [r6, #20]
 837 00ca 43F00103 		orr	r3, r3, #1
 838 00ce 7361     		str	r3, [r6, #20]
 839 00d0 7369     		ldr	r3, [r6, #20]
 840 00d2 03F00103 		and	r3, r3, #1
 841 00d6 0193     		str	r3, [sp, #4]
 842 00d8 019B     		ldr	r3, [sp, #4]
 843              	.LBE8:
 337:Src/setup.c   **** 
 338:Src/setup.c   ****   DMA1_Channel1->CCR   = 0;
 844              		.loc 1 338 0
 845 00da 114B     		ldr	r3, .L11+16
 846 00dc 1D60     		str	r5, [r3]
 339:Src/setup.c   ****   DMA1_Channel1->CNDTR = 5;
 847              		.loc 1 339 0
 848 00de C3F80480 		str	r8, [r3, #4]
 340:Src/setup.c   ****   DMA1_Channel1->CPAR  = (uint32_t) & (ADC1->DR);
 849              		.loc 1 340 0
 850 00e2 104A     		ldr	r2, .L11+20
 851 00e4 9A60     		str	r2, [r3, #8]
 341:Src/setup.c   ****   DMA1_Channel1->CMAR  = (uint32_t)&adc_buffer;
 852              		.loc 1 341 0
 853 00e6 104A     		ldr	r2, .L11+24
 854 00e8 DA60     		str	r2, [r3, #12]
 342:Src/setup.c   ****   DMA1_Channel1->CCR   = DMA_CCR_MSIZE_1 | DMA_CCR_PSIZE_1 | DMA_CCR_MINC | DMA_CCR_CIRC | DMA_CCR_
 855              		.loc 1 342 0
 856 00ea 40F6A222 		movw	r2, #2722
 857 00ee 1A60     		str	r2, [r3]
 343:Src/setup.c   ****   DMA1_Channel1->CCR |= DMA_CCR_EN;
 858              		.loc 1 343 0
 859 00f0 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 22


 860 00f2 42F00102 		orr	r2, r2, #1
 861 00f6 1A60     		str	r2, [r3]
 344:Src/setup.c   **** 
 345:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 862              		.loc 1 345 0
 863 00f8 2A46     		mov	r2, r5
 864 00fa 2946     		mov	r1, r5
 865 00fc 3846     		mov	r0, r7
 866 00fe FFF7FEFF 		bl	HAL_NVIC_SetPriority
 867              	.LVL64:
 346:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 868              		.loc 1 346 0
 869 0102 3846     		mov	r0, r7
 870 0104 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 871              	.LVL65:
 347:Src/setup.c   **** }
 872              		.loc 1 347 0
 873 0108 06B0     		add	sp, sp, #24
 874              	.LCFI8:
 875              		.cfi_def_cfa_offset 24
 876              		@ sp needed
 877 010a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 878              	.L12:
 879 010e 00BF     		.align	2
 880              	.L11:
 881 0110 00100240 		.word	1073876992
 882 0114 00000000 		.word	hadc1
 883 0118 00240140 		.word	1073816576
 884 011c 00000140 		.word	1073807360
 885 0120 08000240 		.word	1073872904
 886 0124 4C240140 		.word	1073816652
 887 0128 00000000 		.word	adc_buffer
 888              		.cfi_endproc
 889              	.LFE128:
 891              		.section	.text.MX_ADC2_Init,"ax",%progbits
 892              		.align	1
 893              		.global	MX_ADC2_Init
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	MX_ADC2_Init:
 900              	.LFB129:
 348:Src/setup.c   **** 
 349:Src/setup.c   **** /* ADC2 init function */
 350:Src/setup.c   **** void MX_ADC2_Init(void) {
 901              		.loc 1 350 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 16
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 906              	.LCFI9:
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 23


 912              		.cfi_offset 14, -4
 913 0002 85B0     		sub	sp, sp, #20
 914              	.LCFI10:
 915              		.cfi_def_cfa_offset 40
 916              	.LBB9:
 351:Src/setup.c   ****   ADC_ChannelConfTypeDef sConfig;
 352:Src/setup.c   **** 
 353:Src/setup.c   ****   __HAL_RCC_ADC2_CLK_ENABLE();
 917              		.loc 1 353 0
 918 0004 284B     		ldr	r3, .L15
 919 0006 9A69     		ldr	r2, [r3, #24]
 920 0008 42F48062 		orr	r2, r2, #1024
 921 000c 9A61     		str	r2, [r3, #24]
 922 000e 9B69     		ldr	r3, [r3, #24]
 923 0010 03F48063 		and	r3, r3, #1024
 924 0014 0093     		str	r3, [sp]
 925 0016 009B     		ldr	r3, [sp]
 926              	.LBE9:
 354:Src/setup.c   **** 
 355:Src/setup.c   ****   // HAL_ADC_DeInit(&hadc2);
 356:Src/setup.c   ****   // hadc2.Instance->CR2 = 0;
 357:Src/setup.c   ****   /**Common config
 358:Src/setup.c   ****     */
 359:Src/setup.c   ****   hadc2.Instance                   = ADC2;
 927              		.loc 1 359 0
 928 0018 244C     		ldr	r4, .L15+4
 929 001a 254B     		ldr	r3, .L15+8
 930 001c 2360     		str	r3, [r4]
 360:Src/setup.c   ****   hadc2.Init.ScanConvMode          = ADC_SCAN_ENABLE;
 931              		.loc 1 360 0
 932 001e 4FF48073 		mov	r3, #256
 933 0022 A360     		str	r3, [r4, #8]
 361:Src/setup.c   ****   hadc2.Init.ContinuousConvMode    = DISABLE;
 934              		.loc 1 361 0
 935 0024 0023     		movs	r3, #0
 936 0026 E360     		str	r3, [r4, #12]
 362:Src/setup.c   ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 937              		.loc 1 362 0
 938 0028 6361     		str	r3, [r4, #20]
 363:Src/setup.c   ****   hadc2.Init.ExternalTrigConv      = ADC_SOFTWARE_START;
 939              		.loc 1 363 0
 940 002a 4FF46022 		mov	r2, #917504
 941 002e E261     		str	r2, [r4, #28]
 364:Src/setup.c   ****   hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 942              		.loc 1 364 0
 943 0030 6360     		str	r3, [r4, #4]
 365:Src/setup.c   ****   hadc2.Init.NbrOfConversion       = 5;
 944              		.loc 1 365 0
 945 0032 0526     		movs	r6, #5
 946 0034 2661     		str	r6, [r4, #16]
 366:Src/setup.c   ****   HAL_ADC_Init(&hadc2);
 947              		.loc 1 366 0
 948 0036 2046     		mov	r0, r4
 949 0038 FFF7FEFF 		bl	HAL_ADC_Init
 950              	.LVL66:
 367:Src/setup.c   **** 
 368:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 24


 951              		.loc 1 368 0
 952 003c 0123     		movs	r3, #1
 953 003e 0393     		str	r3, [sp, #12]
 369:Src/setup.c   **** 
 370:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_15;  // pc5 left c
 954              		.loc 1 370 0
 955 0040 0F22     		movs	r2, #15
 956 0042 0192     		str	r2, [sp, #4]
 371:Src/setup.c   ****   sConfig.Rank    = 1;
 957              		.loc 1 371 0
 958 0044 0293     		str	r3, [sp, #8]
 372:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 959              		.loc 1 372 0
 960 0046 01A9     		add	r1, sp, #4
 961 0048 2046     		mov	r0, r4
 962 004a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 963              	.LVL67:
 373:Src/setup.c   **** 
 374:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_13;  // pc3 right b
 964              		.loc 1 374 0
 965 004e 0D23     		movs	r3, #13
 966 0050 0193     		str	r3, [sp, #4]
 375:Src/setup.c   ****   sConfig.Rank    = 2;
 967              		.loc 1 375 0
 968 0052 0225     		movs	r5, #2
 969 0054 0295     		str	r5, [sp, #8]
 376:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 970              		.loc 1 376 0
 971 0056 01A9     		add	r1, sp, #4
 972 0058 2046     		mov	r0, r4
 973 005a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 974              	.LVL68:
 377:Src/setup.c   **** 
 378:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
 975              		.loc 1 378 0
 976 005e 0395     		str	r5, [sp, #12]
 379:Src/setup.c   **** 
 380:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_10;  // pc0 right cur
 977              		.loc 1 380 0
 978 0060 0A23     		movs	r3, #10
 979 0062 0193     		str	r3, [sp, #4]
 381:Src/setup.c   ****   sConfig.Rank    = 3;
 980              		.loc 1 381 0
 981 0064 0327     		movs	r7, #3
 982 0066 0297     		str	r7, [sp, #8]
 382:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 983              		.loc 1 382 0
 984 0068 01A9     		add	r1, sp, #4
 985 006a 2046     		mov	r0, r4
 986 006c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 987              	.LVL69:
 383:Src/setup.c   **** 
 384:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_2;  // pa2 uart-l-tx
 988              		.loc 1 384 0
 989 0070 0195     		str	r5, [sp, #4]
 385:Src/setup.c   ****   sConfig.Rank    = 4;
 990              		.loc 1 385 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 25


 991 0072 0423     		movs	r3, #4
 992 0074 0293     		str	r3, [sp, #8]
 386:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 993              		.loc 1 386 0
 994 0076 0DEB0301 		add	r1, sp, r3
 995 007a 2046     		mov	r0, r4
 996 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 997              	.LVL70:
 387:Src/setup.c   **** 
 388:Src/setup.c   ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
 998              		.loc 1 388 0
 999 0080 0723     		movs	r3, #7
 1000 0082 0393     		str	r3, [sp, #12]
 389:Src/setup.c   **** 
 390:Src/setup.c   ****   sConfig.Channel = ADC_CHANNEL_3;  // pa3 uart-l-rx
 1001              		.loc 1 390 0
 1002 0084 0197     		str	r7, [sp, #4]
 391:Src/setup.c   ****   sConfig.Rank    = 5;
 1003              		.loc 1 391 0
 1004 0086 0296     		str	r6, [sp, #8]
 392:Src/setup.c   ****   HAL_ADC_ConfigChannel(&hadc2, &sConfig);
 1005              		.loc 1 392 0
 1006 0088 01A9     		add	r1, sp, #4
 1007 008a 2046     		mov	r0, r4
 1008 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1009              	.LVL71:
 393:Src/setup.c   **** 
 394:Src/setup.c   ****   hadc2.Instance->CR2 |= ADC_CR2_DMA;
 1010              		.loc 1 394 0
 1011 0090 2368     		ldr	r3, [r4]
 1012 0092 9A68     		ldr	r2, [r3, #8]
 1013 0094 42F48072 		orr	r2, r2, #256
 1014 0098 9A60     		str	r2, [r3, #8]
 395:Src/setup.c   ****   __HAL_ADC_ENABLE(&hadc2);
 1015              		.loc 1 395 0
 1016 009a 9A68     		ldr	r2, [r3, #8]
 1017 009c 42F00102 		orr	r2, r2, #1
 1018 00a0 9A60     		str	r2, [r3, #8]
 396:Src/setup.c   **** }
 1019              		.loc 1 396 0
 1020 00a2 05B0     		add	sp, sp, #20
 1021              	.LCFI11:
 1022              		.cfi_def_cfa_offset 20
 1023              		@ sp needed
 1024 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1025              	.L16:
 1026 00a6 00BF     		.align	2
 1027              	.L15:
 1028 00a8 00100240 		.word	1073876992
 1029 00ac 00000000 		.word	hadc2
 1030 00b0 00280140 		.word	1073817600
 1031              		.cfi_endproc
 1032              	.LFE129:
 1034              		.section	.text.UART_Debug_Init,"ax",%progbits
 1035              		.align	1
 1036              		.global	UART_Debug_Init
 1037              		.syntax unified
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 26


 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	UART_Debug_Init:
 1043              	.LFB130:
 397:Src/setup.c   **** 
 398:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART3
 399:Src/setup.c   **** 
 400:Src/setup.c   **** void UART_Debug_Init() {
 1044              		.loc 1 400 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 24
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048 0000 30B5     		push	{r4, r5, lr}
 1049              	.LCFI12:
 1050              		.cfi_def_cfa_offset 12
 1051              		.cfi_offset 4, -12
 1052              		.cfi_offset 5, -8
 1053              		.cfi_offset 14, -4
 1054 0002 87B0     		sub	sp, sp, #28
 1055              	.LCFI13:
 1056              		.cfi_def_cfa_offset 40
 1057              	.LBB10:
 401:Src/setup.c   ****   __HAL_RCC_USART3_CLK_ENABLE();
 1058              		.loc 1 401 0
 1059 0004 1F4B     		ldr	r3, .L19
 1060 0006 DA69     		ldr	r2, [r3, #28]
 1061 0008 42F48022 		orr	r2, r2, #262144
 1062 000c DA61     		str	r2, [r3, #28]
 1063 000e DA69     		ldr	r2, [r3, #28]
 1064 0010 02F48022 		and	r2, r2, #262144
 1065 0014 0092     		str	r2, [sp]
 1066 0016 009A     		ldr	r2, [sp]
 1067              	.LBE10:
 1068              	.LBB11:
 402:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1069              		.loc 1 402 0
 1070 0018 5A69     		ldr	r2, [r3, #20]
 1071 001a 42F00102 		orr	r2, r2, #1
 1072 001e 5A61     		str	r2, [r3, #20]
 1073 0020 5B69     		ldr	r3, [r3, #20]
 1074 0022 03F00103 		and	r3, r3, #1
 1075 0026 0193     		str	r3, [sp, #4]
 1076 0028 019B     		ldr	r3, [sp, #4]
 1077              	.LBE11:
 403:Src/setup.c   **** 
 404:Src/setup.c   ****   huart3.Instance          = USART3;
 1078              		.loc 1 404 0
 1079 002a 1748     		ldr	r0, .L19+4
 1080 002c 174D     		ldr	r5, .L19+8
 1081 002e 0560     		str	r5, [r0]
 405:Src/setup.c   ****   huart3.Init.BaudRate     = DEBUG_BAUD;
 1082              		.loc 1 405 0
 1083 0030 4FF4E133 		mov	r3, #115200
 1084 0034 4360     		str	r3, [r0, #4]
 406:Src/setup.c   ****   huart3.Init.WordLength   = UART_WORDLENGTH_8B;
 1085              		.loc 1 406 0
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 27


 1086 0036 0024     		movs	r4, #0
 1087 0038 8460     		str	r4, [r0, #8]
 407:Src/setup.c   ****   huart3.Init.StopBits     = UART_STOPBITS_1;
 1088              		.loc 1 407 0
 1089 003a C460     		str	r4, [r0, #12]
 408:Src/setup.c   ****   huart3.Init.Parity       = UART_PARITY_NONE;
 1090              		.loc 1 408 0
 1091 003c 0461     		str	r4, [r0, #16]
 409:Src/setup.c   ****   huart3.Init.Mode         = UART_MODE_TX;
 1092              		.loc 1 409 0
 1093 003e 0823     		movs	r3, #8
 1094 0040 4361     		str	r3, [r0, #20]
 410:Src/setup.c   ****   huart3.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 1095              		.loc 1 410 0
 1096 0042 8461     		str	r4, [r0, #24]
 411:Src/setup.c   ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1097              		.loc 1 411 0
 1098 0044 C461     		str	r4, [r0, #28]
 412:Src/setup.c   ****   HAL_UART_Init(&huart3);
 1099              		.loc 1 412 0
 1100 0046 FFF7FEFF 		bl	HAL_UART_Init
 1101              	.LVL72:
 413:Src/setup.c   **** 
 414:Src/setup.c   ****   USART3->CR3 |= USART_CR3_DMAT;  // | USART_CR3_DMAR | USART_CR3_OVRDIS;
 1102              		.loc 1 414 0
 1103 004a 6B69     		ldr	r3, [r5, #20]
 1104 004c 43F08003 		orr	r3, r3, #128
 1105 0050 6B61     		str	r3, [r5, #20]
 415:Src/setup.c   **** 
 416:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 417:Src/setup.c   ****   GPIO_InitStruct.Pin   = GPIO_PIN_10;
 1106              		.loc 1 417 0
 1107 0052 4FF48063 		mov	r3, #1024
 1108 0056 0293     		str	r3, [sp, #8]
 418:Src/setup.c   ****   GPIO_InitStruct.Pull  = GPIO_PULLUP;
 1109              		.loc 1 418 0
 1110 0058 0123     		movs	r3, #1
 1111 005a 0493     		str	r3, [sp, #16]
 419:Src/setup.c   ****   GPIO_InitStruct.Mode  = GPIO_MODE_AF_PP;
 1112              		.loc 1 419 0
 1113 005c 0223     		movs	r3, #2
 1114 005e 0393     		str	r3, [sp, #12]
 420:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1115              		.loc 1 420 0
 1116 0060 0323     		movs	r3, #3
 1117 0062 0593     		str	r3, [sp, #20]
 421:Src/setup.c   ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1118              		.loc 1 421 0
 1119 0064 02A9     		add	r1, sp, #8
 1120 0066 0A48     		ldr	r0, .L19+12
 1121 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 1122              	.LVL73:
 422:Src/setup.c   **** 
 423:Src/setup.c   ****   DMA1_Channel2->CCR   = 0;
 1123              		.loc 1 423 0
 1124 006c 094B     		ldr	r3, .L19+16
 1125 006e 1C60     		str	r4, [r3]
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 28


 424:Src/setup.c   ****   DMA1_Channel2->CPAR  = (uint32_t) & (USART3->DR);
 1126              		.loc 1 424 0
 1127 0070 094A     		ldr	r2, .L19+20
 1128 0072 9A60     		str	r2, [r3, #8]
 425:Src/setup.c   ****   DMA1_Channel2->CNDTR = 0;
 1129              		.loc 1 425 0
 1130 0074 5C60     		str	r4, [r3, #4]
 426:Src/setup.c   ****   DMA1_Channel2->CCR   = DMA_CCR_MINC | DMA_CCR_DIR;
 1131              		.loc 1 426 0
 1132 0076 9022     		movs	r2, #144
 1133 0078 1A60     		str	r2, [r3]
 427:Src/setup.c   ****   DMA1->IFCR           = DMA_IFCR_CTCIF2 | DMA_IFCR_CHTIF2 | DMA_IFCR_CGIF2;
 1134              		.loc 1 427 0
 1135 007a 1C3B     		subs	r3, r3, #28
 1136 007c 7022     		movs	r2, #112
 1137 007e 5A60     		str	r2, [r3, #4]
 428:Src/setup.c   **** }
 1138              		.loc 1 428 0
 1139 0080 07B0     		add	sp, sp, #28
 1140              	.LCFI14:
 1141              		.cfi_def_cfa_offset 12
 1142              		@ sp needed
 1143 0082 30BD     		pop	{r4, r5, pc}
 1144              	.L20:
 1145              		.align	2
 1146              	.L19:
 1147 0084 00100240 		.word	1073876992
 1148 0088 00000000 		.word	huart3
 1149 008c 00480040 		.word	1073760256
 1150 0090 000C0140 		.word	1073810432
 1151 0094 1C000240 		.word	1073872924
 1152 0098 04480040 		.word	1073760260
 1153              		.cfi_endproc
 1154              	.LFE130:
 1156              		.section	.text.__io_putchar,"ax",%progbits
 1157              		.align	1
 1158              		.global	__io_putchar
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv4-sp-d16
 1164              	__io_putchar:
 1165              	.LFB132:
 429:Src/setup.c   **** 
 430:Src/setup.c   **** #ifdef DEBUG_SERIAL_USART3_DMA
 431:Src/setup.c   **** 
 432:Src/setup.c   **** /* consoleLog uses DMA for heavy writes */
 433:Src/setup.c   **** void debugLog(char *message, int len)
 434:Src/setup.c   **** {
 435:Src/setup.c   ****   #define UART_DMA_CHANNEL DMA1_Channel2
 436:Src/setup.c   **** 
 437:Src/setup.c   ****     if(UART_DMA_CHANNEL->CNDTR == 0) {
 438:Src/setup.c   ****       UART_DMA_CHANNEL->CCR &= ~DMA_CCR_EN;
 439:Src/setup.c   ****       UART_DMA_CHANNEL->CNDTR = len;
 440:Src/setup.c   ****       UART_DMA_CHANNEL->CMAR  = (uint32_t)message;
 441:Src/setup.c   ****       UART_DMA_CHANNEL->CCR |= DMA_CCR_EN;
 442:Src/setup.c   ****     }
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 29


 443:Src/setup.c   **** }
 444:Src/setup.c   **** 
 445:Src/setup.c   **** #endif
 446:Src/setup.c   **** /*
 447:Src/setup.c   **** * Setting to redirect STDOUT to COM PORT
 448:Src/setup.c   **** */
 449:Src/setup.c   **** 
 450:Src/setup.c   **** #ifdef __GNUC__
 451:Src/setup.c   ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 452:Src/setup.c   ****      set to 'Yes') calls __io_putchar() */
 453:Src/setup.c   ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 454:Src/setup.c   **** #else
 455:Src/setup.c   ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 456:Src/setup.c   **** #endif /* __GNUC__ */
 457:Src/setup.c   **** 
 458:Src/setup.c   **** int _write(int file, char *data, int len)
 459:Src/setup.c   **** {
 460:Src/setup.c   ****   int bytes_written;
 461:Src/setup.c   ****   char ch;
 462:Src/setup.c   **** 
 463:Src/setup.c   ****   if ((file != 1) && (file != 2))
 464:Src/setup.c   ****   {
 465:Src/setup.c   ****     return -1;
 466:Src/setup.c   ****   }
 467:Src/setup.c   **** 
 468:Src/setup.c   ****   // if(len > 1) 
 469:Src/setup.c   ****   // {
 470:Src/setup.c   ****   //   debugLog(data, len);
 471:Src/setup.c   ****   // }
 472:Src/setup.c   ****   // else 
 473:Src/setup.c   ****   // {
 474:Src/setup.c   ****   //   __io_putchar(ch);
 475:Src/setup.c   ****   // }
 476:Src/setup.c   ****   for (bytes_written = 0; bytes_written < len; bytes_written++)
 477:Src/setup.c   ****   {
 478:Src/setup.c   ****     ch = *data;
 479:Src/setup.c   ****     data++;
 480:Src/setup.c   ****     __io_putchar(ch);
 481:Src/setup.c   ****   }
 482:Src/setup.c   **** 
 483:Src/setup.c   ****   return len;
 484:Src/setup.c   **** }
 485:Src/setup.c   **** 
 486:Src/setup.c   **** /**
 487:Src/setup.c   ****   * @brief  Retargets the C library printf function to the USART.
 488:Src/setup.c   ****   * @param  None
 489:Src/setup.c   ****   * @retval None
 490:Src/setup.c   ****   */
 491:Src/setup.c   **** PUTCHAR_PROTOTYPE
 492:Src/setup.c   **** {
 1166              		.loc 1 492 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              	.LVL74:
 1171 0000 00B5     		push	{lr}
 1172              	.LCFI15:
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 30


 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 14, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              	.LCFI16:
 1177              		.cfi_def_cfa_offset 16
 1178 0004 02A9     		add	r1, sp, #8
 1179 0006 41F8040D 		str	r0, [r1, #-4]!
 493:Src/setup.c   ****   HAL_UART_Transmit(&huart3, (uint8_t *) &ch, 1, 10);
 1180              		.loc 1 493 0
 1181 000a 0A23     		movs	r3, #10
 1182 000c 0122     		movs	r2, #1
 1183 000e 0348     		ldr	r0, .L23
 1184              	.LVL75:
 1185 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 1186              	.LVL76:
 494:Src/setup.c   **** 	return ch;
 495:Src/setup.c   **** }
 1187              		.loc 1 495 0
 1188 0014 0198     		ldr	r0, [sp, #4]
 1189 0016 03B0     		add	sp, sp, #12
 1190              	.LCFI17:
 1191              		.cfi_def_cfa_offset 4
 1192              		@ sp needed
 1193 0018 5DF804FB 		ldr	pc, [sp], #4
 1194              	.L24:
 1195              		.align	2
 1196              	.L23:
 1197 001c 00000000 		.word	huart3
 1198              		.cfi_endproc
 1199              	.LFE132:
 1201              		.section	.text._write,"ax",%progbits
 1202              		.align	1
 1203              		.global	_write
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu fpv4-sp-d16
 1209              	_write:
 1210              	.LFB131:
 459:Src/setup.c   ****   int bytes_written;
 1211              		.loc 1 459 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              	.LVL77:
 1216 0000 70B5     		push	{r4, r5, r6, lr}
 1217              	.LCFI18:
 1218              		.cfi_def_cfa_offset 16
 1219              		.cfi_offset 4, -16
 1220              		.cfi_offset 5, -12
 1221              		.cfi_offset 6, -8
 1222              		.cfi_offset 14, -4
 463:Src/setup.c   ****   {
 1223              		.loc 1 463 0
 1224 0002 0138     		subs	r0, r0, #1
 1225              	.LVL78:
 1226 0004 0128     		cmp	r0, #1
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 31


 1227 0006 0CD8     		bhi	.L29
 1228 0008 0D46     		mov	r5, r1
 1229 000a 1646     		mov	r6, r2
 476:Src/setup.c   ****   {
 1230              		.loc 1 476 0
 1231 000c 0024     		movs	r4, #0
 1232 000e 04E0     		b	.L27
 1233              	.LVL79:
 1234              	.L28:
 1235              	.LBB12:
 480:Src/setup.c   ****   }
 1236              		.loc 1 480 0 discriminator 3
 1237 0010 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 1238              	.LVL80:
 1239 0014 FFF7FEFF 		bl	__io_putchar
 1240              	.LVL81:
 1241              	.LBE12:
 476:Src/setup.c   ****   {
 1242              		.loc 1 476 0 discriminator 3
 1243 0018 0134     		adds	r4, r4, #1
 1244              	.LVL82:
 1245              	.L27:
 476:Src/setup.c   ****   {
 1246              		.loc 1 476 0 is_stmt 0 discriminator 1
 1247 001a B442     		cmp	r4, r6
 1248 001c F8DB     		blt	.L28
 1249              	.LVL83:
 1250              	.L26:
 484:Src/setup.c   **** 
 1251              		.loc 1 484 0 is_stmt 1
 1252 001e 3046     		mov	r0, r6
 1253 0020 70BD     		pop	{r4, r5, r6, pc}
 1254              	.LVL84:
 1255              	.L29:
 465:Src/setup.c   ****   }
 1256              		.loc 1 465 0
 1257 0022 4FF0FF36 		mov	r6, #-1
 1258 0026 FAE7     		b	.L26
 1259              		.cfi_endproc
 1260              	.LFE131:
 1262              		.section	.text.UART_Control_Init,"ax",%progbits
 1263              		.align	1
 1264              		.global	UART_Control_Init
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1268              		.fpu fpv4-sp-d16
 1270              	UART_Control_Init:
 1271              	.LFB133:
 496:Src/setup.c   **** 
 497:Src/setup.c   **** #endif //END of DEBUG_SERIAL_USART3
 498:Src/setup.c   **** 
 499:Src/setup.c   **** #ifdef CONTROL_SERIAL_USART2
 500:Src/setup.c   **** 
 501:Src/setup.c   **** void UART_Control_Init() {
 1272              		.loc 1 501 0
 1273              		.cfi_startproc
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 32


 1274              		@ args = 0, pretend = 0, frame = 32
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1277              	.LCFI19:
 1278              		.cfi_def_cfa_offset 20
 1279              		.cfi_offset 4, -20
 1280              		.cfi_offset 5, -16
 1281              		.cfi_offset 6, -12
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 89B0     		sub	sp, sp, #36
 1285              	.LCFI20:
 1286              		.cfi_def_cfa_offset 56
 1287              	.LBB13:
 502:Src/setup.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
 503:Src/setup.c   ****   __HAL_RCC_USART2_CLK_ENABLE();
 1288              		.loc 1 503 0
 1289 0004 424E     		ldr	r6, .L33
 1290 0006 F369     		ldr	r3, [r6, #28]
 1291 0008 43F40033 		orr	r3, r3, #131072
 1292 000c F361     		str	r3, [r6, #28]
 1293 000e F369     		ldr	r3, [r6, #28]
 1294 0010 03F40033 		and	r3, r3, #131072
 1295 0014 0093     		str	r3, [sp]
 1296 0016 009B     		ldr	r3, [sp]
 1297              	.LBE13:
 504:Src/setup.c   ****   /* DMA1_Channel6_IRQn interrupt configuration */
 505:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 5, 6);
 1298              		.loc 1 505 0
 1299 0018 0622     		movs	r2, #6
 1300 001a 0521     		movs	r1, #5
 1301 001c 1020     		movs	r0, #16
 1302 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1303              	.LVL85:
 506:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
 1304              		.loc 1 506 0
 1305 0022 1020     		movs	r0, #16
 1306 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1307              	.LVL86:
 507:Src/setup.c   ****   /* DMA1_Channel7_IRQn interrupt configuration */
 508:Src/setup.c   ****   HAL_NVIC_SetPriority(DMA1_Channel7_IRQn, 5, 7);
 1308              		.loc 1 508 0
 1309 0028 0722     		movs	r2, #7
 1310 002a 0521     		movs	r1, #5
 1311 002c 1120     		movs	r0, #17
 1312 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1313              	.LVL87:
 509:Src/setup.c   ****   HAL_NVIC_EnableIRQ(DMA1_Channel7_IRQn);
 1314              		.loc 1 509 0
 1315 0032 1120     		movs	r0, #17
 1316 0034 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1317              	.LVL88:
 510:Src/setup.c   **** 
 511:Src/setup.c   ****   huart2.Instance = USART2;
 1318              		.loc 1 511 0
 1319 0038 364D     		ldr	r5, .L33+4
 1320 003a 374B     		ldr	r3, .L33+8
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 33


 1321 003c 2B60     		str	r3, [r5]
 512:Src/setup.c   ****   huart2.Init.BaudRate = CONTROL_BAUD;
 1322              		.loc 1 512 0
 1323 003e 4FF4E133 		mov	r3, #115200
 1324 0042 6B60     		str	r3, [r5, #4]
 513:Src/setup.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1325              		.loc 1 513 0
 1326 0044 0024     		movs	r4, #0
 1327 0046 AC60     		str	r4, [r5, #8]
 514:Src/setup.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1328              		.loc 1 514 0
 1329 0048 EC60     		str	r4, [r5, #12]
 515:Src/setup.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
 1330              		.loc 1 515 0
 1331 004a 2C61     		str	r4, [r5, #16]
 516:Src/setup.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1332              		.loc 1 516 0
 1333 004c 0C23     		movs	r3, #12
 1334 004e 6B61     		str	r3, [r5, #20]
 517:Src/setup.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1335              		.loc 1 517 0
 1336 0050 AC61     		str	r4, [r5, #24]
 518:Src/setup.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16; 
 1337              		.loc 1 518 0
 1338 0052 EC61     		str	r4, [r5, #28]
 519:Src/setup.c   ****   HAL_UART_Init(&huart2);
 1339              		.loc 1 519 0
 1340 0054 2846     		mov	r0, r5
 1341 0056 FFF7FEFF 		bl	HAL_UART_Init
 1342              	.LVL89:
 1343              	.LBB14:
 520:Src/setup.c   **** 
 521:Src/setup.c   **** 
 522:Src/setup.c   ****   __HAL_RCC_DMA1_CLK_ENABLE();
 1344              		.loc 1 522 0
 1345 005a 7369     		ldr	r3, [r6, #20]
 1346 005c 43F00103 		orr	r3, r3, #1
 1347 0060 7361     		str	r3, [r6, #20]
 1348 0062 7369     		ldr	r3, [r6, #20]
 1349 0064 03F00103 		and	r3, r3, #1
 1350 0068 0193     		str	r3, [sp, #4]
 1351 006a 019B     		ldr	r3, [sp, #4]
 1352              	.LBE14:
 1353              	.LBB15:
 523:Src/setup.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
 524:Src/setup.c   ****    __HAL_RCC_GPIOA_CLK_ENABLE();
 1354              		.loc 1 524 0
 1355 006c B369     		ldr	r3, [r6, #24]
 1356 006e 43F00403 		orr	r3, r3, #4
 1357 0072 B361     		str	r3, [r6, #24]
 1358 0074 B369     		ldr	r3, [r6, #24]
 1359 0076 03F00403 		and	r3, r3, #4
 1360 007a 0293     		str	r3, [sp, #8]
 1361 007c 029B     		ldr	r3, [sp, #8]
 1362              	.LBE15:
 1363              	.LBB16:
 525:Src/setup.c   ****   /* USER CODE END USART2_MspInit 0 */
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 34


 526:Src/setup.c   ****    /* Peripheral clock enable */
 527:Src/setup.c   ****    __HAL_RCC_USART2_CLK_ENABLE(); // Why again?
 1364              		.loc 1 527 0
 1365 007e F369     		ldr	r3, [r6, #28]
 1366 0080 43F40033 		orr	r3, r3, #131072
 1367 0084 F361     		str	r3, [r6, #28]
 1368 0086 F369     		ldr	r3, [r6, #28]
 1369 0088 03F40033 		and	r3, r3, #131072
 1370 008c 0393     		str	r3, [sp, #12]
 1371 008e 039B     		ldr	r3, [sp, #12]
 1372              	.LBE16:
 528:Src/setup.c   **** 
 529:Src/setup.c   ****   GPIO_InitStruct.Pull = GPIO_PULLUP; //GPIO_NOPULL;
 1373              		.loc 1 529 0
 1374 0090 0123     		movs	r3, #1
 1375 0092 0693     		str	r3, [sp, #24]
 530:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 1376              		.loc 1 530 0
 1377 0094 0423     		movs	r3, #4
 1378 0096 0493     		str	r3, [sp, #16]
 531:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1379              		.loc 1 531 0
 1380 0098 0223     		movs	r3, #2
 1381 009a 0593     		str	r3, [sp, #20]
 532:Src/setup.c   ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1382              		.loc 1 532 0
 1383 009c 0323     		movs	r3, #3
 1384 009e 0793     		str	r3, [sp, #28]
 533:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1385              		.loc 1 533 0
 1386 00a0 A6F58436 		sub	r6, r6, #67584
 1387 00a4 04A9     		add	r1, sp, #16
 1388 00a6 3046     		mov	r0, r6
 1389 00a8 FFF7FEFF 		bl	HAL_GPIO_Init
 1390              	.LVL90:
 534:Src/setup.c   **** 
 535:Src/setup.c   ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 1391              		.loc 1 535 0
 1392 00ac 0823     		movs	r3, #8
 1393 00ae 0493     		str	r3, [sp, #16]
 536:Src/setup.c   ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT; //GPIO_MODE_AF_PP;
 1394              		.loc 1 536 0
 1395 00b0 0594     		str	r4, [sp, #20]
 537:Src/setup.c   ****   // GPIO_InitStruct.Pull = GPIO_NOPULL;
 538:Src/setup.c   ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1396              		.loc 1 538 0
 1397 00b2 04A9     		add	r1, sp, #16
 1398 00b4 3046     		mov	r0, r6
 1399 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 1400              	.LVL91:
 539:Src/setup.c   **** 
 540:Src/setup.c   ****   /* Peripheral DMA init*/
 541:Src/setup.c   **** 
 542:Src/setup.c   ****   hdma_usart2_rx.Instance = DMA1_Channel6;
 1401              		.loc 1 542 0
 1402 00ba 184E     		ldr	r6, .L33+12
 1403 00bc 184B     		ldr	r3, .L33+16
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 35


 1404 00be 3360     		str	r3, [r6]
 543:Src/setup.c   ****   hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1405              		.loc 1 543 0
 1406 00c0 7460     		str	r4, [r6, #4]
 544:Src/setup.c   ****   hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 1407              		.loc 1 544 0
 1408 00c2 B460     		str	r4, [r6, #8]
 545:Src/setup.c   ****   hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 1409              		.loc 1 545 0
 1410 00c4 8027     		movs	r7, #128
 1411 00c6 F760     		str	r7, [r6, #12]
 546:Src/setup.c   ****   hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 1412              		.loc 1 546 0
 1413 00c8 3461     		str	r4, [r6, #16]
 547:Src/setup.c   ****   hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 1414              		.loc 1 547 0
 1415 00ca 7461     		str	r4, [r6, #20]
 548:Src/setup.c   ****   hdma_usart2_rx.Init.Mode = DMA_CIRCULAR; //DMA_NORMAL;
 1416              		.loc 1 548 0
 1417 00cc 2023     		movs	r3, #32
 1418 00ce B361     		str	r3, [r6, #24]
 549:Src/setup.c   ****   hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 1419              		.loc 1 549 0
 1420 00d0 F461     		str	r4, [r6, #28]
 550:Src/setup.c   ****   HAL_DMA_Init(&hdma_usart2_rx);
 1421              		.loc 1 550 0
 1422 00d2 3046     		mov	r0, r6
 1423 00d4 FFF7FEFF 		bl	HAL_DMA_Init
 1424              	.LVL92:
 551:Src/setup.c   **** 
 552:Src/setup.c   ****   __HAL_LINKDMA(&huart2,hdmarx,hdma_usart2_rx);
 1425              		.loc 1 552 0
 1426 00d8 6E63     		str	r6, [r5, #52]
 1427 00da 7562     		str	r5, [r6, #36]
 553:Src/setup.c   **** 
 554:Src/setup.c   ****   hdma_usart2_tx.Instance = DMA1_Channel7;
 1428              		.loc 1 554 0
 1429 00dc 114E     		ldr	r6, .L33+20
 1430 00de 124B     		ldr	r3, .L33+24
 1431 00e0 3360     		str	r3, [r6]
 555:Src/setup.c   ****   hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 1432              		.loc 1 555 0
 1433 00e2 1023     		movs	r3, #16
 1434 00e4 7360     		str	r3, [r6, #4]
 556:Src/setup.c   ****   hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 1435              		.loc 1 556 0
 1436 00e6 B460     		str	r4, [r6, #8]
 557:Src/setup.c   ****   hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 1437              		.loc 1 557 0
 1438 00e8 F760     		str	r7, [r6, #12]
 558:Src/setup.c   ****   hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 1439              		.loc 1 558 0
 1440 00ea 3461     		str	r4, [r6, #16]
 559:Src/setup.c   ****   hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 1441              		.loc 1 559 0
 1442 00ec 7461     		str	r4, [r6, #20]
 560:Src/setup.c   ****   hdma_usart2_tx.Init.Mode = DMA_NORMAL;
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 36


 1443              		.loc 1 560 0
 1444 00ee B461     		str	r4, [r6, #24]
 561:Src/setup.c   ****   hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 1445              		.loc 1 561 0
 1446 00f0 F461     		str	r4, [r6, #28]
 562:Src/setup.c   ****   HAL_DMA_Init(&hdma_usart2_tx);
 1447              		.loc 1 562 0
 1448 00f2 3046     		mov	r0, r6
 1449 00f4 FFF7FEFF 		bl	HAL_DMA_Init
 1450              	.LVL93:
 563:Src/setup.c   ****   __HAL_LINKDMA(&huart2,hdmatx,hdma_usart2_tx);
 1451              		.loc 1 563 0
 1452 00f8 2E63     		str	r6, [r5, #48]
 1453 00fa 7562     		str	r5, [r6, #36]
 564:Src/setup.c   **** 
 565:Src/setup.c   ****   HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);                                        
 1454              		.loc 1 565 0
 1455 00fc 2246     		mov	r2, r4
 1456 00fe 2146     		mov	r1, r4
 1457 0100 2620     		movs	r0, #38
 1458 0102 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1459              	.LVL94:
 566:Src/setup.c   ****   HAL_NVIC_EnableIRQ(USART2_IRQn); //Necessary for DMA
 1460              		.loc 1 566 0
 1461 0106 2620     		movs	r0, #38
 1462 0108 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1463              	.LVL95:
 567:Src/setup.c   **** }
 1464              		.loc 1 567 0
 1465 010c 09B0     		add	sp, sp, #36
 1466              	.LCFI21:
 1467              		.cfi_def_cfa_offset 20
 1468              		@ sp needed
 1469 010e F0BD     		pop	{r4, r5, r6, r7, pc}
 1470              	.L34:
 1471              		.align	2
 1472              	.L33:
 1473 0110 00100240 		.word	1073876992
 1474 0114 00000000 		.word	huart2
 1475 0118 00440040 		.word	1073759232
 1476 011c 00000000 		.word	hdma_usart2_rx
 1477 0120 6C000240 		.word	1073873004
 1478 0124 00000000 		.word	hdma_usart2_tx
 1479 0128 80000240 		.word	1073873024
 1480              		.cfi_endproc
 1481              	.LFE133:
 1483              		.comm	hdma_i2c2_tx,68,4
 1484              		.comm	hdma_i2c2_rx,68,4
 1485              		.comm	adc_buffer,20,4
 1486              		.comm	hdma_usart2_tx,68,4
 1487              		.comm	hdma_usart2_rx,68,4
 1488              		.comm	huart3,64,4
 1489              		.comm	huart2,64,4
 1490              		.comm	hi2c2,84,4
 1491              		.comm	hadc2,48,4
 1492              		.comm	hadc1,48,4
 1493              		.comm	htim_left,64,4
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 37


 1494              		.comm	htim_right,64,4
 1495              		.text
 1496              	.Letext0:
 1497              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/machine/_default_types
 1498              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_stdint.h"
 1499              		.file 4 "Drivers/CMSIS/CM4/CoreSupport/core_cm4.h"
 1500              		.file 5 "Inc/system_at32f4xx.h"
 1501              		.file 6 "Drivers/CMSIS/CM4/DeviceSupport/at32f4xx.h"
 1502              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/lock.h"
 1503              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/_types.h"
 1504              		.file 9 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h
 1505              		.file 10 "/usr/local/Cellar/gcc-arm-none-eabi/20180627/arm-none-eabi/include/sys/reent.h"
 1506              		.file 11 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1507              		.file 12 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1508              		.file 13 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1509              		.file 14 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1510              		.file 15 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 1511              		.file 16 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1512              		.file 17 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1513              		.file 18 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1514              		.file 19 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1515              		.file 20 "Inc/defines.h"
 1516              		.file 21 "Drivers/Modified_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 setup.c
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:17     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:344    .text.MX_GPIO_Init:00000000000001f4 $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:353    .text.MX_TIM_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:360    .text.MX_TIM_Init:0000000000000000 MX_TIM_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:680    .text.MX_TIM_Init:00000000000001ec $d
                            *COM*:0000000000000040 htim_right
                            *COM*:0000000000000040 htim_left
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:691    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:698    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:881    .text.MX_ADC1_Init:0000000000000110 $d
                            *COM*:0000000000000030 hadc1
                            *COM*:0000000000000014 adc_buffer
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:892    .text.MX_ADC2_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:899    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1028   .text.MX_ADC2_Init:00000000000000a8 $d
                            *COM*:0000000000000030 hadc2
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1035   .text.UART_Debug_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1042   .text.UART_Debug_Init:0000000000000000 UART_Debug_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1147   .text.UART_Debug_Init:0000000000000084 $d
                            *COM*:0000000000000040 huart3
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1157   .text.__io_putchar:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1164   .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1197   .text.__io_putchar:000000000000001c $d
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1202   .text._write:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1209   .text._write:0000000000000000 _write
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1263   .text.UART_Control_Init:0000000000000000 $t
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1270   .text.UART_Control_Init:0000000000000000 UART_Control_Init
/var/folders/l3/4y5292px21b4835bsnjwqc7w009kq1/T//ccRsQe2I.s:1473   .text.UART_Control_Init:0000000000000110 $d
                            *COM*:0000000000000040 huart2
                            *COM*:0000000000000044 hdma_usart2_rx
                            *COM*:0000000000000044 hdma_usart2_tx
                            *COM*:0000000000000044 hdma_i2c2_tx
                            *COM*:0000000000000044 hdma_i2c2_rx
                            *COM*:0000000000000054 hi2c2

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_SlaveConfigSynchronization
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
SystemCoreClock
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
HAL_UART_Transmit
HAL_DMA_Init
